{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(npm run dev:all:*)",
      "Bash(npm install)",
      "Bash(npm run dev:*)",
      "Bash(cp:*)",
      "Bash(ls:*)",
      "Bash(ss:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(timeout:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(npm --version)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(systemctl status:*)",
      "Bash(service postgresql:*)",
      "Bash(find:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo systemctl start:*)",
      "Bash(sudo systemctl:*)",
      "Bash(cat:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(sudo -u postgres psql:*)",
      "Bash(touch:*)",
      "Bash(npm run type-check:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(command -v:*)",
      "Bash(export NVM_DIR=\"$HOME/.nvm\")",
      "Bash([ -s \"$NVM_DIR/nvm.sh\" ])",
      "Bash(. \"$NVM_DIR/nvm.sh\")",
      "Bash(nvm install:*)",
      "Bash(source ~/.bashrc)",
      "Bash(bash:*)",
      "Bash(npm install:*)",
      "Bash(npm audit:*)",
      "Bash(npm run build:*)",
      "Bash(chmod:*)",
      "Bash(git config:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git remote remove:*)",
      "Bash(git remote add:*)",
      "Bash(npm i:*)",
      "Bash(npm config set:*)",
      "Bash(export PATH=~/.npm-global/bin:$PATH)",
      "Bash(claude doctor)",
      "Bash(npm uninstall:*)",
      "Bash(rm:*)",
      "Bash(npm cache clean:*)",
      "Bash(nvm:*)",
      "Bash(source:*)",
      "Bash(git checkout:*)",
      "Bash(echo:*)",
      "Bash(npm run:*)",
      "Bash(volta:*)",
      "Bash(export VOLTA_HOME=\"$HOME/.volta\")",
      "Bash(export PATH=\"$VOLTA_HOME/bin:$PATH\")",
      "Bash(~/.volta/bin/volta:*)",
      "Bash(~/.volta/bin/node:*)",
      "Bash(~/.volta/bin/npm --version)",
      "Bash(if grep -qi \"esbuild\\|epipe\\|react router\" build-test-nodejs20.log)",
      "Bash(then echo \"⚠️ 특정 경고 발견:\")",
      "Bash(else echo \"✅ esbuild EPIPE 및 React Router 호환성 경고 모두 해결됨\")",
      "Bash(fi)",
      "Bash(BACKUP_DIR=\"backup/partner-removal-$(date +%Y%m%d-%H%M%S)\")",
      "Bash(BACKUP_DIR=\"backup/partner-removal-20250628-232029\")",
      "Bash(# 중복된 아키텍처 문서들을 deprecated로 이동\ncp -r docs/02-architecture docs_new/archive/deprecated/old-structure/ 2>/dev/null\ncp -r docs/architecture docs_new/archive/deprecated/old-structure/ 2>/dev/null\ncp -r docs/03-api-reference docs_new/archive/deprecated/old-structure/ 2>/dev/null\ncp -r docs/03-reference docs_new/archive/deprecated/old-structure/ 2>/dev/null\ncp -r docs/implementation docs_new/archive/deprecated/old-structure/ 2>/dev/null\necho \"Deprecated structure files moved\")",
      "Bash(pkill:*)",
      "Bash(VITE_DEV_SERVER_PORT=3011 npm run dev)",
      "WebFetch(domain:docs.google.com)",
      "Bash(git merge:*)",
      "Bash(# 로그 파일들을 logs 폴더로 이동\nmv api-test-nodejs20.log full-system-nodejs20.log web-test-nodejs20.log logs/)",
      "Bash(# 백업 폴더들을 backups 폴더로 이동\nmv backup docs_backup_20250630_202618 docs_old_20250630_203539 backups/)",
      "Bash(# cursorrules.txt를 docs/development로 이동\nmv cursorrules.txt docs/development/\n\n# 임시 파일 제거\nrm -f CLAUDE-DESKTOP-V1SFT2A.md \"[builder\")",
      "Bash(npm ls:*)",
      "Bash(npx vitest run:*)",
      "Bash(npm test:*)",
      "Bash(npx jest:*)",
      "Bash(git rm:*)",
      "Bash(git stash:*)",
      "Bash(./scripts/nginx-dev-setup.sh:*)",
      "Bash(./scripts/nginx-dev-start.sh:*)",
      "Bash(./scripts/nginx-dev-status.sh:*)",
      "Bash(sudo tail:*)",
      "Bash(./scripts/nginx-dev-stop.sh:*)",
      "Bash(true)",
      "Bash(npx vite:*)",
      "Bash(npx serve:*)",
      "Bash(ip route:*)",
      "Bash(PORT=8080 npx vite --port 8080 --host 0.0.0.0)",
      "Bash(vite:*)",
      "Bash(# Create a batch script to fix all remaining TS6133 errors in woocommerce files\nfiles=$(grep \"src/pages/woocommerce\" /tmp/remaining_ts6133_errors.log | cut -d'(' -f1 | sort -u)\nfor file in $files; do\n  echo \"Processing: $file\"\ndone)",
      "Bash(cut:*)",
      "Bash(npx playwright:*)",
      "Bash(gh pr create:*)",
      "Bash(diff:*)"
    ],
    "deny": []
  }
}