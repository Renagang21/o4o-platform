import { Request, Response } from 'express';
export declare class ContentController {
    private postRepository;
    private pageRepository;
    private categoryRepository;
    private userRepository;
    private mediaRepository;
    private tagRepository;
    getPosts: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getPost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    createPost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    createDraft: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    publishPost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    updatePost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    deletePost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    clonePost: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    bulkUpdatePosts: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    bulkDeletePosts: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getCategories: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getCategory: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    createCategory: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    updateCategory: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    deleteCategory: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getTags: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getTag: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    createTag: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    updateTag: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    deleteTag: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getPages: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getPage: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    createPage: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    updatePage: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    deletePage: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getMediaFiles: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getMediaFile: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    uploadMedia: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    updateMedia: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    deleteMedia: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
    getAuthors: (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
}
//# sourceMappingURL=content.controller.d.ts.map