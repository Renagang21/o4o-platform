{
  "name": "@o4o/api-server",
  "version": "1.0.0",
  "description": "O4O Platform API Server",
  "main": "dist/main.js",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "build": "npm run clean:dist && tsc -p tsconfig.build.json",
    "build:optimized": "bash ../../scripts/build-api-optimized.sh",
    "build:prod": "NODE_ENV=production npm run build",
    "build:watch": "npx tsc -p tsconfig.build.json --watch",
    "clean": "rimraf dist",
    "clean:all": "npm run clean && rimraf node_modules",
    "clean:dist": "rimraf dist",
    "create-admin": "npx ts-node ../../scripts/create-admin.ts",
    "create-test-users": "npx ts-node src/scripts/create-test-users.ts",
    "db:logs": "docker logs o4o-postgres-dev",
    "db:reset": "npm run migration:drop && npm run migration:run && npm run db:seed",
    "db:seed": "ts-node src/database/seeds/index.ts",
    "db:setup": "npm run migration:run && npm run db:seed",
    "db:stop": "docker-compose -f ../../docker-compose.dev.yml stop postgres redis",
    "db:test": "node ../../scripts/test-database.js",
    "db:test:detailed": "npx ts-node src/scripts/test-db-connection.ts",
    "deploy:production": "npm run build:prod && npm run pm2:reload",
    "deploy:staging": "NODE_ENV=staging npm run build && npm run pm2:reload",
    "dev": "NODE_ENV=development nodemon --watch src --exec ts-node src/main.ts",
    "dev:full": "npm run db:setup && sleep 5 && npm run db:test && npm run dev",
    "dev:mock": "nodemon --exec ts-node src/server-mock.ts",
    "format": "prettier --write \"src/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\"",
    "lint": "eslint \"src/**/*.ts\" --fix",
    "lint:fix": "eslint --config ../../.eslintrc.cjs src/**/*.ts --fix",
    "lint:no-fix": "eslint \"src/**/*.ts\"",
    "migration:drop": "npm run typeorm -- schema:drop",
    "migration:generate": "npm run typeorm -- migration:generate -n",
    "migration:revert": "npm run typeorm -- migration:revert",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:show": "npm run typeorm -- migration:show",
    "migration:sync": "npm run typeorm -- schema:sync",
    "monitor": "node scripts/pm2-monitor.sh --once",
    "pm2:delete": "pm2 delete ecosystem.config.apiserver.cjs",
    "pm2:logs": "pm2 logs o4o-api",
    "pm2:monit": "pm2 monit",
    "pm2:reload": "pm2 reload ecosystem.config.apiserver.cjs --update-env",
    "pm2:restart": "pm2 restart ecosystem.config.apiserver.cjs",
    "pm2:start": "pm2 start ecosystem.config.apiserver.cjs",
    "pm2:status": "pm2 status",
    "pm2:stop": "pm2 stop ecosystem.config.apiserver.cjs",
    "preinstall": "npx only-allow npm",
    "prettier:check": "prettier --check src/**/*.ts",
    "prettier:fix": "prettier --write src/**/*.ts",
    "setup:apiserver": "node scripts/auto-setup-environment.js",
    "start": "node --max-old-space-size=1024 dist/main",
    "start:dev": "NODE_ENV=development nodemon --watch src --exec npm run dev",
    "start:prod": "NODE_ENV=production node --max-old-space-size=1024 dist/main",
    "test": "jest",
    "test:cov": "jest --coverage",
    "test:coverage": "npx jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "echo 'E2E tests not configured yet' && exit 0",
    "test:integration": "npx jest --testPathPattern=integration",
    "test:unit": "npx jest --testPathPattern=unit",
    "test:watch": "jest --watch",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "typeorm": "npx typeorm-ts-node-commonjs -d src/database/data-source.ts",
    "validate:env": "node scripts/pm2-env-validator.sh ecosystem.config.apiserver.cjs"
  },
  "dependencies": {
    "@o4o/auth-client": "file:../../packages/auth-client",
    "@o4o/crowdfunding-types": "file:../../packages/crowdfunding-types",
    "@o4o/types": "file:../../packages/types",
    "@o4o/utils": "file:../../packages/utils",
    "@types/adm-zip": "0.5.7",
    "@types/exceljs": "0.5.3",
    "@types/js-yaml": "4.0.9",
    "@types/lru-cache": "7.10.9",
    "@types/pdfkit": "0.17.2",
    "@types/swagger-jsdoc": "6.0.4",
    "@types/swagger-ui-express": "4.1.8",
    "adm-zip": "0.5.16",
    "axios": "^1.10.0",
    "bcrypt": "6.0.0",
    "bcryptjs": "^2.4.3",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.2",
    "compression": "1.8.1",
    "connect-redis": "9.0.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "cron": "4.3.3",
    "csv-writer": "1.6.0",
    "dayjs": "1.11.18",
    "dotenv": "^16.6.1",
    "exceljs": "4.4.0",
    "express": "^4.18.2",
    "express-rate-limit": "^6.7.0",
    "express-session": "^1.18.2",
    "express-validator": "^7.2.1",
    "helmet": "^6.0.1",
    "ioredis": "^5.6.1",
    "joi": "18.0.1",
    "js-yaml": "4.1.0",
    "json2csv": "^6.0.0-alpha.2",
    "jsonwebtoken": "^9.0.0",
    "lru-cache": "11.1.0",
    "multer": "^2.0.1",
    "node-cache": "5.1.2",
    "node-cron": "4.2.1",
    "node-fetch": "^2.7.0",
    "nodemailer": "^7.0.5",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-kakao": "^1.0.1",
    "passport-naver-v2": "^2.0.8",
    "pdfkit": "0.17.2",
    "pg": "^8.11.3",
    "rate-limit-redis": "^4.2.0",
    "redis-cache-express": "1.3.1",
    "reflect-metadata": "^0.1.13",
    "sharp": "^0.34.3",
    "slugify": "^1.6.6",
    "socket.io": "^4.6.1",
    "swagger-jsdoc": "6.2.8",
    "swagger-ui-express": "5.0.1",
    "tail": "^2.2.6",
    "typeorm": "^0.3.20",
    "ua-parser-js": "^2.0.4",
    "uuid": "^9.0.1",
    "winston": "^3.8.2",
    "xlsx": "0.18.5",
    "xml2js": "0.6.2",
    "zod": "4.0.17"
  },
  "devDependencies": {
    "@eslint/js": "9.33.0",
    "@testing-library/dom": "10.4.1",
    "@testing-library/jest-dom": "6.6.4",
    "@testing-library/react": "16.3.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "^1.8.1",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/express-session": "^1.18.2",
    "@types/jest": "29.5.14",
    "@types/jsonwebtoken": "^9.0.1",
    "@types/multer": "1.4.13",
    "@types/node": "22.17.2",
    "@types/node-cron": "^3.0.11",
    "@types/node-fetch": "^2.6.11",
    "@types/nodemailer": "^6.4.17",
    "@types/passport": "^1.0.17",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/pg": "^8.10.9",
    "@types/supertest": "6.0.3",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "8.39.0",
    "@typescript-eslint/parser": "8.39.0",
    "@vitejs/plugin-react": "5.0.0",
    "@vitest/ui": "3.2.4",
    "eslint": "9.33.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "29.7.0",
    "jsdom": "26.1.0",
    "nodemon": "^3.1.7",
    "prettier": "^3.0.0",
    "supertest": "7.1.4",
    "ts-jest": "29.4.1",
    "ts-node": "10.9.2",
    "typescript": "5.9.2",
    "typescript-eslint": "^8.38.0",
    "vite": "5.4.19",
    "vitest": "3.2.4"
  }
}
