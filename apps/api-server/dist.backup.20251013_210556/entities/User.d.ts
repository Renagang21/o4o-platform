import { UserRole, UserStatus } from '../types/auth';
import { BusinessInfo } from '../types/user';
import { Role } from './Role';
export { UserRole, UserStatus };
export declare class User {
    id: string;
    email: string;
    password: string;
    firstName?: string;
    lastName?: string;
    name?: string;
    avatar?: string;
    status: UserStatus;
    businessInfo?: BusinessInfo;
    role: UserRole;
    roles: string[];
    dbRoles?: Role[];
    activeRole?: Role | null;
    permissions: string[];
    isActive: boolean;
    isEmailVerified: boolean;
    refreshTokenFamily?: string;
    lastLoginAt?: Date;
    lastLoginIp?: string;
    loginAttempts: number;
    lockedUntil?: Date;
    betaUserId?: string;
    domain?: string;
    createdAt: Date;
    updatedAt: Date;
    approvedAt?: Date;
    approvedBy?: string;
    provider?: string;
    provider_id?: string;
    get isLocked(): boolean;
    get fullName(): string;
    refreshTokens?: any[];
    approvalLogs?: any[];
    adminActions?: any[];
    linkedAccounts?: any[];
    accountActivities?: any[];
    supplier?: any;
    seller?: any;
    partner?: any;
    hashPassword(): Promise<void>;
    validatePassword(password: string): Promise<boolean>;
    hasRole(role: UserRole | string): boolean;
    hasAnyRole(roles: (UserRole | string)[]): boolean;
    isAdmin(): boolean;
    getAllPermissions(): string[];
    hasPermission(permission: string): boolean;
    hasAnyPermission(permissions: string[]): boolean;
    hasAllPermissions(permissions: string[]): boolean;
    getRoleNames(): string[];
    isPending(): boolean;
    isActiveUser(): boolean;
    isSupplier(): boolean;
    isSeller(): boolean;
    isPartner(): boolean;
    getDropshippingRoles(): string[];
    getActiveRole(): Role | null;
    canSwitchToRole(roleId: string): boolean;
    hasMultipleRoles(): boolean;
    toPublicData(): {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        fullName: string;
        role: UserRole;
        roles: string[];
        activeRole: {
            id: string;
            name: string;
            displayName: string;
        };
        dbRoles: {
            id: string;
            name: string;
            displayName: string;
        }[];
        canSwitchRoles: boolean;
        status: UserStatus;
        permissions: string[];
        isActive: boolean;
        isEmailVerified: boolean;
        lastLoginAt: Date;
        createdAt: Date;
        updatedAt: Date;
    };
}
//# sourceMappingURL=User.d.ts.map