# Order Management Endpoints

/orders:
  get:
    tags:
      - E-commerce
    summary: 주문 목록 조회
    description: 페이지네이션과 필터링을 지원하는 주문 목록 조회
    operationId: getOrders
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/orderParam'
      - name: status
        in: query
        description: 주문 상태 필터
        schema:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled, refunded]
      - name: customerId
        in: query
        description: 고객 ID
        schema:
          type: string
      - name: dateFrom
        in: query
        description: 시작 날짜
        schema:
          type: string
          format: date
      - name: dateTo
        in: query
        description: 종료 날짜
        schema:
          type: string
          format: date
      - name: minAmount
        in: query
        description: 최소 주문 금액
        schema:
          type: number
      - name: maxAmount
        in: query
        description: 최대 주문 금액
        schema:
          type: number
    responses:
      '200':
        description: 주문 목록 조회 성공
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Order'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'

  post:
    tags:
      - E-commerce
    summary: 새 주문 생성
    description: 새로운 주문을 생성합니다
    operationId: createOrder
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [items, billing, shipping, payment]
            properties:
              items:
                type: array
                minItems: 1
                items:
                  type: object
                  required: [productId, quantity]
                  properties:
                    productId:
                      type: string
                      description: 상품 ID
                    quantity:
                      type: integer
                      minimum: 1
                    variationId:
                      type: string
                      description: 상품 변형 ID
                    customization:
                      type: object
                      description: 커스터마이징 옵션
              billing:
                type: object
                required: [firstName, lastName, address1, city, state, postcode, country, email, phone]
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  company:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  postcode:
                    type: string
                  country:
                    type: string
                  email:
                    type: string
                    format: email
                  phone:
                    type: string
              shipping:
                type: object
                required: [firstName, lastName, address1, city, state, postcode, country, method]
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  company:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  postcode:
                    type: string
                  country:
                    type: string
                  method:
                    type: string
                    description: 배송 방법
              payment:
                type: object
                required: [method]
                properties:
                  method:
                    type: string
                    enum: [credit_card, bank_transfer, paypal, stripe]
                  transactionId:
                    type: string
              coupon:
                type: object
                properties:
                  code:
                    type: string
                    description: 쿠폰 코드
              notes:
                type: string
                description: 주문 메모
              metadata:
                type: object
                description: 추가 메타데이터
    responses:
      '201':
        description: 주문 생성 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Order'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '402':
        description: 결제 필요
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              success: false
              error: 결제가 필요합니다
              code: BIZ_PAYMENT_REQUIRED

/orders/{id}:
  get:
    tags:
      - E-commerce
    summary: 특정 주문 조회
    description: 주문 ID로 특정 주문을 조회합니다
    operationId: getOrderById
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    responses:
      '200':
        description: 주문 조회 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Order'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

  patch:
    tags:
      - E-commerce
    summary: 주문 정보 수정
    description: 주문 정보를 부분적으로 업데이트합니다
    operationId: updateOrder
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [processing, shipped, delivered, cancelled, refunded]
              shipping:
                type: object
                properties:
                  trackingNumber:
                    type: string
                  carrier:
                    type: string
                  estimatedDelivery:
                    type: string
                    format: date
              notes:
                type: string
              metadata:
                type: object
    responses:
      '200':
        description: 주문 수정 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Order'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/{id}/cancel:
  post:
    tags:
      - E-commerce
    summary: 주문 취소
    description: 주문을 취소합니다
    operationId: cancelOrder
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              reason:
                type: string
                description: 취소 사유
                enum: [customer_request, out_of_stock, pricing_error, duplicate_order, fraud, other]
              details:
                type: string
                description: 상세 사유
              refundAmount:
                type: number
                description: 환불 금액 (부분 환불 시)
    responses:
      '200':
        description: 주문 취소 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 주문이 성공적으로 취소되었습니다
                data:
                  type: object
                  properties:
                    orderId:
                      type: string
                    refundId:
                      type: string
                    refundAmount:
                      type: number
      '400':
        description: 취소 불가능한 주문
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              success: false
              error: 이미 배송된 주문은 취소할 수 없습니다
              code: BIZ_ORDER_CANNOT_CANCEL
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/{id}/refund:
  post:
    tags:
      - E-commerce
    summary: 주문 환불
    description: 주문을 환불 처리합니다
    operationId: refundOrder
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [amount, reason]
            properties:
              amount:
                type: number
                minimum: 0
                description: 환불 금액
              reason:
                type: string
                description: 환불 사유
                enum: [defective, not_as_described, damaged, wrong_item, customer_request, other]
              details:
                type: string
                description: 상세 사유
              items:
                type: array
                description: 부분 환불 시 환불할 상품 목록
                items:
                  type: object
                  properties:
                    itemId:
                      type: string
                    quantity:
                      type: integer
    responses:
      '200':
        description: 환불 처리 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    refundId:
                      type: string
                    amount:
                      type: number
                    status:
                      type: string
                      enum: [pending, processing, completed, failed]
                    processedAt:
                      type: string
                      format: date-time
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/{id}/ship:
  post:
    tags:
      - E-commerce
    summary: 배송 처리
    description: 주문을 배송 처리합니다
    operationId: shipOrder
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [trackingNumber, carrier]
            properties:
              trackingNumber:
                type: string
                description: 운송장 번호
              carrier:
                type: string
                description: 배송 업체
                enum: [cj_logistics, hanjin, lotte, post_office, fedex, dhl, ups]
              estimatedDelivery:
                type: string
                format: date
                description: 예상 배송일
              notifyCustomer:
                type: boolean
                default: true
                description: 고객 알림 여부
    responses:
      '200':
        description: 배송 처리 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 배송 처리가 완료되었습니다
      '400':
        description: 배송 처리 불가
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              success: false
              error: 결제가 완료되지 않은 주문입니다
              code: BIZ_ORDER_NOT_PAID
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/{id}/invoice:
  get:
    tags:
      - E-commerce
    summary: 주문 송장 조회
    description: 주문의 송장(인보이스)를 조회합니다
    operationId: getOrderInvoice
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
      - name: format
        in: query
        description: 송장 형식
        schema:
          type: string
          enum: [pdf, html]
          default: pdf
    responses:
      '200':
        description: 송장 조회 성공
        content:
          application/pdf:
            schema:
              type: string
              format: binary
          text/html:
            schema:
              type: string
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/{id}/notes:
  get:
    tags:
      - E-commerce
    summary: 주문 메모 조회
    description: 주문의 내부 메모를 조회합니다
    operationId: getOrderNotes
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    responses:
      '200':
        description: 메모 조회 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      content:
                        type: string
                      author:
                        $ref: '#/components/schemas/User'
                      isCustomerNote:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

  post:
    tags:
      - E-commerce
    summary: 주문 메모 추가
    description: 주문에 메모를 추가합니다
    operationId: addOrderNote
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [content]
            properties:
              content:
                type: string
                description: 메모 내용
              isCustomerNote:
                type: boolean
                default: false
                description: 고객에게 보이는 메모 여부
    responses:
      '201':
        description: 메모 추가 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 메모가 추가되었습니다
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/orders/statistics:
  get:
    tags:
      - E-commerce
    summary: 주문 통계
    description: 주문 관련 통계를 조회합니다
    operationId: getOrderStatistics
    security:
      - bearerAuth: []
    parameters:
      - name: period
        in: query
        description: 통계 기간
        schema:
          type: string
          enum: [today, yesterday, week, month, quarter, year]
          default: month
      - name: groupBy
        in: query
        description: 그룹화 기준
        schema:
          type: string
          enum: [day, week, month]
          default: day
    responses:
      '200':
        description: 통계 조회 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    summary:
                      type: object
                      properties:
                        totalOrders:
                          type: integer
                        totalRevenue:
                          type: number
                        averageOrderValue:
                          type: number
                        conversionRate:
                          type: number
                    byStatus:
                      type: object
                      additionalProperties:
                        type: integer
                    timeline:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            format: date
                          orders:
                            type: integer
                          revenue:
                            type: number
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'