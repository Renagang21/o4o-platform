# E-commerce Product Endpoints

/products:
  get:
    tags:
      - E-commerce
    summary: 상품 목록 조회
    description: 필터링과 정렬을 지원하는 상품 목록 조회
    operationId: getProducts
    parameters:
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/orderParam'
      - $ref: '#/components/parameters/searchParam'
      - name: category
        in: query
        description: 카테고리 ID 또는 슬러그
        schema:
          type: string
      - name: tag
        in: query
        description: 태그 ID 또는 이름
        schema:
          type: string
      - name: status
        in: query
        description: 상품 상태
        schema:
          type: string
          enum: [draft, active, inactive, out_of_stock]
      - name: type
        in: query
        description: 상품 유형
        schema:
          type: string
          enum: [physical, digital, service]
      - name: minPrice
        in: query
        description: 최소 가격
        schema:
          type: number
          minimum: 0
      - name: maxPrice
        in: query
        description: 최대 가격
        schema:
          type: number
          minimum: 0
      - name: inStock
        in: query
        description: 재고 있는 상품만
        schema:
          type: boolean
      - name: featured
        in: query
        description: 추천 상품만
        schema:
          type: boolean
    responses:
      '200':
        description: 상품 목록 조회 성공
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Product'
      '400':
        $ref: '#/components/responses/ValidationError'

  post:
    tags:
      - E-commerce
    summary: 새 상품 등록
    description: 새로운 상품을 등록합니다
    operationId: createProduct
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [name, description, price, type, status]
            properties:
              name:
                type: string
                description: 상품명
              slug:
                type: string
                description: URL 슬러그 (자동 생성 가능)
              description:
                type: string
                description: 상품 설명
              shortDescription:
                type: string
                description: 간단한 설명
              sku:
                type: string
                description: 재고 관리 코드
              barcode:
                type: string
                description: 바코드
              type:
                type: string
                enum: [physical, digital, service]
              status:
                type: string
                enum: [draft, active, inactive]
              price:
                type: object
                required: [regular]
                properties:
                  regular:
                    type: number
                    minimum: 0
                  sale:
                    type: number
                    minimum: 0
                  wholesale:
                    type: number
                    minimum: 0
                  affiliate:
                    type: number
                    minimum: 0
              stock:
                type: object
                properties:
                  quantity:
                    type: integer
                    minimum: 0
                  manageStock:
                    type: boolean
                    default: true
                  stockStatus:
                    type: string
                    enum: [in_stock, out_of_stock, on_backorder]
                  lowStockThreshold:
                    type: integer
                    minimum: 0
              shipping:
                type: object
                properties:
                  weight:
                    type: number
                  dimensions:
                    type: object
                    properties:
                      length:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
                  shippingClass:
                    type: string
              images:
                type: array
                items:
                  type: object
                  properties:
                    url:
                      type: string
                      format: uri
                    alt:
                      type: string
                    position:
                      type: integer
              categories:
                type: array
                items:
                  type: string
                  description: 카테고리 ID
              tags:
                type: array
                items:
                  type: string
                  description: 태그 ID 또는 이름
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    visible:
                      type: boolean
              variations:
                type: array
                items:
                  type: object
                  properties:
                    sku:
                      type: string
                    price:
                      type: number
                    stock:
                      type: integer
                    attributes:
                      type: object
              seo:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  keywords:
                    type: string
    responses:
      '201':
        description: 상품 등록 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Product'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'

/products/{id}:
  get:
    tags:
      - E-commerce
    summary: 특정 상품 조회
    description: ID로 특정 상품을 조회합니다
    operationId: getProductById
    parameters:
      - $ref: '#/components/parameters/idParam'
    responses:
      '200':
        description: 상품 조회 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Product'
      '404':
        $ref: '#/components/responses/NotFoundError'

  put:
    tags:
      - E-commerce
    summary: 상품 정보 수정
    description: 상품 정보를 업데이트합니다
    operationId: updateProduct
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              slug:
                type: string
              description:
                type: string
              shortDescription:
                type: string
              sku:
                type: string
              barcode:
                type: string
              type:
                type: string
                enum: [physical, digital, service]
              status:
                type: string
                enum: [draft, active, inactive, out_of_stock]
              price:
                type: object
                properties:
                  regular:
                    type: number
                  sale:
                    type: number
                  wholesale:
                    type: number
                  affiliate:
                    type: number
              stock:
                type: object
                properties:
                  quantity:
                    type: integer
                  manageStock:
                    type: boolean
                  stockStatus:
                    type: string
                    enum: [in_stock, out_of_stock, on_backorder]
                  lowStockThreshold:
                    type: integer
              categories:
                type: array
                items:
                  type: string
              tags:
                type: array
                items:
                  type: string
    responses:
      '200':
        description: 상품 수정 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '#/components/schemas/Product'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

  delete:
    tags:
      - E-commerce
    summary: 상품 삭제
    description: 상품을 삭제합니다
    operationId: deleteProduct
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    responses:
      '200':
        description: 상품 삭제 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 상품이 성공적으로 삭제되었습니다
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/products/{id}/stock:
  patch:
    tags:
      - E-commerce
    summary: 재고 수량 업데이트
    description: 상품의 재고 수량을 업데이트합니다
    operationId: updateProductStock
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [quantity]
            properties:
              quantity:
                type: integer
                description: 새로운 재고 수량
                minimum: 0
              operation:
                type: string
                enum: [set, increase, decrease]
                default: set
                description: 재고 업데이트 방식
              reason:
                type: string
                description: 재고 변경 사유
    responses:
      '200':
        description: 재고 업데이트 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    previousQuantity:
                      type: integer
                    newQuantity:
                      type: integer
                    stockStatus:
                      type: string
                      enum: [in_stock, out_of_stock, on_backorder]
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/products/{id}/reviews:
  get:
    tags:
      - E-commerce
    summary: 상품 리뷰 목록
    description: 특정 상품의 리뷰 목록을 조회합니다
    operationId: getProductReviews
    parameters:
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - name: rating
        in: query
        description: 평점 필터 (1-5)
        schema:
          type: integer
          minimum: 1
          maximum: 5
      - name: verified
        in: query
        description: 구매 인증 리뷰만
        schema:
          type: boolean
    responses:
      '200':
        description: 리뷰 조회 성공
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          rating:
                            type: integer
                            minimum: 1
                            maximum: 5
                          title:
                            type: string
                          content:
                            type: string
                          verified:
                            type: boolean
                          author:
                            $ref: '#/components/schemas/User'
                          images:
                            type: array
                            items:
                              type: string
                              format: uri
                          helpful:
                            type: integer
                          createdAt:
                            type: string
                            format: date-time
      '404':
        $ref: '#/components/responses/NotFoundError'

  post:
    tags:
      - E-commerce
    summary: 리뷰 작성
    description: 상품에 리뷰를 작성합니다
    operationId: createProductReview
    security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/idParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [rating, content]
            properties:
              rating:
                type: integer
                minimum: 1
                maximum: 5
              title:
                type: string
                maxLength: 100
              content:
                type: string
                minLength: 10
                maxLength: 1000
              images:
                type: array
                items:
                  type: string
                  format: uri
                maxItems: 5
    responses:
      '201':
        description: 리뷰 작성 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 리뷰가 성공적으로 등록되었습니다
      '400':
        description: 이미 리뷰를 작성한 상품
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              success: false
              error: 이미 리뷰를 작성하셨습니다
              code: BIZ_DUPLICATE_REVIEW
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '404':
        $ref: '#/components/responses/NotFoundError'

/products/bulk:
  post:
    tags:
      - E-commerce
    summary: 대량 상품 등록
    description: CSV 또는 JSON 형식으로 여러 상품을 한 번에 등록합니다
    operationId: bulkCreateProducts
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [products]
            properties:
              products:
                type: array
                items:
                  type: object
                  required: [name, price, type]
                  properties:
                    name:
                      type: string
                    sku:
                      type: string
                    price:
                      type: number
                    stock:
                      type: integer
                    type:
                      type: string
                      enum: [physical, digital, service]
                    category:
                      type: string
              updateExisting:
                type: boolean
                default: false
                description: SKU가 중복되면 업데이트
    responses:
      '201':
        description: 대량 등록 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    created:
                      type: integer
                      description: 생성된 상품 수
                    updated:
                      type: integer
                      description: 업데이트된 상품 수
                    failed:
                      type: integer
                      description: 실패한 상품 수
                    errors:
                      type: array
                      items:
                        type: object
                        properties:
                          sku:
                            type: string
                          error:
                            type: string
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/ForbiddenError'

/products/categories:
  get:
    tags:
      - E-commerce
    summary: 상품 카테고리 목록
    description: 상품 카테고리 목록을 조회합니다
    operationId: getProductCategories
    parameters:
      - name: parent
        in: query
        description: 부모 카테고리 ID
        schema:
          type: string
      - name: depth
        in: query
        description: 카테고리 트리 깊이
        schema:
          type: integer
          minimum: 1
          maximum: 5
          default: 2
    responses:
      '200':
        description: 카테고리 조회 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Category'