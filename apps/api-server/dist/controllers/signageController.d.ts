import { Request, Response } from 'express';
export declare class SignageController {
    private contentRepository;
    private storeRepository;
    private playlistRepository;
    private playlistItemRepository;
    private scheduleRepository;
    private templateRepository;
    private logRepository;
    private userRepository;
    getContents(req: Request, res: Response): Promise<void>;
    getContentById(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    createContent(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    updateContent(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    deleteContent(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    approveRejectContent(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    getStores(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    createStore(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    updateStore(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    deleteStore(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
    getStorePlaylists(req: Request, res: Response): Promise<void>;
    createPlaylist(req: Request, res: Response): Promise<void>;
    updatePlaylist(req: Request, res: Response): Promise<void>;
    deletePlaylist(req: Request, res: Response): Promise<void>;
    getPlaylistItems(req: Request, res: Response): Promise<void>;
    addPlaylistItem(req: Request, res: Response): Promise<void>;
    updatePlaylistItem(req: Request, res: Response): Promise<void>;
    deletePlaylistItem(req: Request, res: Response): Promise<void>;
    reorderPlaylistItems(req: Request, res: Response): Promise<void>;
    getStoreSchedules(req: Request, res: Response): Promise<void>;
    createSchedule(req: Request, res: Response): Promise<void>;
    updateSchedule(req: Request, res: Response): Promise<void>;
    deleteSchedule(req: Request, res: Response): Promise<void>;
    getActiveSchedule(req: Request, res: Response): Promise<void>;
    getTemplates(req: Request, res: Response): Promise<void>;
    createTemplate(req: Request, res: Response): Promise<void>;
    updateTemplate(req: Request, res: Response): Promise<void>;
    deleteTemplate(req: Request, res: Response): Promise<void>;
    getContentUsageAnalytics(req: Request, res: Response): Promise<void>;
    getStorePerformanceAnalytics(req: Request, res: Response): Promise<void>;
    getPlaybackStatus(req: Request, res: Response): Promise<void>;
    changePlaybackContent(req: Request, res: Response): Promise<void>;
    controlPlayback(req: Request, res: Response): Promise<void>;
}
//# sourceMappingURL=signageController.d.ts.map