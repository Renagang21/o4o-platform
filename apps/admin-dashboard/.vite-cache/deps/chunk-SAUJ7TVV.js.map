{
  "version": 3,
  "sources": ["../../../../node_modules/@wordpress/blocks/node_modules/react-is/cjs/react-is.development.js", "../../../../node_modules/@wordpress/blocks/node_modules/react-is/index.js", "../../../../node_modules/showdown/src/options.js", "../../../../node_modules/showdown/src/showdown.js", "../../../../node_modules/showdown/src/helpers.js", "../../../../node_modules/showdown/src/converter.js", "../../../../node_modules/showdown/src/subParsers/anchors.js", "../../../../node_modules/showdown/src/subParsers/autoLinks.js", "../../../../node_modules/showdown/src/subParsers/blockGamut.js", "../../../../node_modules/showdown/src/subParsers/blockQuotes.js", "../../../../node_modules/showdown/src/subParsers/codeBlocks.js", "../../../../node_modules/showdown/src/subParsers/codeSpans.js", "../../../../node_modules/showdown/src/subParsers/completeHTMLDocument.js", "../../../../node_modules/showdown/src/subParsers/detab.js", "../../../../node_modules/showdown/src/subParsers/ellipsis.js", "../../../../node_modules/showdown/src/subParsers/emoji.js", "../../../../node_modules/showdown/src/subParsers/encodeAmpsAndAngles.js", "../../../../node_modules/showdown/src/subParsers/encodeBackslashEscapes.js", "../../../../node_modules/showdown/src/subParsers/encodeCode.js", "../../../../node_modules/showdown/src/subParsers/escapeSpecialCharsWithinTagAttributes.js", "../../../../node_modules/showdown/src/subParsers/githubCodeBlocks.js", "../../../../node_modules/showdown/src/subParsers/hashBlock.js", "../../../../node_modules/showdown/src/subParsers/hashCodeTags.js", "../../../../node_modules/showdown/src/subParsers/hashElement.js", "../../../../node_modules/showdown/src/subParsers/hashHTMLBlocks.js", "../../../../node_modules/showdown/src/subParsers/hashHTMLSpans.js", "../../../../node_modules/showdown/src/subParsers/hashPreCodeTags.js", "../../../../node_modules/showdown/src/subParsers/headers.js", "../../../../node_modules/showdown/src/subParsers/horizontalRule.js", "../../../../node_modules/showdown/src/subParsers/images.js", "../../../../node_modules/showdown/src/subParsers/italicsAndBold.js", "../../../../node_modules/showdown/src/subParsers/lists.js", "../../../../node_modules/showdown/src/subParsers/metadata.js", "../../../../node_modules/showdown/src/subParsers/outdent.js", "../../../../node_modules/showdown/src/subParsers/paragraphs.js", "../../../../node_modules/showdown/src/subParsers/runExtension.js", "../../../../node_modules/showdown/src/subParsers/spanGamut.js", "../../../../node_modules/showdown/src/subParsers/strikethrough.js", "../../../../node_modules/showdown/src/subParsers/stripLinkDefinitions.js", "../../../../node_modules/showdown/src/subParsers/tables.js", "../../../../node_modules/showdown/src/subParsers/underline.js", "../../../../node_modules/showdown/src/subParsers/unescapeSpecialChars.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/blockquote.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/codeBlock.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/codeSpan.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/emphasis.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/header.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/hr.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/image.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/links.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/list.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/listItem.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/node.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/paragraph.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/pre.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/strikethrough.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/strong.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/table.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/tableCell.js", "../../../../node_modules/showdown/src/subParsers/makeMarkdown/txt.js", "../../../../node_modules/showdown/src/loader.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/@wordpress/data/src/redux-store/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/redux-routine/build-module/@wordpress/redux-routine/src/is-generator.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/redux-routine/build-module/@wordpress/redux-routine/src/runtime.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/redux-routine/build-module/@wordpress/redux-routine/src/is-action.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/redux-routine/build-module/@wordpress/redux-routine/src/index.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/@wordpress/data/src/redux-store/combine-reducers.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/factory.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/controls.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/lock-unlock.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/promise-middleware.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/resolvers-cache-middleware.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/@wordpress/data/src/redux-store/thunk-middleware.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/reducer.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/utils.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/selectors.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/actions.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/store/@wordpress/data/src/store/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/utils/@wordpress/data/src/utils/emitter.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/registry.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/default-registry.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/plugins/persistence/@wordpress/data/src/plugins/persistence/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/plugins/persistence/storage/@wordpress/data/src/plugins/persistence/storage/object.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/plugins/persistence/storage/@wordpress/data/src/plugins/persistence/storage/default.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/element/build-module/@wordpress/element/src/react.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/element/build-module/@wordpress/element/src/react-platform.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/element/build-module/@wordpress/element/src/platform.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/element/build-module/@wordpress/element/src/raw-html.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/element/build-module/@wordpress/element/src/serialize.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/registry-provider/@wordpress/data/src/components/registry-provider/context.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/async-mode-provider/@wordpress/data/src/components/async-mode-provider/context.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/use-select/@wordpress/data/src/components/use-select/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/with-select/@wordpress/data/src/components/with-select/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/with-dispatch/@wordpress/data/src/components/with-dispatch/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/components/with-registry/@wordpress/data/src/components/with-registry/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/dispatch.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/select.ts", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/data/build-module/@wordpress/data/src/index.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/sprintf.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/create-i18n.js", "../../../../node_modules/@wordpress/blocks/node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/default-i18n.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/constants.js", "../../../../node_modules/@wordpress/blocks/build-module/@wordpress/blocks/src/lock-unlock.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/registration.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/utils.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/reducer.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/selectors.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/utils.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/private-selectors.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/actions.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/process-block-type.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/private-actions.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/constants.js", "../../../../node_modules/@wordpress/blocks/build-module/store/@wordpress/blocks/src/store/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/factory.js", "../../../../node_modules/@wordpress/block-serialization-default-parser/build-module/@wordpress/block-serialization-default-parser/src/index.ts", "../../../../node_modules/@wordpress/autop/build-module/@wordpress/autop/src/index.ts", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/serialize-raw-block.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/serializer.js", "../../../../node_modules/simple-html-tokenizer/src/generated/html5-named-char-refs.ts", "../../../../node_modules/simple-html-tokenizer/src/entity-parser.ts", "../../../../node_modules/simple-html-tokenizer/src/utils.ts", "../../../../node_modules/simple-html-tokenizer/src/evented-tokenizer.ts", "../../../../node_modules/simple-html-tokenizer/src/tokenizer.ts", "../../../../node_modules/simple-html-tokenizer/src/tokenize.ts", "../../../../node_modules/@wordpress/blocks/build-module/api/validation/@wordpress/blocks/src/api/validation/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/validation/@wordpress/blocks/src/api/validation/logger.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/convert-legacy-block.js", "../../../../node_modules/hpq/es/get-path.js", "../../../../node_modules/hpq/es/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/children.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/node.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/matchers.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/get-block-attributes.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/fix-custom-classname.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/apply-built-in-validation-fixes.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/apply-block-deprecated-versions.js", "../../../../node_modules/@wordpress/blocks/build-module/api/parser/@wordpress/blocks/src/api/parser/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/get-raw-transforms.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/html-to-blocks.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/normalise-blocks.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/special-comment-converter.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/list-reducer.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/blockquote-normaliser.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/figure-content-reducer.js", "../../../../node_modules/@wordpress/shortcode/build-module/@wordpress/shortcode/src/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/shortcode-converter.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/utils.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/comment-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/is-inline-content.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/phrasing-content-reducer.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/head-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/ms-list-ignore.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/ms-list-converter.js", "../../../../node_modules/@wordpress/blob/build-module/@wordpress/blob/src/index.ts", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/image-corrector.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/div-normaliser.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/markdown-converter.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/iframe-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/google-docs-uid-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/html-formatting-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/br-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/empty-paragraph-remover.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/slack-paragraph-corrector.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/paste-handler.js", "../../../../node_modules/@wordpress/blocks/build-module/api/raw-handling/@wordpress/blocks/src/api/raw-handling/index.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/categories.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/templates.js", "../../../../node_modules/@wordpress/blocks/build-module/api/@wordpress/blocks/src/api/index.js", "../../../../node_modules/@wordpress/blocks/build-module/@wordpress/blocks/src/deprecated.js"],
  "sourcesContent": ["/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_SERVER_CONTEXT_TYPE:\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\nfunction isSuspenseList(object) {\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.SuspenseList = SuspenseList;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isSuspenseList = isSuspenseList;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\'section-\\' prefix',\n      type: 'string'\n    },\n    rawPrefixHeaderId: {\n      defaultValue: false,\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)',\n      type: 'boolean'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    rawHeaderId: {\n      defaultValue: false,\n      describe: 'Remove only spaces, \\' and \" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    literalMidWordAsterisks: {\n      defaultValue: false,\n      describe: 'Parse midword asterisks as literal asterisks',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    },\n    openLinksInNewWindow: {\n      defaultValue: false,\n      description: 'Open all links in new windows',\n      type: 'boolean'\n    },\n    backslashEscapesHTMLTags: {\n      defaultValue: false,\n      description: 'Support for HTML Tag escaping. ex: \\<div>foo\\</div>',\n      type: 'boolean'\n    },\n    emoji: {\n      defaultValue: false,\n      description: 'Enable emoji support. Ex: `this is a :smile: emoji`',\n      type: 'boolean'\n    },\n    underline: {\n      defaultValue: false,\n      description: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\n      type: 'boolean'\n    },\n    completeHTMLDocument: {\n      defaultValue: false,\n      description: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\n      type: 'boolean'\n    },\n    metadata: {\n      defaultValue: false,\n      description: 'Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).',\n      type: 'boolean'\n    },\n    splitAdjacentBlockquotes: {\n      defaultValue: false,\n      description: 'Split adjacent blockquote blocks',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n", "/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true,\n        backslashEscapesHTMLTags:             true,\n        emoji:                                true,\n        splitAdjacentBlockquotes:             true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  showdown.resetOptions();\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n", "/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return Array.isArray(a);\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\n/**\n * Unescape HTML entities\n * @param txt\n * @returns {string}\n */\nshowdown.helper.unescapeHTMLEntities = function (txt) {\n  'use strict';\n\n  return txt\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&');\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Returns the index within the passed String object of the first occurrence of the specified regex,\n * starting the search at fromIndex. Returns -1 if the value is not found.\n *\n * @param {string} str string to search\n * @param {RegExp} regex Regular expression to search\n * @param {int} [fromIndex = 0] Index to start the search\n * @returns {Number}\n * @throws InvalidArgumentError\n */\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  if (regex instanceof RegExp === false) {\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\n  }\n  var indexOf = str.substring(fromIndex || 0).search(regex);\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\n};\n\n/**\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\n * @param {string} str string to split\n * @param {int} index index to split string at\n * @returns {[string,string]}\n * @throws InvalidArgumentError\n */\nshowdown.helper.splitAtIndex = function (str, index) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  return [str.substring(0, index), str.substring(index)];\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n *\n * @param str\n * @param targetLength\n * @param padString\n * @returns {string}\n */\nshowdown.helper.padEnd = function padEnd (str, targetLength, padString) {\n  'use strict';\n  /*jshint bitwise: false*/\n  // eslint-disable-next-line space-infix-ops\n  targetLength = targetLength>>0; //floor if number or convert non-number to 0;\n  /*jshint bitwise: true*/\n  padString = String(padString || ' ');\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n    }\n    return String(str) + padString.slice(0,targetLength);\n  }\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof console === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskDashAndColon: /([*_:~])/g\n};\n\n/**\n * EMOJIS LIST\n */\nshowdown.helper.emojis = {\n  '+1':'\\ud83d\\udc4d',\n  '-1':'\\ud83d\\udc4e',\n  '100':'\\ud83d\\udcaf',\n  '1234':'\\ud83d\\udd22',\n  '1st_place_medal':'\\ud83e\\udd47',\n  '2nd_place_medal':'\\ud83e\\udd48',\n  '3rd_place_medal':'\\ud83e\\udd49',\n  '8ball':'\\ud83c\\udfb1',\n  'a':'\\ud83c\\udd70\\ufe0f',\n  'ab':'\\ud83c\\udd8e',\n  'abc':'\\ud83d\\udd24',\n  'abcd':'\\ud83d\\udd21',\n  'accept':'\\ud83c\\ude51',\n  'aerial_tramway':'\\ud83d\\udea1',\n  'airplane':'\\u2708\\ufe0f',\n  'alarm_clock':'\\u23f0',\n  'alembic':'\\u2697\\ufe0f',\n  'alien':'\\ud83d\\udc7d',\n  'ambulance':'\\ud83d\\ude91',\n  'amphora':'\\ud83c\\udffa',\n  'anchor':'\\u2693\\ufe0f',\n  'angel':'\\ud83d\\udc7c',\n  'anger':'\\ud83d\\udca2',\n  'angry':'\\ud83d\\ude20',\n  'anguished':'\\ud83d\\ude27',\n  'ant':'\\ud83d\\udc1c',\n  'apple':'\\ud83c\\udf4e',\n  'aquarius':'\\u2652\\ufe0f',\n  'aries':'\\u2648\\ufe0f',\n  'arrow_backward':'\\u25c0\\ufe0f',\n  'arrow_double_down':'\\u23ec',\n  'arrow_double_up':'\\u23eb',\n  'arrow_down':'\\u2b07\\ufe0f',\n  'arrow_down_small':'\\ud83d\\udd3d',\n  'arrow_forward':'\\u25b6\\ufe0f',\n  'arrow_heading_down':'\\u2935\\ufe0f',\n  'arrow_heading_up':'\\u2934\\ufe0f',\n  'arrow_left':'\\u2b05\\ufe0f',\n  'arrow_lower_left':'\\u2199\\ufe0f',\n  'arrow_lower_right':'\\u2198\\ufe0f',\n  'arrow_right':'\\u27a1\\ufe0f',\n  'arrow_right_hook':'\\u21aa\\ufe0f',\n  'arrow_up':'\\u2b06\\ufe0f',\n  'arrow_up_down':'\\u2195\\ufe0f',\n  'arrow_up_small':'\\ud83d\\udd3c',\n  'arrow_upper_left':'\\u2196\\ufe0f',\n  'arrow_upper_right':'\\u2197\\ufe0f',\n  'arrows_clockwise':'\\ud83d\\udd03',\n  'arrows_counterclockwise':'\\ud83d\\udd04',\n  'art':'\\ud83c\\udfa8',\n  'articulated_lorry':'\\ud83d\\ude9b',\n  'artificial_satellite':'\\ud83d\\udef0',\n  'astonished':'\\ud83d\\ude32',\n  'athletic_shoe':'\\ud83d\\udc5f',\n  'atm':'\\ud83c\\udfe7',\n  'atom_symbol':'\\u269b\\ufe0f',\n  'avocado':'\\ud83e\\udd51',\n  'b':'\\ud83c\\udd71\\ufe0f',\n  'baby':'\\ud83d\\udc76',\n  'baby_bottle':'\\ud83c\\udf7c',\n  'baby_chick':'\\ud83d\\udc24',\n  'baby_symbol':'\\ud83d\\udebc',\n  'back':'\\ud83d\\udd19',\n  'bacon':'\\ud83e\\udd53',\n  'badminton':'\\ud83c\\udff8',\n  'baggage_claim':'\\ud83d\\udec4',\n  'baguette_bread':'\\ud83e\\udd56',\n  'balance_scale':'\\u2696\\ufe0f',\n  'balloon':'\\ud83c\\udf88',\n  'ballot_box':'\\ud83d\\uddf3',\n  'ballot_box_with_check':'\\u2611\\ufe0f',\n  'bamboo':'\\ud83c\\udf8d',\n  'banana':'\\ud83c\\udf4c',\n  'bangbang':'\\u203c\\ufe0f',\n  'bank':'\\ud83c\\udfe6',\n  'bar_chart':'\\ud83d\\udcca',\n  'barber':'\\ud83d\\udc88',\n  'baseball':'\\u26be\\ufe0f',\n  'basketball':'\\ud83c\\udfc0',\n  'basketball_man':'\\u26f9\\ufe0f',\n  'basketball_woman':'\\u26f9\\ufe0f&zwj;\\u2640\\ufe0f',\n  'bat':'\\ud83e\\udd87',\n  'bath':'\\ud83d\\udec0',\n  'bathtub':'\\ud83d\\udec1',\n  'battery':'\\ud83d\\udd0b',\n  'beach_umbrella':'\\ud83c\\udfd6',\n  'bear':'\\ud83d\\udc3b',\n  'bed':'\\ud83d\\udecf',\n  'bee':'\\ud83d\\udc1d',\n  'beer':'\\ud83c\\udf7a',\n  'beers':'\\ud83c\\udf7b',\n  'beetle':'\\ud83d\\udc1e',\n  'beginner':'\\ud83d\\udd30',\n  'bell':'\\ud83d\\udd14',\n  'bellhop_bell':'\\ud83d\\udece',\n  'bento':'\\ud83c\\udf71',\n  'biking_man':'\\ud83d\\udeb4',\n  'bike':'\\ud83d\\udeb2',\n  'biking_woman':'\\ud83d\\udeb4&zwj;\\u2640\\ufe0f',\n  'bikini':'\\ud83d\\udc59',\n  'biohazard':'\\u2623\\ufe0f',\n  'bird':'\\ud83d\\udc26',\n  'birthday':'\\ud83c\\udf82',\n  'black_circle':'\\u26ab\\ufe0f',\n  'black_flag':'\\ud83c\\udff4',\n  'black_heart':'\\ud83d\\udda4',\n  'black_joker':'\\ud83c\\udccf',\n  'black_large_square':'\\u2b1b\\ufe0f',\n  'black_medium_small_square':'\\u25fe\\ufe0f',\n  'black_medium_square':'\\u25fc\\ufe0f',\n  'black_nib':'\\u2712\\ufe0f',\n  'black_small_square':'\\u25aa\\ufe0f',\n  'black_square_button':'\\ud83d\\udd32',\n  'blonde_man':'\\ud83d\\udc71',\n  'blonde_woman':'\\ud83d\\udc71&zwj;\\u2640\\ufe0f',\n  'blossom':'\\ud83c\\udf3c',\n  'blowfish':'\\ud83d\\udc21',\n  'blue_book':'\\ud83d\\udcd8',\n  'blue_car':'\\ud83d\\ude99',\n  'blue_heart':'\\ud83d\\udc99',\n  'blush':'\\ud83d\\ude0a',\n  'boar':'\\ud83d\\udc17',\n  'boat':'\\u26f5\\ufe0f',\n  'bomb':'\\ud83d\\udca3',\n  'book':'\\ud83d\\udcd6',\n  'bookmark':'\\ud83d\\udd16',\n  'bookmark_tabs':'\\ud83d\\udcd1',\n  'books':'\\ud83d\\udcda',\n  'boom':'\\ud83d\\udca5',\n  'boot':'\\ud83d\\udc62',\n  'bouquet':'\\ud83d\\udc90',\n  'bowing_man':'\\ud83d\\ude47',\n  'bow_and_arrow':'\\ud83c\\udff9',\n  'bowing_woman':'\\ud83d\\ude47&zwj;\\u2640\\ufe0f',\n  'bowling':'\\ud83c\\udfb3',\n  'boxing_glove':'\\ud83e\\udd4a',\n  'boy':'\\ud83d\\udc66',\n  'bread':'\\ud83c\\udf5e',\n  'bride_with_veil':'\\ud83d\\udc70',\n  'bridge_at_night':'\\ud83c\\udf09',\n  'briefcase':'\\ud83d\\udcbc',\n  'broken_heart':'\\ud83d\\udc94',\n  'bug':'\\ud83d\\udc1b',\n  'building_construction':'\\ud83c\\udfd7',\n  'bulb':'\\ud83d\\udca1',\n  'bullettrain_front':'\\ud83d\\ude85',\n  'bullettrain_side':'\\ud83d\\ude84',\n  'burrito':'\\ud83c\\udf2f',\n  'bus':'\\ud83d\\ude8c',\n  'business_suit_levitating':'\\ud83d\\udd74',\n  'busstop':'\\ud83d\\ude8f',\n  'bust_in_silhouette':'\\ud83d\\udc64',\n  'busts_in_silhouette':'\\ud83d\\udc65',\n  'butterfly':'\\ud83e\\udd8b',\n  'cactus':'\\ud83c\\udf35',\n  'cake':'\\ud83c\\udf70',\n  'calendar':'\\ud83d\\udcc6',\n  'call_me_hand':'\\ud83e\\udd19',\n  'calling':'\\ud83d\\udcf2',\n  'camel':'\\ud83d\\udc2b',\n  'camera':'\\ud83d\\udcf7',\n  'camera_flash':'\\ud83d\\udcf8',\n  'camping':'\\ud83c\\udfd5',\n  'cancer':'\\u264b\\ufe0f',\n  'candle':'\\ud83d\\udd6f',\n  'candy':'\\ud83c\\udf6c',\n  'canoe':'\\ud83d\\udef6',\n  'capital_abcd':'\\ud83d\\udd20',\n  'capricorn':'\\u2651\\ufe0f',\n  'car':'\\ud83d\\ude97',\n  'card_file_box':'\\ud83d\\uddc3',\n  'card_index':'\\ud83d\\udcc7',\n  'card_index_dividers':'\\ud83d\\uddc2',\n  'carousel_horse':'\\ud83c\\udfa0',\n  'carrot':'\\ud83e\\udd55',\n  'cat':'\\ud83d\\udc31',\n  'cat2':'\\ud83d\\udc08',\n  'cd':'\\ud83d\\udcbf',\n  'chains':'\\u26d3',\n  'champagne':'\\ud83c\\udf7e',\n  'chart':'\\ud83d\\udcb9',\n  'chart_with_downwards_trend':'\\ud83d\\udcc9',\n  'chart_with_upwards_trend':'\\ud83d\\udcc8',\n  'checkered_flag':'\\ud83c\\udfc1',\n  'cheese':'\\ud83e\\uddc0',\n  'cherries':'\\ud83c\\udf52',\n  'cherry_blossom':'\\ud83c\\udf38',\n  'chestnut':'\\ud83c\\udf30',\n  'chicken':'\\ud83d\\udc14',\n  'children_crossing':'\\ud83d\\udeb8',\n  'chipmunk':'\\ud83d\\udc3f',\n  'chocolate_bar':'\\ud83c\\udf6b',\n  'christmas_tree':'\\ud83c\\udf84',\n  'church':'\\u26ea\\ufe0f',\n  'cinema':'\\ud83c\\udfa6',\n  'circus_tent':'\\ud83c\\udfaa',\n  'city_sunrise':'\\ud83c\\udf07',\n  'city_sunset':'\\ud83c\\udf06',\n  'cityscape':'\\ud83c\\udfd9',\n  'cl':'\\ud83c\\udd91',\n  'clamp':'\\ud83d\\udddc',\n  'clap':'\\ud83d\\udc4f',\n  'clapper':'\\ud83c\\udfac',\n  'classical_building':'\\ud83c\\udfdb',\n  'clinking_glasses':'\\ud83e\\udd42',\n  'clipboard':'\\ud83d\\udccb',\n  'clock1':'\\ud83d\\udd50',\n  'clock10':'\\ud83d\\udd59',\n  'clock1030':'\\ud83d\\udd65',\n  'clock11':'\\ud83d\\udd5a',\n  'clock1130':'\\ud83d\\udd66',\n  'clock12':'\\ud83d\\udd5b',\n  'clock1230':'\\ud83d\\udd67',\n  'clock130':'\\ud83d\\udd5c',\n  'clock2':'\\ud83d\\udd51',\n  'clock230':'\\ud83d\\udd5d',\n  'clock3':'\\ud83d\\udd52',\n  'clock330':'\\ud83d\\udd5e',\n  'clock4':'\\ud83d\\udd53',\n  'clock430':'\\ud83d\\udd5f',\n  'clock5':'\\ud83d\\udd54',\n  'clock530':'\\ud83d\\udd60',\n  'clock6':'\\ud83d\\udd55',\n  'clock630':'\\ud83d\\udd61',\n  'clock7':'\\ud83d\\udd56',\n  'clock730':'\\ud83d\\udd62',\n  'clock8':'\\ud83d\\udd57',\n  'clock830':'\\ud83d\\udd63',\n  'clock9':'\\ud83d\\udd58',\n  'clock930':'\\ud83d\\udd64',\n  'closed_book':'\\ud83d\\udcd5',\n  'closed_lock_with_key':'\\ud83d\\udd10',\n  'closed_umbrella':'\\ud83c\\udf02',\n  'cloud':'\\u2601\\ufe0f',\n  'cloud_with_lightning':'\\ud83c\\udf29',\n  'cloud_with_lightning_and_rain':'\\u26c8',\n  'cloud_with_rain':'\\ud83c\\udf27',\n  'cloud_with_snow':'\\ud83c\\udf28',\n  'clown_face':'\\ud83e\\udd21',\n  'clubs':'\\u2663\\ufe0f',\n  'cocktail':'\\ud83c\\udf78',\n  'coffee':'\\u2615\\ufe0f',\n  'coffin':'\\u26b0\\ufe0f',\n  'cold_sweat':'\\ud83d\\ude30',\n  'comet':'\\u2604\\ufe0f',\n  'computer':'\\ud83d\\udcbb',\n  'computer_mouse':'\\ud83d\\uddb1',\n  'confetti_ball':'\\ud83c\\udf8a',\n  'confounded':'\\ud83d\\ude16',\n  'confused':'\\ud83d\\ude15',\n  'congratulations':'\\u3297\\ufe0f',\n  'construction':'\\ud83d\\udea7',\n  'construction_worker_man':'\\ud83d\\udc77',\n  'construction_worker_woman':'\\ud83d\\udc77&zwj;\\u2640\\ufe0f',\n  'control_knobs':'\\ud83c\\udf9b',\n  'convenience_store':'\\ud83c\\udfea',\n  'cookie':'\\ud83c\\udf6a',\n  'cool':'\\ud83c\\udd92',\n  'policeman':'\\ud83d\\udc6e',\n  'copyright':'\\u00a9\\ufe0f',\n  'corn':'\\ud83c\\udf3d',\n  'couch_and_lamp':'\\ud83d\\udecb',\n  'couple':'\\ud83d\\udc6b',\n  'couple_with_heart_woman_man':'\\ud83d\\udc91',\n  'couple_with_heart_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc68',\n  'couple_with_heart_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc69',\n  'couplekiss_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc68',\n  'couplekiss_man_woman':'\\ud83d\\udc8f',\n  'couplekiss_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc69',\n  'cow':'\\ud83d\\udc2e',\n  'cow2':'\\ud83d\\udc04',\n  'cowboy_hat_face':'\\ud83e\\udd20',\n  'crab':'\\ud83e\\udd80',\n  'crayon':'\\ud83d\\udd8d',\n  'credit_card':'\\ud83d\\udcb3',\n  'crescent_moon':'\\ud83c\\udf19',\n  'cricket':'\\ud83c\\udfcf',\n  'crocodile':'\\ud83d\\udc0a',\n  'croissant':'\\ud83e\\udd50',\n  'crossed_fingers':'\\ud83e\\udd1e',\n  'crossed_flags':'\\ud83c\\udf8c',\n  'crossed_swords':'\\u2694\\ufe0f',\n  'crown':'\\ud83d\\udc51',\n  'cry':'\\ud83d\\ude22',\n  'crying_cat_face':'\\ud83d\\ude3f',\n  'crystal_ball':'\\ud83d\\udd2e',\n  'cucumber':'\\ud83e\\udd52',\n  'cupid':'\\ud83d\\udc98',\n  'curly_loop':'\\u27b0',\n  'currency_exchange':'\\ud83d\\udcb1',\n  'curry':'\\ud83c\\udf5b',\n  'custard':'\\ud83c\\udf6e',\n  'customs':'\\ud83d\\udec3',\n  'cyclone':'\\ud83c\\udf00',\n  'dagger':'\\ud83d\\udde1',\n  'dancer':'\\ud83d\\udc83',\n  'dancing_women':'\\ud83d\\udc6f',\n  'dancing_men':'\\ud83d\\udc6f&zwj;\\u2642\\ufe0f',\n  'dango':'\\ud83c\\udf61',\n  'dark_sunglasses':'\\ud83d\\udd76',\n  'dart':'\\ud83c\\udfaf',\n  'dash':'\\ud83d\\udca8',\n  'date':'\\ud83d\\udcc5',\n  'deciduous_tree':'\\ud83c\\udf33',\n  'deer':'\\ud83e\\udd8c',\n  'department_store':'\\ud83c\\udfec',\n  'derelict_house':'\\ud83c\\udfda',\n  'desert':'\\ud83c\\udfdc',\n  'desert_island':'\\ud83c\\udfdd',\n  'desktop_computer':'\\ud83d\\udda5',\n  'male_detective':'\\ud83d\\udd75\\ufe0f',\n  'diamond_shape_with_a_dot_inside':'\\ud83d\\udca0',\n  'diamonds':'\\u2666\\ufe0f',\n  'disappointed':'\\ud83d\\ude1e',\n  'disappointed_relieved':'\\ud83d\\ude25',\n  'dizzy':'\\ud83d\\udcab',\n  'dizzy_face':'\\ud83d\\ude35',\n  'do_not_litter':'\\ud83d\\udeaf',\n  'dog':'\\ud83d\\udc36',\n  'dog2':'\\ud83d\\udc15',\n  'dollar':'\\ud83d\\udcb5',\n  'dolls':'\\ud83c\\udf8e',\n  'dolphin':'\\ud83d\\udc2c',\n  'door':'\\ud83d\\udeaa',\n  'doughnut':'\\ud83c\\udf69',\n  'dove':'\\ud83d\\udd4a',\n  'dragon':'\\ud83d\\udc09',\n  'dragon_face':'\\ud83d\\udc32',\n  'dress':'\\ud83d\\udc57',\n  'dromedary_camel':'\\ud83d\\udc2a',\n  'drooling_face':'\\ud83e\\udd24',\n  'droplet':'\\ud83d\\udca7',\n  'drum':'\\ud83e\\udd41',\n  'duck':'\\ud83e\\udd86',\n  'dvd':'\\ud83d\\udcc0',\n  'e-mail':'\\ud83d\\udce7',\n  'eagle':'\\ud83e\\udd85',\n  'ear':'\\ud83d\\udc42',\n  'ear_of_rice':'\\ud83c\\udf3e',\n  'earth_africa':'\\ud83c\\udf0d',\n  'earth_americas':'\\ud83c\\udf0e',\n  'earth_asia':'\\ud83c\\udf0f',\n  'egg':'\\ud83e\\udd5a',\n  'eggplant':'\\ud83c\\udf46',\n  'eight_pointed_black_star':'\\u2734\\ufe0f',\n  'eight_spoked_asterisk':'\\u2733\\ufe0f',\n  'electric_plug':'\\ud83d\\udd0c',\n  'elephant':'\\ud83d\\udc18',\n  'email':'\\u2709\\ufe0f',\n  'end':'\\ud83d\\udd1a',\n  'envelope_with_arrow':'\\ud83d\\udce9',\n  'euro':'\\ud83d\\udcb6',\n  'european_castle':'\\ud83c\\udff0',\n  'european_post_office':'\\ud83c\\udfe4',\n  'evergreen_tree':'\\ud83c\\udf32',\n  'exclamation':'\\u2757\\ufe0f',\n  'expressionless':'\\ud83d\\ude11',\n  'eye':'\\ud83d\\udc41',\n  'eye_speech_bubble':'\\ud83d\\udc41&zwj;\\ud83d\\udde8',\n  'eyeglasses':'\\ud83d\\udc53',\n  'eyes':'\\ud83d\\udc40',\n  'face_with_head_bandage':'\\ud83e\\udd15',\n  'face_with_thermometer':'\\ud83e\\udd12',\n  'fist_oncoming':'\\ud83d\\udc4a',\n  'factory':'\\ud83c\\udfed',\n  'fallen_leaf':'\\ud83c\\udf42',\n  'family_man_woman_boy':'\\ud83d\\udc6a',\n  'family_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_woman_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_man_woman_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'fast_forward':'\\u23e9',\n  'fax':'\\ud83d\\udce0',\n  'fearful':'\\ud83d\\ude28',\n  'feet':'\\ud83d\\udc3e',\n  'female_detective':'\\ud83d\\udd75\\ufe0f&zwj;\\u2640\\ufe0f',\n  'ferris_wheel':'\\ud83c\\udfa1',\n  'ferry':'\\u26f4',\n  'field_hockey':'\\ud83c\\udfd1',\n  'file_cabinet':'\\ud83d\\uddc4',\n  'file_folder':'\\ud83d\\udcc1',\n  'film_projector':'\\ud83d\\udcfd',\n  'film_strip':'\\ud83c\\udf9e',\n  'fire':'\\ud83d\\udd25',\n  'fire_engine':'\\ud83d\\ude92',\n  'fireworks':'\\ud83c\\udf86',\n  'first_quarter_moon':'\\ud83c\\udf13',\n  'first_quarter_moon_with_face':'\\ud83c\\udf1b',\n  'fish':'\\ud83d\\udc1f',\n  'fish_cake':'\\ud83c\\udf65',\n  'fishing_pole_and_fish':'\\ud83c\\udfa3',\n  'fist_raised':'\\u270a',\n  'fist_left':'\\ud83e\\udd1b',\n  'fist_right':'\\ud83e\\udd1c',\n  'flags':'\\ud83c\\udf8f',\n  'flashlight':'\\ud83d\\udd26',\n  'fleur_de_lis':'\\u269c\\ufe0f',\n  'flight_arrival':'\\ud83d\\udeec',\n  'flight_departure':'\\ud83d\\udeeb',\n  'floppy_disk':'\\ud83d\\udcbe',\n  'flower_playing_cards':'\\ud83c\\udfb4',\n  'flushed':'\\ud83d\\ude33',\n  'fog':'\\ud83c\\udf2b',\n  'foggy':'\\ud83c\\udf01',\n  'football':'\\ud83c\\udfc8',\n  'footprints':'\\ud83d\\udc63',\n  'fork_and_knife':'\\ud83c\\udf74',\n  'fountain':'\\u26f2\\ufe0f',\n  'fountain_pen':'\\ud83d\\udd8b',\n  'four_leaf_clover':'\\ud83c\\udf40',\n  'fox_face':'\\ud83e\\udd8a',\n  'framed_picture':'\\ud83d\\uddbc',\n  'free':'\\ud83c\\udd93',\n  'fried_egg':'\\ud83c\\udf73',\n  'fried_shrimp':'\\ud83c\\udf64',\n  'fries':'\\ud83c\\udf5f',\n  'frog':'\\ud83d\\udc38',\n  'frowning':'\\ud83d\\ude26',\n  'frowning_face':'\\u2639\\ufe0f',\n  'frowning_man':'\\ud83d\\ude4d&zwj;\\u2642\\ufe0f',\n  'frowning_woman':'\\ud83d\\ude4d',\n  'middle_finger':'\\ud83d\\udd95',\n  'fuelpump':'\\u26fd\\ufe0f',\n  'full_moon':'\\ud83c\\udf15',\n  'full_moon_with_face':'\\ud83c\\udf1d',\n  'funeral_urn':'\\u26b1\\ufe0f',\n  'game_die':'\\ud83c\\udfb2',\n  'gear':'\\u2699\\ufe0f',\n  'gem':'\\ud83d\\udc8e',\n  'gemini':'\\u264a\\ufe0f',\n  'ghost':'\\ud83d\\udc7b',\n  'gift':'\\ud83c\\udf81',\n  'gift_heart':'\\ud83d\\udc9d',\n  'girl':'\\ud83d\\udc67',\n  'globe_with_meridians':'\\ud83c\\udf10',\n  'goal_net':'\\ud83e\\udd45',\n  'goat':'\\ud83d\\udc10',\n  'golf':'\\u26f3\\ufe0f',\n  'golfing_man':'\\ud83c\\udfcc\\ufe0f',\n  'golfing_woman':'\\ud83c\\udfcc\\ufe0f&zwj;\\u2640\\ufe0f',\n  'gorilla':'\\ud83e\\udd8d',\n  'grapes':'\\ud83c\\udf47',\n  'green_apple':'\\ud83c\\udf4f',\n  'green_book':'\\ud83d\\udcd7',\n  'green_heart':'\\ud83d\\udc9a',\n  'green_salad':'\\ud83e\\udd57',\n  'grey_exclamation':'\\u2755',\n  'grey_question':'\\u2754',\n  'grimacing':'\\ud83d\\ude2c',\n  'grin':'\\ud83d\\ude01',\n  'grinning':'\\ud83d\\ude00',\n  'guardsman':'\\ud83d\\udc82',\n  'guardswoman':'\\ud83d\\udc82&zwj;\\u2640\\ufe0f',\n  'guitar':'\\ud83c\\udfb8',\n  'gun':'\\ud83d\\udd2b',\n  'haircut_woman':'\\ud83d\\udc87',\n  'haircut_man':'\\ud83d\\udc87&zwj;\\u2642\\ufe0f',\n  'hamburger':'\\ud83c\\udf54',\n  'hammer':'\\ud83d\\udd28',\n  'hammer_and_pick':'\\u2692',\n  'hammer_and_wrench':'\\ud83d\\udee0',\n  'hamster':'\\ud83d\\udc39',\n  'hand':'\\u270b',\n  'handbag':'\\ud83d\\udc5c',\n  'handshake':'\\ud83e\\udd1d',\n  'hankey':'\\ud83d\\udca9',\n  'hatched_chick':'\\ud83d\\udc25',\n  'hatching_chick':'\\ud83d\\udc23',\n  'headphones':'\\ud83c\\udfa7',\n  'hear_no_evil':'\\ud83d\\ude49',\n  'heart':'\\u2764\\ufe0f',\n  'heart_decoration':'\\ud83d\\udc9f',\n  'heart_eyes':'\\ud83d\\ude0d',\n  'heart_eyes_cat':'\\ud83d\\ude3b',\n  'heartbeat':'\\ud83d\\udc93',\n  'heartpulse':'\\ud83d\\udc97',\n  'hearts':'\\u2665\\ufe0f',\n  'heavy_check_mark':'\\u2714\\ufe0f',\n  'heavy_division_sign':'\\u2797',\n  'heavy_dollar_sign':'\\ud83d\\udcb2',\n  'heavy_heart_exclamation':'\\u2763\\ufe0f',\n  'heavy_minus_sign':'\\u2796',\n  'heavy_multiplication_x':'\\u2716\\ufe0f',\n  'heavy_plus_sign':'\\u2795',\n  'helicopter':'\\ud83d\\ude81',\n  'herb':'\\ud83c\\udf3f',\n  'hibiscus':'\\ud83c\\udf3a',\n  'high_brightness':'\\ud83d\\udd06',\n  'high_heel':'\\ud83d\\udc60',\n  'hocho':'\\ud83d\\udd2a',\n  'hole':'\\ud83d\\udd73',\n  'honey_pot':'\\ud83c\\udf6f',\n  'horse':'\\ud83d\\udc34',\n  'horse_racing':'\\ud83c\\udfc7',\n  'hospital':'\\ud83c\\udfe5',\n  'hot_pepper':'\\ud83c\\udf36',\n  'hotdog':'\\ud83c\\udf2d',\n  'hotel':'\\ud83c\\udfe8',\n  'hotsprings':'\\u2668\\ufe0f',\n  'hourglass':'\\u231b\\ufe0f',\n  'hourglass_flowing_sand':'\\u23f3',\n  'house':'\\ud83c\\udfe0',\n  'house_with_garden':'\\ud83c\\udfe1',\n  'houses':'\\ud83c\\udfd8',\n  'hugs':'\\ud83e\\udd17',\n  'hushed':'\\ud83d\\ude2f',\n  'ice_cream':'\\ud83c\\udf68',\n  'ice_hockey':'\\ud83c\\udfd2',\n  'ice_skate':'\\u26f8',\n  'icecream':'\\ud83c\\udf66',\n  'id':'\\ud83c\\udd94',\n  'ideograph_advantage':'\\ud83c\\ude50',\n  'imp':'\\ud83d\\udc7f',\n  'inbox_tray':'\\ud83d\\udce5',\n  'incoming_envelope':'\\ud83d\\udce8',\n  'tipping_hand_woman':'\\ud83d\\udc81',\n  'information_source':'\\u2139\\ufe0f',\n  'innocent':'\\ud83d\\ude07',\n  'interrobang':'\\u2049\\ufe0f',\n  'iphone':'\\ud83d\\udcf1',\n  'izakaya_lantern':'\\ud83c\\udfee',\n  'jack_o_lantern':'\\ud83c\\udf83',\n  'japan':'\\ud83d\\uddfe',\n  'japanese_castle':'\\ud83c\\udfef',\n  'japanese_goblin':'\\ud83d\\udc7a',\n  'japanese_ogre':'\\ud83d\\udc79',\n  'jeans':'\\ud83d\\udc56',\n  'joy':'\\ud83d\\ude02',\n  'joy_cat':'\\ud83d\\ude39',\n  'joystick':'\\ud83d\\udd79',\n  'kaaba':'\\ud83d\\udd4b',\n  'key':'\\ud83d\\udd11',\n  'keyboard':'\\u2328\\ufe0f',\n  'keycap_ten':'\\ud83d\\udd1f',\n  'kick_scooter':'\\ud83d\\udef4',\n  'kimono':'\\ud83d\\udc58',\n  'kiss':'\\ud83d\\udc8b',\n  'kissing':'\\ud83d\\ude17',\n  'kissing_cat':'\\ud83d\\ude3d',\n  'kissing_closed_eyes':'\\ud83d\\ude1a',\n  'kissing_heart':'\\ud83d\\ude18',\n  'kissing_smiling_eyes':'\\ud83d\\ude19',\n  'kiwi_fruit':'\\ud83e\\udd5d',\n  'koala':'\\ud83d\\udc28',\n  'koko':'\\ud83c\\ude01',\n  'label':'\\ud83c\\udff7',\n  'large_blue_circle':'\\ud83d\\udd35',\n  'large_blue_diamond':'\\ud83d\\udd37',\n  'large_orange_diamond':'\\ud83d\\udd36',\n  'last_quarter_moon':'\\ud83c\\udf17',\n  'last_quarter_moon_with_face':'\\ud83c\\udf1c',\n  'latin_cross':'\\u271d\\ufe0f',\n  'laughing':'\\ud83d\\ude06',\n  'leaves':'\\ud83c\\udf43',\n  'ledger':'\\ud83d\\udcd2',\n  'left_luggage':'\\ud83d\\udec5',\n  'left_right_arrow':'\\u2194\\ufe0f',\n  'leftwards_arrow_with_hook':'\\u21a9\\ufe0f',\n  'lemon':'\\ud83c\\udf4b',\n  'leo':'\\u264c\\ufe0f',\n  'leopard':'\\ud83d\\udc06',\n  'level_slider':'\\ud83c\\udf9a',\n  'libra':'\\u264e\\ufe0f',\n  'light_rail':'\\ud83d\\ude88',\n  'link':'\\ud83d\\udd17',\n  'lion':'\\ud83e\\udd81',\n  'lips':'\\ud83d\\udc44',\n  'lipstick':'\\ud83d\\udc84',\n  'lizard':'\\ud83e\\udd8e',\n  'lock':'\\ud83d\\udd12',\n  'lock_with_ink_pen':'\\ud83d\\udd0f',\n  'lollipop':'\\ud83c\\udf6d',\n  'loop':'\\u27bf',\n  'loud_sound':'\\ud83d\\udd0a',\n  'loudspeaker':'\\ud83d\\udce2',\n  'love_hotel':'\\ud83c\\udfe9',\n  'love_letter':'\\ud83d\\udc8c',\n  'low_brightness':'\\ud83d\\udd05',\n  'lying_face':'\\ud83e\\udd25',\n  'm':'\\u24c2\\ufe0f',\n  'mag':'\\ud83d\\udd0d',\n  'mag_right':'\\ud83d\\udd0e',\n  'mahjong':'\\ud83c\\udc04\\ufe0f',\n  'mailbox':'\\ud83d\\udceb',\n  'mailbox_closed':'\\ud83d\\udcea',\n  'mailbox_with_mail':'\\ud83d\\udcec',\n  'mailbox_with_no_mail':'\\ud83d\\udced',\n  'man':'\\ud83d\\udc68',\n  'man_artist':'\\ud83d\\udc68&zwj;\\ud83c\\udfa8',\n  'man_astronaut':'\\ud83d\\udc68&zwj;\\ud83d\\ude80',\n  'man_cartwheeling':'\\ud83e\\udd38&zwj;\\u2642\\ufe0f',\n  'man_cook':'\\ud83d\\udc68&zwj;\\ud83c\\udf73',\n  'man_dancing':'\\ud83d\\udd7a',\n  'man_facepalming':'\\ud83e\\udd26&zwj;\\u2642\\ufe0f',\n  'man_factory_worker':'\\ud83d\\udc68&zwj;\\ud83c\\udfed',\n  'man_farmer':'\\ud83d\\udc68&zwj;\\ud83c\\udf3e',\n  'man_firefighter':'\\ud83d\\udc68&zwj;\\ud83d\\ude92',\n  'man_health_worker':'\\ud83d\\udc68&zwj;\\u2695\\ufe0f',\n  'man_in_tuxedo':'\\ud83e\\udd35',\n  'man_judge':'\\ud83d\\udc68&zwj;\\u2696\\ufe0f',\n  'man_juggling':'\\ud83e\\udd39&zwj;\\u2642\\ufe0f',\n  'man_mechanic':'\\ud83d\\udc68&zwj;\\ud83d\\udd27',\n  'man_office_worker':'\\ud83d\\udc68&zwj;\\ud83d\\udcbc',\n  'man_pilot':'\\ud83d\\udc68&zwj;\\u2708\\ufe0f',\n  'man_playing_handball':'\\ud83e\\udd3e&zwj;\\u2642\\ufe0f',\n  'man_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2642\\ufe0f',\n  'man_scientist':'\\ud83d\\udc68&zwj;\\ud83d\\udd2c',\n  'man_shrugging':'\\ud83e\\udd37&zwj;\\u2642\\ufe0f',\n  'man_singer':'\\ud83d\\udc68&zwj;\\ud83c\\udfa4',\n  'man_student':'\\ud83d\\udc68&zwj;\\ud83c\\udf93',\n  'man_teacher':'\\ud83d\\udc68&zwj;\\ud83c\\udfeb',\n  'man_technologist':'\\ud83d\\udc68&zwj;\\ud83d\\udcbb',\n  'man_with_gua_pi_mao':'\\ud83d\\udc72',\n  'man_with_turban':'\\ud83d\\udc73',\n  'tangerine':'\\ud83c\\udf4a',\n  'mans_shoe':'\\ud83d\\udc5e',\n  'mantelpiece_clock':'\\ud83d\\udd70',\n  'maple_leaf':'\\ud83c\\udf41',\n  'martial_arts_uniform':'\\ud83e\\udd4b',\n  'mask':'\\ud83d\\ude37',\n  'massage_woman':'\\ud83d\\udc86',\n  'massage_man':'\\ud83d\\udc86&zwj;\\u2642\\ufe0f',\n  'meat_on_bone':'\\ud83c\\udf56',\n  'medal_military':'\\ud83c\\udf96',\n  'medal_sports':'\\ud83c\\udfc5',\n  'mega':'\\ud83d\\udce3',\n  'melon':'\\ud83c\\udf48',\n  'memo':'\\ud83d\\udcdd',\n  'men_wrestling':'\\ud83e\\udd3c&zwj;\\u2642\\ufe0f',\n  'menorah':'\\ud83d\\udd4e',\n  'mens':'\\ud83d\\udeb9',\n  'metal':'\\ud83e\\udd18',\n  'metro':'\\ud83d\\ude87',\n  'microphone':'\\ud83c\\udfa4',\n  'microscope':'\\ud83d\\udd2c',\n  'milk_glass':'\\ud83e\\udd5b',\n  'milky_way':'\\ud83c\\udf0c',\n  'minibus':'\\ud83d\\ude90',\n  'minidisc':'\\ud83d\\udcbd',\n  'mobile_phone_off':'\\ud83d\\udcf4',\n  'money_mouth_face':'\\ud83e\\udd11',\n  'money_with_wings':'\\ud83d\\udcb8',\n  'moneybag':'\\ud83d\\udcb0',\n  'monkey':'\\ud83d\\udc12',\n  'monkey_face':'\\ud83d\\udc35',\n  'monorail':'\\ud83d\\ude9d',\n  'moon':'\\ud83c\\udf14',\n  'mortar_board':'\\ud83c\\udf93',\n  'mosque':'\\ud83d\\udd4c',\n  'motor_boat':'\\ud83d\\udee5',\n  'motor_scooter':'\\ud83d\\udef5',\n  'motorcycle':'\\ud83c\\udfcd',\n  'motorway':'\\ud83d\\udee3',\n  'mount_fuji':'\\ud83d\\uddfb',\n  'mountain':'\\u26f0',\n  'mountain_biking_man':'\\ud83d\\udeb5',\n  'mountain_biking_woman':'\\ud83d\\udeb5&zwj;\\u2640\\ufe0f',\n  'mountain_cableway':'\\ud83d\\udea0',\n  'mountain_railway':'\\ud83d\\ude9e',\n  'mountain_snow':'\\ud83c\\udfd4',\n  'mouse':'\\ud83d\\udc2d',\n  'mouse2':'\\ud83d\\udc01',\n  'movie_camera':'\\ud83c\\udfa5',\n  'moyai':'\\ud83d\\uddff',\n  'mrs_claus':'\\ud83e\\udd36',\n  'muscle':'\\ud83d\\udcaa',\n  'mushroom':'\\ud83c\\udf44',\n  'musical_keyboard':'\\ud83c\\udfb9',\n  'musical_note':'\\ud83c\\udfb5',\n  'musical_score':'\\ud83c\\udfbc',\n  'mute':'\\ud83d\\udd07',\n  'nail_care':'\\ud83d\\udc85',\n  'name_badge':'\\ud83d\\udcdb',\n  'national_park':'\\ud83c\\udfde',\n  'nauseated_face':'\\ud83e\\udd22',\n  'necktie':'\\ud83d\\udc54',\n  'negative_squared_cross_mark':'\\u274e',\n  'nerd_face':'\\ud83e\\udd13',\n  'neutral_face':'\\ud83d\\ude10',\n  'new':'\\ud83c\\udd95',\n  'new_moon':'\\ud83c\\udf11',\n  'new_moon_with_face':'\\ud83c\\udf1a',\n  'newspaper':'\\ud83d\\udcf0',\n  'newspaper_roll':'\\ud83d\\uddde',\n  'next_track_button':'\\u23ed',\n  'ng':'\\ud83c\\udd96',\n  'no_good_man':'\\ud83d\\ude45&zwj;\\u2642\\ufe0f',\n  'no_good_woman':'\\ud83d\\ude45',\n  'night_with_stars':'\\ud83c\\udf03',\n  'no_bell':'\\ud83d\\udd15',\n  'no_bicycles':'\\ud83d\\udeb3',\n  'no_entry':'\\u26d4\\ufe0f',\n  'no_entry_sign':'\\ud83d\\udeab',\n  'no_mobile_phones':'\\ud83d\\udcf5',\n  'no_mouth':'\\ud83d\\ude36',\n  'no_pedestrians':'\\ud83d\\udeb7',\n  'no_smoking':'\\ud83d\\udead',\n  'non-potable_water':'\\ud83d\\udeb1',\n  'nose':'\\ud83d\\udc43',\n  'notebook':'\\ud83d\\udcd3',\n  'notebook_with_decorative_cover':'\\ud83d\\udcd4',\n  'notes':'\\ud83c\\udfb6',\n  'nut_and_bolt':'\\ud83d\\udd29',\n  'o':'\\u2b55\\ufe0f',\n  'o2':'\\ud83c\\udd7e\\ufe0f',\n  'ocean':'\\ud83c\\udf0a',\n  'octopus':'\\ud83d\\udc19',\n  'oden':'\\ud83c\\udf62',\n  'office':'\\ud83c\\udfe2',\n  'oil_drum':'\\ud83d\\udee2',\n  'ok':'\\ud83c\\udd97',\n  'ok_hand':'\\ud83d\\udc4c',\n  'ok_man':'\\ud83d\\ude46&zwj;\\u2642\\ufe0f',\n  'ok_woman':'\\ud83d\\ude46',\n  'old_key':'\\ud83d\\udddd',\n  'older_man':'\\ud83d\\udc74',\n  'older_woman':'\\ud83d\\udc75',\n  'om':'\\ud83d\\udd49',\n  'on':'\\ud83d\\udd1b',\n  'oncoming_automobile':'\\ud83d\\ude98',\n  'oncoming_bus':'\\ud83d\\ude8d',\n  'oncoming_police_car':'\\ud83d\\ude94',\n  'oncoming_taxi':'\\ud83d\\ude96',\n  'open_file_folder':'\\ud83d\\udcc2',\n  'open_hands':'\\ud83d\\udc50',\n  'open_mouth':'\\ud83d\\ude2e',\n  'open_umbrella':'\\u2602\\ufe0f',\n  'ophiuchus':'\\u26ce',\n  'orange_book':'\\ud83d\\udcd9',\n  'orthodox_cross':'\\u2626\\ufe0f',\n  'outbox_tray':'\\ud83d\\udce4',\n  'owl':'\\ud83e\\udd89',\n  'ox':'\\ud83d\\udc02',\n  'package':'\\ud83d\\udce6',\n  'page_facing_up':'\\ud83d\\udcc4',\n  'page_with_curl':'\\ud83d\\udcc3',\n  'pager':'\\ud83d\\udcdf',\n  'paintbrush':'\\ud83d\\udd8c',\n  'palm_tree':'\\ud83c\\udf34',\n  'pancakes':'\\ud83e\\udd5e',\n  'panda_face':'\\ud83d\\udc3c',\n  'paperclip':'\\ud83d\\udcce',\n  'paperclips':'\\ud83d\\udd87',\n  'parasol_on_ground':'\\u26f1',\n  'parking':'\\ud83c\\udd7f\\ufe0f',\n  'part_alternation_mark':'\\u303d\\ufe0f',\n  'partly_sunny':'\\u26c5\\ufe0f',\n  'passenger_ship':'\\ud83d\\udef3',\n  'passport_control':'\\ud83d\\udec2',\n  'pause_button':'\\u23f8',\n  'peace_symbol':'\\u262e\\ufe0f',\n  'peach':'\\ud83c\\udf51',\n  'peanuts':'\\ud83e\\udd5c',\n  'pear':'\\ud83c\\udf50',\n  'pen':'\\ud83d\\udd8a',\n  'pencil2':'\\u270f\\ufe0f',\n  'penguin':'\\ud83d\\udc27',\n  'pensive':'\\ud83d\\ude14',\n  'performing_arts':'\\ud83c\\udfad',\n  'persevere':'\\ud83d\\ude23',\n  'person_fencing':'\\ud83e\\udd3a',\n  'pouting_woman':'\\ud83d\\ude4e',\n  'phone':'\\u260e\\ufe0f',\n  'pick':'\\u26cf',\n  'pig':'\\ud83d\\udc37',\n  'pig2':'\\ud83d\\udc16',\n  'pig_nose':'\\ud83d\\udc3d',\n  'pill':'\\ud83d\\udc8a',\n  'pineapple':'\\ud83c\\udf4d',\n  'ping_pong':'\\ud83c\\udfd3',\n  'pisces':'\\u2653\\ufe0f',\n  'pizza':'\\ud83c\\udf55',\n  'place_of_worship':'\\ud83d\\uded0',\n  'plate_with_cutlery':'\\ud83c\\udf7d',\n  'play_or_pause_button':'\\u23ef',\n  'point_down':'\\ud83d\\udc47',\n  'point_left':'\\ud83d\\udc48',\n  'point_right':'\\ud83d\\udc49',\n  'point_up':'\\u261d\\ufe0f',\n  'point_up_2':'\\ud83d\\udc46',\n  'police_car':'\\ud83d\\ude93',\n  'policewoman':'\\ud83d\\udc6e&zwj;\\u2640\\ufe0f',\n  'poodle':'\\ud83d\\udc29',\n  'popcorn':'\\ud83c\\udf7f',\n  'post_office':'\\ud83c\\udfe3',\n  'postal_horn':'\\ud83d\\udcef',\n  'postbox':'\\ud83d\\udcee',\n  'potable_water':'\\ud83d\\udeb0',\n  'potato':'\\ud83e\\udd54',\n  'pouch':'\\ud83d\\udc5d',\n  'poultry_leg':'\\ud83c\\udf57',\n  'pound':'\\ud83d\\udcb7',\n  'rage':'\\ud83d\\ude21',\n  'pouting_cat':'\\ud83d\\ude3e',\n  'pouting_man':'\\ud83d\\ude4e&zwj;\\u2642\\ufe0f',\n  'pray':'\\ud83d\\ude4f',\n  'prayer_beads':'\\ud83d\\udcff',\n  'pregnant_woman':'\\ud83e\\udd30',\n  'previous_track_button':'\\u23ee',\n  'prince':'\\ud83e\\udd34',\n  'princess':'\\ud83d\\udc78',\n  'printer':'\\ud83d\\udda8',\n  'purple_heart':'\\ud83d\\udc9c',\n  'purse':'\\ud83d\\udc5b',\n  'pushpin':'\\ud83d\\udccc',\n  'put_litter_in_its_place':'\\ud83d\\udeae',\n  'question':'\\u2753',\n  'rabbit':'\\ud83d\\udc30',\n  'rabbit2':'\\ud83d\\udc07',\n  'racehorse':'\\ud83d\\udc0e',\n  'racing_car':'\\ud83c\\udfce',\n  'radio':'\\ud83d\\udcfb',\n  'radio_button':'\\ud83d\\udd18',\n  'radioactive':'\\u2622\\ufe0f',\n  'railway_car':'\\ud83d\\ude83',\n  'railway_track':'\\ud83d\\udee4',\n  'rainbow':'\\ud83c\\udf08',\n  'rainbow_flag':'\\ud83c\\udff3\\ufe0f&zwj;\\ud83c\\udf08',\n  'raised_back_of_hand':'\\ud83e\\udd1a',\n  'raised_hand_with_fingers_splayed':'\\ud83d\\udd90',\n  'raised_hands':'\\ud83d\\ude4c',\n  'raising_hand_woman':'\\ud83d\\ude4b',\n  'raising_hand_man':'\\ud83d\\ude4b&zwj;\\u2642\\ufe0f',\n  'ram':'\\ud83d\\udc0f',\n  'ramen':'\\ud83c\\udf5c',\n  'rat':'\\ud83d\\udc00',\n  'record_button':'\\u23fa',\n  'recycle':'\\u267b\\ufe0f',\n  'red_circle':'\\ud83d\\udd34',\n  'registered':'\\u00ae\\ufe0f',\n  'relaxed':'\\u263a\\ufe0f',\n  'relieved':'\\ud83d\\ude0c',\n  'reminder_ribbon':'\\ud83c\\udf97',\n  'repeat':'\\ud83d\\udd01',\n  'repeat_one':'\\ud83d\\udd02',\n  'rescue_worker_helmet':'\\u26d1',\n  'restroom':'\\ud83d\\udebb',\n  'revolving_hearts':'\\ud83d\\udc9e',\n  'rewind':'\\u23ea',\n  'rhinoceros':'\\ud83e\\udd8f',\n  'ribbon':'\\ud83c\\udf80',\n  'rice':'\\ud83c\\udf5a',\n  'rice_ball':'\\ud83c\\udf59',\n  'rice_cracker':'\\ud83c\\udf58',\n  'rice_scene':'\\ud83c\\udf91',\n  'right_anger_bubble':'\\ud83d\\uddef',\n  'ring':'\\ud83d\\udc8d',\n  'robot':'\\ud83e\\udd16',\n  'rocket':'\\ud83d\\ude80',\n  'rofl':'\\ud83e\\udd23',\n  'roll_eyes':'\\ud83d\\ude44',\n  'roller_coaster':'\\ud83c\\udfa2',\n  'rooster':'\\ud83d\\udc13',\n  'rose':'\\ud83c\\udf39',\n  'rosette':'\\ud83c\\udff5',\n  'rotating_light':'\\ud83d\\udea8',\n  'round_pushpin':'\\ud83d\\udccd',\n  'rowing_man':'\\ud83d\\udea3',\n  'rowing_woman':'\\ud83d\\udea3&zwj;\\u2640\\ufe0f',\n  'rugby_football':'\\ud83c\\udfc9',\n  'running_man':'\\ud83c\\udfc3',\n  'running_shirt_with_sash':'\\ud83c\\udfbd',\n  'running_woman':'\\ud83c\\udfc3&zwj;\\u2640\\ufe0f',\n  'sa':'\\ud83c\\ude02\\ufe0f',\n  'sagittarius':'\\u2650\\ufe0f',\n  'sake':'\\ud83c\\udf76',\n  'sandal':'\\ud83d\\udc61',\n  'santa':'\\ud83c\\udf85',\n  'satellite':'\\ud83d\\udce1',\n  'saxophone':'\\ud83c\\udfb7',\n  'school':'\\ud83c\\udfeb',\n  'school_satchel':'\\ud83c\\udf92',\n  'scissors':'\\u2702\\ufe0f',\n  'scorpion':'\\ud83e\\udd82',\n  'scorpius':'\\u264f\\ufe0f',\n  'scream':'\\ud83d\\ude31',\n  'scream_cat':'\\ud83d\\ude40',\n  'scroll':'\\ud83d\\udcdc',\n  'seat':'\\ud83d\\udcba',\n  'secret':'\\u3299\\ufe0f',\n  'see_no_evil':'\\ud83d\\ude48',\n  'seedling':'\\ud83c\\udf31',\n  'selfie':'\\ud83e\\udd33',\n  'shallow_pan_of_food':'\\ud83e\\udd58',\n  'shamrock':'\\u2618\\ufe0f',\n  'shark':'\\ud83e\\udd88',\n  'shaved_ice':'\\ud83c\\udf67',\n  'sheep':'\\ud83d\\udc11',\n  'shell':'\\ud83d\\udc1a',\n  'shield':'\\ud83d\\udee1',\n  'shinto_shrine':'\\u26e9',\n  'ship':'\\ud83d\\udea2',\n  'shirt':'\\ud83d\\udc55',\n  'shopping':'\\ud83d\\udecd',\n  'shopping_cart':'\\ud83d\\uded2',\n  'shower':'\\ud83d\\udebf',\n  'shrimp':'\\ud83e\\udd90',\n  'signal_strength':'\\ud83d\\udcf6',\n  'six_pointed_star':'\\ud83d\\udd2f',\n  'ski':'\\ud83c\\udfbf',\n  'skier':'\\u26f7',\n  'skull':'\\ud83d\\udc80',\n  'skull_and_crossbones':'\\u2620\\ufe0f',\n  'sleeping':'\\ud83d\\ude34',\n  'sleeping_bed':'\\ud83d\\udecc',\n  'sleepy':'\\ud83d\\ude2a',\n  'slightly_frowning_face':'\\ud83d\\ude41',\n  'slightly_smiling_face':'\\ud83d\\ude42',\n  'slot_machine':'\\ud83c\\udfb0',\n  'small_airplane':'\\ud83d\\udee9',\n  'small_blue_diamond':'\\ud83d\\udd39',\n  'small_orange_diamond':'\\ud83d\\udd38',\n  'small_red_triangle':'\\ud83d\\udd3a',\n  'small_red_triangle_down':'\\ud83d\\udd3b',\n  'smile':'\\ud83d\\ude04',\n  'smile_cat':'\\ud83d\\ude38',\n  'smiley':'\\ud83d\\ude03',\n  'smiley_cat':'\\ud83d\\ude3a',\n  'smiling_imp':'\\ud83d\\ude08',\n  'smirk':'\\ud83d\\ude0f',\n  'smirk_cat':'\\ud83d\\ude3c',\n  'smoking':'\\ud83d\\udeac',\n  'snail':'\\ud83d\\udc0c',\n  'snake':'\\ud83d\\udc0d',\n  'sneezing_face':'\\ud83e\\udd27',\n  'snowboarder':'\\ud83c\\udfc2',\n  'snowflake':'\\u2744\\ufe0f',\n  'snowman':'\\u26c4\\ufe0f',\n  'snowman_with_snow':'\\u2603\\ufe0f',\n  'sob':'\\ud83d\\ude2d',\n  'soccer':'\\u26bd\\ufe0f',\n  'soon':'\\ud83d\\udd1c',\n  'sos':'\\ud83c\\udd98',\n  'sound':'\\ud83d\\udd09',\n  'space_invader':'\\ud83d\\udc7e',\n  'spades':'\\u2660\\ufe0f',\n  'spaghetti':'\\ud83c\\udf5d',\n  'sparkle':'\\u2747\\ufe0f',\n  'sparkler':'\\ud83c\\udf87',\n  'sparkles':'\\u2728',\n  'sparkling_heart':'\\ud83d\\udc96',\n  'speak_no_evil':'\\ud83d\\ude4a',\n  'speaker':'\\ud83d\\udd08',\n  'speaking_head':'\\ud83d\\udde3',\n  'speech_balloon':'\\ud83d\\udcac',\n  'speedboat':'\\ud83d\\udea4',\n  'spider':'\\ud83d\\udd77',\n  'spider_web':'\\ud83d\\udd78',\n  'spiral_calendar':'\\ud83d\\uddd3',\n  'spiral_notepad':'\\ud83d\\uddd2',\n  'spoon':'\\ud83e\\udd44',\n  'squid':'\\ud83e\\udd91',\n  'stadium':'\\ud83c\\udfdf',\n  'star':'\\u2b50\\ufe0f',\n  'star2':'\\ud83c\\udf1f',\n  'star_and_crescent':'\\u262a\\ufe0f',\n  'star_of_david':'\\u2721\\ufe0f',\n  'stars':'\\ud83c\\udf20',\n  'station':'\\ud83d\\ude89',\n  'statue_of_liberty':'\\ud83d\\uddfd',\n  'steam_locomotive':'\\ud83d\\ude82',\n  'stew':'\\ud83c\\udf72',\n  'stop_button':'\\u23f9',\n  'stop_sign':'\\ud83d\\uded1',\n  'stopwatch':'\\u23f1',\n  'straight_ruler':'\\ud83d\\udccf',\n  'strawberry':'\\ud83c\\udf53',\n  'stuck_out_tongue':'\\ud83d\\ude1b',\n  'stuck_out_tongue_closed_eyes':'\\ud83d\\ude1d',\n  'stuck_out_tongue_winking_eye':'\\ud83d\\ude1c',\n  'studio_microphone':'\\ud83c\\udf99',\n  'stuffed_flatbread':'\\ud83e\\udd59',\n  'sun_behind_large_cloud':'\\ud83c\\udf25',\n  'sun_behind_rain_cloud':'\\ud83c\\udf26',\n  'sun_behind_small_cloud':'\\ud83c\\udf24',\n  'sun_with_face':'\\ud83c\\udf1e',\n  'sunflower':'\\ud83c\\udf3b',\n  'sunglasses':'\\ud83d\\ude0e',\n  'sunny':'\\u2600\\ufe0f',\n  'sunrise':'\\ud83c\\udf05',\n  'sunrise_over_mountains':'\\ud83c\\udf04',\n  'surfing_man':'\\ud83c\\udfc4',\n  'surfing_woman':'\\ud83c\\udfc4&zwj;\\u2640\\ufe0f',\n  'sushi':'\\ud83c\\udf63',\n  'suspension_railway':'\\ud83d\\ude9f',\n  'sweat':'\\ud83d\\ude13',\n  'sweat_drops':'\\ud83d\\udca6',\n  'sweat_smile':'\\ud83d\\ude05',\n  'sweet_potato':'\\ud83c\\udf60',\n  'swimming_man':'\\ud83c\\udfca',\n  'swimming_woman':'\\ud83c\\udfca&zwj;\\u2640\\ufe0f',\n  'symbols':'\\ud83d\\udd23',\n  'synagogue':'\\ud83d\\udd4d',\n  'syringe':'\\ud83d\\udc89',\n  'taco':'\\ud83c\\udf2e',\n  'tada':'\\ud83c\\udf89',\n  'tanabata_tree':'\\ud83c\\udf8b',\n  'taurus':'\\u2649\\ufe0f',\n  'taxi':'\\ud83d\\ude95',\n  'tea':'\\ud83c\\udf75',\n  'telephone_receiver':'\\ud83d\\udcde',\n  'telescope':'\\ud83d\\udd2d',\n  'tennis':'\\ud83c\\udfbe',\n  'tent':'\\u26fa\\ufe0f',\n  'thermometer':'\\ud83c\\udf21',\n  'thinking':'\\ud83e\\udd14',\n  'thought_balloon':'\\ud83d\\udcad',\n  'ticket':'\\ud83c\\udfab',\n  'tickets':'\\ud83c\\udf9f',\n  'tiger':'\\ud83d\\udc2f',\n  'tiger2':'\\ud83d\\udc05',\n  'timer_clock':'\\u23f2',\n  'tipping_hand_man':'\\ud83d\\udc81&zwj;\\u2642\\ufe0f',\n  'tired_face':'\\ud83d\\ude2b',\n  'tm':'\\u2122\\ufe0f',\n  'toilet':'\\ud83d\\udebd',\n  'tokyo_tower':'\\ud83d\\uddfc',\n  'tomato':'\\ud83c\\udf45',\n  'tongue':'\\ud83d\\udc45',\n  'top':'\\ud83d\\udd1d',\n  'tophat':'\\ud83c\\udfa9',\n  'tornado':'\\ud83c\\udf2a',\n  'trackball':'\\ud83d\\uddb2',\n  'tractor':'\\ud83d\\ude9c',\n  'traffic_light':'\\ud83d\\udea5',\n  'train':'\\ud83d\\ude8b',\n  'train2':'\\ud83d\\ude86',\n  'tram':'\\ud83d\\ude8a',\n  'triangular_flag_on_post':'\\ud83d\\udea9',\n  'triangular_ruler':'\\ud83d\\udcd0',\n  'trident':'\\ud83d\\udd31',\n  'triumph':'\\ud83d\\ude24',\n  'trolleybus':'\\ud83d\\ude8e',\n  'trophy':'\\ud83c\\udfc6',\n  'tropical_drink':'\\ud83c\\udf79',\n  'tropical_fish':'\\ud83d\\udc20',\n  'truck':'\\ud83d\\ude9a',\n  'trumpet':'\\ud83c\\udfba',\n  'tulip':'\\ud83c\\udf37',\n  'tumbler_glass':'\\ud83e\\udd43',\n  'turkey':'\\ud83e\\udd83',\n  'turtle':'\\ud83d\\udc22',\n  'tv':'\\ud83d\\udcfa',\n  'twisted_rightwards_arrows':'\\ud83d\\udd00',\n  'two_hearts':'\\ud83d\\udc95',\n  'two_men_holding_hands':'\\ud83d\\udc6c',\n  'two_women_holding_hands':'\\ud83d\\udc6d',\n  'u5272':'\\ud83c\\ude39',\n  'u5408':'\\ud83c\\ude34',\n  'u55b6':'\\ud83c\\ude3a',\n  'u6307':'\\ud83c\\ude2f\\ufe0f',\n  'u6708':'\\ud83c\\ude37\\ufe0f',\n  'u6709':'\\ud83c\\ude36',\n  'u6e80':'\\ud83c\\ude35',\n  'u7121':'\\ud83c\\ude1a\\ufe0f',\n  'u7533':'\\ud83c\\ude38',\n  'u7981':'\\ud83c\\ude32',\n  'u7a7a':'\\ud83c\\ude33',\n  'umbrella':'\\u2614\\ufe0f',\n  'unamused':'\\ud83d\\ude12',\n  'underage':'\\ud83d\\udd1e',\n  'unicorn':'\\ud83e\\udd84',\n  'unlock':'\\ud83d\\udd13',\n  'up':'\\ud83c\\udd99',\n  'upside_down_face':'\\ud83d\\ude43',\n  'v':'\\u270c\\ufe0f',\n  'vertical_traffic_light':'\\ud83d\\udea6',\n  'vhs':'\\ud83d\\udcfc',\n  'vibration_mode':'\\ud83d\\udcf3',\n  'video_camera':'\\ud83d\\udcf9',\n  'video_game':'\\ud83c\\udfae',\n  'violin':'\\ud83c\\udfbb',\n  'virgo':'\\u264d\\ufe0f',\n  'volcano':'\\ud83c\\udf0b',\n  'volleyball':'\\ud83c\\udfd0',\n  'vs':'\\ud83c\\udd9a',\n  'vulcan_salute':'\\ud83d\\udd96',\n  'walking_man':'\\ud83d\\udeb6',\n  'walking_woman':'\\ud83d\\udeb6&zwj;\\u2640\\ufe0f',\n  'waning_crescent_moon':'\\ud83c\\udf18',\n  'waning_gibbous_moon':'\\ud83c\\udf16',\n  'warning':'\\u26a0\\ufe0f',\n  'wastebasket':'\\ud83d\\uddd1',\n  'watch':'\\u231a\\ufe0f',\n  'water_buffalo':'\\ud83d\\udc03',\n  'watermelon':'\\ud83c\\udf49',\n  'wave':'\\ud83d\\udc4b',\n  'wavy_dash':'\\u3030\\ufe0f',\n  'waxing_crescent_moon':'\\ud83c\\udf12',\n  'wc':'\\ud83d\\udebe',\n  'weary':'\\ud83d\\ude29',\n  'wedding':'\\ud83d\\udc92',\n  'weight_lifting_man':'\\ud83c\\udfcb\\ufe0f',\n  'weight_lifting_woman':'\\ud83c\\udfcb\\ufe0f&zwj;\\u2640\\ufe0f',\n  'whale':'\\ud83d\\udc33',\n  'whale2':'\\ud83d\\udc0b',\n  'wheel_of_dharma':'\\u2638\\ufe0f',\n  'wheelchair':'\\u267f\\ufe0f',\n  'white_check_mark':'\\u2705',\n  'white_circle':'\\u26aa\\ufe0f',\n  'white_flag':'\\ud83c\\udff3\\ufe0f',\n  'white_flower':'\\ud83d\\udcae',\n  'white_large_square':'\\u2b1c\\ufe0f',\n  'white_medium_small_square':'\\u25fd\\ufe0f',\n  'white_medium_square':'\\u25fb\\ufe0f',\n  'white_small_square':'\\u25ab\\ufe0f',\n  'white_square_button':'\\ud83d\\udd33',\n  'wilted_flower':'\\ud83e\\udd40',\n  'wind_chime':'\\ud83c\\udf90',\n  'wind_face':'\\ud83c\\udf2c',\n  'wine_glass':'\\ud83c\\udf77',\n  'wink':'\\ud83d\\ude09',\n  'wolf':'\\ud83d\\udc3a',\n  'woman':'\\ud83d\\udc69',\n  'woman_artist':'\\ud83d\\udc69&zwj;\\ud83c\\udfa8',\n  'woman_astronaut':'\\ud83d\\udc69&zwj;\\ud83d\\ude80',\n  'woman_cartwheeling':'\\ud83e\\udd38&zwj;\\u2640\\ufe0f',\n  'woman_cook':'\\ud83d\\udc69&zwj;\\ud83c\\udf73',\n  'woman_facepalming':'\\ud83e\\udd26&zwj;\\u2640\\ufe0f',\n  'woman_factory_worker':'\\ud83d\\udc69&zwj;\\ud83c\\udfed',\n  'woman_farmer':'\\ud83d\\udc69&zwj;\\ud83c\\udf3e',\n  'woman_firefighter':'\\ud83d\\udc69&zwj;\\ud83d\\ude92',\n  'woman_health_worker':'\\ud83d\\udc69&zwj;\\u2695\\ufe0f',\n  'woman_judge':'\\ud83d\\udc69&zwj;\\u2696\\ufe0f',\n  'woman_juggling':'\\ud83e\\udd39&zwj;\\u2640\\ufe0f',\n  'woman_mechanic':'\\ud83d\\udc69&zwj;\\ud83d\\udd27',\n  'woman_office_worker':'\\ud83d\\udc69&zwj;\\ud83d\\udcbc',\n  'woman_pilot':'\\ud83d\\udc69&zwj;\\u2708\\ufe0f',\n  'woman_playing_handball':'\\ud83e\\udd3e&zwj;\\u2640\\ufe0f',\n  'woman_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2640\\ufe0f',\n  'woman_scientist':'\\ud83d\\udc69&zwj;\\ud83d\\udd2c',\n  'woman_shrugging':'\\ud83e\\udd37&zwj;\\u2640\\ufe0f',\n  'woman_singer':'\\ud83d\\udc69&zwj;\\ud83c\\udfa4',\n  'woman_student':'\\ud83d\\udc69&zwj;\\ud83c\\udf93',\n  'woman_teacher':'\\ud83d\\udc69&zwj;\\ud83c\\udfeb',\n  'woman_technologist':'\\ud83d\\udc69&zwj;\\ud83d\\udcbb',\n  'woman_with_turban':'\\ud83d\\udc73&zwj;\\u2640\\ufe0f',\n  'womans_clothes':'\\ud83d\\udc5a',\n  'womans_hat':'\\ud83d\\udc52',\n  'women_wrestling':'\\ud83e\\udd3c&zwj;\\u2640\\ufe0f',\n  'womens':'\\ud83d\\udeba',\n  'world_map':'\\ud83d\\uddfa',\n  'worried':'\\ud83d\\ude1f',\n  'wrench':'\\ud83d\\udd27',\n  'writing_hand':'\\u270d\\ufe0f',\n  'x':'\\u274c',\n  'yellow_heart':'\\ud83d\\udc9b',\n  'yen':'\\ud83d\\udcb4',\n  'yin_yang':'\\u262f\\ufe0f',\n  'yum':'\\ud83d\\ude0b',\n  'zap':'\\u26a1\\ufe0f',\n  'zipper_mouth_face':'\\ud83e\\udd10',\n  'zzz':'\\ud83d\\udca4',\n\n  /* special emojis :P */\n  'octocat':  '<img alt=\":octocat:\" height=\"20\" width=\"20\" align=\"absmiddle\" src=\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\">',\n  'showdown': '<span style=\"font-family: \\'Anonymous Pro\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\">S</span>'\n};\n", "/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor,\n\n      /**\n       * Metadata of the document\n       * @type {{parsed: {}, raw: string, format: string}}\n       */\n      metadata = {\n        parsed: {},\n        raw: '',\n        format: ''\n      };\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n        // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    [],\n      metadata: {\n        parsed: {},\n        raw: '',\n        format: ''\n      }\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces\n    text = text.replace(/\\u00A0/g, '&nbsp;');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('metadata')(text, options, globals);\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // render a complete html document instead of a partial if the option is enabled\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // update metadata\n    metadata = globals.metadata;\n    return text;\n  };\n\n  /**\n   * Converts an HTML string into a markdown string\n   * @param src\n   * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.\n   * @returns {string}\n   */\n  this.makeMarkdown = this.makeMd = function (src, HTMLParser) {\n\n    // replace \\r\\n with \\n\n    src = src.replace(/\\r\\n/g, '\\n');\n    src = src.replace(/\\r/g, '\\n'); // old macs\n\n    // due to an edge case, we need to find this: > <\n    // to prevent removing of non silent white spaces\n    // ex: <em>this is</em> <strong>sparta</strong>\n    src = src.replace(/>[ \\t]+</, '>¨NBSP;<');\n\n    if (!HTMLParser) {\n      if (window && window.document) {\n        HTMLParser = window.document;\n      } else {\n        throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');\n      }\n    }\n\n    var doc = HTMLParser.createElement('div');\n    doc.innerHTML = src;\n\n    var globals = {\n      preList: substitutePreCodeTags(doc)\n    };\n\n    // remove all newlines and collapse spaces\n    clean(doc);\n\n    // some stuff, like accidental reference links must now be escaped\n    // TODO\n    // doc.innerHTML = doc.innerHTML.replace(/\\[[\\S\\t ]]/);\n\n    var nodes = doc.childNodes,\n        mdDoc = '';\n\n    for (var i = 0; i < nodes.length; i++) {\n      mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);\n    }\n\n    function clean (node) {\n      for (var n = 0; n < node.childNodes.length; ++n) {\n        var child = node.childNodes[n];\n        if (child.nodeType === 3) {\n          if (!/\\S/.test(child.nodeValue)) {\n            node.removeChild(child);\n            --n;\n          } else {\n            child.nodeValue = child.nodeValue.split('\\n').join(' ');\n            child.nodeValue = child.nodeValue.replace(/(\\s)+/g, '$1');\n          }\n        } else if (child.nodeType === 1) {\n          clean(child);\n        }\n      }\n    }\n\n    // find all pre tags and replace contents with placeholder\n    // we need this so that we can remove all indentation from html\n    // to ease up parsing\n    function substitutePreCodeTags (doc) {\n\n      var pres = doc.querySelectorAll('pre'),\n          presPH = [];\n\n      for (var i = 0; i < pres.length; ++i) {\n\n        if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {\n          var content = pres[i].firstChild.innerHTML.trim(),\n              language = pres[i].firstChild.getAttribute('data-language') || '';\n\n          // if data-language attribute is not defined, then we look for class language-*\n          if (language === '') {\n            var classes = pres[i].firstChild.className.split(' ');\n            for (var c = 0; c < classes.length; ++c) {\n              var matches = classes[c].match(/^language-(.+)$/);\n              if (matches !== null) {\n                language = matches[1];\n                break;\n              }\n            }\n          }\n\n          // unescape html entities in content\n          content = showdown.helper.unescapeHTMLEntities(content);\n\n          presPH.push(content);\n          pres[i].outerHTML = '<precode language=\"' + language + '\" precodenum=\"' + i.toString() + '\"></precode>';\n        } else {\n          presPH.push(pres[i].innerHTML);\n          pres[i].innerHTML = '';\n          pres[i].setAttribute('prenum', i.toString());\n        }\n      }\n      return presPH;\n    }\n\n    return mdDoc;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n\n  /**\n   * Get the metadata of the previously parsed document\n   * @param raw\n   * @returns {string|{}}\n   */\n  this.getMetadata = function (raw) {\n    if (raw) {\n      return metadata.raw;\n    } else {\n      return metadata.parsed;\n    }\n  };\n\n  /**\n   * Get the metadata format of the previously parsed document\n   * @returns {string}\n   */\n  this.getMetadataFormat = function () {\n    return metadata.format;\n  };\n\n  /**\n   * Private: set a single key, value metadata pair\n   * @param {string} key\n   * @param {string} value\n   */\n  this._setMetadataPair = function (key, value) {\n    metadata.parsed[key] = value;\n  };\n\n  /**\n   * Private: set metadata format\n   * @param {string} format\n   */\n  this._setMetadataFormat = function (format) {\n    metadata.format = format;\n  };\n\n  /**\n   * Private: set metadata raw text\n   * @param {string} raw\n   */\n  this._setMetadataRaw = function (raw) {\n    metadata.raw = raw;\n  };\n};\n", "/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\n    if (showdown.helper.isUndefined(title)) {\n      title = '';\n    }\n    linkId = linkId.toLowerCase();\n\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n    } else if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    // optionLinksInNewWindow only applies\n    // to external links. Hash links (#) open in same page\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\n      // escaped _\n      result += ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // normal cases\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/\\[([^\\[\\]]+)]()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username),\n          target = '';\n      if (options.openLinksInNewWindow) {\n        target = ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n      }\n      return st + '<a href=\"' + lnk + '\"' + target + '>' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n", "// url allowed chars [a-z\\d_.~:/?#[]@!$&'()*+,;=-]\n\nvar simpleURLRegex  = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    simpleURLRegex2 = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi,\n    simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n    delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,\n\n    replaceLink = function (options) {\n      'use strict';\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        var lnkTxt = link,\n            append = '',\n            target = '',\n            lmc    = leadingMagicChars || '',\n            tmc    = trailingMagicChars || '';\n        if (/^www\\./i.test(link)) {\n          link = link.replace(/^www\\./i, 'http://www.');\n        }\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n          append = trailingPunctuation;\n        }\n        if (options.openLinksInNewWindow) {\n          target = ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n        }\n        return lmc + '<a href=\"' + link + '\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\n      };\n    },\n\n    replaceMail = function (options, globals) {\n      'use strict';\n      return function (wholeMatch, b, mail) {\n        var href = 'mailto:';\n        b = b || '';\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n        if (options.encodeEmails) {\n          href = showdown.helper.encodeEmailAddress(href + mail);\n          mail = showdown.helper.encodeEmailAddress(mail);\n        } else {\n          href = href + mail;\n        }\n        return b + '<a href=\"' + href + '\">' + mail + '</a>';\n      };\n    };\n\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  text = text.replace(delimUrlRegex, replaceLink(options));\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\n  'use strict';\n\n  if (!options.simplifiedAutoLink) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\n\n  if (options.excludeTrailingPunctuationFromURLs) {\n    text = text.replace(simpleURLRegex2, replaceLink(options));\n  } else {\n    text = text.replace(simpleURLRegex, replaceLink(options));\n  }\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n", "showdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  // add a couple extra lines after the text and endtext mark\n  text = text + '\\n\\n';\n\n  var rgx = /(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;\n\n  if (options.splitAdjacentBlockquotes) {\n    rgx = /^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm;\n  }\n\n  text = text.replace(rgx, function (bq) {\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, ''); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n", "/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof text === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      c = m1 + '<code>' + c + '</code>';\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\n      return c;\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n", "/**\n * Create a full HTML document from the processed markdown\n */\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\n  'use strict';\n\n  if (!options.completeHTMLDocument) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\n\n  var doctype = 'html',\n      doctypeParsed = '<!DOCTYPE HTML>\\n',\n      title = '',\n      charset = '<meta charset=\"utf-8\">\\n',\n      lang = '',\n      metadata = '';\n\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\n';\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\n    if (doctype === 'html' || doctype === 'html5') {\n      charset = '<meta charset=\"utf-8\">';\n    }\n  }\n\n  for (var meta in globals.metadata.parsed) {\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\n      switch (meta.toLowerCase()) {\n        case 'doctype':\n          break;\n\n        case 'title':\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\n';\n          break;\n\n        case 'charset':\n          if (doctype === 'html' || doctype === 'html5') {\n            charset = '<meta charset=\"' + globals.metadata.parsed.charset + '\">\\n';\n          } else {\n            charset = '<meta name=\"charset\" content=\"' + globals.metadata.parsed.charset + '\">\\n';\n          }\n          break;\n\n        case 'language':\n        case 'lang':\n          lang = ' lang=\"' + globals.metadata.parsed[meta] + '\"';\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n          break;\n\n        default:\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n      }\n    }\n  }\n\n  text = doctypeParsed + '<html' + lang + '>\\n<head>\\n' + title + charset + metadata + '</head>\\n<body>\\n' + text.trim() + '\\n</body>\\n</html>';\n\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\n  return text;\n});\n", "/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('ellipsis', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\n\n  text = text.replace(/\\.\\.\\./g, '…');\n\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Turn emoji codes into emojis\n *\n * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis\n */\nshowdown.subParser('emoji', function (text, options, globals) {\n  'use strict';\n\n  if (!options.emoji) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\n\n  var emojiRgx = /:([\\S]+?):/g;\n\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\n      return showdown.helper.emojis[emojiCode];\n    }\n    return wm;\n  });\n\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n", "/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=|-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n", "/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags.\n  var tags     = /<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi,\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\n\n  text = text.replace(tags, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = text.replace(comments, function (wholeMatch) {\n    return wholeMatch\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g, function (wholeMatch, delim, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n", "showdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n", "showdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  if (options.backslashEscapesHTMLTags) {\n    // encode backslash escaped HTML tags\n    text = text.replace(/\\\\<(\\/?[^>]+?)>/g, function (wm, inside) {\n      return '&lt;' + inside + '&gt;';\n    });\n  }\n\n  // hash HTML Blocks\n  for (var i = 0; i < blockTags.length; ++i) {\n\n    var opTagPos,\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\b[^>]*>)', 'im'),\n        patLeft  = '<' + blockTags[i] + '\\\\b[^>]*>',\n        patRight = '</' + blockTags[i] + '>';\n    // 1. Look for the first position of the first opening HTML tag in the text\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\n\n      // if the HTML tag is \\ escaped, we need to escape it and break\n\n\n      //2. Split the text in that position\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\n          //3. Match recursively\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\n\n      // prevent an infinite loop\n      if (newSubText1 === subTexts[1]) {\n        break;\n      }\n      text = subTexts[0].concat(newSubText1);\n    }\n  }\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        console.error('maximum nesting of 10 spans reached!!!');\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n      // Set text-style headers:\n      //\tHeader 1\n      //\t========\n      //\n      //\tHeader 2\n      //\t--------\n      //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var hText = m2;\n    if (options.customizedHeaderId) {\n      hText = m2.replace(/\\s?\\{([^{]+?)}\\s*$/, '');\n    }\n\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title,\n        prefix;\n\n    // It is separate from other options to allow combining prefix and customized\n    if (options.customizedHeaderId) {\n      var match = m.match(/\\{([^{]+?)}\\s*$/);\n      if (match && match[1]) {\n        m = match[1];\n      }\n    }\n\n    title = m;\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      prefix = options.prefixHeaderId;\n    } else if (options.prefixHeaderId === true) {\n      prefix = 'section-';\n    } else {\n      prefix = '';\n    }\n\n    if (!options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (options.ghCompatibleHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else if (options.rawHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '&')\n        .replace(/¨T/g, '¨')\n        .replace(/¨D/g, '$')\n        // replace \" and '\n        .replace(/[\"']/g, '-')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n", "/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n", "/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      crazyRegExp       = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,\n      base64RegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      referenceRegExp   = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,\n      refShortcutRegExp = /!\\[([^\\[\\]]+)]()()()()()/g;\n\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\n    url = url.replace(/\\s/g, '');\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\n  }\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n\n    } else if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title && showdown.helper.isString(title)) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\n  // base64 encoded images\n  text = text.replace(base64RegExp, writeImageTagBase64);\n\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(crazyRegExp, writeImageTag);\n\n  // normal cases\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  // handle reference-style shortcuts: ![img text]\n  text = text.replace(refShortcutRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  function parseInside (txt, left, right) {\n    /*\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    */\n    return left + txt + right;\n  }\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong>', '</strong>');\n    });\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, function (wm, txt) {\n      return parseInside (txt, '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n  // Now parse asterisks\n  if (options.literalMidWordAsterisks) {\n    text = text.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong>', '</strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n      // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n", "/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  function styleStartNumber (list, listType) {\n    // check if ol and starts by a number different than 1\n    if (listType === 'ol') {\n      var res = list.match(/^ *(\\d+)\\./);\n      if (res && res[1] !== '1') {\n        return ' start=\"' + res[1] + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg),\n            style = styleStartNumber(list, listType);\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      var style = styleStartNumber(list, listType);\n      result = '\\n\\n<' + listType + style + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  /** Start of list parsing **/\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n", "/**\n * Parse metadata at the top of the document\n */\nshowdown.subParser('metadata', function (text, options, globals) {\n  'use strict';\n\n  if (!options.metadata) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\n\n  function parseMetadataContents (content) {\n    // raw is raw so it's not changed in any way\n    globals.metadata.raw = content;\n\n    // escape chars forbidden in html attributes\n    // double quotes\n    content = content\n      // ampersand first\n      .replace(/&/g, '&amp;')\n      // double quotes\n      .replace(/\"/g, '&quot;');\n\n    content = content.replace(/\\n {4}/g, ' ');\n    content.replace(/^([\\S ]+): +([\\s\\S]+?)$/gm, function (wm, key, value) {\n      globals.metadata.parsed[key] = value;\n      return '';\n    });\n  }\n\n  text = text.replace(/^\\s*«««+(\\S*?)\\n([\\s\\S]+?)\\n»»»+\\n/, function (wholematch, format, content) {\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/, function (wholematch, format, content) {\n    if (format) {\n      globals.metadata.format = format;\n    }\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/¨M/g, '');\n\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\n  return text;\n});\n", "/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n", "/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n", "/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n", "/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after anchors, because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\n  text = showdown.subParser('emoji')(text, options, globals);\n  text = showdown.subParser('underline')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n  text = showdown.subParser('ellipsis')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    // only add line breaks if the text does not contain a block (special case for lists)\n    if (!/\\n\\n¨K/.test(text)) {\n      text = text.replace(/\\n+/g, '<br />\\n');\n    }\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  function parseInside (txt) {\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    return '<del>' + txt + '</del>';\n  }\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n", "/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex       = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm,\n      base64Regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=¨0)|(?=\\n\\[))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    if (url.match(/^data:.+?\\/.+?;base64,/)) {\n      // remove newlines\n      globals.gUrls[linkId] = url.replace(/\\s/g, '');\n    } else {\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n    }\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  };\n\n  // first we try to find base64 link references\n  text = text.replace(base64Regex, replaceFunc);\n\n  text = text.replace(regex, replaceFunc);\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n", "showdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx       = /^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm,\n      //singeColTblRgx = /^ {0,3}\\|.+\\|\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n(?: {0,3}\\|.+\\|\\n)+(?:\\n\\n|¨0)/gm;\n      singeColTblRgx = /^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\n    if (options.tablesHeaderId || options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  function parseTable (rawTable) {\n    var i, tableLines = rawTable.split('\\n');\n\n    for (i = 0; i < tableLines.length; ++i) {\n      // strip wrong first and last column if wrapped tables are used\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n      // parse code spans first, but we only support one line code spans\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  // find escaped pipe characters\n  text = text.replace(/\\\\(\\|)/g, showdown.helper.escapeCharactersCallback);\n\n  // parse multi column tables\n  text = text.replace(tableRgx, parseTable);\n\n  // parse one column tables\n  text = text.replace(singeColTblRgx, parseTable);\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n", "showdown.subParser('underline', function (text, options, globals) {\n  'use strict';\n\n  if (!options.underline) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('underline.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n  }\n\n  // escape remaining underscores to prevent them being parsed by italic and bold\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('underline.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('makeMarkdown.blockquote', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);\n\n      if (innerTxt === '') {\n        continue;\n      }\n      txt += innerTxt;\n    }\n  }\n  // cleanup\n  txt = txt.trim();\n  txt = '> ' + txt.split('\\n').join('\\n> ');\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.codeBlock', function (node, globals) {\n  'use strict';\n\n  var lang = node.getAttribute('language'),\n      num  = node.getAttribute('precodenum');\n  return '```' + lang + '\\n' + globals.preList[num] + '\\n```';\n});\n", "showdown.subParser('makeMarkdown.codeSpan', function (node) {\n  'use strict';\n\n  return '`' + node.innerHTML + '`';\n});\n", "showdown.subParser('makeMarkdown.emphasis', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '*';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '*';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {\n  'use strict';\n\n  var headerMark = new Array(headerLevel + 1).join('#'),\n      txt = '';\n\n  if (node.hasChildNodes()) {\n    txt = headerMark + ' ';\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.hr', function () {\n  'use strict';\n\n  return '---';\n});\n", "showdown.subParser('makeMarkdown.image', function (node) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasAttribute('src')) {\n    txt += '![' + node.getAttribute('alt') + '](';\n    txt += '<' + node.getAttribute('src') + '>';\n    if (node.hasAttribute('width') && node.hasAttribute('height')) {\n      txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');\n    }\n\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.links', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes() && node.hasAttribute('href')) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    txt = '[';\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '](';\n    txt += '<' + node.getAttribute('href') + '>';\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.list', function (node, globals, type) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var listItems       = node.childNodes,\n      listItemsLenght = listItems.length,\n      listNum = node.getAttribute('start') || 1;\n\n  for (var i = 0; i < listItemsLenght; ++i) {\n    if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {\n      continue;\n    }\n\n    // define the bullet to use in list\n    var bullet = '';\n    if (type === 'ol') {\n      bullet = listNum.toString() + '. ';\n    } else {\n      bullet = '- ';\n    }\n\n    // parse list item\n    txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);\n    ++listNum;\n  }\n\n  // add comment at the end to prevent consecutive lists to be parsed as one\n  txt += '\\n<!-- -->\\n';\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.listItem', function (node, globals) {\n  'use strict';\n\n  var listItemTxt = '';\n\n  var children = node.childNodes,\n      childrenLenght = children.length;\n\n  for (var i = 0; i < childrenLenght; ++i) {\n    listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n  }\n  // if it's only one liner, we need to add a newline at the end\n  if (!/\\n$/.test(listItemTxt)) {\n    listItemTxt += '\\n';\n  } else {\n    // it's multiparagraph, so we need to indent\n    listItemTxt = listItemTxt\n      .split('\\n')\n      .join('\\n    ')\n      .replace(/^ {4}$/gm, '')\n      .replace(/\\n\\n+/g, '\\n\\n');\n  }\n\n  return listItemTxt;\n});\n", "\n\nshowdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {\n  'use strict';\n\n  spansOnly = spansOnly || false;\n\n  var txt = '';\n\n  // edge case of text without wrapper paragraph\n  if (node.nodeType === 3) {\n    return showdown.subParser('makeMarkdown.txt')(node, globals);\n  }\n\n  // HTML comment\n  if (node.nodeType === 8) {\n    return '<!--' + node.data + '-->\\n\\n';\n  }\n\n  // process only node elements\n  if (node.nodeType !== 1) {\n    return '';\n  }\n\n  var tagName = node.tagName.toLowerCase();\n\n  switch (tagName) {\n\n    //\n    // BLOCKS\n    //\n    case 'h1':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\\n\\n'; }\n      break;\n    case 'h2':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\\n\\n'; }\n      break;\n    case 'h3':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\\n\\n'; }\n      break;\n    case 'h4':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\\n\\n'; }\n      break;\n    case 'h5':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\\n\\n'; }\n      break;\n    case 'h6':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\\n\\n'; }\n      break;\n\n    case 'p':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'blockquote':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'hr':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'ol':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\\n\\n'; }\n      break;\n\n    case 'ul':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\\n\\n'; }\n      break;\n\n    case 'precode':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'pre':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'table':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\\n\\n'; }\n      break;\n\n    //\n    // SPANS\n    //\n    case 'code':\n      txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);\n      break;\n\n    case 'em':\n    case 'i':\n      txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);\n      break;\n\n    case 'strong':\n    case 'b':\n      txt = showdown.subParser('makeMarkdown.strong')(node, globals);\n      break;\n\n    case 'del':\n      txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);\n      break;\n\n    case 'a':\n      txt = showdown.subParser('makeMarkdown.links')(node, globals);\n      break;\n\n    case 'img':\n      txt = showdown.subParser('makeMarkdown.image')(node, globals);\n      break;\n\n    default:\n      txt = node.outerHTML + '\\n\\n';\n  }\n\n  // common normalization\n  // TODO eventually\n\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.paragraph', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n\n  // some text normalization\n  txt = txt.trim();\n\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.pre', function (node, globals) {\n  'use strict';\n\n  var num  = node.getAttribute('prenum');\n  return '<pre>' + globals.preList[num] + '</pre>';\n});\n", "showdown.subParser('makeMarkdown.strikethrough', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '~~';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '~~';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.strong', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '**';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '**';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.table', function (node, globals) {\n  'use strict';\n\n  var txt = '',\n      tableArray = [[], []],\n      headings   = node.querySelectorAll('thead>tr>th'),\n      rows       = node.querySelectorAll('tbody>tr'),\n      i, ii;\n  for (i = 0; i < headings.length; ++i) {\n    var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),\n        allign = '---';\n\n    if (headings[i].hasAttribute('style')) {\n      var style = headings[i].getAttribute('style').toLowerCase().replace(/\\s/g, '');\n      switch (style) {\n        case 'text-align:left;':\n          allign = ':---';\n          break;\n        case 'text-align:right;':\n          allign = '---:';\n          break;\n        case 'text-align:center;':\n          allign = ':---:';\n          break;\n      }\n    }\n    tableArray[0][i] = headContent.trim();\n    tableArray[1][i] = allign;\n  }\n\n  for (i = 0; i < rows.length; ++i) {\n    var r = tableArray.push([]) - 1,\n        cols = rows[i].getElementsByTagName('td');\n\n    for (ii = 0; ii < headings.length; ++ii) {\n      var cellContent = ' ';\n      if (typeof cols[ii] !== 'undefined') {\n        cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);\n      }\n      tableArray[r].push(cellContent);\n    }\n  }\n\n  var cellSpacesCount = 3;\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      var strLen = tableArray[i][ii].length;\n      if (strLen > cellSpacesCount) {\n        cellSpacesCount = strLen;\n      }\n    }\n  }\n\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      if (i === 1) {\n        if (tableArray[i][ii].slice(-1) === ':') {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';\n        } else {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');\n        }\n      } else {\n        tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);\n      }\n    }\n    txt += '| ' + tableArray[i].join(' | ') + ' |\\n';\n  }\n\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.tableCell', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var children = node.childNodes,\n      childrenLength = children.length;\n\n  for (var i = 0; i < childrenLength; ++i) {\n    txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);\n  }\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.txt', function (node) {\n  'use strict';\n\n  var txt = node.nodeValue;\n\n  // multiple spaces are collapsed\n  txt = txt.replace(/ +/g, ' ');\n\n  // replace the custom ¨NBSP; with a space\n  txt = txt.replace(/¨NBSP;/g, ' ');\n\n  // \", <, > and & should replace escaped html entities\n  txt = showdown.helper.unescapeHTMLEntities(txt);\n\n  // escape markdown magic characters\n  // emphasis, strong and strikethrough - can appear everywhere\n  // we also escape pipe (|) because of tables\n  // and escape ` because of code blocks and spans\n  txt = txt.replace(/([*_~|`])/g, '\\\\$1');\n\n  // escape > because of blockquotes\n  txt = txt.replace(/^(\\s*)>/g, '\\\\$1>');\n\n  // hash character, only troublesome at the beginning of a line because of headers\n  txt = txt.replace(/^#/gm, '\\\\#');\n\n  // horizontal rules\n  txt = txt.replace(/^(\\s*)([-=]{3,})(\\s*)$/, '$1\\\\$2$3');\n\n  // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer\n  txt = txt.replace(/^( {0,3}\\d+)\\./gm, '$1\\\\.');\n\n  // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)\n  txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\\\$2');\n\n  // images and links, ] followed by ( is problematic, so we escape it\n  txt = txt.replace(/]([\\s]*)\\(/g, '\\\\]$1\\\\(');\n\n  // reference URIs must also be escaped\n  txt = txt.replace(/^ {0,3}\\[([\\S \\t]*?)]:/gm, '\\\\[$1]:');\n\n  return txt;\n});\n", "var root = this;\n\n// AMD Loader\nif (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// CommonJS/nodeJS Loader\n} else if (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n", "/**\n * External dependencies\n */\nimport { createStore, applyMiddleware } from 'redux';\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * WordPress dependencies\n */\nimport createReduxRoutineMiddleware from '@wordpress/redux-routine';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { combineReducers } from './combine-reducers';\nimport { builtinControls } from '../controls';\nimport { lock } from '../lock-unlock';\nimport promise from '../promise-middleware';\nimport createResolversCacheMiddleware from '../resolvers-cache-middleware';\nimport createThunkMiddleware from './thunk-middleware';\nimport metadataReducer from './metadata/reducer';\nimport * as metadataSelectors from './metadata/selectors';\nimport * as metadataActions from './metadata/actions';\n\nexport { combineReducers };\n\n/** @typedef {import('../types').DataRegistry} DataRegistry */\n/** @typedef {import('../types').ListenerFunction} ListenerFunction */\n/**\n * @typedef {import('../types').StoreDescriptor<C>} StoreDescriptor\n * @template {import('../types').AnyConfig} C\n */\n/**\n * @typedef {import('../types').ReduxStoreConfig<State,Actions,Selectors>} ReduxStoreConfig\n * @template State\n * @template {Record<string,import('../types').ActionCreator>} Actions\n * @template Selectors\n */\n\nconst trimUndefinedValues = ( array ) => {\n\tconst result = [ ...array ];\n\tfor ( let i = result.length - 1; i >= 0; i-- ) {\n\t\tif ( result[ i ] === undefined ) {\n\t\t\tresult.splice( i, 1 );\n\t\t}\n\t}\n\treturn result;\n};\n\n/**\n * Creates a new object with the same keys, but with `callback()` called as\n * a transformer function on each of the values.\n *\n * @param {Object}   obj      The object to transform.\n * @param {Function} callback The function to transform each object value.\n * @return {Array} Transformed object.\n */\nconst mapValues = ( obj, callback ) =>\n\tObject.fromEntries(\n\t\tObject.entries( obj ?? {} ).map( ( [ key, value ] ) => [\n\t\t\tkey,\n\t\t\tcallback( value, key ),\n\t\t] )\n\t);\n\n// Convert  non serializable types to plain objects\nconst devToolsReplacer = ( key, state ) => {\n\tif ( state instanceof Map ) {\n\t\treturn Object.fromEntries( state );\n\t}\n\n\tif ( state instanceof window.HTMLElement ) {\n\t\treturn null;\n\t}\n\n\treturn state;\n};\n\n/**\n * Create a cache to track whether resolvers started running or not.\n *\n * @return {Object} Resolvers Cache.\n */\nfunction createResolversCache() {\n\tconst cache = {};\n\treturn {\n\t\tisRunning( selectorName, args ) {\n\t\t\treturn (\n\t\t\t\tcache[ selectorName ] &&\n\t\t\t\tcache[ selectorName ].get( trimUndefinedValues( args ) )\n\t\t\t);\n\t\t},\n\n\t\tclear( selectorName, args ) {\n\t\t\tif ( cache[ selectorName ] ) {\n\t\t\t\tcache[ selectorName ].delete( trimUndefinedValues( args ) );\n\t\t\t}\n\t\t},\n\n\t\tmarkAsRunning( selectorName, args ) {\n\t\t\tif ( ! cache[ selectorName ] ) {\n\t\t\t\tcache[ selectorName ] = new EquivalentKeyMap();\n\t\t\t}\n\n\t\t\tcache[ selectorName ].set( trimUndefinedValues( args ), true );\n\t\t},\n\t};\n}\n\nfunction createBindingCache( getItem, bindItem ) {\n\tconst cache = new WeakMap();\n\n\treturn {\n\t\tget( itemName ) {\n\t\t\tconst item = getItem( itemName );\n\t\t\tif ( ! item ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet boundItem = cache.get( item );\n\t\t\tif ( ! boundItem ) {\n\t\t\t\tboundItem = bindItem( item, itemName );\n\t\t\t\tcache.set( item, boundItem );\n\t\t\t}\n\t\t\treturn boundItem;\n\t\t},\n\t};\n}\n\nfunction createPrivateProxy( publicItems, privateItems ) {\n\treturn new Proxy( publicItems, {\n\t\tget: ( target, itemName ) =>\n\t\t\tprivateItems.get( itemName ) || Reflect.get( target, itemName ),\n\t} );\n}\n\n/**\n * Creates a data store descriptor for the provided Redux store configuration containing\n * properties describing reducer, actions, selectors, controls and resolvers.\n *\n * @example\n * ```js\n * import { createReduxStore } from '@wordpress/data';\n *\n * const store = createReduxStore( 'demo', {\n *     reducer: ( state = 'OK' ) => state,\n *     selectors: {\n *         getValue: ( state ) => state,\n *     },\n * } );\n * ```\n *\n * @template State\n * @template {Record<string,import('../types').ActionCreator>} Actions\n * @template Selectors\n * @param {string}                                    key     Unique namespace identifier.\n * @param {ReduxStoreConfig<State,Actions,Selectors>} options Registered store options, with properties\n *                                                            describing reducer, actions, selectors,\n *                                                            and resolvers.\n *\n * @return   {StoreDescriptor<ReduxStoreConfig<State,Actions,Selectors>>} Store Object.\n */\nexport default function createReduxStore( key, options ) {\n\tconst privateActions = {};\n\tconst privateSelectors = {};\n\tconst privateRegistrationFunctions = {\n\t\tprivateActions,\n\t\tregisterPrivateActions: ( actions ) => {\n\t\t\tObject.assign( privateActions, actions );\n\t\t},\n\t\tprivateSelectors,\n\t\tregisterPrivateSelectors: ( selectors ) => {\n\t\t\tObject.assign( privateSelectors, selectors );\n\t\t},\n\t};\n\tconst storeDescriptor = {\n\t\tname: key,\n\t\tinstantiate: ( registry ) => {\n\t\t\t/**\n\t\t\t * Stores listener functions registered with `subscribe()`.\n\t\t\t *\n\t\t\t * When functions register to listen to store changes with\n\t\t\t * `subscribe()` they get added here. Although Redux offers\n\t\t\t * its own `subscribe()` function directly, by wrapping the\n\t\t\t * subscription in this store instance it's possible to\n\t\t\t * optimize checking if the state has changed before calling\n\t\t\t * each listener.\n\t\t\t *\n\t\t\t * @type {Set<ListenerFunction>}\n\t\t\t */\n\t\t\tconst listeners = new Set();\n\t\t\tconst reducer = options.reducer;\n\n\t\t\t// Object that every thunk function receives as the first argument. It contains the\n\t\t\t// `registry`, `dispatch`, `select` and `resolveSelect` fields. Some of them are\n\t\t\t// constructed as getters to avoid circular dependencies.\n\t\t\tconst thunkArgs = {\n\t\t\t\tregistry,\n\t\t\t\tget dispatch() {\n\t\t\t\t\treturn thunkDispatch;\n\t\t\t\t},\n\t\t\t\tget select() {\n\t\t\t\t\treturn thunkSelect;\n\t\t\t\t},\n\t\t\t\tget resolveSelect() {\n\t\t\t\t\treturn resolveSelectors;\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst store = instantiateReduxStore(\n\t\t\t\tkey,\n\t\t\t\toptions,\n\t\t\t\tregistry,\n\t\t\t\tthunkArgs\n\t\t\t);\n\n\t\t\t// Expose the private registration functions on the store\n\t\t\t// so they can be copied to a sub registry in registry.js.\n\t\t\tlock( store, privateRegistrationFunctions );\n\t\t\tconst resolversCache = createResolversCache();\n\n\t\t\t// Binds an action creator (`action`) to the `store`, making it a callable function.\n\t\t\t// These are the functions that are returned by `useDispatch`, for example.\n\t\t\t// It always returns a `Promise`, although actions are not always async. That's an\n\t\t\t// unfortunate backward compatibility measure.\n\t\t\tfunction bindAction( action ) {\n\t\t\t\treturn ( ...args ) =>\n\t\t\t\t\tPromise.resolve( store.dispatch( action( ...args ) ) );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Object with all public actions, both metadata and store actions.\n\t\t\t */\n\t\t\tconst actions = {\n\t\t\t\t...mapValues( metadataActions, bindAction ),\n\t\t\t\t...mapValues( options.actions, bindAction ),\n\t\t\t};\n\n\t\t\t// Object with both public and private actions. Private actions are accessed through a proxy,\n\t\t\t// which looks them up in real time on the `privateActions` object. That's because private\n\t\t\t// actions can be registered at any time with `registerPrivateActions`. Also once a private\n\t\t\t// action creator is bound to the store, it is cached to give it a stable identity.\n\t\t\tconst allActions = createPrivateProxy(\n\t\t\t\tactions,\n\t\t\t\tcreateBindingCache(\n\t\t\t\t\t( name ) => privateActions[ name ],\n\t\t\t\t\tbindAction\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// An object that implements the `dispatch` object that is passed to thunk functions.\n\t\t\t// It is callable (`dispatch( action )`) and also has methods (`dispatch.foo()`) that\n\t\t\t// correspond to bound registered actions, both public and private. Implemented with the proxy\n\t\t\t// `get` method, delegating to `allActions`.\n\t\t\tconst thunkDispatch = new Proxy(\n\t\t\t\t( action ) => store.dispatch( action ),\n\t\t\t\t{ get: ( target, name ) => allActions[ name ] }\n\t\t\t);\n\n\t\t\t// To the public `actions` object, add the \"locked\" `allActions` object. When used,\n\t\t\t// `unlock( actions )` will return `allActions`, implementing a way how to get at the private actions.\n\t\t\tlock( actions, allActions );\n\n\t\t\t// If we have selector resolvers, convert them to a normalized form.\n\t\t\tconst resolvers = options.resolvers\n\t\t\t\t? mapValues( options.resolvers, mapResolver )\n\t\t\t\t: {};\n\n\t\t\t// Bind a selector to the store. Call the selector with the current state, correct registry,\n\t\t\t// and if there is a resolver, attach the resolver logic to the selector.\n\t\t\tfunction bindSelector( selector, selectorName ) {\n\t\t\t\tif ( selector.isRegistrySelector ) {\n\t\t\t\t\tselector.registry = registry;\n\t\t\t\t}\n\t\t\t\tconst boundSelector = ( ...args ) => {\n\t\t\t\t\targs = normalize( selector, args );\n\t\t\t\t\tconst state = store.__unstableOriginalGetState();\n\t\t\t\t\t// Before calling the selector, switch to the correct registry.\n\t\t\t\t\tif ( selector.isRegistrySelector ) {\n\t\t\t\t\t\tselector.registry = registry;\n\t\t\t\t\t}\n\t\t\t\t\treturn selector( state.root, ...args );\n\t\t\t\t};\n\n\t\t\t\t// Expose normalization method on the bound selector\n\t\t\t\t// in order that it can be called when fulfilling\n\t\t\t\t// the resolver.\n\t\t\t\tboundSelector.__unstableNormalizeArgs =\n\t\t\t\t\tselector.__unstableNormalizeArgs;\n\n\t\t\t\tconst resolver = resolvers[ selectorName ];\n\n\t\t\t\tif ( ! resolver ) {\n\t\t\t\t\tboundSelector.hasResolver = false;\n\t\t\t\t\treturn boundSelector;\n\t\t\t\t}\n\n\t\t\t\treturn mapSelectorWithResolver(\n\t\t\t\t\tboundSelector,\n\t\t\t\t\tselectorName,\n\t\t\t\t\tresolver,\n\t\t\t\t\tstore,\n\t\t\t\t\tresolversCache,\n\t\t\t\t\tboundMetadataSelectors\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Metadata selectors are bound differently: different state (`state.metadata`), no resolvers,\n\t\t\t// normalization depending on the target selector.\n\t\t\tfunction bindMetadataSelector( metaDataSelector ) {\n\t\t\t\tconst boundSelector = (\n\t\t\t\t\tselectorName,\n\t\t\t\t\tselectorArgs,\n\t\t\t\t\t...args\n\t\t\t\t) => {\n\t\t\t\t\t// Normalize the arguments passed to the target selector.\n\t\t\t\t\tif ( selectorName ) {\n\t\t\t\t\t\tconst targetSelector =\n\t\t\t\t\t\t\toptions.selectors?.[ selectorName ];\n\t\t\t\t\t\tif ( targetSelector ) {\n\t\t\t\t\t\t\tselectorArgs = normalize(\n\t\t\t\t\t\t\t\ttargetSelector,\n\t\t\t\t\t\t\t\tselectorArgs\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst state = store.__unstableOriginalGetState();\n\n\t\t\t\t\treturn metaDataSelector(\n\t\t\t\t\t\tstate.metadata,\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\tselectorArgs,\n\t\t\t\t\t\t...args\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tboundSelector.hasResolver = false;\n\t\t\t\treturn boundSelector;\n\t\t\t}\n\n\t\t\t// Perform binding of both metadata and store selectors and combine them in one\n\t\t\t// `selectors` object. These are all public selectors of the store.\n\t\t\tconst boundMetadataSelectors = mapValues(\n\t\t\t\tmetadataSelectors,\n\t\t\t\tbindMetadataSelector\n\t\t\t);\n\n\t\t\tconst boundSelectors = mapValues( options.selectors, bindSelector );\n\n\t\t\tconst selectors = {\n\t\t\t\t...boundMetadataSelectors,\n\t\t\t\t...boundSelectors,\n\t\t\t};\n\n\t\t\t// Cache of bould private selectors. They are bound only when first accessed, because\n\t\t\t// new private selectors can be registered at any time (with `registerPrivateSelectors`).\n\t\t\t// Once bound, they are cached to give them a stable identity.\n\t\t\tconst boundPrivateSelectors = createBindingCache(\n\t\t\t\t( name ) => privateSelectors[ name ],\n\t\t\t\tbindSelector\n\t\t\t);\n\n\t\t\tconst allSelectors = createPrivateProxy(\n\t\t\t\tselectors,\n\t\t\t\tboundPrivateSelectors\n\t\t\t);\n\n\t\t\t// Pre-bind the private selectors that have been registered by the time of\n\t\t\t// instantiation, so that registry selectors are bound to the registry.\n\t\t\tfor ( const selectorName of Object.keys( privateSelectors ) ) {\n\t\t\t\tboundPrivateSelectors.get( selectorName );\n\t\t\t}\n\n\t\t\t// An object that implements the `select` object that is passed to thunk functions.\n\t\t\t// It is callable (`select( selector )`) and also has methods (`select.foo()`) that\n\t\t\t// correspond to bound registered selectors, both public and private. Implemented with the proxy\n\t\t\t// `get` method, delegating to `allSelectors`.\n\t\t\tconst thunkSelect = new Proxy(\n\t\t\t\t( selector ) => selector( store.__unstableOriginalGetState() ),\n\t\t\t\t{ get: ( target, name ) => allSelectors[ name ] }\n\t\t\t);\n\n\t\t\t// To the public `selectors` object, add the \"locked\" `allSelectors` object. When used,\n\t\t\t// `unlock( selectors )` will return `allSelectors`, implementing a way how to get at the private selectors.\n\t\t\tlock( selectors, allSelectors );\n\n\t\t\t// For each selector, create a function that calls the selector, waits for resolution and returns\n\t\t\t// a promise that resolves when the resolution is finished.\n\t\t\tconst bindResolveSelector = mapResolveSelector(\n\t\t\t\tstore,\n\t\t\t\tboundMetadataSelectors\n\t\t\t);\n\n\t\t\t// Now apply this function to all bound selectors, public and private. We are excluding\n\t\t\t// metadata selectors because they don't have resolvers.\n\t\t\tconst resolveSelectors = mapValues(\n\t\t\t\tboundSelectors,\n\t\t\t\tbindResolveSelector\n\t\t\t);\n\n\t\t\tconst allResolveSelectors = createPrivateProxy(\n\t\t\t\tresolveSelectors,\n\t\t\t\tcreateBindingCache(\n\t\t\t\t\t( name ) => boundPrivateSelectors.get( name ),\n\t\t\t\t\tbindResolveSelector\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Lock the selectors so that `unlock( resolveSelectors )` returns `allResolveSelectors`.\n\t\t\tlock( resolveSelectors, allResolveSelectors );\n\n\t\t\t// Now, in a way very similar to `bindResolveSelector`, we create a function that maps\n\t\t\t// selectors to functions that throw a suspense promise if not yet resolved.\n\t\t\tconst bindSuspendSelector = mapSuspendSelector(\n\t\t\t\tstore,\n\t\t\t\tboundMetadataSelectors\n\t\t\t);\n\n\t\t\tconst suspendSelectors = {\n\t\t\t\t...boundMetadataSelectors, // no special suspense behavior\n\t\t\t\t...mapValues( boundSelectors, bindSuspendSelector ),\n\t\t\t};\n\n\t\t\tconst allSuspendSelectors = createPrivateProxy(\n\t\t\t\tsuspendSelectors,\n\t\t\t\tcreateBindingCache(\n\t\t\t\t\t( name ) => boundPrivateSelectors.get( name ),\n\t\t\t\t\tbindSuspendSelector\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Lock the selectors so that `unlock( suspendSelectors )` returns 'allSuspendSelectors`.\n\t\t\tlock( suspendSelectors, allSuspendSelectors );\n\n\t\t\tconst getSelectors = () => selectors;\n\t\t\tconst getActions = () => actions;\n\t\t\tconst getResolveSelectors = () => resolveSelectors;\n\t\t\tconst getSuspendSelectors = () => suspendSelectors;\n\n\t\t\t// We have some modules monkey-patching the store object\n\t\t\t// It's wrong to do so but until we refactor all of our effects to controls\n\t\t\t// We need to keep the same \"store\" instance here.\n\t\t\tstore.__unstableOriginalGetState = store.getState;\n\t\t\tstore.getState = () => store.__unstableOriginalGetState().root;\n\n\t\t\t// Customize subscribe behavior to call listeners only on effective change,\n\t\t\t// not on every dispatch.\n\t\t\tconst subscribe =\n\t\t\t\tstore &&\n\t\t\t\t( ( listener ) => {\n\t\t\t\t\tlisteners.add( listener );\n\n\t\t\t\t\treturn () => listeners.delete( listener );\n\t\t\t\t} );\n\n\t\t\tlet lastState = store.__unstableOriginalGetState();\n\t\t\tstore.subscribe( () => {\n\t\t\t\tconst state = store.__unstableOriginalGetState();\n\t\t\t\tconst hasChanged = state !== lastState;\n\t\t\t\tlastState = state;\n\n\t\t\t\tif ( hasChanged ) {\n\t\t\t\t\tfor ( const listener of listeners ) {\n\t\t\t\t\t\tlistener();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// This can be simplified to just { subscribe, getSelectors, getActions }\n\t\t\t// Once we remove the use function.\n\t\t\treturn {\n\t\t\t\treducer,\n\t\t\t\tstore,\n\t\t\t\tactions,\n\t\t\t\tselectors,\n\t\t\t\tresolvers,\n\t\t\t\tgetSelectors,\n\t\t\t\tgetResolveSelectors,\n\t\t\t\tgetSuspendSelectors,\n\t\t\t\tgetActions,\n\t\t\t\tsubscribe,\n\t\t\t};\n\t\t},\n\t};\n\n\t// Expose the private registration functions on the store\n\t// descriptor. That's a natural choice since that's where the\n\t// public actions and selectors are stored.\n\tlock( storeDescriptor, privateRegistrationFunctions );\n\n\treturn storeDescriptor;\n}\n\n/**\n * Creates a redux store for a namespace.\n *\n * @param {string}       key       Unique namespace identifier.\n * @param {Object}       options   Registered store options, with properties\n *                                 describing reducer, actions, selectors,\n *                                 and resolvers.\n * @param {DataRegistry} registry  Registry reference.\n * @param {Object}       thunkArgs Argument object for the thunk middleware.\n * @return {Object} Newly created redux store.\n */\nfunction instantiateReduxStore( key, options, registry, thunkArgs ) {\n\tconst controls = {\n\t\t...options.controls,\n\t\t...builtinControls,\n\t};\n\n\tconst normalizedControls = mapValues( controls, ( control ) =>\n\t\tcontrol.isRegistryControl ? control( registry ) : control\n\t);\n\n\tconst middlewares = [\n\t\tcreateResolversCacheMiddleware( registry, key ),\n\t\tpromise,\n\t\tcreateReduxRoutineMiddleware( normalizedControls ),\n\t\tcreateThunkMiddleware( thunkArgs ),\n\t];\n\n\tconst enhancers = [ applyMiddleware( ...middlewares ) ];\n\tif (\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__\n\t) {\n\t\tenhancers.push(\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__( {\n\t\t\t\tname: key,\n\t\t\t\tinstanceId: key,\n\t\t\t\tserialize: {\n\t\t\t\t\treplacer: devToolsReplacer,\n\t\t\t\t},\n\t\t\t} )\n\t\t);\n\t}\n\n\tconst { reducer, initialState } = options;\n\tconst enhancedReducer = combineReducers( {\n\t\tmetadata: metadataReducer,\n\t\troot: reducer,\n\t} );\n\n\treturn createStore(\n\t\tenhancedReducer,\n\t\t{ root: initialState },\n\t\tcompose( enhancers )\n\t);\n}\n\n/**\n * Maps selectors to functions that return a resolution promise for them.\n *\n * @param {Object} store                  The redux store the selectors are bound to.\n * @param {Object} boundMetadataSelectors The bound metadata selectors.\n *\n * @return {Function} Function that maps selectors to resolvers.\n */\nfunction mapResolveSelector( store, boundMetadataSelectors ) {\n\treturn ( selector, selectorName ) => {\n\t\t// If the selector doesn't have a resolver, just convert the return value\n\t\t// (including exceptions) to a Promise, no additional extra behavior is needed.\n\t\tif ( ! selector.hasResolver ) {\n\t\t\treturn async ( ...args ) => selector.apply( null, args );\n\t\t}\n\n\t\treturn ( ...args ) =>\n\t\t\tnew Promise( ( resolve, reject ) => {\n\t\t\t\tconst hasFinished = () => {\n\t\t\t\t\treturn boundMetadataSelectors.hasFinishedResolution(\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tconst finalize = ( result ) => {\n\t\t\t\t\tconst hasFailed =\n\t\t\t\t\t\tboundMetadataSelectors.hasResolutionFailed(\n\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t\tif ( hasFailed ) {\n\t\t\t\t\t\tconst error = boundMetadataSelectors.getResolutionError(\n\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject( error );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve( result );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst getResult = () => selector.apply( null, args );\n\n\t\t\t\t// Trigger the selector (to trigger the resolver)\n\t\t\t\tconst result = getResult();\n\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\treturn finalize( result );\n\t\t\t\t}\n\n\t\t\t\tconst unsubscribe = store.subscribe( () => {\n\t\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\tfinalize( getResult() );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t};\n}\n\n/**\n * Maps selectors to functions that throw a suspense promise if not yet resolved.\n *\n * @param {Object} store                  The redux store the selectors select from.\n * @param {Object} boundMetadataSelectors The bound metadata selectors.\n *\n * @return {Function} Function that maps selectors to their suspending versions.\n */\nfunction mapSuspendSelector( store, boundMetadataSelectors ) {\n\treturn ( selector, selectorName ) => {\n\t\t// Selector without a resolver doesn't have any extra suspense behavior.\n\t\tif ( ! selector.hasResolver ) {\n\t\t\treturn selector;\n\t\t}\n\n\t\treturn ( ...args ) => {\n\t\t\tconst result = selector.apply( null, args );\n\n\t\t\tif (\n\t\t\t\tboundMetadataSelectors.hasFinishedResolution(\n\t\t\t\t\tselectorName,\n\t\t\t\t\targs\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tboundMetadataSelectors.hasResolutionFailed(\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthrow boundMetadataSelectors.getResolutionError(\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tthrow new Promise( ( resolve ) => {\n\t\t\t\tconst unsubscribe = store.subscribe( () => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tboundMetadataSelectors.hasFinishedResolution(\n\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\t};\n}\n\n/**\n * Convert a resolver to a normalized form, an object with `fulfill` method and\n * optional methods like `isFulfilled`.\n *\n * @param {Function} resolver Resolver to convert\n */\nfunction mapResolver( resolver ) {\n\tif ( resolver.fulfill ) {\n\t\treturn resolver;\n\t}\n\n\treturn {\n\t\t...resolver, // Copy the enumerable properties of the resolver function.\n\t\tfulfill: resolver, // Add the fulfill method.\n\t};\n}\n\n/**\n * Returns a selector with a matched resolver.\n * Resolvers are side effects invoked once per argument set of a given selector call,\n * used in ensuring that the data needs for the selector are satisfied.\n *\n * @param {Object} selector               The selector function to be bound.\n * @param {string} selectorName           The selector name.\n * @param {Object} resolver               Resolver to call.\n * @param {Object} store                  The redux store to which the resolvers should be mapped.\n * @param {Object} resolversCache         Resolvers Cache.\n * @param {Object} boundMetadataSelectors The bound metadata selectors.\n */\nfunction mapSelectorWithResolver(\n\tselector,\n\tselectorName,\n\tresolver,\n\tstore,\n\tresolversCache,\n\tboundMetadataSelectors\n) {\n\tfunction fulfillSelector( args ) {\n\t\tconst state = store.getState();\n\n\t\tif (\n\t\t\tresolversCache.isRunning( selectorName, args ) ||\n\t\t\t( typeof resolver.isFulfilled === 'function' &&\n\t\t\t\tresolver.isFulfilled( state, ...args ) )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tboundMetadataSelectors.hasStartedResolution( selectorName, args )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tresolversCache.markAsRunning( selectorName, args );\n\n\t\tsetTimeout( async () => {\n\t\t\tresolversCache.clear( selectorName, args );\n\t\t\tstore.dispatch(\n\t\t\t\tmetadataActions.startResolution( selectorName, args )\n\t\t\t);\n\t\t\ttry {\n\t\t\t\tconst action = resolver.fulfill( ...args );\n\t\t\t\tif ( action ) {\n\t\t\t\t\tawait store.dispatch( action );\n\t\t\t\t}\n\t\t\t\tstore.dispatch(\n\t\t\t\t\tmetadataActions.finishResolution( selectorName, args )\n\t\t\t\t);\n\t\t\t} catch ( error ) {\n\t\t\t\tstore.dispatch(\n\t\t\t\t\tmetadataActions.failResolution( selectorName, args, error )\n\t\t\t\t);\n\t\t\t}\n\t\t}, 0 );\n\t}\n\n\tconst selectorResolver = ( ...args ) => {\n\t\targs = normalize( selector, args );\n\t\tfulfillSelector( args );\n\t\treturn selector( ...args );\n\t};\n\tselectorResolver.hasResolver = true;\n\treturn selectorResolver;\n}\n\n/**\n * Applies selector's normalization function to the given arguments\n * if it exists.\n *\n * @param {Object} selector The selector potentially with a normalization method property.\n * @param {Array}  args     selector arguments to normalize.\n * @return {Array} Potentially normalized arguments.\n */\nfunction normalize( selector, args ) {\n\tif (\n\t\tselector.__unstableNormalizeArgs &&\n\t\ttypeof selector.__unstableNormalizeArgs === 'function' &&\n\t\targs?.length\n\t) {\n\t\treturn selector.__unstableNormalizeArgs( args );\n\t}\n\treturn args;\n}\n", "/**\n * Returns true if the given object is a generator, or false otherwise.\n *\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-generator-objects\n *\n * @param object Object to test.\n *\n * @return Whether object is a generator.\n */\nexport default function isGenerator( object: any ): object is Generator {\n\t// Check that iterator (next) and iterable (Symbol.iterator) interfaces are satisfied.\n\t// These checks seem to be compatible with several generator helpers as well as the native implementation.\n\treturn (\n\t\t!! object &&\n\t\ttypeof object[ Symbol.iterator ] === 'function' &&\n\t\ttypeof object.next === 'function'\n\t);\n}\n", "/**\n * External dependencies\n */\nimport type { Control } from 'rungen';\nimport { create } from 'rungen';\nimport isPromise from 'is-promise';\nimport type { Dispatch, AnyAction } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport { isActionOfType, isAction } from './is-action';\n\n/**\n * Create a co-routine runtime.\n *\n * @param controls Object of control handlers.\n * @param dispatch Unhandled action dispatch.\n */\nexport default function createRuntime(\n\tcontrols: Record<\n\t\tstring,\n\t\t( value: any ) => Promise< boolean > | boolean\n\t> = {},\n\tdispatch: Dispatch\n) {\n\tconst rungenControls = Object.entries( controls ).map(\n\t\t( [ actionType, control ] ): Control =>\n\t\t\t( value, next, iterate, yieldNext, yieldError ) => {\n\t\t\t\tif ( ! isActionOfType( value, actionType ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst routine = control( value );\n\t\t\t\tif ( isPromise( routine ) ) {\n\t\t\t\t\t// Async control routine awaits resolution.\n\t\t\t\t\troutine.then( yieldNext, yieldError );\n\t\t\t\t} else {\n\t\t\t\t\tyieldNext( routine );\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t);\n\n\tconst unhandledActionControl = (\n\t\tvalue: AnyAction | unknown,\n\t\tnext: () => void\n\t) => {\n\t\tif ( ! isAction( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tdispatch( value );\n\t\tnext();\n\t\treturn true;\n\t};\n\trungenControls.push( unhandledActionControl );\n\n\tconst rungenRuntime = create( rungenControls );\n\n\treturn ( action: AnyAction | Generator ) =>\n\t\tnew Promise( ( resolve, reject ) =>\n\t\t\trungenRuntime(\n\t\t\t\taction,\n\t\t\t\t( result ) => {\n\t\t\t\t\tif ( isAction( result ) ) {\n\t\t\t\t\t\tdispatch( result );\n\t\t\t\t\t}\n\t\t\t\t\tresolve( result );\n\t\t\t\t},\n\t\t\t\treject\n\t\t\t)\n\t\t);\n}\n", "/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\nimport type { Action } from 'redux';\n\n/**\n * Returns true if the given object quacks like an action.\n *\n * @param object Object to test\n *\n * @return Whether object is an action.\n */\nexport function isAction( object: unknown ): object is Action {\n\treturn isPlainObject( object ) && typeof object.type === 'string';\n}\n\n/**\n * Returns true if the given object quacks like an action and has a specific\n * action type\n *\n * @param object       Object to test\n * @param expectedType The expected type for the action.\n *\n * @return Whether object is an action and is of specific type.\n */\nexport function isActionOfType(\n\tobject: unknown,\n\texpectedType: string\n): object is Action {\n\treturn isAction( object ) && object.type === expectedType;\n}\n", "/**\n * External dependencies\n */\nimport type { Middleware, AnyAction } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport isGenerator from './is-generator';\nimport createRuntime from './runtime';\n\n/**\n * Creates a Redux middleware, given an object of controls where each key is an\n * action type for which to act upon, the value a function which returns either\n * a promise which is to resolve when evaluation of the action should continue,\n * or a value. The value or resolved promise value is assigned on the return\n * value of the yield assignment. If the control handler returns undefined, the\n * execution is not continued.\n *\n * @param controls Object of control handlers.\n *\n * @return Co-routine runtime\n */\nexport default function createMiddleware(\n\tcontrols: Record<\n\t\tstring,\n\t\t( value: AnyAction ) => Promise< boolean > | boolean\n\t> = {}\n): Middleware {\n\treturn ( store ) => {\n\t\tconst runtime = createRuntime( controls, store.dispatch );\n\t\treturn ( next ) => ( action ) => {\n\t\t\tif ( ! isGenerator( action ) ) {\n\t\t\t\treturn next( action );\n\t\t\t}\n\n\t\t\treturn runtime( action );\n\t\t};\n\t};\n}\n", "export function combineReducers( reducers ) {\n\tconst keys = Object.keys( reducers );\n\n\treturn function combinedReducer( state = {}, action ) {\n\t\tconst nextState = {};\n\t\tlet hasChanged = false;\n\t\tfor ( const key of keys ) {\n\t\t\tconst reducer = reducers[ key ];\n\t\t\tconst prevStateForKey = state[ key ];\n\t\t\tconst nextStateForKey = reducer( prevStateForKey, action );\n\t\t\tnextState[ key ] = nextStateForKey;\n\t\t\thasChanged = hasChanged || nextStateForKey !== prevStateForKey;\n\t\t}\n\n\t\treturn hasChanged ? nextState : state;\n\t};\n}\n", "/**\n * Internal dependencies\n */\nimport type { select as globalSelect } from './select';\n\ntype RegistrySelector< Selector extends ( ...args: any[] ) => any > = {\n\t( ...args: Parameters< Selector > ): ReturnType< Selector >;\n\tisRegistrySelector?: boolean;\n\tregistry?: any;\n};\n\n/**\n * Creates a selector function that takes additional curried argument with the\n * registry `select` function. While a regular selector has signature\n * ```js\n * ( state, ...selectorArgs ) => ( result )\n * ```\n * that allows to select data from the store's `state`, a registry selector\n * has signature:\n * ```js\n * ( select ) => ( state, ...selectorArgs ) => ( result )\n * ```\n * that supports also selecting from other registered stores.\n *\n * @example\n * ```js\n * import { store as coreStore } from '@wordpress/core-data';\n * import { store as editorStore } from '@wordpress/editor';\n *\n * const getCurrentPostId = createRegistrySelector( ( select ) => ( state ) => {\n *   return select( editorStore ).getCurrentPostId();\n * } );\n *\n * const getPostEdits = createRegistrySelector( ( select ) => ( state ) => {\n *   // calling another registry selector just like any other function\n *   const postType = getCurrentPostType( state );\n *   const postId = getCurrentPostId( state );\n *\t return select( coreStore ).getEntityRecordEdits( 'postType', postType, postId );\n * } );\n * ```\n *\n * Note how the `getCurrentPostId` selector can be called just like any other function,\n * (it works even inside a regular non-registry selector) and we don't need to pass the\n * registry as argument. The registry binding happens automatically when registering the selector\n * with a store.\n *\n * @param registrySelector Function receiving a registry `select`\n *                         function and returning a state selector.\n *\n * @return Registry selector that can be registered with a store.\n */\nexport function createRegistrySelector<\n\tSelector extends ( ...args: any[] ) => any,\n>(\n\tregistrySelector: ( select: typeof globalSelect ) => Selector\n): RegistrySelector< Selector > {\n\tconst selectorsByRegistry = new WeakMap();\n\t// Create a selector function that is bound to the registry referenced by `selector.registry`\n\t// and that has the same API as a regular selector. Binding it in such a way makes it\n\t// possible to call the selector directly from another selector.\n\tconst wrappedSelector: RegistrySelector< Selector > = ( ...args ) => {\n\t\tlet selector = selectorsByRegistry.get( wrappedSelector.registry );\n\t\t// We want to make sure the cache persists even when new registry\n\t\t// instances are created. For example patterns create their own editors\n\t\t// with their own core/block-editor stores, so we should keep track of\n\t\t// the cache for each registry instance.\n\t\tif ( ! selector ) {\n\t\t\tselector = registrySelector( wrappedSelector.registry.select );\n\t\t\tselectorsByRegistry.set( wrappedSelector.registry, selector );\n\t\t}\n\t\treturn selector( ...args );\n\t};\n\n\t/**\n\t * Flag indicating that the selector is a registry selector that needs the correct registry\n\t * reference to be assigned to `selector.registry` to make it work correctly.\n\t * be mapped as a registry selector.\n\t */\n\twrappedSelector.isRegistrySelector = true;\n\n\treturn wrappedSelector;\n}\n\n/**\n * Creates a control function that takes additional curried argument with the `registry` object.\n * While a regular control has signature\n * ```js\n * ( action ) => ( iteratorOrPromise )\n * ```\n * where the control works with the `action` that it's bound to, a registry control has signature:\n * ```js\n * ( registry ) => ( action ) => ( iteratorOrPromise )\n * ```\n * A registry control is typically used to select data or dispatch an action to a registered\n * store.\n *\n * When registering a control created with `createRegistryControl` with a store, the store\n * knows which calling convention to use when executing the control.\n *\n * @param registryControl Function receiving a registry object and returning a control.\n *\n * @return Registry control that can be registered with a store.\n */\nexport function createRegistryControl< T extends ( ...args: any ) => any >(\n\tregistryControl: T & { isRegistryControl?: boolean }\n) {\n\tregistryControl.isRegistryControl = true;\n\n\treturn registryControl;\n}\n", "/**\n * Internal dependencies\n */\nimport { createRegistryControl } from './factory';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\nconst SELECT = '@@data/SELECT';\nconst RESOLVE_SELECT = '@@data/RESOLVE_SELECT';\nconst DISPATCH = '@@data/DISPATCH';\n\nfunction isObject( object ) {\n\treturn object !== null && typeof object === 'object';\n}\n\n/**\n * Dispatches a control action for triggering a synchronous registry select.\n *\n * Note: This control synchronously returns the current selector value, triggering the\n * resolution, but not waiting for it.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 selectorName          The name of the selector.\n * @param {Array}                  args                  Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using `select`.\n * export function* myAction() {\n *   const isEditorSideBarOpened = yield controls.select( 'core/edit-post', 'isEditorSideBarOpened' );\n *   // Do stuff with the result from the `select`.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction select( storeNameOrDescriptor, selectorName, ...args ) {\n\treturn {\n\t\ttype: SELECT,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering and resolving a registry select.\n *\n * Note: when this control action is handled, it automatically considers\n * selectors that may have a resolver. In such case, it will return a `Promise` that resolves\n * after the selector finishes resolving, with the final result value.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 selectorName          The name of the selector\n * @param {Array}                  args                  Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using resolveSelect\n * export function* myAction() {\n * \tconst isSidebarOpened = yield controls.resolveSelect( 'core/edit-post', 'isEditorSideBarOpened' );\n * \t// do stuff with the result from the select.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction resolveSelect( storeNameOrDescriptor, selectorName, ...args ) {\n\treturn {\n\t\ttype: RESOLVE_SELECT,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering a registry dispatch.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 actionName            The name of the action to dispatch\n * @param {Array}                  args                  Arguments for the dispatch action.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data-controls';\n *\n * // Action generator using dispatch\n * export function* myAction() {\n *   yield controls.dispatch( 'core/editor', 'togglePublishSidebar' );\n *   // do some other things.\n * }\n * ```\n *\n * @return {Object}  The control descriptor.\n */\nfunction dispatch( storeNameOrDescriptor, actionName, ...args ) {\n\treturn {\n\t\ttype: DISPATCH,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tactionName,\n\t\targs,\n\t};\n}\n\nexport const controls = { select, resolveSelect, dispatch };\n\nexport const builtinControls = {\n\t[ SELECT ]: createRegistryControl(\n\t\t( registry ) =>\n\t\t\t( { storeKey, selectorName, args } ) =>\n\t\t\t\tregistry.select( storeKey )[ selectorName ]( ...args )\n\t),\n\t[ RESOLVE_SELECT ]: createRegistryControl(\n\t\t( registry ) =>\n\t\t\t( { storeKey, selectorName, args } ) => {\n\t\t\t\tconst method = registry.select( storeKey )[ selectorName ]\n\t\t\t\t\t.hasResolver\n\t\t\t\t\t? 'resolveSelect'\n\t\t\t\t\t: 'select';\n\t\t\t\treturn registry[ method ]( storeKey )[ selectorName ](\n\t\t\t\t\t...args\n\t\t\t\t);\n\t\t\t}\n\t),\n\t[ DISPATCH ]: createRegistryControl(\n\t\t( registry ) =>\n\t\t\t( { storeKey, actionName, args } ) =>\n\t\t\t\tregistry.dispatch( storeKey )[ actionName ]( ...args )\n\t),\n};\n", "/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/data'\n\t);\n", "/**\n * External dependencies\n */\nimport isPromise from 'is-promise';\n\n/**\n * Simplest possible promise redux middleware.\n *\n * @type {import('redux').Middleware}\n */\nconst promiseMiddleware = () => ( next ) => ( action ) => {\n\tif ( isPromise( action ) ) {\n\t\treturn action.then( ( resolvedAction ) => {\n\t\t\tif ( resolvedAction ) {\n\t\t\t\treturn next( resolvedAction );\n\t\t\t}\n\t\t} );\n\t}\n\n\treturn next( action );\n};\n\nexport default promiseMiddleware;\n", "/** @typedef {import('./registry').WPDataRegistry} WPDataRegistry */\n\n/**\n * Creates a middleware handling resolvers cache invalidation.\n *\n * @param {WPDataRegistry} registry  Registry for which to create the middleware.\n * @param {string}         storeName Name of the store for which to create the middleware.\n *\n * @return {Function} Middleware function.\n */\nconst createResolversCacheMiddleware =\n\t( registry, storeName ) => () => ( next ) => ( action ) => {\n\t\tconst resolvers = registry.select( storeName ).getCachedResolvers();\n\t\tconst resolverEntries = Object.entries( resolvers );\n\t\tresolverEntries.forEach( ( [ selectorName, resolversByArgs ] ) => {\n\t\t\tconst resolver =\n\t\t\t\tregistry.stores[ storeName ]?.resolvers?.[ selectorName ];\n\t\t\tif ( ! resolver || ! resolver.shouldInvalidate ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolversByArgs.forEach( ( value, args ) => {\n\t\t\t\t// Works around a bug in `EquivalentKeyMap` where `map.delete` merely sets an entry value\n\t\t\t\t// to `undefined` and `map.forEach` then iterates also over these orphaned entries.\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// resolversByArgs is the map Map([ args ] => boolean) storing the cache resolution status for a given selector.\n\t\t\t\t// If the value is \"finished\" or \"error\" it means this resolver has finished its resolution which means we need\n\t\t\t\t// to invalidate it, if it's true it means it's inflight and the invalidation is not necessary.\n\t\t\t\tif ( value.status !== 'finished' && value.status !== 'error' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( ! resolver.shouldInvalidate( action, ...args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Trigger cache invalidation\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( storeName )\n\t\t\t\t\t.invalidateResolution( selectorName, args );\n\t\t\t} );\n\t\t} );\n\t\treturn next( action );\n\t};\n\nexport default createResolversCacheMiddleware;\n", "export default function createThunkMiddleware( args ) {\n\treturn () => ( next ) => ( action ) => {\n\t\tif ( typeof action === 'function' ) {\n\t\t\treturn action( args );\n\t\t}\n\n\t\treturn next( action );\n\t};\n}\n", "/**\n * External dependencies\n */\nimport EquivalentKeyMap from 'equivalent-key-map';\nimport type { Reducer } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport { selectorArgsToStateKey, onSubKey } from './utils';\n\ntype Action =\n\t| ReturnType< typeof import('./actions').startResolution >\n\t| ReturnType< typeof import('./actions').finishResolution >\n\t| ReturnType< typeof import('./actions').failResolution >\n\t| ReturnType< typeof import('./actions').startResolutions >\n\t| ReturnType< typeof import('./actions').finishResolutions >\n\t| ReturnType< typeof import('./actions').failResolutions >\n\t| ReturnType< typeof import('./actions').invalidateResolution >\n\t| ReturnType< typeof import('./actions').invalidateResolutionForStore >\n\t| ReturnType<\n\t\t\ttypeof import('./actions').invalidateResolutionForStoreSelector\n\t  >;\n\ntype StateKey = unknown[] | unknown;\nexport type StateValue =\n\t| { status: 'resolving' | 'finished' }\n\t| { status: 'error'; error: Error | unknown };\n\nexport type Status = StateValue[ 'status' ];\nexport type State = EquivalentKeyMap< StateKey, StateValue >;\n\n/**\n * Reducer function returning next state for selector resolution of\n * subkeys, object form:\n *\n *  selectorName -> EquivalentKeyMap<Array,boolean>\n */\nconst subKeysIsResolved: Reducer< Record< string, State >, Action > = onSubKey<\n\tState,\n\tAction\n>( 'selectorName' )( ( state = new EquivalentKeyMap(), action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'START_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'resolving',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'finished',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: action.error,\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'START_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'resolving',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'finished',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\taction.args.forEach( ( resolutionArgs, idx ) => {\n\t\t\t\tconst resolutionState: StateValue = {\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\terror: undefined,\n\t\t\t\t};\n\n\t\t\t\tconst error = action.errors[ idx ];\n\t\t\t\tif ( error ) {\n\t\t\t\t\tresolutionState.error = error;\n\t\t\t\t}\n\n\t\t\t\tnextState.set(\n\t\t\t\t\tselectorArgsToStateKey( resolutionArgs as unknown[] ),\n\t\t\t\t\tresolutionState\n\t\t\t\t);\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'INVALIDATE_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.delete( selectorArgsToStateKey( action.args ) );\n\t\t\treturn nextState;\n\t\t}\n\t}\n\treturn state;\n} );\n\n/**\n * Reducer function returning next state for selector resolution, object form:\n *\n *   selectorName -> EquivalentKeyMap<Array, boolean>\n *\n * @param state  Current state.\n * @param action Dispatched action.\n *\n * @return Next state.\n */\nconst isResolved = ( state: Record< string, State > = {}, action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE':\n\t\t\treturn {};\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR': {\n\t\t\tif ( action.selectorName in state ) {\n\t\t\t\tconst {\n\t\t\t\t\t[ action.selectorName ]: removedSelector,\n\t\t\t\t\t...restState\n\t\t\t\t} = state;\n\t\t\t\treturn restState;\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\t\tcase 'START_RESOLUTION':\n\t\tcase 'FINISH_RESOLUTION':\n\t\tcase 'FAIL_RESOLUTION':\n\t\tcase 'START_RESOLUTIONS':\n\t\tcase 'FINISH_RESOLUTIONS':\n\t\tcase 'FAIL_RESOLUTIONS':\n\t\tcase 'INVALIDATE_RESOLUTION':\n\t\t\treturn subKeysIsResolved( state, action );\n\t}\n\treturn state;\n};\n\nexport default isResolved;\n", "/**\n * External dependencies\n */\nimport type { AnyAction, Reducer } from 'redux';\n\n/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param actionProperty Action property by which to key object.\n * @return Higher-order reducer.\n */\nexport const onSubKey =\n\t< TState extends unknown, TAction extends AnyAction >(\n\t\tactionProperty: string\n\t) =>\n\t(\n\t\treducer: Reducer< TState, TAction >\n\t): Reducer< Record< string, TState >, TAction > =>\n\t( state: Record< string, TState > = {}, action ) => {\n\t\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t\t// where reducer is scoped by action shape.\n\t\tconst key = action[ actionProperty ];\n\t\tif ( key === undefined ) {\n\t\t\treturn state;\n\t\t}\n\n\t\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t\t// reducer which returns undefined on a key which is not yet tracked.\n\t\tconst nextKeyState = reducer( state[ key ], action );\n\t\tif ( nextKeyState === state[ key ] ) {\n\t\t\treturn state;\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ key ]: nextKeyState,\n\t\t};\n\t};\n\n/**\n * Normalize selector argument array by defaulting `undefined` value to an empty array\n * and removing trailing `undefined` values.\n *\n * @param args Selector argument array\n * @return Normalized state key array\n */\nexport function selectorArgsToStateKey( args: unknown[] | null | undefined ) {\n\tif ( args === undefined || args === null ) {\n\t\treturn [];\n\t}\n\n\tconst len = args.length;\n\tlet idx = len;\n\twhile ( idx > 0 && args[ idx - 1 ] === undefined ) {\n\t\tidx--;\n\t}\n\treturn idx === len ? args : args.slice( 0, idx );\n}\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { createSelector } from '../../create-selector';\nimport { selectorArgsToStateKey } from './utils';\n\n/** @typedef {Record<string, import('./reducer').State>} State */\n/** @typedef {import('./reducer').StateValue} StateValue */\n/** @typedef {import('./reducer').Status} Status */\n\n/**\n * Returns the raw resolution state value for a given selector name,\n * and arguments set. May be undefined if the selector has never been resolved\n * or not resolved for the given set of arguments, otherwise true or false for\n * resolution started and completed respectively.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {StateValue|undefined} isResolving value.\n */\nexport function getResolutionState( state, selectorName, args ) {\n\tconst map = state[ selectorName ];\n\tif ( ! map ) {\n\t\treturn;\n\t}\n\n\treturn map.get( selectorArgsToStateKey( args ) );\n}\n\n/**\n * Returns an `isResolving`-like value for a given selector name and arguments set.\n * Its value is either `undefined` if the selector has never been resolved or has been\n * invalidated, or a `true`/`false` boolean value if the resolution is in progress or\n * has finished, respectively.\n *\n * This is a legacy selector that was implemented when the \"raw\" internal data had\n * this `undefined | boolean` format. Nowadays the internal value is an object that\n * can be retrieved with `getResolutionState`.\n *\n * @deprecated\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean | undefined} isResolving value.\n */\nexport function getIsResolving( state, selectorName, args ) {\n\tdeprecated( 'wp.data.select( store ).getIsResolving', {\n\t\tsince: '6.6',\n\t\tversion: '6.8',\n\t\talternative: 'wp.data.select( store ).getResolutionState',\n\t} );\n\n\tconst resolutionState = getResolutionState( state, selectorName, args );\n\treturn resolutionState && resolutionState.status === 'resolving';\n}\n\n/**\n * Returns true if resolution has already been triggered for a given\n * selector name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution has been triggered.\n */\nexport function hasStartedResolution( state, selectorName, args ) {\n\treturn getResolutionState( state, selectorName, args ) !== undefined;\n}\n\n/**\n * Returns true if resolution has completed for a given selector\n * name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution has completed.\n */\nexport function hasFinishedResolution( state, selectorName, args ) {\n\tconst status = getResolutionState( state, selectorName, args )?.status;\n\treturn status === 'finished' || status === 'error';\n}\n\n/**\n * Returns true if resolution has failed for a given selector\n * name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Has resolution failed\n */\nexport function hasResolutionFailed( state, selectorName, args ) {\n\treturn getResolutionState( state, selectorName, args )?.status === 'error';\n}\n\n/**\n * Returns the resolution error for a given selector name, and arguments set.\n * Note it may be of an Error type, but may also be null, undefined, or anything else\n * that can be `throw`-n.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {Error|unknown} Last resolution error\n */\nexport function getResolutionError( state, selectorName, args ) {\n\tconst resolutionState = getResolutionState( state, selectorName, args );\n\treturn resolutionState?.status === 'error' ? resolutionState.error : null;\n}\n\n/**\n * Returns true if resolution has been triggered but has not yet completed for\n * a given selector name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution is in progress.\n */\nexport function isResolving( state, selectorName, args ) {\n\treturn (\n\t\tgetResolutionState( state, selectorName, args )?.status === 'resolving'\n\t);\n}\n\n/**\n * Returns the list of the cached resolvers.\n *\n * @param {State} state Data state.\n *\n * @return {State} Resolvers mapped by args and selectorName.\n */\nexport function getCachedResolvers( state ) {\n\treturn state;\n}\n\n/**\n * Whether the store has any currently resolving selectors.\n *\n * @param {State} state Data state.\n *\n * @return {boolean} True if one or more selectors are resolving, false otherwise.\n */\nexport function hasResolvingSelectors( state ) {\n\treturn Object.values( state ).some( ( selectorState ) =>\n\t\t/**\n\t\t * This uses the internal `_map` property of `EquivalentKeyMap` for\n\t\t * optimization purposes, since the `EquivalentKeyMap` implementation\n\t\t * does not support a `.values()` implementation.\n\t\t *\n\t\t * @see https://github.com/aduth/equivalent-key-map\n\t\t */\n\t\tArray.from( selectorState._map.values() ).some(\n\t\t\t( resolution ) => resolution[ 1 ]?.status === 'resolving'\n\t\t)\n\t);\n}\n\n/**\n * Retrieves the total number of selectors, grouped per status.\n *\n * @param {State} state Data state.\n *\n * @return {Object} Object, containing selector totals by status.\n */\nexport const countSelectorsByStatus = createSelector(\n\t( state ) => {\n\t\tconst selectorsByStatus = {};\n\n\t\tObject.values( state ).forEach( ( selectorState ) =>\n\t\t\t/**\n\t\t\t * This uses the internal `_map` property of `EquivalentKeyMap` for\n\t\t\t * optimization purposes, since the `EquivalentKeyMap` implementation\n\t\t\t * does not support a `.values()` implementation.\n\t\t\t *\n\t\t\t * @see https://github.com/aduth/equivalent-key-map\n\t\t\t */\n\t\t\tArray.from( selectorState._map.values() ).forEach(\n\t\t\t\t( resolution ) => {\n\t\t\t\t\tconst currentStatus = resolution[ 1 ]?.status ?? 'error';\n\t\t\t\t\tif ( ! selectorsByStatus[ currentStatus ] ) {\n\t\t\t\t\t\tselectorsByStatus[ currentStatus ] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tselectorsByStatus[ currentStatus ]++;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\treturn selectorsByStatus;\n\t},\n\t( state ) => [ state ]\n);\n", "/**\n * Returns an action object used in signalling that selector resolution has\n * started.\n *\n * @param {string}    selectorName Name of selector for which resolver triggered.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'START_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\n */\nexport function startResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'START_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that selector resolution has\n * completed.\n *\n * @param {string}    selectorName Name of selector for which resolver triggered.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'FINISH_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\n */\nexport function finishResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'FINISH_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that selector resolution has\n * failed.\n *\n * @param {string}        selectorName Name of selector for which resolver triggered.\n * @param {unknown[]}     args         Arguments to associate for uniqueness.\n * @param {Error|unknown} error        The error that caused the failure.\n *\n * @return {{ type: 'FAIL_RESOLUTION', selectorName: string, args: unknown[], error: Error|unknown }} Action object.\n */\nexport function failResolution( selectorName, args, error ) {\n\treturn {\n\t\ttype: 'FAIL_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t\terror,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * started.\n *\n * @param {string}      selectorName Name of selector for which resolver triggered.\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\n *                                   is associated to a resolution.\n *\n * @return {{ type: 'START_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\n */\nexport function startResolutions( selectorName, args ) {\n\treturn {\n\t\ttype: 'START_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * completed.\n *\n * @param {string}      selectorName Name of selector for which resolver triggered.\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\n *                                   is associated to a resolution.\n *\n * @return {{ type: 'FINISH_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\n */\nexport function finishResolutions( selectorName, args ) {\n\treturn {\n\t\ttype: 'FINISH_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * completed and at least one of them has failed.\n *\n * @param {string}            selectorName Name of selector for which resolver triggered.\n * @param {unknown[]}         args         Array of arguments to associate for uniqueness, each item\n *                                         is associated to a resolution.\n * @param {(Error|unknown)[]} errors       Array of errors to associate for uniqueness, each item\n *                                         is associated to a resolution.\n * @return {{ type: 'FAIL_RESOLUTIONS', selectorName: string, args: unknown[], errors: Array<Error|unknown> }} Action object.\n */\nexport function failResolutions( selectorName, args, errors ) {\n\treturn {\n\t\ttype: 'FAIL_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t\terrors,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that we should invalidate the resolution cache.\n *\n * @param {string}    selectorName Name of selector for which resolver should be invalidated.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'INVALIDATE_RESOLUTION', selectorName: string, args: any[] }} Action object.\n */\nexport function invalidateResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the resolution\n * should be invalidated.\n *\n * @return {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE' }} Action object.\n */\nexport function invalidateResolutionForStore() {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the resolution cache for a\n * given selectorName should be invalidated.\n *\n * @param {string} selectorName Name of selector for which all resolvers should\n *                              be invalidated.\n *\n * @return  {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR', selectorName: string }} Action object.\n */\nexport function invalidateResolutionForStoreSelector( selectorName ) {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR',\n\t\tselectorName,\n\t};\n}\n", "const coreDataStore = {\n\tname: 'core/data',\n\tinstantiate( registry ) {\n\t\tconst getCoreDataSelector =\n\t\t\t( selectorName ) =>\n\t\t\t( key, ...args ) => {\n\t\t\t\treturn registry.select( key )[ selectorName ]( ...args );\n\t\t\t};\n\n\t\tconst getCoreDataAction =\n\t\t\t( actionName ) =>\n\t\t\t( key, ...args ) => {\n\t\t\t\treturn registry.dispatch( key )[ actionName ]( ...args );\n\t\t\t};\n\n\t\treturn {\n\t\t\tgetSelectors() {\n\t\t\t\treturn Object.fromEntries(\n\t\t\t\t\t[\n\t\t\t\t\t\t'getIsResolving',\n\t\t\t\t\t\t'hasStartedResolution',\n\t\t\t\t\t\t'hasFinishedResolution',\n\t\t\t\t\t\t'isResolving',\n\t\t\t\t\t\t'getCachedResolvers',\n\t\t\t\t\t].map( ( selectorName ) => [\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\tgetCoreDataSelector( selectorName ),\n\t\t\t\t\t] )\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tgetActions() {\n\t\t\t\treturn Object.fromEntries(\n\t\t\t\t\t[\n\t\t\t\t\t\t'startResolution',\n\t\t\t\t\t\t'finishResolution',\n\t\t\t\t\t\t'invalidateResolution',\n\t\t\t\t\t\t'invalidateResolutionForStore',\n\t\t\t\t\t\t'invalidateResolutionForStoreSelector',\n\t\t\t\t\t].map( ( actionName ) => [\n\t\t\t\t\t\tactionName,\n\t\t\t\t\t\tgetCoreDataAction( actionName ),\n\t\t\t\t\t] )\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tsubscribe() {\n\t\t\t\t// There's no reasons to trigger any listener when we subscribe to this store\n\t\t\t\t// because there's no state stored in this store that need to retrigger selectors\n\t\t\t\t// if a change happens, the corresponding store where the tracking stated live\n\t\t\t\t// would have already triggered a \"subscribe\" call.\n\t\t\t\treturn () => () => {};\n\t\t\t},\n\t\t};\n\t},\n};\n\nexport default coreDataStore;\n", "export interface DataEmitter {\n\temit: VoidFunction;\n\tsubscribe: ( listener: VoidFunction ) => VoidFunction;\n\tpause: VoidFunction;\n\tresume: VoidFunction;\n\tisPaused: boolean;\n}\n\n/**\n * Create an event emitter.\n *\n * @return The event emitter.\n */\nexport function createEmitter(): DataEmitter {\n\tlet isPaused = false;\n\tlet isPending = false;\n\tconst listeners = new Set< VoidFunction >();\n\tconst notifyListeners = () =>\n\t\t// We use Array.from to clone the listeners Set\n\t\t// This ensures that we don't run a listener\n\t\t// that was added as a response to another listener.\n\t\tArray.from( listeners ).forEach( ( listener ) => listener() );\n\n\treturn {\n\t\tget isPaused() {\n\t\t\treturn isPaused;\n\t\t},\n\n\t\tsubscribe( listener ) {\n\t\t\tlisteners.add( listener );\n\t\t\treturn () => listeners.delete( listener );\n\t\t},\n\n\t\tpause() {\n\t\t\tisPaused = true;\n\t\t},\n\n\t\tresume() {\n\t\t\tisPaused = false;\n\t\t\tif ( isPending ) {\n\t\t\t\tisPending = false;\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t},\n\n\t\temit() {\n\t\t\tif ( isPaused ) {\n\t\t\t\tisPending = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport createReduxStore from './redux-store';\nimport coreDataStore from './store';\nimport { createEmitter } from './utils/emitter';\nimport { lock, unlock } from './lock-unlock';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\n/**\n * @typedef {Object} WPDataRegistry An isolated orchestrator of store registrations.\n *\n * @property {Function} registerGenericStore Given a namespace key and settings\n *                                           object, registers a new generic\n *                                           store.\n * @property {Function} registerStore        Given a namespace key and settings\n *                                           object, registers a new namespace\n *                                           store.\n * @property {Function} subscribe            Given a function callback, invokes\n *                                           the callback on any change to state\n *                                           within any registered store.\n * @property {Function} select               Given a namespace key, returns an\n *                                           object of the  store's registered\n *                                           selectors.\n * @property {Function} dispatch             Given a namespace key, returns an\n *                                           object of the store's registered\n *                                           action dispatchers.\n */\n\n/**\n * @typedef {Object} WPDataPlugin An object of registry function overrides.\n *\n * @property {Function} registerStore registers store.\n */\n\nfunction getStoreName( storeNameOrDescriptor ) {\n\treturn typeof storeNameOrDescriptor === 'string'\n\t\t? storeNameOrDescriptor\n\t\t: storeNameOrDescriptor.name;\n}\n/**\n * Creates a new store registry, given an optional object of initial store\n * configurations.\n *\n * @param {Object}  storeConfigs Initial store configurations.\n * @param {?Object} parent       Parent registry.\n *\n * @return {WPDataRegistry} Data registry.\n */\nexport function createRegistry( storeConfigs = {}, parent = null ) {\n\tconst stores = {};\n\tconst emitter = createEmitter();\n\tlet listeningStores = null;\n\n\t/**\n\t * Global listener called for each store's update.\n\t */\n\tfunction globalListener() {\n\t\temitter.emit();\n\t}\n\n\t/**\n\t * Subscribe to changes to any data, either in all stores in registry, or\n\t * in one specific store.\n\t *\n\t * @param {Function}                listener              Listener function.\n\t * @param {string|StoreDescriptor?} storeNameOrDescriptor Optional store name.\n\t *\n\t * @return {Function} Unsubscribe function.\n\t */\n\tconst subscribe = ( listener, storeNameOrDescriptor ) => {\n\t\t// subscribe to all stores\n\t\tif ( ! storeNameOrDescriptor ) {\n\t\t\treturn emitter.subscribe( listener );\n\t\t}\n\n\t\t// subscribe to one store\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.subscribe( listener );\n\t\t}\n\n\t\t// Trying to access a store that hasn't been registered,\n\t\t// this is a pattern rarely used but seen in some places.\n\t\t// We fallback to global `subscribe` here for backward-compatibility for now.\n\t\t// See https://github.com/WordPress/gutenberg/pull/27466 for more info.\n\t\tif ( ! parent ) {\n\t\t\treturn emitter.subscribe( listener );\n\t\t}\n\n\t\treturn parent.subscribe( listener, storeNameOrDescriptor );\n\t};\n\n\t/**\n\t * Calls a selector given the current state and extra arguments.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The selector's returned value.\n\t */\n\tfunction select( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getSelectors();\n\t\t}\n\n\t\treturn parent?.select( storeName );\n\t}\n\n\tfunction __unstableMarkListeningStores( callback, ref ) {\n\t\tlisteningStores = new Set();\n\t\ttry {\n\t\t\treturn callback.call( this );\n\t\t} finally {\n\t\t\tref.current = Array.from( listeningStores );\n\t\t\tlisteningStores = null;\n\t\t}\n\t}\n\n\t/**\n\t * Given a store descriptor, returns an object containing the store's selectors pre-bound to\n\t * state so that you only need to supply additional arguments, and modified so that they return\n\t * promises that resolve to their eventual values, after any resolvers have ran.\n\t *\n\t * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n\t *                                                       convention of passing the store name is\n\t *                                                       also supported.\n\t *\n\t * @return {Object} Each key of the object matches the name of a selector.\n\t */\n\tfunction resolveSelect( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getResolveSelectors();\n\t\t}\n\n\t\treturn parent && parent.resolveSelect( storeName );\n\t}\n\n\t/**\n\t * Given a store descriptor, returns an object containing the store's selectors pre-bound to\n\t * state so that you only need to supply additional arguments, and modified so that they throw\n\t * promises in case the selector is not resolved yet.\n\t *\n\t * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n\t *                                                       convention of passing the store name is\n\t *                                                       also supported.\n\t *\n\t * @return {Object} Object containing the store's suspense-wrapped selectors.\n\t */\n\tfunction suspendSelect( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getSuspendSelectors();\n\t\t}\n\n\t\treturn parent && parent.suspendSelect( storeName );\n\t}\n\n\t/**\n\t * Returns the available actions for a part of the state.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The action's returned value.\n\t */\n\tfunction dispatch( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getActions();\n\t\t}\n\n\t\treturn parent && parent.dispatch( storeName );\n\t}\n\n\t//\n\t// Deprecated\n\t// TODO: Remove this after `use()` is removed.\n\tfunction withPlugins( attributes ) {\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries( attributes ).map( ( [ key, attribute ] ) => {\n\t\t\t\tif ( typeof attribute !== 'function' ) {\n\t\t\t\t\treturn [ key, attribute ];\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tkey,\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn registry[ key ].apply( null, arguments );\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Registers a store instance.\n\t *\n\t * @param {string}   name        Store registry name.\n\t * @param {Function} createStore Function that creates a store object (getSelectors, getActions, subscribe).\n\t */\n\tfunction registerStoreInstance( name, createStore ) {\n\t\tif ( stores[ name ] ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'Store \"' + name + '\" is already registered.' );\n\t\t\treturn stores[ name ];\n\t\t}\n\n\t\tconst store = createStore();\n\n\t\tif ( typeof store.getSelectors !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getSelectors must be a function' );\n\t\t}\n\t\tif ( typeof store.getActions !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getActions must be a function' );\n\t\t}\n\t\tif ( typeof store.subscribe !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.subscribe must be a function' );\n\t\t}\n\t\t// The emitter is used to keep track of active listeners when the registry\n\t\t// get paused, that way, when resumed we should be able to call all these\n\t\t// pending listeners.\n\t\tstore.emitter = createEmitter();\n\t\tconst currentSubscribe = store.subscribe;\n\t\tstore.subscribe = ( listener ) => {\n\t\t\tconst unsubscribeFromEmitter = store.emitter.subscribe( listener );\n\t\t\tconst unsubscribeFromStore = currentSubscribe( () => {\n\t\t\t\tif ( store.emitter.isPaused ) {\n\t\t\t\t\tstore.emitter.emit();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlistener();\n\t\t\t} );\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromStore?.();\n\t\t\t\tunsubscribeFromEmitter?.();\n\t\t\t};\n\t\t};\n\t\tstores[ name ] = store;\n\t\tstore.subscribe( globalListener );\n\n\t\t// Copy private actions and selectors from the parent store.\n\t\tif ( parent ) {\n\t\t\ttry {\n\t\t\t\tunlock( store.store ).registerPrivateActions(\n\t\t\t\t\tunlock( parent ).privateActionsOf( name )\n\t\t\t\t);\n\t\t\t\tunlock( store.store ).registerPrivateSelectors(\n\t\t\t\t\tunlock( parent ).privateSelectorsOf( name )\n\t\t\t\t);\n\t\t\t} catch ( e ) {\n\t\t\t\t// unlock() throws if store.store was not locked.\n\t\t\t\t// The error indicates there's nothing to do here so let's\n\t\t\t\t// ignore it.\n\t\t\t}\n\t\t}\n\n\t\treturn store;\n\t}\n\n\t/**\n\t * Registers a new store given a store descriptor.\n\t *\n\t * @param {StoreDescriptor} store Store descriptor.\n\t */\n\tfunction register( store ) {\n\t\tregisterStoreInstance( store.name, () =>\n\t\t\tstore.instantiate( registry )\n\t\t);\n\t}\n\n\tfunction registerGenericStore( name, store ) {\n\t\tdeprecated( 'wp.data.registerGenericStore', {\n\t\t\tsince: '5.9',\n\t\t\talternative: 'wp.data.register( storeDescriptor )',\n\t\t} );\n\t\tregisterStoreInstance( name, () => store );\n\t}\n\n\t/**\n\t * Registers a standard `@wordpress/data` store.\n\t *\n\t * @param {string} storeName Unique namespace identifier.\n\t * @param {Object} options   Store description (reducer, actions, selectors, resolvers).\n\t *\n\t * @return {Object} Registered store object.\n\t */\n\tfunction registerStore( storeName, options ) {\n\t\tif ( ! options.reducer ) {\n\t\t\tthrow new TypeError( 'Must specify store reducer' );\n\t\t}\n\n\t\tconst store = registerStoreInstance( storeName, () =>\n\t\t\tcreateReduxStore( storeName, options ).instantiate( registry )\n\t\t);\n\n\t\treturn store.store;\n\t}\n\n\tfunction batch( callback ) {\n\t\t// If we're already batching, just call the callback.\n\t\tif ( emitter.isPaused ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\temitter.pause();\n\t\tObject.values( stores ).forEach( ( store ) => store.emitter.pause() );\n\t\ttry {\n\t\t\tcallback();\n\t\t} finally {\n\t\t\temitter.resume();\n\t\t\tObject.values( stores ).forEach( ( store ) =>\n\t\t\t\tstore.emitter.resume()\n\t\t\t);\n\t\t}\n\t}\n\n\tlet registry = {\n\t\tbatch,\n\t\tstores,\n\t\tnamespaces: stores, // TODO: Deprecate/remove this.\n\t\tsubscribe,\n\t\tselect,\n\t\tresolveSelect,\n\t\tsuspendSelect,\n\t\tdispatch,\n\t\tuse,\n\t\tregister,\n\t\tregisterGenericStore,\n\t\tregisterStore,\n\t\t__unstableMarkListeningStores,\n\t};\n\n\t//\n\t// TODO:\n\t// This function will be deprecated as soon as it is no longer internally referenced.\n\tfunction use( plugin, options ) {\n\t\tif ( ! plugin ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregistry = {\n\t\t\t...registry,\n\t\t\t...plugin( registry, options ),\n\t\t};\n\n\t\treturn registry;\n\t}\n\n\tregistry.register( coreDataStore );\n\n\tfor ( const [ name, config ] of Object.entries( storeConfigs ) ) {\n\t\tregistry.register( createReduxStore( name, config ) );\n\t}\n\n\tif ( parent ) {\n\t\tparent.subscribe( globalListener );\n\t}\n\n\tconst registryWithPlugins = withPlugins( registry );\n\tlock( registryWithPlugins, {\n\t\tprivateActionsOf: ( name ) => {\n\t\t\ttry {\n\t\t\t\treturn unlock( stores[ name ].store ).privateActions;\n\t\t\t} catch ( e ) {\n\t\t\t\t// unlock() throws an error the store was not locked – this means\n\t\t\t\t// there no private actions are available\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\tprivateSelectorsOf: ( name ) => {\n\t\t\ttry {\n\t\t\t\treturn unlock( stores[ name ].store ).privateSelectors;\n\t\t\t} catch ( e ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t} );\n\treturn registryWithPlugins;\n}\n", "/**\n * Internal dependencies\n */\nimport { createRegistry } from './registry';\n\nexport default createRegistry();\n", "/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\nimport deepmerge from 'deepmerge';\n\n/**\n * Internal dependencies\n */\nimport defaultStorage from './storage/default';\nimport { combineReducers } from '../../';\n\n/** @typedef {import('../../registry').WPDataRegistry} WPDataRegistry */\n\n/** @typedef {import('../../registry').WPDataPlugin} WPDataPlugin */\n\n/**\n * @typedef {Object} WPDataPersistencePluginOptions Persistence plugin options.\n *\n * @property {Storage} storage    Persistent storage implementation. This must\n *                                at least implement `getItem` and `setItem` of\n *                                the Web Storage API.\n * @property {string}  storageKey Key on which to set in persistent storage.\n */\n\n/**\n * Default plugin storage.\n *\n * @type {Storage}\n */\nconst DEFAULT_STORAGE = defaultStorage;\n\n/**\n * Default plugin storage key.\n *\n * @type {string}\n */\nconst DEFAULT_STORAGE_KEY = 'WP_DATA';\n\n/**\n * Higher-order reducer which invokes the original reducer only if state is\n * inequal from that of the action's `nextState` property, otherwise returning\n * the original state reference.\n *\n * @param {Function} reducer Original reducer.\n *\n * @return {Function} Enhanced reducer.\n */\nexport const withLazySameState = ( reducer ) => ( state, action ) => {\n\tif ( action.nextState === state ) {\n\t\treturn state;\n\t}\n\n\treturn reducer( state, action );\n};\n\n/**\n * Creates a persistence interface, exposing getter and setter methods (`get`\n * and `set` respectively).\n *\n * @param {WPDataPersistencePluginOptions} options Plugin options.\n *\n * @return {Object} Persistence interface.\n */\nexport function createPersistenceInterface( options ) {\n\tconst { storage = DEFAULT_STORAGE, storageKey = DEFAULT_STORAGE_KEY } =\n\t\toptions;\n\n\tlet data;\n\n\t/**\n\t * Returns the persisted data as an object, defaulting to an empty object.\n\t *\n\t * @return {Object} Persisted data.\n\t */\n\tfunction getData() {\n\t\tif ( data === undefined ) {\n\t\t\t// If unset, getItem is expected to return null. Fall back to\n\t\t\t// empty object.\n\t\t\tconst persisted = storage.getItem( storageKey );\n\t\t\tif ( persisted === null ) {\n\t\t\t\tdata = {};\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse( persisted );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\t// Similarly, should any error be thrown during parse of\n\t\t\t\t\t// the string (malformed JSON), fall back to empty object.\n\t\t\t\t\tdata = {};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Merges an updated reducer state into the persisted data.\n\t *\n\t * @param {string} key   Key to update.\n\t * @param {*}      value Updated value.\n\t */\n\tfunction setData( key, value ) {\n\t\tdata = { ...data, [ key ]: value };\n\t\tstorage.setItem( storageKey, JSON.stringify( data ) );\n\t}\n\n\treturn {\n\t\tget: getData,\n\t\tset: setData,\n\t};\n}\n\n/**\n * Data plugin to persist store state into a single storage key.\n *\n * @param {WPDataRegistry}                  registry      Data registry.\n * @param {?WPDataPersistencePluginOptions} pluginOptions Plugin options.\n *\n * @return {WPDataPlugin} Data plugin.\n */\nfunction persistencePlugin( registry, pluginOptions ) {\n\tconst persistence = createPersistenceInterface( pluginOptions );\n\n\t/**\n\t * Creates an enhanced store dispatch function, triggering the state of the\n\t * given store name to be persisted when changed.\n\t *\n\t * @param {Function}       getState  Function which returns current state.\n\t * @param {string}         storeName Store name.\n\t * @param {?Array<string>} keys      Optional subset of keys to save.\n\t *\n\t * @return {Function} Enhanced dispatch function.\n\t */\n\tfunction createPersistOnChange( getState, storeName, keys ) {\n\t\tlet getPersistedState;\n\t\tif ( Array.isArray( keys ) ) {\n\t\t\t// Given keys, the persisted state should by produced as an object\n\t\t\t// of the subset of keys. This implementation uses combineReducers\n\t\t\t// to leverage its behavior of returning the same object when none\n\t\t\t// of the property values changes. This allows a strict reference\n\t\t\t// equality to bypass a persistence set on an unchanging state.\n\t\t\tconst reducers = keys.reduce(\n\t\t\t\t( accumulator, key ) =>\n\t\t\t\t\tObject.assign( accumulator, {\n\t\t\t\t\t\t[ key ]: ( state, action ) => action.nextState[ key ],\n\t\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tgetPersistedState = withLazySameState(\n\t\t\t\tcombineReducers( reducers )\n\t\t\t);\n\t\t} else {\n\t\t\tgetPersistedState = ( state, action ) => action.nextState;\n\t\t}\n\n\t\tlet lastState = getPersistedState( undefined, {\n\t\t\tnextState: getState(),\n\t\t} );\n\n\t\treturn () => {\n\t\t\tconst state = getPersistedState( lastState, {\n\t\t\t\tnextState: getState(),\n\t\t\t} );\n\t\t\tif ( state !== lastState ) {\n\t\t\t\tpersistence.set( storeName, state );\n\t\t\t\tlastState = state;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn {\n\t\tregisterStore( storeName, options ) {\n\t\t\tif ( ! options.persist ) {\n\t\t\t\treturn registry.registerStore( storeName, options );\n\t\t\t}\n\n\t\t\t// Load from persistence to use as initial state.\n\t\t\tconst persistedState = persistence.get()[ storeName ];\n\t\t\tif ( persistedState !== undefined ) {\n\t\t\t\tlet initialState = options.reducer( options.initialState, {\n\t\t\t\t\ttype: '@@WP/PERSISTENCE_RESTORE',\n\t\t\t\t} );\n\n\t\t\t\tif (\n\t\t\t\t\tisPlainObject( initialState ) &&\n\t\t\t\t\tisPlainObject( persistedState )\n\t\t\t\t) {\n\t\t\t\t\t// If state is an object, ensure that:\n\t\t\t\t\t// - Other keys are left intact when persisting only a\n\t\t\t\t\t//   subset of keys.\n\t\t\t\t\t// - New keys in what would otherwise be used as initial\n\t\t\t\t\t//   state are deeply merged as base for persisted value.\n\t\t\t\t\tinitialState = deepmerge( initialState, persistedState, {\n\t\t\t\t\t\tisMergeableObject: isPlainObject,\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t// If there is a mismatch in object-likeness of default\n\t\t\t\t\t// initial or persisted state, defer to persisted value.\n\t\t\t\t\tinitialState = persistedState;\n\t\t\t\t}\n\n\t\t\t\toptions = {\n\t\t\t\t\t...options,\n\t\t\t\t\tinitialState,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst store = registry.registerStore( storeName, options );\n\n\t\t\tstore.subscribe(\n\t\t\t\tcreatePersistOnChange(\n\t\t\t\t\tstore.getState,\n\t\t\t\t\tstoreName,\n\t\t\t\t\toptions.persist\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn store;\n\t\t},\n\t};\n}\n\npersistencePlugin.__unstableMigrate = () => {};\n\nexport default persistencePlugin;\n", "let objectStorage;\n\nconst storage = {\n\tgetItem( key ) {\n\t\tif ( ! objectStorage || ! objectStorage[ key ] ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn objectStorage[ key ];\n\t},\n\tsetItem( key, value ) {\n\t\tif ( ! objectStorage ) {\n\t\t\tstorage.clear();\n\t\t}\n\n\t\tobjectStorage[ key ] = String( value );\n\t},\n\tclear() {\n\t\tobjectStorage = Object.create( null );\n\t},\n};\n\nexport default storage;\n", "/**\n * Internal dependencies\n */\nimport objectStorage from './object';\n\nlet storage;\n\ntry {\n\t// Private Browsing in Safari 10 and earlier will throw an error when\n\t// attempting to set into localStorage. The test here is intentional in\n\t// causing a thrown error as condition for using fallback object storage.\n\tstorage = window.localStorage;\n\tstorage.setItem( '__wpDataTestLocalStorage', '' );\n\tstorage.removeItem( '__wpDataTestLocalStorage' );\n} catch ( error ) {\n\tstorage = objectStorage;\n}\n\nexport default storage;\n", "/**\n * External dependencies\n */\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport {\n\tChildren,\n\tcloneElement,\n\tComponent,\n\tcreateContext,\n\tcreateElement,\n\tcreateRef,\n\tforwardRef,\n\tFragment,\n\tisValidElement,\n\tmemo,\n\tPureComponent,\n\tStrictMode,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseDeferredValue,\n\tuseEffect,\n\tuseId,\n\tuseMemo,\n\tuseImperativeHandle,\n\tuseInsertionEffect,\n\tuseLayoutEffect,\n\tuseReducer,\n\tuseRef,\n\tuseState,\n\tuseSyncExternalStore,\n\tuseTransition,\n\tstartTransition,\n\tlazy,\n\tSuspense,\n} from 'react';\n\n/**\n * Object containing a React element.\n *\n * @typedef {import('react').ReactElement} Element\n */\n\n/**\n * Object containing a React component.\n *\n * @typedef {import('react').ComponentType} ComponentType\n */\n\n/**\n * Object containing a React synthetic event.\n *\n * @typedef {import('react').SyntheticEvent} SyntheticEvent\n */\n\n/**\n * Object containing a React ref object.\n *\n * @template T\n * @typedef {import('react').RefObject<T>} RefObject<T>\n */\n\n/**\n * Object containing a React ref callback.\n *\n * @template T\n * @typedef {import('react').RefCallback<T>} RefCallback<T>\n */\n\n/**\n * Object containing a React ref.\n *\n * @template T\n * @typedef {import('react').Ref<T>} Ref<T>\n */\n\n/**\n * Object that provides utilities for dealing with React children.\n */\nexport { Children };\n\n/**\n * Creates a copy of an element with extended props.\n *\n * @param {Element} element Element\n * @param {?Object} props   Props to apply to cloned element\n *\n * @return {Element} Cloned element.\n */\nexport { cloneElement };\n\n/**\n * A base class to create WordPress Components (Refs, state and lifecycle hooks)\n */\nexport { Component };\n\n/**\n * Creates a context object containing two components: a provider and consumer.\n *\n * @param {Object} defaultValue A default data stored in the context.\n *\n * @return {Object} Context object.\n */\nexport { createContext };\n\n/**\n * Returns a new element of given type. Type can be either a string tag name or\n * another function which itself returns an element.\n *\n * @param {?(string|Function)} type     Tag name or element creator\n * @param {Object}             props    Element properties, either attribute\n *                                      set to apply to DOM node or values to\n *                                      pass through to element creator\n * @param {...Element}         children Descendant elements\n *\n * @return {Element} Element.\n */\nexport { createElement };\n\n/**\n * Returns an object tracking a reference to a rendered element via its\n * `current` property as either a DOMElement or Element, dependent upon the\n * type of element rendered with the ref attribute.\n *\n * @return {Object} Ref object.\n */\nexport { createRef };\n\n/**\n * Component enhancer used to enable passing a ref to its wrapped component.\n * Pass a function argument which receives `props` and `ref` as its arguments,\n * returning an element using the forwarded ref. The return value is a new\n * component which forwards its ref.\n *\n * @param {Function} forwarder Function passed `props` and `ref`, expected to\n *                             return an element.\n *\n * @return {Component} Enhanced component.\n */\nexport { forwardRef };\n\n/**\n * A component which renders its children without any wrapping element.\n */\nexport { Fragment };\n\n/**\n * Checks if an object is a valid React Element.\n *\n * @param {Object} objectToCheck The object to be checked.\n *\n * @return {boolean} true if objectToTest is a valid React Element and false otherwise.\n */\nexport { isValidElement };\n\n/**\n * @see https://react.dev/reference/react/memo\n */\nexport { memo };\n\n/**\n * Component that activates additional checks and warnings for its descendants.\n */\nexport { StrictMode };\n\n/**\n * @see https://react.dev/reference/react/useCallback\n */\nexport { useCallback };\n\n/**\n * @see https://react.dev/reference/react/useContext\n */\nexport { useContext };\n\n/**\n * @see https://react.dev/reference/react/useDebugValue\n */\nexport { useDebugValue };\n\n/**\n * @see https://react.dev/reference/react/useDeferredValue\n */\nexport { useDeferredValue };\n\n/**\n * @see https://react.dev/reference/react/useEffect\n */\nexport { useEffect };\n\n/**\n * @see https://react.dev/reference/react/useId\n */\nexport { useId };\n\n/**\n * @see https://react.dev/reference/react/useImperativeHandle\n */\nexport { useImperativeHandle };\n\n/**\n * @see https://react.dev/reference/react/useInsertionEffect\n */\nexport { useInsertionEffect };\n\n/**\n * @see https://react.dev/reference/react/useLayoutEffect\n */\nexport { useLayoutEffect };\n\n/**\n * @see https://react.dev/reference/react/useMemo\n */\nexport { useMemo };\n\n/**\n * @see https://react.dev/reference/react/useReducer\n */\nexport { useReducer };\n\n/**\n * @see https://react.dev/reference/react/useRef\n */\nexport { useRef };\n\n/**\n * @see https://react.dev/reference/react/useState\n */\nexport { useState };\n\n/**\n * @see https://react.dev/reference/react/useSyncExternalStore\n */\nexport { useSyncExternalStore };\n\n/**\n * @see https://react.dev/reference/react/useTransition\n */\nexport { useTransition };\n\n/**\n * @see https://react.dev/reference/react/startTransition\n */\nexport { startTransition };\n\n/**\n * @see https://react.dev/reference/react/lazy\n */\nexport { lazy };\n\n/**\n * @see https://react.dev/reference/react/Suspense\n */\nexport { Suspense };\n\n/**\n * @see https://react.dev/reference/react/PureComponent\n */\nexport { PureComponent };\n\n/**\n * Concatenate two or more React children objects.\n *\n * @param {...?Object} childrenArguments Array of children arguments (array of arrays/strings/objects) to concatenate.\n *\n * @return {Array} The concatenated value.\n */\nexport function concatChildren( ...childrenArguments ) {\n\treturn childrenArguments.reduce( ( accumulator, children, i ) => {\n\t\tChildren.forEach( children, ( child, j ) => {\n\t\t\tif ( child && 'string' !== typeof child ) {\n\t\t\t\tchild = cloneElement( child, {\n\t\t\t\t\tkey: [ i, j ].join(),\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\taccumulator.push( child );\n\t\t} );\n\n\t\treturn accumulator;\n\t}, [] );\n}\n\n/**\n * Switches the nodeName of all the elements in the children object.\n *\n * @param {?Object} children Children object.\n * @param {string}  nodeName Node name.\n *\n * @return {?Object} The updated children object.\n */\nexport function switchChildrenNodeName( children, nodeName ) {\n\treturn (\n\t\tchildren &&\n\t\tChildren.map( children, ( elt, index ) => {\n\t\t\tif ( typeof elt?.valueOf() === 'string' ) {\n\t\t\t\treturn createElement( nodeName, { key: index }, elt );\n\t\t\t}\n\t\t\tconst { children: childrenProp, ...props } = elt.props;\n\t\t\treturn createElement(\n\t\t\t\tnodeName,\n\t\t\t\t{ key: index, ...props },\n\t\t\t\tchildrenProp\n\t\t\t);\n\t\t} )\n\t);\n}\n", "/**\n * External dependencies\n */\nimport {\n\tcreatePortal,\n\tfindDOMNode,\n\tflushSync,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n} from 'react-dom';\nimport { createRoot, hydrateRoot } from 'react-dom/client';\n\n/**\n * Creates a portal into which a component can be rendered.\n *\n * @see https://github.com/facebook/react/issues/10309#issuecomment-318433235\n *\n * @param {import('react').ReactElement} child     Any renderable child, such as an element,\n *                                                 string, or fragment.\n * @param {HTMLElement}                  container DOM node into which element should be rendered.\n */\nexport { createPortal };\n\n/**\n * Finds the dom node of a React component.\n *\n * @param {import('react').ComponentType} component Component's instance.\n */\nexport { findDOMNode };\n\n/**\n * Forces React to flush any updates inside the provided callback synchronously.\n *\n * @param {Function} callback Callback to run synchronously.\n */\nexport { flushSync };\n\n/**\n * Renders a given element into the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `createRoot` instead.\n * @see https://react.dev/reference/react-dom/render\n */\nexport { render };\n\n/**\n * Hydrates a given element into the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `hydrateRoot` instead.\n * @see https://react.dev/reference/react-dom/hydrate\n */\nexport { hydrate };\n\n/**\n * Creates a new React root for the target DOM node.\n *\n * @since 6.2.0 Introduced in WordPress core.\n * @see https://react.dev/reference/react-dom/client/createRoot\n */\nexport { createRoot };\n\n/**\n * Creates a new React root for the target DOM node and hydrates it with a pre-generated markup.\n *\n * @since 6.2.0 Introduced in WordPress core.\n * @see https://react.dev/reference/react-dom/client/hydrateRoot\n */\nexport { hydrateRoot };\n\n/**\n * Removes any mounted element from the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `root.unmount()` instead.\n * @see https://react.dev/reference/react-dom/unmountComponentAtNode\n */\nexport { unmountComponentAtNode };\n", "/**\n * Parts of this source were derived and modified from react-native-web,\n * released under the MIT license.\n *\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n */\nconst Platform = {\n\tOS: 'web',\n\tselect: ( spec ) => ( 'web' in spec ? spec.web : spec.default ),\n\tisWeb: true,\n};\n/**\n * Component used to detect the current Platform being used.\n * Use Platform.OS === 'web' to detect if running on web enviroment.\n *\n * This is the same concept as the React Native implementation.\n *\n * @see https://reactnative.dev/docs/platform-specific-code#platform-module\n *\n * Here is an example of how to use the select method:\n * @example\n * ```js\n * import { Platform } from '@wordpress/element';\n *\n * const placeholderLabel = Platform.select( {\n *   native: __( 'Add media' ),\n *   web: __( 'Drag images, upload new ones or select files from your library.' ),\n * } );\n * ```\n */\nexport default Platform;\n", "/**\n * Internal dependencies\n */\nimport { Children, createElement } from './react';\n\n/** @typedef {{children: string} & import('react').ComponentPropsWithoutRef<'div'>} RawHTMLProps */\n\n/**\n * Component used as equivalent of Fragment with unescaped HTML, in cases where\n * it is desirable to render dangerous HTML without needing a wrapper element.\n * To preserve additional props, a `div` wrapper _will_ be created if any props\n * aside from `children` are passed.\n *\n * @param {RawHTMLProps} props Children should be a string of HTML or an array\n *                             of strings. Other props will be passed through\n *                             to the div wrapper.\n *\n * @return {JSX.Element} Dangerously-rendering component.\n */\nexport default function RawHTML( { children, ...props } ) {\n\tlet rawHtml = '';\n\n\t// Cast children as an array, and concatenate each element if it is a string.\n\tChildren.toArray( children ).forEach( ( child ) => {\n\t\tif ( typeof child === 'string' && child.trim() !== '' ) {\n\t\t\trawHtml += child;\n\t\t}\n\t} );\n\n\t// The `div` wrapper will be stripped by the `renderElement` serializer in\n\t// `./serialize.js` unless there are non-children props present.\n\treturn createElement( 'div', {\n\t\tdangerouslySetInnerHTML: { __html: rawHtml },\n\t\t...props,\n\t} );\n}\n", "/**\n * Parts of this source were derived and modified from fast-react-render,\n * released under the MIT license.\n *\n * https://github.com/alt-j/fast-react-render\n *\n * Copyright (c) 2016 Andrey Morozov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\nimport { paramCase as kebabCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tescapeHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\nimport { createContext, Fragment, StrictMode, forwardRef } from './react';\nimport RawHTML from './raw-html';\n\n/** @typedef {import('react').ReactElement} ReactElement */\n\nconst { Provider, Consumer } = createContext( undefined );\nconst ForwardRef = forwardRef( () => {\n\treturn null;\n} );\n\n/**\n * Valid attribute types.\n *\n * @type {Set<string>}\n */\nconst ATTRIBUTES_TYPES = new Set( [ 'string', 'boolean', 'number' ] );\n\n/**\n * Element tags which can be self-closing.\n *\n * @type {Set<string>}\n */\nconst SELF_CLOSING_TAGS = new Set( [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr',\n] );\n\n/**\n * Boolean attributes are attributes whose presence as being assigned is\n * meaningful, even if only empty.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => tr.lastChild.textContent.indexOf( 'Boolean attribute' ) !== -1 )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * @type {Set<string>}\n */\nconst BOOLEAN_ATTRIBUTES = new Set( [\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'allowusermedia',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'download',\n\t'formnovalidate',\n\t'hidden',\n\t'ismap',\n\t'itemscope',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected',\n\t'typemustmatch',\n] );\n\n/**\n * Enumerated attributes are attributes which must be of a specific value form.\n * Like boolean attributes, these are meaningful if specified, even if not of a\n * valid enumerated value.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#enumerated-attribute\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => /^(\"(.+?)\";?\\s*)+/.test( tr.lastChild.textContent.trim() ) )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * Some notable omissions:\n *\n *  - `alt`: https://blog.whatwg.org/omit-alt\n *\n * @type {Set<string>}\n */\nconst ENUMERATED_ATTRIBUTES = new Set( [\n\t'autocapitalize',\n\t'autocomplete',\n\t'charset',\n\t'contenteditable',\n\t'crossorigin',\n\t'decoding',\n\t'dir',\n\t'draggable',\n\t'enctype',\n\t'formenctype',\n\t'formmethod',\n\t'http-equiv',\n\t'inputmode',\n\t'kind',\n\t'method',\n\t'preload',\n\t'scope',\n\t'shape',\n\t'spellcheck',\n\t'translate',\n\t'type',\n\t'wrap',\n] );\n\n/**\n * Set of CSS style properties which support assignment of unitless numbers.\n * Used in rendering of style properties, where `px` unit is assumed unless\n * property is included in this set or value is zero.\n *\n * Generated via:\n *\n * Object.entries( document.createElement( 'div' ).style )\n *     .filter( ( [ key ] ) => (\n *         ! /^(webkit|ms|moz)/.test( key ) &&\n *         ( e.style[ key ] = 10 ) &&\n *         e.style[ key ] === '10'\n *     ) )\n *     .map( ( [ key ] ) => key )\n *     .sort();\n *\n * @type {Set<string>}\n */\nconst CSS_PROPERTIES_SUPPORTS_UNITLESS = new Set( [\n\t'animation',\n\t'animationIterationCount',\n\t'baselineShift',\n\t'borderImageOutset',\n\t'borderImageSlice',\n\t'borderImageWidth',\n\t'columnCount',\n\t'cx',\n\t'cy',\n\t'fillOpacity',\n\t'flexGrow',\n\t'flexShrink',\n\t'floodOpacity',\n\t'fontWeight',\n\t'gridColumnEnd',\n\t'gridColumnStart',\n\t'gridRowEnd',\n\t'gridRowStart',\n\t'lineHeight',\n\t'opacity',\n\t'order',\n\t'orphans',\n\t'r',\n\t'rx',\n\t'ry',\n\t'shapeImageThreshold',\n\t'stopOpacity',\n\t'strokeDasharray',\n\t'strokeDashoffset',\n\t'strokeMiterlimit',\n\t'strokeOpacity',\n\t'strokeWidth',\n\t'tabSize',\n\t'widows',\n\t'x',\n\t'y',\n\t'zIndex',\n\t'zoom',\n] );\n\n/**\n * Returns true if the specified string is prefixed by one of an array of\n * possible prefixes.\n *\n * @param {string}   string   String to check.\n * @param {string[]} prefixes Possible prefixes.\n *\n * @return {boolean} Whether string has prefix.\n */\nexport function hasPrefix( string, prefixes ) {\n\treturn prefixes.some( ( prefix ) => string.indexOf( prefix ) === 0 );\n}\n\n/**\n * Returns true if the given prop name should be ignored in attributes\n * serialization, or false otherwise.\n *\n * @param {string} attribute Attribute to check.\n *\n * @return {boolean} Whether attribute should be ignored.\n */\nfunction isInternalAttribute( attribute ) {\n\treturn 'key' === attribute || 'children' === attribute;\n}\n\n/**\n * Returns the normal form of the element's attribute value for HTML.\n *\n * @param {string} attribute Attribute name.\n * @param {*}      value     Non-normalized attribute value.\n *\n * @return {*} Normalized attribute value.\n */\nfunction getNormalAttributeValue( attribute, value ) {\n\tswitch ( attribute ) {\n\t\tcase 'style':\n\t\t\treturn renderStyle( value );\n\t}\n\n\treturn value;\n}\n/**\n * This is a map of all SVG attributes that have dashes. Map(lower case prop => dashed lower case attribute).\n * We need this to render e.g strokeWidth as stroke-width.\n *\n * List from: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute.\n */\nconst SVG_ATTRIBUTE_WITH_DASHES_LIST = [\n\t'accentHeight',\n\t'alignmentBaseline',\n\t'arabicForm',\n\t'baselineShift',\n\t'capHeight',\n\t'clipPath',\n\t'clipRule',\n\t'colorInterpolation',\n\t'colorInterpolationFilters',\n\t'colorProfile',\n\t'colorRendering',\n\t'dominantBaseline',\n\t'enableBackground',\n\t'fillOpacity',\n\t'fillRule',\n\t'floodColor',\n\t'floodOpacity',\n\t'fontFamily',\n\t'fontSize',\n\t'fontSizeAdjust',\n\t'fontStretch',\n\t'fontStyle',\n\t'fontVariant',\n\t'fontWeight',\n\t'glyphName',\n\t'glyphOrientationHorizontal',\n\t'glyphOrientationVertical',\n\t'horizAdvX',\n\t'horizOriginX',\n\t'imageRendering',\n\t'letterSpacing',\n\t'lightingColor',\n\t'markerEnd',\n\t'markerMid',\n\t'markerStart',\n\t'overlinePosition',\n\t'overlineThickness',\n\t'paintOrder',\n\t'panose1',\n\t'pointerEvents',\n\t'renderingIntent',\n\t'shapeRendering',\n\t'stopColor',\n\t'stopOpacity',\n\t'strikethroughPosition',\n\t'strikethroughThickness',\n\t'strokeDasharray',\n\t'strokeDashoffset',\n\t'strokeLinecap',\n\t'strokeLinejoin',\n\t'strokeMiterlimit',\n\t'strokeOpacity',\n\t'strokeWidth',\n\t'textAnchor',\n\t'textDecoration',\n\t'textRendering',\n\t'underlinePosition',\n\t'underlineThickness',\n\t'unicodeBidi',\n\t'unicodeRange',\n\t'unitsPerEm',\n\t'vAlphabetic',\n\t'vHanging',\n\t'vIdeographic',\n\t'vMathematical',\n\t'vectorEffect',\n\t'vertAdvY',\n\t'vertOriginX',\n\t'vertOriginY',\n\t'wordSpacing',\n\t'writingMode',\n\t'xmlnsXlink',\n\t'xHeight',\n].reduce( ( map, attribute ) => {\n\t// The keys are lower-cased for more robust lookup.\n\tmap[ attribute.toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * This is a map of all case-sensitive SVG attributes. Map(lowercase key => proper case attribute).\n * The keys are lower-cased for more robust lookup.\n * Note that this list only contains attributes that contain at least one capital letter.\n * Lowercase attributes don't need mapping, since we lowercase all attributes by default.\n */\nconst CASE_SENSITIVE_SVG_ATTRIBUTES = [\n\t'allowReorder',\n\t'attributeName',\n\t'attributeType',\n\t'autoReverse',\n\t'baseFrequency',\n\t'baseProfile',\n\t'calcMode',\n\t'clipPathUnits',\n\t'contentScriptType',\n\t'contentStyleType',\n\t'diffuseConstant',\n\t'edgeMode',\n\t'externalResourcesRequired',\n\t'filterRes',\n\t'filterUnits',\n\t'glyphRef',\n\t'gradientTransform',\n\t'gradientUnits',\n\t'kernelMatrix',\n\t'kernelUnitLength',\n\t'keyPoints',\n\t'keySplines',\n\t'keyTimes',\n\t'lengthAdjust',\n\t'limitingConeAngle',\n\t'markerHeight',\n\t'markerUnits',\n\t'markerWidth',\n\t'maskContentUnits',\n\t'maskUnits',\n\t'numOctaves',\n\t'pathLength',\n\t'patternContentUnits',\n\t'patternTransform',\n\t'patternUnits',\n\t'pointsAtX',\n\t'pointsAtY',\n\t'pointsAtZ',\n\t'preserveAlpha',\n\t'preserveAspectRatio',\n\t'primitiveUnits',\n\t'refX',\n\t'refY',\n\t'repeatCount',\n\t'repeatDur',\n\t'requiredExtensions',\n\t'requiredFeatures',\n\t'specularConstant',\n\t'specularExponent',\n\t'spreadMethod',\n\t'startOffset',\n\t'stdDeviation',\n\t'stitchTiles',\n\t'suppressContentEditableWarning',\n\t'suppressHydrationWarning',\n\t'surfaceScale',\n\t'systemLanguage',\n\t'tableValues',\n\t'targetX',\n\t'targetY',\n\t'textLength',\n\t'viewBox',\n\t'viewTarget',\n\t'xChannelSelector',\n\t'yChannelSelector',\n].reduce( ( map, attribute ) => {\n\t// The keys are lower-cased for more robust lookup.\n\tmap[ attribute.toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * This is a map of all SVG attributes that have colons.\n * Keys are lower-cased and stripped of their colons for more robust lookup.\n */\nconst SVG_ATTRIBUTES_WITH_COLONS = [\n\t'xlink:actuate',\n\t'xlink:arcrole',\n\t'xlink:href',\n\t'xlink:role',\n\t'xlink:show',\n\t'xlink:title',\n\t'xlink:type',\n\t'xml:base',\n\t'xml:lang',\n\t'xml:space',\n\t'xmlns:xlink',\n].reduce( ( map, attribute ) => {\n\tmap[ attribute.replace( ':', '' ).toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * Returns the normal form of the element's attribute name for HTML.\n *\n * @param {string} attribute Non-normalized attribute name.\n *\n * @return {string} Normalized attribute name.\n */\nfunction getNormalAttributeName( attribute ) {\n\tswitch ( attribute ) {\n\t\tcase 'htmlFor':\n\t\t\treturn 'for';\n\n\t\tcase 'className':\n\t\t\treturn 'class';\n\t}\n\tconst attributeLowerCase = attribute.toLowerCase();\n\n\tif ( CASE_SENSITIVE_SVG_ATTRIBUTES[ attributeLowerCase ] ) {\n\t\treturn CASE_SENSITIVE_SVG_ATTRIBUTES[ attributeLowerCase ];\n\t} else if ( SVG_ATTRIBUTE_WITH_DASHES_LIST[ attributeLowerCase ] ) {\n\t\treturn kebabCase(\n\t\t\tSVG_ATTRIBUTE_WITH_DASHES_LIST[ attributeLowerCase ]\n\t\t);\n\t} else if ( SVG_ATTRIBUTES_WITH_COLONS[ attributeLowerCase ] ) {\n\t\treturn SVG_ATTRIBUTES_WITH_COLONS[ attributeLowerCase ];\n\t}\n\n\treturn attributeLowerCase;\n}\n\n/**\n * Returns the normal form of the style property name for HTML.\n *\n * - Converts property names to kebab-case, e.g. 'backgroundColor' → 'background-color'\n * - Leaves custom attributes alone, e.g. '--myBackgroundColor' → '--myBackgroundColor'\n * - Converts vendor-prefixed property names to -kebab-case, e.g. 'MozTransform' → '-moz-transform'\n *\n * @param {string} property Property name.\n *\n * @return {string} Normalized property name.\n */\nfunction getNormalStylePropertyName( property ) {\n\tif ( property.startsWith( '--' ) ) {\n\t\treturn property;\n\t}\n\n\tif ( hasPrefix( property, [ 'ms', 'O', 'Moz', 'Webkit' ] ) ) {\n\t\treturn '-' + kebabCase( property );\n\t}\n\n\treturn kebabCase( property );\n}\n\n/**\n * Returns the normal form of the style property value for HTML. Appends a\n * default pixel unit if numeric, not a unitless property, and not zero.\n *\n * @param {string} property Property name.\n * @param {*}      value    Non-normalized property value.\n *\n * @return {*} Normalized property value.\n */\nfunction getNormalStylePropertyValue( property, value ) {\n\tif (\n\t\ttypeof value === 'number' &&\n\t\t0 !== value &&\n\t\t! CSS_PROPERTIES_SUPPORTS_UNITLESS.has( property )\n\t) {\n\t\treturn value + 'px';\n\t}\n\n\treturn value;\n}\n\n/**\n * Serializes a React element to string.\n *\n * @param {import('react').ReactNode} element         Element to serialize.\n * @param {Object}                    [context]       Context object.\n * @param {Object}                    [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderElement( element, context, legacyContext = {} ) {\n\tif ( null === element || undefined === element || false === element ) {\n\t\treturn '';\n\t}\n\n\tif ( Array.isArray( element ) ) {\n\t\treturn renderChildren( element, context, legacyContext );\n\t}\n\n\tswitch ( typeof element ) {\n\t\tcase 'string':\n\t\t\treturn escapeHTML( element );\n\n\t\tcase 'number':\n\t\t\treturn element.toString();\n\t}\n\n\tconst { type, props } = /** @type {{type?: any, props?: any}} */ (\n\t\telement\n\t);\n\n\tswitch ( type ) {\n\t\tcase StrictMode:\n\t\tcase Fragment:\n\t\t\treturn renderChildren( props.children, context, legacyContext );\n\n\t\tcase RawHTML:\n\t\t\tconst { children, ...wrapperProps } = props;\n\n\t\t\treturn renderNativeComponent(\n\t\t\t\t! Object.keys( wrapperProps ).length ? null : 'div',\n\t\t\t\t{\n\t\t\t\t\t...wrapperProps,\n\t\t\t\t\tdangerouslySetInnerHTML: { __html: children },\n\t\t\t\t},\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\tswitch ( typeof type ) {\n\t\tcase 'string':\n\t\t\treturn renderNativeComponent( type, props, context, legacyContext );\n\n\t\tcase 'function':\n\t\t\tif (\n\t\t\t\ttype.prototype &&\n\t\t\t\ttypeof type.prototype.render === 'function'\n\t\t\t) {\n\t\t\t\treturn renderComponent( type, props, context, legacyContext );\n\t\t\t}\n\n\t\t\treturn renderElement(\n\t\t\t\ttype( props, legacyContext ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\tswitch ( type && type.$$typeof ) {\n\t\tcase Provider.$$typeof:\n\t\t\treturn renderChildren( props.children, props.value, legacyContext );\n\n\t\tcase Consumer.$$typeof:\n\t\t\treturn renderElement(\n\t\t\t\tprops.children( context || type._currentValue ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\n\t\tcase ForwardRef.$$typeof:\n\t\t\treturn renderElement(\n\t\t\t\ttype.render( props ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\treturn '';\n}\n\n/**\n * Serializes a native component type to string.\n *\n * @param {?string} type            Native component type to serialize, or null if\n *                                  rendering as fragment of children content.\n * @param {Object}  props           Props object.\n * @param {Object}  [context]       Context object.\n * @param {Object}  [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderNativeComponent(\n\ttype,\n\tprops,\n\tcontext,\n\tlegacyContext = {}\n) {\n\tlet content = '';\n\tif ( type === 'textarea' && props.hasOwnProperty( 'value' ) ) {\n\t\t// Textarea children can be assigned as value prop. If it is, render in\n\t\t// place of children. Ensure to omit so it is not assigned as attribute\n\t\t// as well.\n\t\tcontent = renderChildren( props.value, context, legacyContext );\n\t\tconst { value, ...restProps } = props;\n\t\tprops = restProps;\n\t} else if (\n\t\tprops.dangerouslySetInnerHTML &&\n\t\ttypeof props.dangerouslySetInnerHTML.__html === 'string'\n\t) {\n\t\t// Dangerous content is left unescaped.\n\t\tcontent = props.dangerouslySetInnerHTML.__html;\n\t} else if ( typeof props.children !== 'undefined' ) {\n\t\tcontent = renderChildren( props.children, context, legacyContext );\n\t}\n\n\tif ( ! type ) {\n\t\treturn content;\n\t}\n\n\tconst attributes = renderAttributes( props );\n\n\tif ( SELF_CLOSING_TAGS.has( type ) ) {\n\t\treturn '<' + type + attributes + '/>';\n\t}\n\n\treturn '<' + type + attributes + '>' + content + '</' + type + '>';\n}\n\n/** @typedef {import('react').ComponentType} ComponentType */\n\n/**\n * Serializes a non-native component type to string.\n *\n * @param {ComponentType} Component       Component type to serialize.\n * @param {Object}        props           Props object.\n * @param {Object}        [context]       Context object.\n * @param {Object}        [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element\n */\nexport function renderComponent(\n\tComponent,\n\tprops,\n\tcontext,\n\tlegacyContext = {}\n) {\n\tconst instance = new /** @type {import('react').ComponentClass} */ (\n\t\tComponent\n\t)( props, legacyContext );\n\n\tif (\n\t\ttypeof (\n\t\t\t// Ignore reason: Current prettier reformats parens and mangles type assertion\n\t\t\t// prettier-ignore\n\t\t\t/** @type {{getChildContext?: () => unknown}} */ ( instance ).getChildContext\n\t\t) === 'function'\n\t) {\n\t\tObject.assign(\n\t\t\tlegacyContext,\n\t\t\t/** @type {{getChildContext?: () => unknown}} */ (\n\t\t\t\tinstance\n\t\t\t).getChildContext()\n\t\t);\n\t}\n\n\tconst html = renderElement( instance.render(), context, legacyContext );\n\n\treturn html;\n}\n\n/**\n * Serializes an array of children to string.\n *\n * @param {import('react').ReactNodeArray} children        Children to serialize.\n * @param {Object}                         [context]       Context object.\n * @param {Object}                         [legacyContext] Legacy context object.\n *\n * @return {string} Serialized children.\n */\nfunction renderChildren( children, context, legacyContext = {} ) {\n\tlet result = '';\n\n\tchildren = Array.isArray( children ) ? children : [ children ];\n\n\tfor ( let i = 0; i < children.length; i++ ) {\n\t\tconst child = children[ i ];\n\n\t\tresult += renderElement( child, context, legacyContext );\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a props object as a string of HTML attributes.\n *\n * @param {Object} props Props object.\n *\n * @return {string} Attributes string.\n */\nexport function renderAttributes( props ) {\n\tlet result = '';\n\n\tfor ( const key in props ) {\n\t\tconst attribute = getNormalAttributeName( key );\n\t\tif ( ! isValidAttributeName( attribute ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet value = getNormalAttributeValue( key, props[ key ] );\n\n\t\t// If value is not of serializable type, skip.\n\t\tif ( ! ATTRIBUTES_TYPES.has( typeof value ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Don't render internal attribute names.\n\t\tif ( isInternalAttribute( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isBooleanAttribute = BOOLEAN_ATTRIBUTES.has( attribute );\n\n\t\t// Boolean attribute should be omitted outright if its value is false.\n\t\tif ( isBooleanAttribute && value === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isMeaningfulAttribute =\n\t\t\tisBooleanAttribute ||\n\t\t\thasPrefix( key, [ 'data-', 'aria-' ] ) ||\n\t\t\tENUMERATED_ATTRIBUTES.has( attribute );\n\n\t\t// Only write boolean value as attribute if meaningful.\n\t\tif ( typeof value === 'boolean' && ! isMeaningfulAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult += ' ' + attribute;\n\n\t\t// Boolean attributes should write attribute name, but without value.\n\t\t// Mere presence of attribute name is effective truthiness.\n\t\tif ( isBooleanAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( typeof value === 'string' ) {\n\t\t\tvalue = escapeAttribute( value );\n\t\t}\n\n\t\tresult += '=\"' + value + '\"';\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a style object as a string attribute value.\n *\n * @param {Object} style Style object.\n *\n * @return {string} Style attribute value.\n */\nexport function renderStyle( style ) {\n\t// Only generate from object, e.g. tolerate string value.\n\tif ( ! isPlainObject( style ) ) {\n\t\treturn style;\n\t}\n\n\tlet result;\n\n\tfor ( const property in style ) {\n\t\tconst value = style[ property ];\n\t\tif ( null === value || undefined === value ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult += ';';\n\t\t} else {\n\t\t\tresult = '';\n\t\t}\n\n\t\tconst normalName = getNormalStylePropertyName( property );\n\t\tconst normalValue = getNormalStylePropertyValue( property, value );\n\t\tresult += normalName + ':' + normalValue;\n\t}\n\n\treturn result;\n}\n\nexport default renderElement;\n", "/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport defaultRegistry from '../../default-registry';\n\nexport const Context = createContext( defaultRegistry );\nContext.displayName = 'RegistryProviderContext';\n\nconst { Consumer, Provider } = Context;\n\n/**\n * A custom react Context consumer exposing the provided `registry` to\n * children components. Used along with the RegistryProvider.\n *\n * You can read more about the react context api here:\n * https://react.dev/learn/passing-data-deeply-with-context#step-3-provide-the-context\n *\n * @example\n * ```js\n * import {\n *   RegistryProvider,\n *   RegistryConsumer,\n *   createRegistry\n * } from '@wordpress/data';\n *\n * const registry = createRegistry( {} );\n *\n * const App = ( { props } ) => {\n *   return <RegistryProvider value={ registry }>\n *     <div>Hello There</div>\n *     <RegistryConsumer>\n *       { ( registry ) => (\n *         <ComponentUsingRegistry\n *         \t\t{ ...props }\n *         \t  registry={ registry }\n *       ) }\n *     </RegistryConsumer>\n *   </RegistryProvider>\n * }\n * ```\n */\nexport const RegistryConsumer = Consumer;\n\n/**\n * A custom Context provider for exposing the provided `registry` to children\n * components via a consumer.\n *\n * See <a name=\"#RegistryConsumer\">RegistryConsumer</a> documentation for\n * example.\n */\nexport default Provider;\n", "/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\nexport const Context = createContext( false );\nContext.displayName = 'AsyncModeContext';\n\nconst { Consumer, Provider } = Context;\n\nexport const AsyncModeConsumer = Consumer;\n\n/**\n * Context Provider Component used to switch the data module component rerendering\n * between Sync and Async modes.\n *\n * @example\n *\n * ```js\n * import { useSelect, AsyncModeProvider } from '@wordpress/data';\n * import { store as blockEditorStore } from '@wordpress/block-editor';\n *\n * function BlockCount() {\n *   const count = useSelect( ( select ) => {\n *     return select( blockEditorStore ).getBlockCount()\n *   }, [] );\n *\n *   return count;\n * }\n *\n * function App() {\n *   return (\n *     <AsyncModeProvider value={ true }>\n *       <BlockCount />\n *     </AsyncModeProvider>\n *   );\n * }\n * ```\n *\n * In this example, the BlockCount component is rerendered asynchronously.\n * It means if a more critical task is being performed (like typing in an input),\n * the rerendering is delayed until the browser becomes IDLE.\n * It is possible to nest multiple levels of AsyncModeProvider to fine-tune the rendering behavior.\n *\n * @param {boolean} props.value Enable Async Mode.\n * @return {Component} The component to be rendered.\n */\nexport default Provider;\n", "/**\n * WordPress dependencies\n */\nimport { createQueue } from '@wordpress/priority-queue';\nimport {\n\tuseRef,\n\tuseCallback,\n\tuseMemo,\n\tuseSyncExternalStore,\n\tuseDebugValue,\n} from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport useRegistry from '../registry-provider/use-registry';\nimport useAsyncMode from '../async-mode-provider/use-async-mode';\n\nconst renderQueue = createQueue();\n\nfunction warnOnUnstableReference( a, b ) {\n\tif ( ! a || ! b ) {\n\t\treturn;\n\t}\n\n\tconst keys =\n\t\ttypeof a === 'object' && typeof b === 'object'\n\t\t\t? Object.keys( a ).filter( ( k ) => a[ k ] !== b[ k ] )\n\t\t\t: [];\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\n\t\t'The `useSelect` hook returns different values when called with the same state and parameters.\\n' +\n\t\t\t'This can lead to unnecessary re-renders and performance issues if not fixed.\\n\\n' +\n\t\t\t'Non-equal value keys: %s\\n\\n',\n\t\tkeys.join( ', ' )\n\t);\n}\n\n/**\n * @typedef {import('../../types').StoreDescriptor<C>} StoreDescriptor\n * @template {import('../../types').AnyConfig} C\n */\n/**\n * @typedef {import('../../types').ReduxStoreConfig<State,Actions,Selectors>} ReduxStoreConfig\n * @template State\n * @template {Record<string,import('../../types').ActionCreator>} Actions\n * @template Selectors\n */\n/** @typedef {import('../../types').MapSelect} MapSelect */\n/**\n * @typedef {import('../../types').UseSelectReturn<T>} UseSelectReturn\n * @template {MapSelect|StoreDescriptor<any>} T\n */\n\nfunction Store( registry, suspense ) {\n\tconst select = suspense ? registry.suspendSelect : registry.select;\n\tconst queueContext = {};\n\tlet lastMapSelect;\n\tlet lastMapResult;\n\tlet lastMapResultValid = false;\n\tlet lastIsAsync;\n\tlet subscriber;\n\tlet didWarnUnstableReference;\n\tconst storeStatesOnMount = new Map();\n\n\tfunction getStoreState( name ) {\n\t\t// If there's no store property (custom generic store), return an empty\n\t\t// object. When comparing the state, the empty objects will cause the\n\t\t// equality check to fail, setting `lastMapResultValid` to false.\n\t\treturn registry.stores[ name ]?.store?.getState?.() ?? {};\n\t}\n\n\tconst createSubscriber = ( stores ) => {\n\t\t// The set of stores the `subscribe` function is supposed to subscribe to. Here it is\n\t\t// initialized, and then the `updateStores` function can add new stores to it.\n\t\tconst activeStores = [ ...stores ];\n\n\t\t// The `subscribe` function, which is passed to the `useSyncExternalStore` hook, could\n\t\t// be called multiple times to establish multiple subscriptions. That's why we need to\n\t\t// keep a set of active subscriptions;\n\t\tconst activeSubscriptions = new Set();\n\n\t\tfunction subscribe( listener ) {\n\t\t\t// Maybe invalidate the value right after subscription was created.\n\t\t\t// React will call `getValue` after subscribing, to detect store\n\t\t\t// updates that happened in the interval between the `getValue` call\n\t\t\t// during render and creating the subscription, which is slightly\n\t\t\t// delayed. We need to ensure that this second `getValue` call will\n\t\t\t// compute a fresh value only if any of the store states have\n\t\t\t// changed in the meantime.\n\t\t\tif ( lastMapResultValid ) {\n\t\t\t\tfor ( const name of activeStores ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tstoreStatesOnMount.get( name ) !== getStoreState( name )\n\t\t\t\t\t) {\n\t\t\t\t\t\tlastMapResultValid = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstoreStatesOnMount.clear();\n\n\t\t\tconst onStoreChange = () => {\n\t\t\t\t// Invalidate the value on store update, so that a fresh value is computed.\n\t\t\t\tlastMapResultValid = false;\n\t\t\t\tlistener();\n\t\t\t};\n\n\t\t\tconst onChange = () => {\n\t\t\t\tif ( lastIsAsync ) {\n\t\t\t\t\trenderQueue.add( queueContext, onStoreChange );\n\t\t\t\t} else {\n\t\t\t\t\tonStoreChange();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst unsubs = [];\n\t\t\tfunction subscribeStore( storeName ) {\n\t\t\t\tunsubs.push( registry.subscribe( onChange, storeName ) );\n\t\t\t}\n\n\t\t\tfor ( const storeName of activeStores ) {\n\t\t\t\tsubscribeStore( storeName );\n\t\t\t}\n\n\t\t\tactiveSubscriptions.add( subscribeStore );\n\n\t\t\treturn () => {\n\t\t\t\tactiveSubscriptions.delete( subscribeStore );\n\n\t\t\t\tfor ( const unsub of unsubs.values() ) {\n\t\t\t\t\t// The return value of the subscribe function could be undefined if the store is a custom generic store.\n\t\t\t\t\tunsub?.();\n\t\t\t\t}\n\t\t\t\t// Cancel existing store updates that were already scheduled.\n\t\t\t\trenderQueue.cancel( queueContext );\n\t\t\t};\n\t\t}\n\n\t\t// Check if `newStores` contains some stores we're not subscribed to yet, and add them.\n\t\tfunction updateStores( newStores ) {\n\t\t\tfor ( const newStore of newStores ) {\n\t\t\t\tif ( activeStores.includes( newStore ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// New `subscribe` calls will subscribe to `newStore`, too.\n\t\t\t\tactiveStores.push( newStore );\n\n\t\t\t\t// Add `newStore` to existing subscriptions.\n\t\t\t\tfor ( const subscription of activeSubscriptions ) {\n\t\t\t\t\tsubscription( newStore );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { subscribe, updateStores };\n\t};\n\n\treturn ( mapSelect, isAsync ) => {\n\t\tfunction updateValue() {\n\t\t\t// If the last value is valid, and the `mapSelect` callback hasn't changed,\n\t\t\t// then we can safely return the cached value. The value can change only on\n\t\t\t// store update, and in that case value will be invalidated by the listener.\n\t\t\tif ( lastMapResultValid && mapSelect === lastMapSelect ) {\n\t\t\t\treturn lastMapResult;\n\t\t\t}\n\n\t\t\tconst listeningStores = { current: null };\n\t\t\tconst mapResult = registry.__unstableMarkListeningStores(\n\t\t\t\t() => mapSelect( select, registry ),\n\t\t\t\tlisteningStores\n\t\t\t);\n\n\t\t\tif ( globalThis.SCRIPT_DEBUG ) {\n\t\t\t\tif ( ! didWarnUnstableReference ) {\n\t\t\t\t\tconst secondMapResult = mapSelect( select, registry );\n\t\t\t\t\tif ( ! isShallowEqual( mapResult, secondMapResult ) ) {\n\t\t\t\t\t\twarnOnUnstableReference( mapResult, secondMapResult );\n\t\t\t\t\t\tdidWarnUnstableReference = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! subscriber ) {\n\t\t\t\tfor ( const name of listeningStores.current ) {\n\t\t\t\t\tstoreStatesOnMount.set( name, getStoreState( name ) );\n\t\t\t\t}\n\t\t\t\tsubscriber = createSubscriber( listeningStores.current );\n\t\t\t} else {\n\t\t\t\tsubscriber.updateStores( listeningStores.current );\n\t\t\t}\n\n\t\t\t// If the new value is shallow-equal to the old one, keep the old one so\n\t\t\t// that we don't trigger unwanted updates that do a `===` check.\n\t\t\tif ( ! isShallowEqual( lastMapResult, mapResult ) ) {\n\t\t\t\tlastMapResult = mapResult;\n\t\t\t}\n\t\t\tlastMapSelect = mapSelect;\n\t\t\tlastMapResultValid = true;\n\t\t}\n\n\t\tfunction getValue() {\n\t\t\t// Update the value in case it's been invalidated or `mapSelect` has changed.\n\t\t\tupdateValue();\n\t\t\treturn lastMapResult;\n\t\t}\n\n\t\t// When transitioning from async to sync mode, cancel existing store updates\n\t\t// that have been scheduled, and invalidate the value so that it's freshly\n\t\t// computed. It might have been changed by the update we just cancelled.\n\t\tif ( lastIsAsync && ! isAsync ) {\n\t\t\tlastMapResultValid = false;\n\t\t\trenderQueue.cancel( queueContext );\n\t\t}\n\n\t\tupdateValue();\n\n\t\tlastIsAsync = isAsync;\n\n\t\t// Return a pair of functions that can be passed to `useSyncExternalStore`.\n\t\treturn { subscribe: subscriber.subscribe, getValue };\n\t};\n}\n\nfunction _useStaticSelect( storeName ) {\n\treturn useRegistry().select( storeName );\n}\n\nfunction _useMappingSelect( suspense, mapSelect, deps ) {\n\tconst registry = useRegistry();\n\tconst isAsync = useAsyncMode();\n\tconst store = useMemo(\n\t\t() => Store( registry, suspense ),\n\t\t[ registry, suspense ]\n\t);\n\n\t// These are \"pass-through\" dependencies from the parent hook,\n\t// and the parent should catch any hook rule violations.\n\tconst selector = useCallback( mapSelect, deps );\n\tconst { subscribe, getValue } = store( selector, isAsync );\n\tconst result = useSyncExternalStore( subscribe, getValue, getValue );\n\tuseDebugValue( result );\n\treturn result;\n}\n\n/**\n * Custom react hook for retrieving props from registered selectors.\n *\n * In general, this custom React hook follows the\n * [rules of hooks](https://react.dev/reference/rules/rules-of-hooks).\n *\n * @template {MapSelect | StoreDescriptor<any>} T\n * @param {T}         mapSelect Function called on every state change. The returned value is\n *                              exposed to the component implementing this hook. The function\n *                              receives the `registry.select` method on the first argument\n *                              and the `registry` on the second argument.\n *                              When a store key is passed, all selectors for the store will be\n *                              returned. This is only meant for usage of these selectors in event\n *                              callbacks, not for data needed to create the element tree.\n * @param {unknown[]} deps      If provided, this memoizes the mapSelect so the same `mapSelect` is\n *                              invoked on every state change unless the dependencies change.\n *\n * @example\n * ```js\n * import { useSelect } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * function HammerPriceDisplay( { currency } ) {\n *   const price = useSelect( ( select ) => {\n *     return select( myCustomStore ).getPrice( 'hammer', currency );\n *   }, [ currency ] );\n *   return new Intl.NumberFormat( 'en-US', {\n *     style: 'currency',\n *     currency,\n *   } ).format( price );\n * }\n *\n * // Rendered in the application:\n * // <HammerPriceDisplay currency=\"USD\" />\n * ```\n *\n * In the above example, when `HammerPriceDisplay` is rendered into an\n * application, the price will be retrieved from the store state using the\n * `mapSelect` callback on `useSelect`. If the currency prop changes then\n * any price in the state for that currency is retrieved. If the currency prop\n * doesn't change and other props are passed in that do change, the price will\n * not change because the dependency is just the currency.\n *\n * When data is only used in an event callback, the data should not be retrieved\n * on render, so it may be useful to get the selectors function instead.\n *\n * **Don't use `useSelect` this way when calling the selectors in the render\n * function because your component won't re-render on a data change.**\n *\n * ```js\n * import { useSelect } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * function Paste( { children } ) {\n *   const { getSettings } = useSelect( myCustomStore );\n *   function onPaste() {\n *     // Do something with the settings.\n *     const settings = getSettings();\n *   }\n *   return <div onPaste={ onPaste }>{ children }</div>;\n * }\n * ```\n * @return {UseSelectReturn<T>} A custom react hook.\n */\nexport default function useSelect( mapSelect, deps ) {\n\t// On initial call, on mount, determine the mode of this `useSelect` call\n\t// and then never allow it to change on subsequent updates.\n\tconst staticSelectMode = typeof mapSelect !== 'function';\n\tconst staticSelectModeRef = useRef( staticSelectMode );\n\n\tif ( staticSelectMode !== staticSelectModeRef.current ) {\n\t\tconst prevMode = staticSelectModeRef.current ? 'static' : 'mapping';\n\t\tconst nextMode = staticSelectMode ? 'static' : 'mapping';\n\t\tthrow new Error(\n\t\t\t`Switching useSelect from ${ prevMode } to ${ nextMode } is not allowed`\n\t\t);\n\t}\n\n\t// `staticSelectMode` is not allowed to change during the hook instance's,\n\t// lifetime, so the rules of hooks are not really violated.\n\treturn staticSelectMode\n\t\t? _useStaticSelect( mapSelect )\n\t\t: _useMappingSelect( false, mapSelect, deps );\n}\n\n/**\n * A variant of the `useSelect` hook that has the same API, but is a compatible\n * Suspense-enabled data source.\n *\n * @template {MapSelect} T\n * @param {T}     mapSelect Function called on every state change. The\n *                          returned value is exposed to the component\n *                          using this hook. The function receives the\n *                          `registry.suspendSelect` method as the first\n *                          argument and the `registry` as the second one.\n * @param {Array} deps      A dependency array used to memoize the `mapSelect`\n *                          so that the same `mapSelect` is invoked on every\n *                          state change unless the dependencies change.\n *\n * @throws {Promise} A suspense Promise that is thrown if any of the called\n * selectors is in an unresolved state.\n *\n * @return {ReturnType<T>} Data object returned by the `mapSelect` function.\n */\nexport function useSuspenseSelect( mapSelect, deps ) {\n\treturn _useMappingSelect( true, mapSelect, deps );\n}\n", "/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, pure } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useSelect from '../use-select';\n\n/** @typedef {import('react').ComponentType} ComponentType */\n\n/**\n * Higher-order component used to inject state-derived props using registered\n * selectors.\n *\n * @param {Function} mapSelectToProps Function called on every state change,\n *                                    expected to return object of props to\n *                                    merge with the component's own props.\n *\n * @example\n * ```js\n * import { withSelect } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * function PriceDisplay( { price, currency } ) {\n * \treturn new Intl.NumberFormat( 'en-US', {\n * \t\tstyle: 'currency',\n * \t\tcurrency,\n * \t} ).format( price );\n * }\n *\n * const HammerPriceDisplay = withSelect( ( select, ownProps ) => {\n * \tconst { getPrice } = select( myCustomStore );\n * \tconst { currency } = ownProps;\n *\n * \treturn {\n * \t\tprice: getPrice( 'hammer', currency ),\n * \t};\n * } )( PriceDisplay );\n *\n * // Rendered in the application:\n * //\n * //  <HammerPriceDisplay currency=\"USD\" />\n * ```\n * In the above example, when `HammerPriceDisplay` is rendered into an\n * application, it will pass the price into the underlying `PriceDisplay`\n * component and update automatically if the price of a hammer ever changes in\n * the store.\n *\n * @return {ComponentType} Enhanced component with merged state data props.\n */\nconst withSelect = ( mapSelectToProps ) =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) =>\n\t\t\tpure( ( ownProps ) => {\n\t\t\t\tconst mapSelect = ( select, registry ) =>\n\t\t\t\t\tmapSelectToProps( select, ownProps, registry );\n\t\t\t\tconst mergeProps = useSelect( mapSelect );\n\t\t\t\treturn <WrappedComponent { ...ownProps } { ...mergeProps } />;\n\t\t\t} ),\n\t\t'withSelect'\n\t);\n\nexport default withSelect;\n", "/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { useDispatchWithMap } from '../use-dispatch';\n\n/** @typedef {import('react').ComponentType} ComponentType */\n\n/**\n * Higher-order component used to add dispatch props using registered action\n * creators.\n *\n * @param {Function} mapDispatchToProps A function of returning an object of\n *                                      prop names where value is a\n *                                      dispatch-bound action creator, or a\n *                                      function to be called with the\n *                                      component's props and returning an\n *                                      action creator.\n *\n * @example\n * ```jsx\n * function Button( { onClick, children } ) {\n *     return <button type=\"button\" onClick={ onClick }>{ children }</button>;\n * }\n *\n * import { withDispatch } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * const SaleButton = withDispatch( ( dispatch, ownProps ) => {\n *     const { startSale } = dispatch( myCustomStore );\n *     const { discountPercent } = ownProps;\n *\n *     return {\n *         onClick() {\n *             startSale( discountPercent );\n *         },\n *     };\n * } )( Button );\n *\n * // Rendered in the application:\n * //\n * // <SaleButton discountPercent=\"20\">Start Sale!</SaleButton>\n * ```\n *\n * @example\n * In the majority of cases, it will be sufficient to use only two first params\n * passed to `mapDispatchToProps` as illustrated in the previous example.\n * However, there might be some very advanced use cases where using the\n * `registry` object might be used as a tool to optimize the performance of\n * your component. Using `select` function from the registry might be useful\n * when you need to fetch some dynamic data from the store at the time when the\n * event is fired, but at the same time, you never use it to render your\n * component. In such scenario, you can avoid using the `withSelect` higher\n * order component to compute such prop, which might lead to unnecessary\n * re-renders of your component caused by its frequent value change.\n * Keep in mind, that `mapDispatchToProps` must return an object with functions\n * only.\n *\n * ```jsx\n * function Button( { onClick, children } ) {\n *     return <button type=\"button\" onClick={ onClick }>{ children }</button>;\n * }\n *\n * import { withDispatch } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * const SaleButton = withDispatch( ( dispatch, ownProps, { select } ) => {\n *    // Stock number changes frequently.\n *    const { getStockNumber } = select( myCustomStore );\n *    const { startSale } = dispatch( myCustomStore );\n *    return {\n *        onClick() {\n *            const discountPercent = getStockNumber() > 50 ? 10 : 20;\n *            startSale( discountPercent );\n *        },\n *    };\n * } )( Button );\n *\n * // Rendered in the application:\n * //\n * //  <SaleButton>Start Sale!</SaleButton>\n * ```\n *\n * _Note:_ It is important that the `mapDispatchToProps` function always\n * returns an object with the same keys. For example, it should not contain\n * conditions under which a different value would be returned.\n *\n * @return {ComponentType} Enhanced component with merged dispatcher props.\n */\nconst withDispatch = ( mapDispatchToProps ) =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) => ( ownProps ) => {\n\t\t\tconst mapDispatch = ( dispatch, registry ) =>\n\t\t\t\tmapDispatchToProps( dispatch, ownProps, registry );\n\t\t\tconst dispatchProps = useDispatchWithMap( mapDispatch, [] );\n\t\t\treturn <WrappedComponent { ...ownProps } { ...dispatchProps } />;\n\t\t},\n\t\t'withDispatch'\n\t);\n\nexport default withDispatch;\n", "/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { RegistryConsumer } from '../registry-provider';\n\n/**\n * Higher-order component which renders the original component with the current\n * registry context passed as its `registry` prop.\n *\n * @param {Component} OriginalComponent Original component.\n *\n * @return {Component} Enhanced component.\n */\nconst withRegistry = createHigherOrderComponent(\n\t( OriginalComponent ) => ( props ) => (\n\t\t<RegistryConsumer>\n\t\t\t{ ( registry ) => (\n\t\t\t\t<OriginalComponent { ...props } registry={ registry } />\n\t\t\t) }\n\t\t</RegistryConsumer>\n\t),\n\t'withRegistry'\n);\n\nexport default withRegistry;\n", "/**\n * Internal dependencies\n */\nimport type { AnyConfig, StoreDescriptor, DispatchReturn } from './types';\nimport defaultRegistry from './default-registry';\n\n/**\n * Given a store descriptor, returns an object of the store's action creators.\n * Calling an action creator will cause it to be dispatched, updating the state value accordingly.\n *\n * Note: Action creators returned by the dispatch will return a promise when\n * they are called.\n *\n * @param storeNameOrDescriptor The store descriptor. The legacy calling convention of passing\n *                              the store name is also supported.\n *\n * @example\n * ```js\n * import { dispatch } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * dispatch( myCustomStore ).setPrice( 'hammer', 9.75 );\n * ```\n * @return Object containing the action creators.\n */\nexport function dispatch<\n\tStoreNameOrDescriptor extends StoreDescriptor< AnyConfig > | string,\n>(\n\tstoreNameOrDescriptor: StoreNameOrDescriptor\n): DispatchReturn< StoreNameOrDescriptor > {\n\treturn defaultRegistry.dispatch( storeNameOrDescriptor );\n}\n", "/**\n * Internal dependencies\n */\nimport type { AnyConfig, CurriedSelectorsOf, StoreDescriptor } from './types';\nimport defaultRegistry from './default-registry';\n\n/**\n * Given a store descriptor, returns an object of the store's selectors.\n * The selector functions are been pre-bound to pass the current state automatically.\n * As a consumer, you need only pass arguments of the selector, if applicable.\n *\n *\n * @param storeNameOrDescriptor The store descriptor. The legacy calling convention\n *                              of passing the store name is also supported.\n *\n * @example\n * ```js\n * import { select } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * select( myCustomStore ).getPrice( 'hammer' );\n * ```\n *\n * @return Object containing the store's selectors.\n */\nexport function select< T extends StoreDescriptor< AnyConfig > >(\n\tstoreNameOrDescriptor: string | T\n): CurriedSelectorsOf< T > {\n\treturn defaultRegistry.select( storeNameOrDescriptor );\n}\n", "/**\n * Internal dependencies\n */\nimport defaultRegistry from './default-registry';\nimport * as plugins from './plugins';\nimport { combineReducers as combineReducersModule } from './redux-store';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\nexport { default as withSelect } from './components/with-select';\nexport { default as withDispatch } from './components/with-dispatch';\nexport { default as withRegistry } from './components/with-registry';\nexport {\n\tRegistryProvider,\n\tRegistryConsumer,\n\tuseRegistry,\n} from './components/registry-provider';\nexport {\n\tdefault as useSelect,\n\tuseSuspenseSelect,\n} from './components/use-select';\nexport { useDispatch } from './components/use-dispatch';\nexport { AsyncModeProvider } from './components/async-mode-provider';\nexport { createRegistry } from './registry';\nexport { createRegistrySelector, createRegistryControl } from './factory';\nexport { createSelector } from './create-selector';\nexport { controls } from './controls';\nexport { default as createReduxStore } from './redux-store';\nexport { dispatch } from './dispatch';\nexport { select } from './select';\n\n/**\n * Object of available plugins to use with a registry.\n *\n * @see [use](#use)\n *\n * @type {Object}\n */\nexport { plugins };\n\n/**\n * The combineReducers helper function turns an object whose values are different\n * reducing functions into a single reducing function you can pass to registerReducer.\n *\n * @type  {import('./types').combineReducers}\n * @param {Object} reducers An object whose values correspond to different reducing\n *                          functions that need to be combined into one.\n *\n * @example\n * ```js\n * import { combineReducers, createReduxStore, register } from '@wordpress/data';\n *\n * const prices = ( state = {}, action ) => {\n * \treturn action.type === 'SET_PRICE' ?\n * \t\t{\n * \t\t\t...state,\n * \t\t\t[ action.item ]: action.price,\n * \t\t} :\n * \t\tstate;\n * };\n *\n * const discountPercent = ( state = 0, action ) => {\n * \treturn action.type === 'START_SALE' ?\n * \t\taction.discountPercent :\n * \t\tstate;\n * };\n *\n * const store = createReduxStore( 'my-shop', {\n * \treducer: combineReducers( {\n * \t\tprices,\n * \t\tdiscountPercent,\n * \t} ),\n * } );\n * register( store );\n * ```\n *\n * @return {Function} A reducer that invokes every reducer inside the reducers\n *                    object, and constructs a state object with the same shape.\n */\nexport const combineReducers = combineReducersModule;\n\n/**\n * Given a store descriptor, returns an object containing the store's selectors pre-bound to state\n * so that you only need to supply additional arguments, and modified so that they return promises\n * that resolve to their eventual values, after any resolvers have ran.\n *\n * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n *                                                       convention of passing the store name is\n *                                                       also supported.\n *\n * @example\n * ```js\n * import { resolveSelect } from '@wordpress/data';\n * import { store as myCustomStore } from 'my-custom-store';\n *\n * resolveSelect( myCustomStore ).getPrice( 'hammer' ).then(console.log)\n * ```\n *\n * @return {Object} Object containing the store's promise-wrapped selectors.\n */\nexport const resolveSelect = defaultRegistry.resolveSelect;\n\n/**\n * Given a store descriptor, returns an object containing the store's selectors pre-bound to state\n * so that you only need to supply additional arguments, and modified so that they throw promises\n * in case the selector is not resolved yet.\n *\n * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n *                                                       convention of passing the store name is\n *                                                       also supported.\n *\n * @return {Object} Object containing the store's suspense-wrapped selectors.\n */\nexport const suspendSelect = defaultRegistry.suspendSelect;\n\n/**\n * Given a listener function, the function will be called any time the state value\n * of one of the registered stores has changed. If you specify the optional\n * `storeNameOrDescriptor` parameter, the listener function will be called only\n * on updates on that one specific registered store.\n *\n * This function returns an `unsubscribe` function used to stop the subscription.\n *\n * @param {Function}                listener              Callback function.\n * @param {string|StoreDescriptor?} storeNameOrDescriptor Optional store name.\n *\n * @example\n * ```js\n * import { subscribe } from '@wordpress/data';\n *\n * const unsubscribe = subscribe( () => {\n * \t// You could use this opportunity to test whether the derived result of a\n * \t// selector has subsequently changed as the result of a state update.\n * } );\n *\n * // Later, if necessary...\n * unsubscribe();\n * ```\n */\nexport const subscribe = defaultRegistry.subscribe;\n\n/**\n * Registers a generic store instance.\n *\n * @deprecated Use `register( storeDescriptor )` instead.\n *\n * @param {string} name  Store registry name.\n * @param {Object} store Store instance (`{ getSelectors, getActions, subscribe }`).\n */\nexport const registerGenericStore = defaultRegistry.registerGenericStore;\n\n/**\n * Registers a standard `@wordpress/data` store.\n *\n * @deprecated Use `register` instead.\n *\n * @param {string} storeName Unique namespace identifier for the store.\n * @param {Object} options   Store description (reducer, actions, selectors, resolvers).\n *\n * @return {Object} Registered store object.\n */\nexport const registerStore = defaultRegistry.registerStore;\n\n/**\n * Extends a registry to inherit functionality provided by a given plugin. A\n * plugin is an object with properties aligning to that of a registry, merged\n * to extend the default registry behavior.\n *\n * @param {Object} plugin Plugin object.\n */\nexport const use = defaultRegistry.use;\n\n/**\n * Registers a standard `@wordpress/data` store descriptor.\n *\n * @example\n * ```js\n * import { createReduxStore, register } from '@wordpress/data';\n *\n * const store = createReduxStore( 'demo', {\n *     reducer: ( state = 'OK' ) => state,\n *     selectors: {\n *         getValue: ( state ) => state,\n *     },\n * } );\n * register( store );\n * ```\n *\n * @param {StoreDescriptor} store Store descriptor.\n */\nexport const register = defaultRegistry.register;\n", "/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\nconst logErrorOnce = memoize( console.error ); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\nexport function sprintf( format, ...args ) {\n\ttry {\n\t\treturn sprintfjs.sprintf( format, ...args );\n\t} catch ( error ) {\n\t\tif ( error instanceof Error ) {\n\t\t\tlogErrorOnce( 'sprintf error: \\n\\n' + error.toString() );\n\t\t}\n\t\treturn format;\n\t}\n}\n", "/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\nconst DEFAULT_LOCALE_DATA = {\n\t'': {\n\t\t/** @param {number} n */\n\t\tplural_forms( n ) {\n\t\t\treturn n === 1 ? 0 : 1;\n\t\t},\n\t},\n};\n\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/** @typedef {() => void} SubscribeCallback */\n/** @typedef {() => void} UnsubscribeCallback */\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\nexport const createI18n = ( initialData, initialDomain, hooks ) => {\n\t/**\n\t * The underlying instance of Tannin to which exported functions interface.\n\t *\n\t * @type {Tannin}\n\t */\n\tconst tannin = new Tannin( {} );\n\n\tconst listeners = new Set();\n\n\tconst notifyListeners = () => {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t};\n\n\t/**\n\t * Subscribe to changes of locale data.\n\t *\n\t * @param {SubscribeCallback} callback Subscription callback.\n\t * @return {UnsubscribeCallback} Unsubscribe callback.\n\t */\n\tconst subscribe = ( callback ) => {\n\t\tlisteners.add( callback );\n\t\treturn () => listeners.delete( callback );\n\t};\n\n\t/** @type {GetLocaleData} */\n\tconst getLocaleData = ( domain = 'default' ) => tannin.data[ domain ];\n\n\t/**\n\t * @param {LocaleData} [data]\n\t * @param {string}     [domain]\n\t */\n\tconst doSetLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t};\n\n\t\t// Populate default domain configuration (supported locale date which omits\n\t\t// a plural forms expression).\n\t\ttannin.data[ domain ][ '' ] = {\n\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\t};\n\n\t/** @type {SetLocaleData} */\n\tconst setLocaleData = ( data, domain ) => {\n\t\tdoSetLocaleData( data, domain );\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {AddLocaleData} */\n\tconst addLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t\t// Populate default domain configuration (supported locale date which omits\n\t\t\t// a plural forms expression).\n\t\t\t'': {\n\t\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t\t\t...data?.[ '' ],\n\t\t\t},\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {ResetLocaleData} */\n\tconst resetLocaleData = ( data, domain ) => {\n\t\t// Reset all current Tannin locale data.\n\t\ttannin.data = {};\n\n\t\t// Reset cached plural forms functions cache.\n\t\ttannin.pluralForms = {};\n\n\t\tsetLocaleData( data, domain );\n\t};\n\n\t/**\n\t * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n\t * otherwise previously assigned.\n\t *\n\t * @param {string|undefined} domain   Domain to retrieve the translated text.\n\t * @param {string|undefined} context  Context information for the translators.\n\t * @param {string}           single   Text to translate if non-plural. Used as\n\t *                                    fallback return value on a caught error.\n\t * @param {string}           [plural] The text to be used if the number is\n\t *                                    plural.\n\t * @param {number}           [number] The number to compare against to use\n\t *                                    either the singular or plural form.\n\t *\n\t * @return {string} The translated string.\n\t */\n\tconst dcnpgettext = (\n\t\tdomain = 'default',\n\t\tcontext,\n\t\tsingle,\n\t\tplural,\n\t\tnumber\n\t) => {\n\t\tif ( ! tannin.data[ domain ] ) {\n\t\t\t// Use `doSetLocaleData` to set silently, without notifying listeners.\n\t\t\tdoSetLocaleData( undefined, domain );\n\t\t}\n\n\t\treturn tannin.dcnpgettext( domain, context, single, plural, number );\n\t};\n\n\t/** @type {GetFilterDomain} */\n\tconst getFilterDomain = ( domain = 'default' ) => domain;\n\n\t/** @type {__} */\n\tconst __ = ( text, domain ) => {\n\t\tlet translation = dcnpgettext( domain, undefined, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_x} */\n\tconst _x = ( text, context, domain ) => {\n\t\tlet translation = dcnpgettext( domain, context, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation based on context information.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_n} */\n\tconst _n = ( single, plural, number, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tundefined,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_nx} */\n\tconst _nx = ( single, plural, number, context, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tcontext,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string with gettext context.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {IsRtl} */\n\tconst isRTL = () => {\n\t\treturn 'rtl' === _x( 'ltr', 'text direction' );\n\t};\n\n\t/** @type {HasTranslation} */\n\tconst hasTranslation = ( single, context, domain ) => {\n\t\tconst key = context ? context + '\\u0004' + single : single;\n\t\tlet result = !! tannin.data?.[ domain ?? 'default' ]?.[ key ];\n\t\tif ( hooks ) {\n\t\t\t/**\n\t\t\t * Filters the presence of a translation in the locale data.\n\t\t\t *\n\t\t\t * @param {boolean} hasTranslation Whether the translation is present or not..\n\t\t\t * @param {string}  single         The singular form of the translated text (used as key in locale data)\n\t\t\t * @param {string}  context        Context information for the translators.\n\t\t\t * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n\t\t\t */\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation',\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation_' + getFilterDomain( domain ),\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t};\n\n\tif ( initialData ) {\n\t\tsetLocaleData( initialData, initialDomain );\n\t}\n\n\tif ( hooks ) {\n\t\t/**\n\t\t * @param {string} hookName\n\t\t */\n\t\tconst onHookAddedOrRemoved = ( hookName ) => {\n\t\t\tif ( I18N_HOOK_REGEXP.test( hookName ) ) {\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t};\n\n\t\thooks.addAction( 'hookAdded', 'core/i18n', onHookAddedOrRemoved );\n\t\thooks.addAction( 'hookRemoved', 'core/i18n', onHookAddedOrRemoved );\n\t}\n\n\treturn {\n\t\tgetLocaleData,\n\t\tsetLocaleData,\n\t\taddLocaleData,\n\t\tresetLocaleData,\n\t\tsubscribe,\n\t\t__,\n\t\t_x,\n\t\t_n,\n\t\t_nx,\n\t\tisRTL,\n\t\thasTranslation,\n\t};\n};\n", "/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n\n/**\n * WordPress dependencies\n */\nimport { defaultHooks } from '@wordpress/hooks';\n\nconst i18n = createI18n( undefined, undefined, defaultHooks );\n\n/**\n * Default, singleton instance of `I18n`.\n */\nexport default i18n;\n\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\nexport const getLocaleData = i18n.getLocaleData.bind( i18n );\n\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const setLocaleData = i18n.setLocaleData.bind( i18n );\n\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const resetLocaleData = i18n.resetLocaleData.bind( i18n );\n\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\nexport const subscribe = i18n.subscribe.bind( i18n );\n\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\nexport const __ = i18n.__.bind( i18n );\n\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\nexport const _x = i18n._x.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _n = i18n._n.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _nx = i18n._nx.bind( i18n );\n\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\nexport const isRTL = i18n.isRTL.bind( i18n );\n\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\nexport const hasTranslation = i18n.hasTranslation.bind( i18n );\n", "export const BLOCK_ICON_DEFAULT = 'block-default';\n\n/**\n * Array of valid keys in a block type settings deprecation object.\n *\n * @type {string[]}\n */\nexport const DEPRECATED_ENTRY_KEYS = [\n\t'attributes',\n\t'supports',\n\t'save',\n\t'migrate',\n\t'isEligible',\n\t'apiVersion',\n];\n\nexport const __EXPERIMENTAL_STYLE_PROPERTY = {\n\t// Kept for back-compatibility purposes.\n\t'--wp--style--color--link': {\n\t\tvalue: [ 'color', 'link' ],\n\t\tsupport: [ 'color', 'link' ],\n\t},\n\taspectRatio: {\n\t\tvalue: [ 'dimensions', 'aspectRatio' ],\n\t\tsupport: [ 'dimensions', 'aspectRatio' ],\n\t\tuseEngine: true,\n\t},\n\tbackground: {\n\t\tvalue: [ 'color', 'gradient' ],\n\t\tsupport: [ 'color', 'gradients' ],\n\t\tuseEngine: true,\n\t},\n\tbackgroundColor: {\n\t\tvalue: [ 'color', 'background' ],\n\t\tsupport: [ 'color', 'background' ],\n\t\trequiresOptOut: true,\n\t\tuseEngine: true,\n\t},\n\tbackgroundImage: {\n\t\tvalue: [ 'background', 'backgroundImage' ],\n\t\tsupport: [ 'background', 'backgroundImage' ],\n\t\tuseEngine: true,\n\t},\n\tbackgroundRepeat: {\n\t\tvalue: [ 'background', 'backgroundRepeat' ],\n\t\tsupport: [ 'background', 'backgroundRepeat' ],\n\t\tuseEngine: true,\n\t},\n\tbackgroundSize: {\n\t\tvalue: [ 'background', 'backgroundSize' ],\n\t\tsupport: [ 'background', 'backgroundSize' ],\n\t\tuseEngine: true,\n\t},\n\tbackgroundPosition: {\n\t\tvalue: [ 'background', 'backgroundPosition' ],\n\t\tsupport: [ 'background', 'backgroundPosition' ],\n\t\tuseEngine: true,\n\t},\n\tborderColor: {\n\t\tvalue: [ 'border', 'color' ],\n\t\tsupport: [ '__experimentalBorder', 'color' ],\n\t\tuseEngine: true,\n\t},\n\tborderRadius: {\n\t\tvalue: [ 'border', 'radius' ],\n\t\tsupport: [ '__experimentalBorder', 'radius' ],\n\t\tproperties: {\n\t\t\tborderTopLeftRadius: 'topLeft',\n\t\t\tborderTopRightRadius: 'topRight',\n\t\t\tborderBottomLeftRadius: 'bottomLeft',\n\t\t\tborderBottomRightRadius: 'bottomRight',\n\t\t},\n\t\tuseEngine: true,\n\t},\n\tborderStyle: {\n\t\tvalue: [ 'border', 'style' ],\n\t\tsupport: [ '__experimentalBorder', 'style' ],\n\t\tuseEngine: true,\n\t},\n\tborderWidth: {\n\t\tvalue: [ 'border', 'width' ],\n\t\tsupport: [ '__experimentalBorder', 'width' ],\n\t\tuseEngine: true,\n\t},\n\tborderTopColor: {\n\t\tvalue: [ 'border', 'top', 'color' ],\n\t\tsupport: [ '__experimentalBorder', 'color' ],\n\t\tuseEngine: true,\n\t},\n\tborderTopStyle: {\n\t\tvalue: [ 'border', 'top', 'style' ],\n\t\tsupport: [ '__experimentalBorder', 'style' ],\n\t\tuseEngine: true,\n\t},\n\tborderTopWidth: {\n\t\tvalue: [ 'border', 'top', 'width' ],\n\t\tsupport: [ '__experimentalBorder', 'width' ],\n\t\tuseEngine: true,\n\t},\n\tborderRightColor: {\n\t\tvalue: [ 'border', 'right', 'color' ],\n\t\tsupport: [ '__experimentalBorder', 'color' ],\n\t\tuseEngine: true,\n\t},\n\tborderRightStyle: {\n\t\tvalue: [ 'border', 'right', 'style' ],\n\t\tsupport: [ '__experimentalBorder', 'style' ],\n\t\tuseEngine: true,\n\t},\n\tborderRightWidth: {\n\t\tvalue: [ 'border', 'right', 'width' ],\n\t\tsupport: [ '__experimentalBorder', 'width' ],\n\t\tuseEngine: true,\n\t},\n\tborderBottomColor: {\n\t\tvalue: [ 'border', 'bottom', 'color' ],\n\t\tsupport: [ '__experimentalBorder', 'color' ],\n\t\tuseEngine: true,\n\t},\n\tborderBottomStyle: {\n\t\tvalue: [ 'border', 'bottom', 'style' ],\n\t\tsupport: [ '__experimentalBorder', 'style' ],\n\t\tuseEngine: true,\n\t},\n\tborderBottomWidth: {\n\t\tvalue: [ 'border', 'bottom', 'width' ],\n\t\tsupport: [ '__experimentalBorder', 'width' ],\n\t\tuseEngine: true,\n\t},\n\tborderLeftColor: {\n\t\tvalue: [ 'border', 'left', 'color' ],\n\t\tsupport: [ '__experimentalBorder', 'color' ],\n\t\tuseEngine: true,\n\t},\n\tborderLeftStyle: {\n\t\tvalue: [ 'border', 'left', 'style' ],\n\t\tsupport: [ '__experimentalBorder', 'style' ],\n\t\tuseEngine: true,\n\t},\n\tborderLeftWidth: {\n\t\tvalue: [ 'border', 'left', 'width' ],\n\t\tsupport: [ '__experimentalBorder', 'width' ],\n\t\tuseEngine: true,\n\t},\n\tcolor: {\n\t\tvalue: [ 'color', 'text' ],\n\t\tsupport: [ 'color', 'text' ],\n\t\trequiresOptOut: true,\n\t\tuseEngine: true,\n\t},\n\tcolumnCount: {\n\t\tvalue: [ 'typography', 'textColumns' ],\n\t\tsupport: [ 'typography', 'textColumns' ],\n\t\tuseEngine: true,\n\t},\n\tfilter: {\n\t\tvalue: [ 'filter', 'duotone' ],\n\t\tsupport: [ 'filter', 'duotone' ],\n\t},\n\tlinkColor: {\n\t\tvalue: [ 'elements', 'link', 'color', 'text' ],\n\t\tsupport: [ 'color', 'link' ],\n\t},\n\tcaptionColor: {\n\t\tvalue: [ 'elements', 'caption', 'color', 'text' ],\n\t\tsupport: [ 'color', 'caption' ],\n\t},\n\tbuttonColor: {\n\t\tvalue: [ 'elements', 'button', 'color', 'text' ],\n\t\tsupport: [ 'color', 'button' ],\n\t},\n\tbuttonBackgroundColor: {\n\t\tvalue: [ 'elements', 'button', 'color', 'background' ],\n\t\tsupport: [ 'color', 'button' ],\n\t},\n\theadingColor: {\n\t\tvalue: [ 'elements', 'heading', 'color', 'text' ],\n\t\tsupport: [ 'color', 'heading' ],\n\t},\n\theadingBackgroundColor: {\n\t\tvalue: [ 'elements', 'heading', 'color', 'background' ],\n\t\tsupport: [ 'color', 'heading' ],\n\t},\n\tfontFamily: {\n\t\tvalue: [ 'typography', 'fontFamily' ],\n\t\tsupport: [ 'typography', '__experimentalFontFamily' ],\n\t\tuseEngine: true,\n\t},\n\tfontSize: {\n\t\tvalue: [ 'typography', 'fontSize' ],\n\t\tsupport: [ 'typography', 'fontSize' ],\n\t\tuseEngine: true,\n\t},\n\tfontStyle: {\n\t\tvalue: [ 'typography', 'fontStyle' ],\n\t\tsupport: [ 'typography', '__experimentalFontStyle' ],\n\t\tuseEngine: true,\n\t},\n\tfontWeight: {\n\t\tvalue: [ 'typography', 'fontWeight' ],\n\t\tsupport: [ 'typography', '__experimentalFontWeight' ],\n\t\tuseEngine: true,\n\t},\n\tlineHeight: {\n\t\tvalue: [ 'typography', 'lineHeight' ],\n\t\tsupport: [ 'typography', 'lineHeight' ],\n\t\tuseEngine: true,\n\t},\n\tmargin: {\n\t\tvalue: [ 'spacing', 'margin' ],\n\t\tsupport: [ 'spacing', 'margin' ],\n\t\tproperties: {\n\t\t\tmarginTop: 'top',\n\t\t\tmarginRight: 'right',\n\t\t\tmarginBottom: 'bottom',\n\t\t\tmarginLeft: 'left',\n\t\t},\n\t\tuseEngine: true,\n\t},\n\tminHeight: {\n\t\tvalue: [ 'dimensions', 'minHeight' ],\n\t\tsupport: [ 'dimensions', 'minHeight' ],\n\t\tuseEngine: true,\n\t},\n\tpadding: {\n\t\tvalue: [ 'spacing', 'padding' ],\n\t\tsupport: [ 'spacing', 'padding' ],\n\t\tproperties: {\n\t\t\tpaddingTop: 'top',\n\t\t\tpaddingRight: 'right',\n\t\t\tpaddingBottom: 'bottom',\n\t\t\tpaddingLeft: 'left',\n\t\t},\n\t\tuseEngine: true,\n\t},\n\ttextAlign: {\n\t\tvalue: [ 'typography', 'textAlign' ],\n\t\tsupport: [ 'typography', 'textAlign' ],\n\t\tuseEngine: false,\n\t},\n\ttextDecoration: {\n\t\tvalue: [ 'typography', 'textDecoration' ],\n\t\tsupport: [ 'typography', '__experimentalTextDecoration' ],\n\t\tuseEngine: true,\n\t},\n\ttextTransform: {\n\t\tvalue: [ 'typography', 'textTransform' ],\n\t\tsupport: [ 'typography', '__experimentalTextTransform' ],\n\t\tuseEngine: true,\n\t},\n\tletterSpacing: {\n\t\tvalue: [ 'typography', 'letterSpacing' ],\n\t\tsupport: [ 'typography', '__experimentalLetterSpacing' ],\n\t\tuseEngine: true,\n\t},\n\twritingMode: {\n\t\tvalue: [ 'typography', 'writingMode' ],\n\t\tsupport: [ 'typography', '__experimentalWritingMode' ],\n\t\tuseEngine: true,\n\t},\n\t'--wp--style--root--padding': {\n\t\tvalue: [ 'spacing', 'padding' ],\n\t\tsupport: [ 'spacing', 'padding' ],\n\t\tproperties: {\n\t\t\t'--wp--style--root--padding-top': 'top',\n\t\t\t'--wp--style--root--padding-right': 'right',\n\t\t\t'--wp--style--root--padding-bottom': 'bottom',\n\t\t\t'--wp--style--root--padding-left': 'left',\n\t\t},\n\t\trootOnly: true,\n\t},\n};\n\nexport const __EXPERIMENTAL_ELEMENTS = {\n\tlink: 'a:where(:not(.wp-element-button))',\n\theading: 'h1, h2, h3, h4, h5, h6',\n\th1: 'h1',\n\th2: 'h2',\n\th3: 'h3',\n\th4: 'h4',\n\th5: 'h5',\n\th6: 'h6',\n\tbutton: '.wp-element-button, .wp-block-button__link',\n\tcaption:\n\t\t'.wp-element-caption, .wp-block-audio figcaption, .wp-block-embed figcaption, .wp-block-gallery figcaption, .wp-block-image figcaption, .wp-block-table figcaption, .wp-block-video figcaption',\n\tcite: 'cite',\n};\n\n// These paths may have three origins, custom, theme, and default,\n// and are expected to override other origins with custom, theme,\n// and default priority.\nexport const __EXPERIMENTAL_PATHS_WITH_OVERRIDE = {\n\t'color.duotone': true,\n\t'color.gradients': true,\n\t'color.palette': true,\n\t'dimensions.aspectRatios': true,\n\t'typography.fontSizes': true,\n\t'spacing.spacingSizes': true,\n};\n", "/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/blocks'\n\t);\n", "/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport i18nBlockSchema from './i18n-block.json';\nimport { store as blocksStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\n/**\n * An icon type definition. One of a Dashicon slug, an element,\n * or a component.\n *\n * @typedef {(string|Element|Component)} WPIcon\n *\n * @see https://developer.wordpress.org/resource/dashicons/\n */\n\n/**\n * Render behavior of a block type icon; one of a Dashicon slug, an element,\n * or a component.\n *\n * @typedef {WPIcon} WPBlockTypeIconRender\n */\n\n/**\n * An object describing a normalized block type icon.\n *\n * @typedef {Object} WPBlockTypeIconDescriptor\n *\n * @property {WPBlockTypeIconRender} src         Render behavior of the icon,\n *                                               one of a Dashicon slug, an\n *                                               element, or a component.\n * @property {string}                background  Optimal background hex string\n *                                               color when displaying icon.\n * @property {string}                foreground  Optimal foreground hex string\n *                                               color when displaying icon.\n * @property {string}                shadowColor Optimal shadow hex string\n *                                               color when displaying icon.\n */\n\n/**\n * Value to use to render the icon for a block type in an editor interface,\n * either a Dashicon slug, an element, a component, or an object describing\n * the icon.\n *\n * @typedef {(WPBlockTypeIconDescriptor|WPBlockTypeIconRender)} WPBlockTypeIcon\n */\n\n/**\n * Named block variation scopes.\n *\n * @typedef {'block'|'inserter'|'transform'} WPBlockVariationScope\n */\n\n/**\n * An object describing a variation defined for the block type.\n *\n * @typedef {Object} WPBlockVariation\n *\n * @property {string}                  name          The unique and machine-readable name.\n * @property {string}                  title         A human-readable variation title.\n * @property {string}                  [description] A detailed variation description.\n * @property {string}                  [category]    Block type category classification,\n *                                                   used in search interfaces to arrange\n *                                                   block types by category.\n * @property {WPIcon}                  [icon]        An icon helping to visualize the variation.\n * @property {boolean}                 [isDefault]   Indicates whether the current variation is\n *                                                   the default one. Defaults to `false`.\n * @property {Object}                  [attributes]  Values which override block attributes.\n * @property {Array[]}                 [innerBlocks] Initial configuration of nested blocks.\n * @property {Object}                  [example]     Example provides structured data for\n *                                                   the block preview. You can set to\n *                                                   `undefined` to disable the preview shown\n *                                                   for the block type.\n * @property {WPBlockVariationScope[]} [scope]       The list of scopes where the variation\n *                                                   is applicable. When not provided, it\n *                                                   assumes all available scopes.\n * @property {string[]}                [keywords]    An array of terms (which can be translated)\n *                                                   that help users discover the variation\n *                                                   while searching.\n * @property {Function|string[]}       [isActive]    This can be a function or an array of block attributes.\n *                                                   Function that accepts a block's attributes and the\n *                                                   variation's attributes and determines if a variation is active.\n *                                                   This function doesn't try to find a match dynamically based\n *                                                   on all block's attributes, as in many cases some attributes are irrelevant.\n *                                                   An example would be for `embed` block where we only care\n *                                                   about `providerNameSlug` attribute's value.\n *                                                   We can also use a `string[]` to tell which attributes\n *                                                   should be compared as a shorthand. Each attributes will\n *                                                   be matched and the variation will be active if all of them are matching.\n */\n\n/**\n * Defined behavior of a block type.\n *\n * @typedef {Object} WPBlockType\n *\n * @property {string}             name          Block type's namespaced name.\n * @property {string}             title         Human-readable block type label.\n * @property {string}             [description] A detailed block type description.\n * @property {string}             [category]    Block type category classification,\n *                                              used in search interfaces to arrange\n *                                              block types by category.\n * @property {WPBlockTypeIcon}    [icon]        Block type icon.\n * @property {string[]}           [keywords]    Additional keywords to produce block\n *                                              type as result in search interfaces.\n * @property {Object}             [attributes]  Block type attributes.\n * @property {Component}          [save]        Optional component describing\n *                                              serialized markup structure of a\n *                                              block type.\n * @property {Component}          edit          Component rendering an element to\n *                                              manipulate the attributes of a block\n *                                              in the context of an editor.\n * @property {WPBlockVariation[]} [variations]  The list of block variations.\n * @property {Object}             [example]     Example provides structured data for\n *                                              the block preview. When not defined\n *                                              then no preview is shown.\n */\n\nfunction isObject( object ) {\n\treturn object !== null && typeof object === 'object';\n}\n\n/**\n * Sets the server side block definition of blocks.\n *\n * Ignored from documentation due to being marked as unstable.\n *\n * @ignore\n *\n * @param {Object} definitions Server-side block definitions\n */\n// eslint-disable-next-line camelcase\nexport function unstable__bootstrapServerSideBlockDefinitions( definitions ) {\n\tconst { addBootstrappedBlockType } = unlock( dispatch( blocksStore ) );\n\tfor ( const [ name, blockType ] of Object.entries( definitions ) ) {\n\t\taddBootstrappedBlockType( name, blockType );\n\t}\n}\n\n/**\n * Gets block settings from metadata loaded from `block.json` file\n *\n * @param {Object} metadata            Block metadata loaded from `block.json`.\n * @param {string} metadata.textdomain Textdomain to use with translations.\n *\n * @return {Object} Block settings.\n */\nfunction getBlockSettingsFromMetadata( { textdomain, ...metadata } ) {\n\tconst allowedFields = [\n\t\t'apiVersion',\n\t\t'title',\n\t\t'category',\n\t\t'parent',\n\t\t'ancestor',\n\t\t'icon',\n\t\t'description',\n\t\t'keywords',\n\t\t'attributes',\n\t\t'providesContext',\n\t\t'usesContext',\n\t\t'selectors',\n\t\t'supports',\n\t\t'styles',\n\t\t'example',\n\t\t'variations',\n\t\t'blockHooks',\n\t\t'allowedBlocks',\n\t];\n\n\tconst settings = Object.fromEntries(\n\t\tObject.entries( metadata ).filter( ( [ key ] ) =>\n\t\t\tallowedFields.includes( key )\n\t\t)\n\t);\n\n\tif ( textdomain ) {\n\t\tObject.keys( i18nBlockSchema ).forEach( ( key ) => {\n\t\t\tif ( ! settings[ key ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings[ key ] = translateBlockSettingUsingI18nSchema(\n\t\t\t\ti18nBlockSchema[ key ],\n\t\t\t\tsettings[ key ],\n\t\t\t\ttextdomain\n\t\t\t);\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\n/**\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made available as an option to any\n * editor interface where blocks are implemented.\n *\n * For more in-depth information on registering a custom block see the\n * [Create a block tutorial](https://developer.wordpress.org/block-editor/getting-started/create-block/).\n *\n * @param {string|Object} blockNameOrMetadata Block type name or its metadata.\n * @param {Object}        settings            Block settings.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { registerBlockType } from '@wordpress/blocks'\n *\n * registerBlockType( 'namespace/block-name', {\n *     title: __( 'My First Block' ),\n *     edit: () => <div>{ __( 'Hello from the editor!' ) }</div>,\n *     save: () => <div>Hello from the saved content!</div>,\n * } );\n * ```\n *\n * @return {WPBlockType | undefined} The block, if it has been successfully registered;\n *                    otherwise `undefined`.\n */\nexport function registerBlockType( blockNameOrMetadata, settings ) {\n\tconst name = isObject( blockNameOrMetadata )\n\t\t? blockNameOrMetadata.name\n\t\t: blockNameOrMetadata;\n\n\tif ( typeof name !== 'string' ) {\n\t\twarning( 'Block names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( name ) ) {\n\t\twarning(\n\t\t\t'Block names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-block'\n\t\t);\n\t\treturn;\n\t}\n\tif ( select( blocksStore ).getBlockType( name ) ) {\n\t\twarning( 'Block \"' + name + '\" is already registered.' );\n\t\treturn;\n\t}\n\n\tconst { addBootstrappedBlockType, addUnprocessedBlockType } = unlock(\n\t\tdispatch( blocksStore )\n\t);\n\n\tif ( isObject( blockNameOrMetadata ) ) {\n\t\tconst metadata = getBlockSettingsFromMetadata( blockNameOrMetadata );\n\t\taddBootstrappedBlockType( name, metadata );\n\t}\n\n\taddUnprocessedBlockType( name, settings );\n\n\treturn select( blocksStore ).getBlockType( name );\n}\n\n/**\n * Translates block settings provided with metadata using the i18n schema.\n *\n * @param {string|string[]|Object[]} i18nSchema   I18n schema for the block setting.\n * @param {string|string[]|Object[]} settingValue Value for the block setting.\n * @param {string}                   textdomain   Textdomain to use with translations.\n *\n * @return {string|string[]|Object[]} Translated setting.\n */\nfunction translateBlockSettingUsingI18nSchema(\n\ti18nSchema,\n\tsettingValue,\n\ttextdomain\n) {\n\tif ( typeof i18nSchema === 'string' && typeof settingValue === 'string' ) {\n\t\t// eslint-disable-next-line @wordpress/i18n-no-variables, @wordpress/i18n-text-domain\n\t\treturn _x( settingValue, i18nSchema, textdomain );\n\t}\n\tif (\n\t\tArray.isArray( i18nSchema ) &&\n\t\ti18nSchema.length &&\n\t\tArray.isArray( settingValue )\n\t) {\n\t\treturn settingValue.map( ( value ) =>\n\t\t\ttranslateBlockSettingUsingI18nSchema(\n\t\t\t\ti18nSchema[ 0 ],\n\t\t\t\tvalue,\n\t\t\t\ttextdomain\n\t\t\t)\n\t\t);\n\t}\n\tif (\n\t\tisObject( i18nSchema ) &&\n\t\tObject.entries( i18nSchema ).length &&\n\t\tisObject( settingValue )\n\t) {\n\t\treturn Object.keys( settingValue ).reduce( ( accumulator, key ) => {\n\t\t\tif ( ! i18nSchema[ key ] ) {\n\t\t\t\taccumulator[ key ] = settingValue[ key ];\n\t\t\t\treturn accumulator;\n\t\t\t}\n\t\t\taccumulator[ key ] = translateBlockSettingUsingI18nSchema(\n\t\t\t\ti18nSchema[ key ],\n\t\t\t\tsettingValue[ key ],\n\t\t\t\ttextdomain\n\t\t\t);\n\t\t\treturn accumulator;\n\t\t}, {} );\n\t}\n\treturn settingValue;\n}\n\n/**\n * Registers a new block collection to group blocks in the same namespace in the inserter.\n *\n * @param {string} namespace       The namespace to group blocks by in the inserter; corresponds to the block namespace.\n * @param {Object} settings        The block collection settings.\n * @param {string} settings.title  The title to display in the block inserter.\n * @param {Object} [settings.icon] The icon to display in the block inserter.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { registerBlockCollection, registerBlockType } from '@wordpress/blocks';\n *\n * // Register the collection.\n * registerBlockCollection( 'my-collection', {\n *     title: __( 'Custom Collection' ),\n * } );\n *\n * // Register a block in the same namespace to add it to the collection.\n * registerBlockType( 'my-collection/block-name', {\n *     title: __( 'My First Block' ),\n *     edit: () => <div>{ __( 'Hello from the editor!' ) }</div>,\n *     save: () => <div>'Hello from the saved content!</div>,\n * } );\n * ```\n */\nexport function registerBlockCollection( namespace, { title, icon } ) {\n\tdispatch( blocksStore ).addBlockCollection( namespace, title, icon );\n}\n\n/**\n * Unregisters a block collection\n *\n * @param {string} namespace The namespace to group blocks by in the inserter; corresponds to the block namespace\n *\n * @example\n * ```js\n * import { unregisterBlockCollection } from '@wordpress/blocks';\n *\n * unregisterBlockCollection( 'my-collection' );\n * ```\n */\nexport function unregisterBlockCollection( namespace ) {\n\tdispatch( blocksStore ).removeBlockCollection( namespace );\n}\n\n/**\n * Unregisters a block.\n *\n * @param {string} name Block name.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { unregisterBlockType } from '@wordpress/blocks';\n *\n * const ExampleComponent = () => {\n *     return (\n *         <Button\n *             onClick={ () =>\n *                 unregisterBlockType( 'my-collection/block-name' )\n *             }\n *         >\n *             { __( 'Unregister my custom block.' ) }\n *         </Button>\n *     );\n * };\n * ```\n *\n * @return {WPBlockType | undefined} The previous block value, if it has been successfully\n *                    unregistered; otherwise `undefined`.\n */\nexport function unregisterBlockType( name ) {\n\tconst oldBlock = select( blocksStore ).getBlockType( name );\n\tif ( ! oldBlock ) {\n\t\twarning( 'Block \"' + name + '\" is not registered.' );\n\t\treturn;\n\t}\n\tdispatch( blocksStore ).removeBlockTypes( name );\n\treturn oldBlock;\n}\n\n/**\n * Assigns name of block for handling non-block content.\n *\n * @param {string} blockName Block name.\n */\nexport function setFreeformContentHandlerName( blockName ) {\n\tdispatch( blocksStore ).setFreeformFallbackBlockName( blockName );\n}\n\n/**\n * Retrieves name of block handling non-block content, or undefined if no\n * handler has been defined.\n *\n * @return {?string} Block name.\n */\nexport function getFreeformContentHandlerName() {\n\treturn select( blocksStore ).getFreeformFallbackBlockName();\n}\n\n/**\n * Retrieves name of block used for handling grouping interactions.\n *\n * @return {?string} Block name.\n */\nexport function getGroupingBlockName() {\n\treturn select( blocksStore ).getGroupingBlockName();\n}\n\n/**\n * Assigns name of block handling unregistered block types.\n *\n * @param {string} blockName Block name.\n */\nexport function setUnregisteredTypeHandlerName( blockName ) {\n\tdispatch( blocksStore ).setUnregisteredFallbackBlockName( blockName );\n}\n\n/**\n * Retrieves name of block handling unregistered block types, or undefined if no\n * handler has been defined.\n *\n * @return {?string} Block name.\n */\nexport function getUnregisteredTypeHandlerName() {\n\treturn select( blocksStore ).getUnregisteredFallbackBlockName();\n}\n\n/**\n * Assigns the default block name.\n *\n * @param {string} name Block name.\n *\n * @example\n * ```js\n * import { setDefaultBlockName } from '@wordpress/blocks';\n *\n * const ExampleComponent = () => {\n *\n *     return (\n *         <Button onClick={ () => setDefaultBlockName( 'core/heading' ) }>\n *             { __( 'Set the default block to Heading' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport function setDefaultBlockName( name ) {\n\tdispatch( blocksStore ).setDefaultBlockName( name );\n}\n\n/**\n * Assigns name of block for handling block grouping interactions.\n *\n * This function lets you select a different block to group other blocks in instead of the\n * default `core/group` block. This function must be used in a component or when the DOM is fully\n * loaded. See https://developer.wordpress.org/block-editor/reference-guides/packages/packages-dom-ready/\n *\n * @param {string} name Block name.\n *\n * @example\n * ```js\n * import { setGroupingBlockName } from '@wordpress/blocks';\n *\n * const ExampleComponent = () => {\n *\n *     return (\n *         <Button onClick={ () => setGroupingBlockName( 'core/columns' ) }>\n *             { __( 'Wrap in columns' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport function setGroupingBlockName( name ) {\n\tdispatch( blocksStore ).setGroupingBlockName( name );\n}\n\n/**\n * Retrieves the default block name.\n *\n * @return {?string} Block name.\n */\nexport function getDefaultBlockName() {\n\treturn select( blocksStore ).getDefaultBlockName();\n}\n\n/**\n * Returns a registered block type.\n *\n * @param {string} name Block name.\n *\n * @return {?Object} Block type.\n */\nexport function getBlockType( name ) {\n\treturn select( blocksStore )?.getBlockType( name );\n}\n\n/**\n * Returns all registered blocks.\n *\n * @return {Array} Block settings.\n */\nexport function getBlockTypes() {\n\treturn select( blocksStore ).getBlockTypes();\n}\n\n/**\n * Returns the block support value for a feature, if defined.\n *\n * @param {(string|Object)} nameOrType      Block name or type object\n * @param {string}          feature         Feature to retrieve\n * @param {*}               defaultSupports Default value to return if not\n *                                          explicitly defined\n *\n * @return {?*} Block support value\n */\nexport function getBlockSupport( nameOrType, feature, defaultSupports ) {\n\treturn select( blocksStore ).getBlockSupport(\n\t\tnameOrType,\n\t\tfeature,\n\t\tdefaultSupports\n\t);\n}\n\n/**\n * Returns true if the block defines support for a feature, or false otherwise.\n *\n * @param {(string|Object)} nameOrType      Block name or type object.\n * @param {string}          feature         Feature to test.\n * @param {boolean}         defaultSupports Whether feature is supported by\n *                                          default if not explicitly defined.\n *\n * @return {boolean} Whether block supports feature.\n */\nexport function hasBlockSupport( nameOrType, feature, defaultSupports ) {\n\treturn select( blocksStore ).hasBlockSupport(\n\t\tnameOrType,\n\t\tfeature,\n\t\tdefaultSupports\n\t);\n}\n\n/**\n * Determines whether or not the given block is a reusable block. This is a\n * special block type that is used to point to a global block stored via the\n * API.\n *\n * @param {Object} blockOrType Block or Block Type to test.\n *\n * @return {boolean} Whether the given block is a reusable block.\n */\nexport function isReusableBlock( blockOrType ) {\n\treturn blockOrType?.name === 'core/block';\n}\n\n/**\n * Determines whether or not the given block is a template part. This is a\n * special block type that allows composing a page template out of reusable\n * design elements.\n *\n * @param {Object} blockOrType Block or Block Type to test.\n *\n * @return {boolean} Whether the given block is a template part.\n */\nexport function isTemplatePart( blockOrType ) {\n\treturn blockOrType?.name === 'core/template-part';\n}\n\n/**\n * Returns an array with the child blocks of a given block.\n *\n * @param {string} blockName Name of block (example: “latest-posts”).\n *\n * @return {Array} Array of child block names.\n */\nexport const getChildBlockNames = ( blockName ) => {\n\treturn select( blocksStore ).getChildBlockNames( blockName );\n};\n\n/**\n * Returns a boolean indicating if a block has child blocks or not.\n *\n * @param {string} blockName Name of block (example: “latest-posts”).\n *\n * @return {boolean} True if a block contains child blocks and false otherwise.\n */\nexport const hasChildBlocks = ( blockName ) => {\n\treturn select( blocksStore ).hasChildBlocks( blockName );\n};\n\n/**\n * Returns a boolean indicating if a block has at least one child block with inserter support.\n *\n * @param {string} blockName Block type name.\n *\n * @return {boolean} True if a block contains at least one child blocks with inserter support\n *                   and false otherwise.\n */\nexport const hasChildBlocksWithInserterSupport = ( blockName ) => {\n\treturn select( blocksStore ).hasChildBlocksWithInserterSupport( blockName );\n};\n\n/**\n * Registers a new block style for the given block types.\n *\n * For more information on connecting the styles with CSS\n * [the official documentation](https://developer.wordpress.org/block-editor/reference-guides/block-api/block-styles/#styles).\n *\n * @param {string|Array} blockNames     Name of blocks e.g. “core/latest-posts” or `[\"core/group\", \"core/columns\"]`.\n * @param {Object}       styleVariation Object containing `name` which is the class name applied to the block and `label` which identifies the variation to the user.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { registerBlockStyle } from '@wordpress/blocks';\n * import { Button } from '@wordpress/components';\n *\n *\n * const ExampleComponent = () => {\n *     return (\n *         <Button\n *             onClick={ () => {\n *                 registerBlockStyle( 'core/quote', {\n *                     name: 'fancy-quote',\n *                     label: __( 'Fancy Quote' ),\n *                 } );\n *             } }\n *         >\n *             { __( 'Add a new block style for core/quote' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport const registerBlockStyle = ( blockNames, styleVariation ) => {\n\tdispatch( blocksStore ).addBlockStyles( blockNames, styleVariation );\n};\n\n/**\n * Unregisters a block style for the given block.\n *\n * @param {string} blockName          Name of block (example: “core/latest-posts”).\n * @param {string} styleVariationName Name of class applied to the block.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { unregisterBlockStyle } from '@wordpress/blocks';\n * import { Button } from '@wordpress/components';\n *\n * const ExampleComponent = () => {\n *     return (\n *     <Button\n *         onClick={ () => {\n *             unregisterBlockStyle( 'core/quote', 'plain' );\n *         } }\n *     >\n *         { __( 'Remove the \"Plain\" block style for core/quote' ) }\n *     </Button>\n *     );\n * };\n * ```\n */\nexport const unregisterBlockStyle = ( blockName, styleVariationName ) => {\n\tdispatch( blocksStore ).removeBlockStyles( blockName, styleVariationName );\n};\n\n/**\n * Returns an array with the variations of a given block type.\n * Ignored from documentation as the recommended usage is via useSelect from @wordpress/data.\n *\n * @ignore\n *\n * @param {string}                blockName Name of block (example: “core/columns”).\n * @param {WPBlockVariationScope} [scope]   Block variation scope name.\n *\n * @return {(WPBlockVariation[]|void)} Block variations.\n */\nexport const getBlockVariations = ( blockName, scope ) => {\n\treturn select( blocksStore ).getBlockVariations( blockName, scope );\n};\n\n/**\n * Registers a new block variation for the given block type.\n *\n * For more information on block variations see\n * [the official documentation ](https://developer.wordpress.org/block-editor/reference-guides/block-api/block-variations/).\n *\n * @param {string}           blockName Name of the block (example: “core/columns”).\n * @param {WPBlockVariation} variation Object describing a block variation.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { registerBlockVariation } from '@wordpress/blocks';\n * import { Button } from '@wordpress/components';\n *\n * const ExampleComponent = () => {\n *     return (\n *         <Button\n *             onClick={ () => {\n *                 registerBlockVariation( 'core/embed', {\n *                     name: 'custom',\n *                     title: __( 'My Custom Embed' ),\n *                     attributes: { providerNameSlug: 'custom' },\n *                 } );\n *             } }\n *          >\n *              __( 'Add a custom variation for core/embed' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport const registerBlockVariation = ( blockName, variation ) => {\n\tif ( typeof variation.name !== 'string' ) {\n\t\twarning( 'Variation names must be unique strings.' );\n\t}\n\n\tdispatch( blocksStore ).addBlockVariations( blockName, variation );\n};\n\n/**\n * Unregisters a block variation defined for the given block type.\n *\n * @param {string} blockName     Name of the block (example: “core/columns”).\n * @param {string} variationName Name of the variation defined for the block.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { unregisterBlockVariation } from '@wordpress/blocks';\n * import { Button } from '@wordpress/components';\n *\n * const ExampleComponent = () => {\n *     return (\n *         <Button\n *             onClick={ () => {\n *                 unregisterBlockVariation( 'core/embed', 'youtube' );\n *             } }\n *         >\n *             { __( 'Remove the YouTube variation from core/embed' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport const unregisterBlockVariation = ( blockName, variationName ) => {\n\tdispatch( blocksStore ).removeBlockVariations( blockName, variationName );\n};\n\n/**\n * Registers a new block bindings source with an object defining its\n * behavior. Once registered, the source is available to be connected\n * to the supported block attributes.\n *\n * @since 6.7.0 Introduced in WordPress core.\n *\n * @param {Object}   source                    Properties of the source to be registered.\n * @param {string}   source.name               The unique and machine-readable name.\n * @param {string}   [source.label]            Human-readable label. Optional when it is defined in the server.\n * @param {Array}    [source.usesContext]      Optional array of context needed by the source only in the editor.\n * @param {Function} [source.getValues]        Optional function to get the values from the source.\n * @param {Function} [source.setValues]        Optional function to update multiple values connected to the source.\n * @param {Function} [source.canUserEditValue] Optional function to determine if the user can edit the value.\n *\n * @example\n * ```js\n * import { _x } from '@wordpress/i18n';\n * import { registerBlockBindingsSource } from '@wordpress/blocks'\n *\n * registerBlockBindingsSource( {\n *     name: 'plugin/my-custom-source',\n *     label: _x( 'My Custom Source', 'block bindings source' ),\n *     usesContext: [ 'postType' ],\n *     getValues: getSourceValues,\n *     setValues: updateMyCustomValuesInBatch,\n *     canUserEditValue: () => true,\n * } );\n * ```\n */\nexport const registerBlockBindingsSource = ( source ) => {\n\tconst {\n\t\tname,\n\t\tlabel,\n\t\tusesContext,\n\t\tgetValues,\n\t\tsetValues,\n\t\tcanUserEditValue,\n\t\tgetFieldsList,\n\t} = source;\n\n\tconst existingSource = unlock(\n\t\tselect( blocksStore )\n\t).getBlockBindingsSource( name );\n\n\t/*\n\t * Check if the source has been already registered on the client.\n\t * If the `getValues` property is defined, it could be assumed the source is already registered.\n\t */\n\tif ( existingSource?.getValues ) {\n\t\twarning(\n\t\t\t'Block bindings source \"' + name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\t// Check the `name` property is correct.\n\tif ( ! name ) {\n\t\twarning( 'Block bindings source must contain a name.' );\n\t\treturn;\n\t}\n\n\tif ( typeof name !== 'string' ) {\n\t\twarning( 'Block bindings source name must be a string.' );\n\t\treturn;\n\t}\n\n\tif ( /[A-Z]+/.test( name ) ) {\n\t\twarning(\n\t\t\t'Block bindings source name must not contain uppercase characters.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z0-9/-]+$/.test( name ) ) {\n\t\twarning(\n\t\t\t'Block bindings source name must contain only valid characters: lowercase characters, hyphens, or digits. Example: my-plugin/my-custom-source.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z0-9-]+\\/[a-z0-9-]+$/.test( name ) ) {\n\t\twarning(\n\t\t\t'Block bindings source name must contain a namespace and valid characters. Example: my-plugin/my-custom-source.'\n\t\t);\n\t\treturn;\n\t}\n\n\t// Check the `label` property is correct.\n\tif ( label && existingSource?.label ) {\n\t\twarning(\n\t\t\t'Block bindings \"' +\n\t\t\t\tname +\n\t\t\t\t'\" source label is already defined in the server.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! label && ! existingSource?.label ) {\n\t\twarning( 'Block bindings source must contain a label.' );\n\t\treturn;\n\t}\n\n\tif ( label && typeof label !== 'string' ) {\n\t\twarning( 'Block bindings source label must be a string.' );\n\t\treturn;\n\t}\n\n\t// Check the `usesContext` property is correct.\n\tif ( usesContext && ! Array.isArray( usesContext ) ) {\n\t\twarning( 'Block bindings source usesContext must be an array.' );\n\t\treturn;\n\t}\n\n\t// Check the `getValues` property is correct.\n\tif ( getValues && typeof getValues !== 'function' ) {\n\t\twarning( 'Block bindings source getValues must be a function.' );\n\t\treturn;\n\t}\n\n\t// Check the `setValues` property is correct.\n\tif ( setValues && typeof setValues !== 'function' ) {\n\t\twarning( 'Block bindings source setValues must be a function.' );\n\t\treturn;\n\t}\n\n\t// Check the `canUserEditValue` property is correct.\n\tif ( canUserEditValue && typeof canUserEditValue !== 'function' ) {\n\t\twarning( 'Block bindings source canUserEditValue must be a function.' );\n\t\treturn;\n\t}\n\n\t// Check the `getFieldsList` property is correct.\n\tif ( getFieldsList && typeof getFieldsList !== 'function' ) {\n\t\t// eslint-disable-next-line no-console\n\t\twarning( 'Block bindings source getFieldsList must be a function.' );\n\t\treturn;\n\t}\n\n\treturn unlock( dispatch( blocksStore ) ).addBlockBindingsSource( source );\n};\n\n/**\n * Unregisters a block bindings source by providing its name.\n *\n * @since 6.7.0 Introduced in WordPress core.\n *\n * @param {string} name The name of the block bindings source to unregister.\n *\n * @example\n * ```js\n * import { unregisterBlockBindingsSource } from '@wordpress/blocks';\n *\n * unregisterBlockBindingsSource( 'plugin/my-custom-source' );\n * ```\n */\nexport function unregisterBlockBindingsSource( name ) {\n\tconst oldSource = getBlockBindingsSource( name );\n\tif ( ! oldSource ) {\n\t\twarning( 'Block bindings source \"' + name + '\" is not registered.' );\n\t\treturn;\n\t}\n\tunlock( dispatch( blocksStore ) ).removeBlockBindingsSource( name );\n}\n\n/**\n * Returns a registered block bindings source by its name.\n *\n * @since 6.7.0 Introduced in WordPress core.\n *\n * @param {string} name Block bindings source name.\n *\n * @return {?Object} Block bindings source.\n */\nexport function getBlockBindingsSource( name ) {\n\treturn unlock( select( blocksStore ) ).getBlockBindingsSource( name );\n}\n\n/**\n * Returns all registered block bindings sources.\n *\n * @since 6.7.0 Introduced in WordPress core.\n *\n * @return {Array} Block bindings sources.\n */\nexport function getBlockBindingsSources() {\n\treturn unlock( select( blocksStore ) ).getAllBlockBindingsSources();\n}\n", "/**\n * External dependencies\n */\nimport { colord, extend } from 'colord';\nimport namesPlugin from 'colord/plugins/names';\nimport a11yPlugin from 'colord/plugins/a11y';\n\n/**\n * WordPress dependencies\n */\nimport { Component, isValidElement } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\nimport { RichTextData } from '@wordpress/rich-text';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { BLOCK_ICON_DEFAULT } from './constants';\nimport { getBlockType, getDefaultBlockName } from './registration';\n\nextend( [ namesPlugin, a11yPlugin ] );\n\n/**\n * Array of icon colors containing a color to be used if the icon color\n * was not explicitly set but the icon background color was.\n *\n * @type {Object}\n */\nconst ICON_COLORS = [ '#191e23', '#f8f9f9' ];\n\n/**\n * Determines whether the block's attribute is equal to the default attribute\n * which means the attribute is unmodified.\n * @param {Object} attributeDefinition The attribute's definition of the block type.\n * @param {*}      value               The attribute's value.\n * @return {boolean} Whether the attribute is unmodified.\n */\nfunction isUnmodifiedAttribute( attributeDefinition, value ) {\n\t// Every attribute that has a default must match the default.\n\tif ( attributeDefinition.hasOwnProperty( 'default' ) ) {\n\t\treturn value === attributeDefinition.default;\n\t}\n\n\t// The rich text type is a bit different from the rest because it\n\t// has an implicit default value of an empty RichTextData instance,\n\t// so check the length of the value.\n\tif ( attributeDefinition.type === 'rich-text' ) {\n\t\treturn ! value?.length;\n\t}\n\n\t// Every attribute that doesn't have a default should be undefined.\n\treturn value === undefined;\n}\n\n/**\n * Determines whether the block's attributes are equal to the default attributes\n * which means the block is unmodified.\n *\n * @param {WPBlock} block Block Object\n *\n * @return {boolean} Whether the block is an unmodified block.\n */\nexport function isUnmodifiedBlock( block ) {\n\treturn Object.entries( getBlockType( block.name )?.attributes ?? {} ).every(\n\t\t( [ key, definition ] ) => {\n\t\t\tconst value = block.attributes[ key ];\n\n\t\t\treturn isUnmodifiedAttribute( definition, value );\n\t\t}\n\t);\n}\n\n/**\n * Determines whether the block is a default block and its attributes are equal\n * to the default attributes which means the block is unmodified.\n *\n * @param {WPBlock} block Block Object\n *\n * @return {boolean} Whether the block is an unmodified default block.\n */\nexport function isUnmodifiedDefaultBlock( block ) {\n\treturn block.name === getDefaultBlockName() && isUnmodifiedBlock( block );\n}\n\n/**\n * Determines whether the block content is unmodified. A block content is\n * considered unmodified if all the attributes that have a role of 'content'\n * are equal to the default attributes (or undefined).\n * If the block does not have any attributes with a role of 'content', it\n * will be considered unmodified if all the attributes are equal to the default\n * attributes (or undefined).\n *\n * @param {WPBlock} block Block Object\n * @return {boolean} Whether the block content is unmodified.\n */\nexport function isUnmodifiedBlockContent( block ) {\n\tconst contentAttributes = getBlockAttributesNamesByRole(\n\t\tblock.name,\n\t\t'content'\n\t);\n\n\tif ( contentAttributes.length === 0 ) {\n\t\treturn isUnmodifiedBlock( block );\n\t}\n\n\treturn contentAttributes.every( ( key ) => {\n\t\tconst definition = getBlockType( block.name )?.attributes[ key ];\n\t\tconst value = block.attributes[ key ];\n\n\t\treturn isUnmodifiedAttribute( definition, value );\n\t} );\n}\n\n/**\n * Function that checks if the parameter is a valid icon.\n *\n * @param {*} icon Parameter to be checked.\n *\n * @return {boolean} True if the parameter is a valid icon and false otherwise.\n */\n\nexport function isValidIcon( icon ) {\n\treturn (\n\t\t!! icon &&\n\t\t( typeof icon === 'string' ||\n\t\t\tisValidElement( icon ) ||\n\t\t\ttypeof icon === 'function' ||\n\t\t\ticon instanceof Component )\n\t);\n}\n\n/**\n * Function that receives an icon as set by the blocks during the registration\n * and returns a new icon object that is normalized so we can rely on just on possible icon structure\n * in the codebase.\n *\n * @param {WPBlockTypeIconRender} icon Render behavior of a block type icon;\n *                                     one of a Dashicon slug, an element, or a\n *                                     component.\n *\n * @return {WPBlockTypeIconDescriptor} Object describing the icon.\n */\nexport function normalizeIconObject( icon ) {\n\ticon = icon || BLOCK_ICON_DEFAULT;\n\tif ( isValidIcon( icon ) ) {\n\t\treturn { src: icon };\n\t}\n\n\tif ( 'background' in icon ) {\n\t\tconst colordBgColor = colord( icon.background );\n\t\tconst getColorContrast = ( iconColor ) =>\n\t\t\tcolordBgColor.contrast( iconColor );\n\t\tconst maxContrast = Math.max( ...ICON_COLORS.map( getColorContrast ) );\n\n\t\treturn {\n\t\t\t...icon,\n\t\t\tforeground: icon.foreground\n\t\t\t\t? icon.foreground\n\t\t\t\t: ICON_COLORS.find(\n\t\t\t\t\t\t( iconColor ) =>\n\t\t\t\t\t\t\tgetColorContrast( iconColor ) === maxContrast\n\t\t\t\t  ),\n\t\t\tshadowColor: colordBgColor.alpha( 0.3 ).toRgbString(),\n\t\t};\n\t}\n\n\treturn icon;\n}\n\n/**\n * Normalizes block type passed as param. When string is passed then\n * it converts it to the matching block type object.\n * It passes the original object otherwise.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n *\n * @return {?Object} Block type.\n */\nexport function normalizeBlockType( blockTypeOrName ) {\n\tif ( typeof blockTypeOrName === 'string' ) {\n\t\treturn getBlockType( blockTypeOrName );\n\t}\n\n\treturn blockTypeOrName;\n}\n\n/**\n * Get the label for the block, usually this is either the block title,\n * or the value of the block's `label` function when that's specified.\n *\n * @param {Object} blockType  The block type.\n * @param {Object} attributes The values of the block's attributes.\n * @param {Object} context    The intended use for the label.\n *\n * @return {string} The block label.\n */\nexport function getBlockLabel( blockType, attributes, context = 'visual' ) {\n\tconst { __experimentalLabel: getLabel, title } = blockType;\n\n\tconst label = getLabel && getLabel( attributes, { context } );\n\n\tif ( ! label ) {\n\t\treturn title;\n\t}\n\n\tif ( label.toPlainText ) {\n\t\treturn label.toPlainText();\n\t}\n\n\t// Strip any HTML (i.e. RichText formatting) before returning.\n\treturn stripHTML( label );\n}\n\n/**\n * Get a label for the block for use by screenreaders, this is more descriptive\n * than the visual label and includes the block title and the value of the\n * `getLabel` function if it's specified.\n *\n * @param {?Object} blockType              The block type.\n * @param {Object}  attributes             The values of the block's attributes.\n * @param {?number} position               The position of the block in the block list.\n * @param {string}  [direction='vertical'] The direction of the block layout.\n *\n * @return {string} The block label.\n */\nexport function getAccessibleBlockLabel(\n\tblockType,\n\tattributes,\n\tposition,\n\tdirection = 'vertical'\n) {\n\t// `title` is already localized, `label` is a user-supplied value.\n\tconst title = blockType?.title;\n\tconst label = blockType\n\t\t? getBlockLabel( blockType, attributes, 'accessibility' )\n\t\t: '';\n\tconst hasPosition = position !== undefined;\n\n\t// getBlockLabel returns the block title as a fallback when there's no label,\n\t// if it did return the title, this function needs to avoid adding the\n\t// title twice within the accessible label. Use this `hasLabel` boolean to\n\t// handle that.\n\tconst hasLabel = label && label !== title;\n\n\tif ( hasPosition && direction === 'vertical' ) {\n\t\tif ( hasLabel ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: accessibility text. 1: The block title. 2: The block row number. 3: The block label.. */\n\t\t\t\t__( '%1$s Block. Row %2$d. %3$s' ),\n\t\t\t\ttitle,\n\t\t\t\tposition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t}\n\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. 1: The block title. 2: The block row number. */\n\t\t\t__( '%1$s Block. Row %2$d' ),\n\t\t\ttitle,\n\t\t\tposition\n\t\t);\n\t} else if ( hasPosition && direction === 'horizontal' ) {\n\t\tif ( hasLabel ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: accessibility text. 1: The block title. 2: The block column number. 3: The block label.. */\n\t\t\t\t__( '%1$s Block. Column %2$d. %3$s' ),\n\t\t\t\ttitle,\n\t\t\t\tposition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t}\n\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. 1: The block title. 2: The block column number. */\n\t\t\t__( '%1$s Block. Column %2$d' ),\n\t\t\ttitle,\n\t\t\tposition\n\t\t);\n\t}\n\n\tif ( hasLabel ) {\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. %1: The block title. %2: The block label. */\n\t\t\t__( '%1$s Block. %2$s' ),\n\t\t\ttitle,\n\t\t\tlabel\n\t\t);\n\t}\n\n\treturn sprintf(\n\t\t/* translators: accessibility text. %s: The block title. */\n\t\t__( '%s Block' ),\n\t\ttitle\n\t);\n}\n\nexport function getDefault( attributeSchema ) {\n\tif ( attributeSchema.default !== undefined ) {\n\t\treturn attributeSchema.default;\n\t}\n\n\tif ( attributeSchema.type === 'rich-text' ) {\n\t\treturn new RichTextData();\n\t}\n}\n\n/**\n * Ensure attributes contains only values defined by block type, and merge\n * default values for missing attributes.\n *\n * @param {string} name       The block's name.\n * @param {Object} attributes The block's attributes.\n * @return {Object} The sanitized attributes.\n */\nexport function __experimentalSanitizeBlockAttributes( name, attributes ) {\n\t// Get the type definition associated with a registered block.\n\tconst blockType = getBlockType( name );\n\n\tif ( undefined === blockType ) {\n\t\tthrow new Error( `Block type '${ name }' is not registered.` );\n\t}\n\n\treturn Object.entries( blockType.attributes ).reduce(\n\t\t( accumulator, [ key, schema ] ) => {\n\t\t\tconst value = attributes[ key ];\n\n\t\t\tif ( undefined !== value ) {\n\t\t\t\tif ( schema.type === 'rich-text' ) {\n\t\t\t\t\tif ( value instanceof RichTextData ) {\n\t\t\t\t\t\taccumulator[ key ] = value;\n\t\t\t\t\t} else if ( typeof value === 'string' ) {\n\t\t\t\t\t\taccumulator[ key ] =\n\t\t\t\t\t\t\tRichTextData.fromHTMLString( value );\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tschema.type === 'string' &&\n\t\t\t\t\tvalue instanceof RichTextData\n\t\t\t\t) {\n\t\t\t\t\taccumulator[ key ] = value.toHTMLString();\n\t\t\t\t} else {\n\t\t\t\t\taccumulator[ key ] = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst _default = getDefault( schema );\n\t\t\t\tif ( undefined !== _default ) {\n\t\t\t\t\taccumulator[ key ] = _default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( [ 'node', 'children' ].indexOf( schema.source ) !== -1 ) {\n\t\t\t\t// Ensure value passed is always an array, which we're expecting in\n\t\t\t\t// the RichText component to handle the deprecated value.\n\t\t\t\tif ( typeof accumulator[ key ] === 'string' ) {\n\t\t\t\t\taccumulator[ key ] = [ accumulator[ key ] ];\n\t\t\t\t} else if ( ! Array.isArray( accumulator[ key ] ) ) {\n\t\t\t\t\taccumulator[ key ] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn accumulator;\n\t\t},\n\t\t{}\n\t);\n}\n\n/**\n * Filter block attributes by `role` and return their names.\n *\n * @param {string} name Block attribute's name.\n * @param {string} role The role of a block attribute.\n *\n * @return {string[]} The attribute names that have the provided role.\n */\nexport function getBlockAttributesNamesByRole( name, role ) {\n\tconst attributes = getBlockType( name )?.attributes;\n\tif ( ! attributes ) {\n\t\treturn [];\n\t}\n\tconst attributesNames = Object.keys( attributes );\n\tif ( ! role ) {\n\t\treturn attributesNames;\n\t}\n\n\treturn attributesNames.filter( ( attributeName ) => {\n\t\tconst attribute = attributes[ attributeName ];\n\t\tif ( attribute?.role === role ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( attribute?.__experimentalRole === role ) {\n\t\t\tdeprecated( '__experimentalRole attribute', {\n\t\t\t\tsince: '6.7',\n\t\t\t\tversion: '6.8',\n\t\t\t\talternative: 'role attribute',\n\t\t\t\thint: `Check the block.json of the ${ name } block.`,\n\t\t\t} );\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} );\n}\n\nexport const __experimentalGetBlockAttributesNamesByRole = ( ...args ) => {\n\tdeprecated( '__experimentalGetBlockAttributesNamesByRole', {\n\t\tsince: '6.7',\n\t\tversion: '6.8',\n\t\talternative: 'getBlockAttributesNamesByRole',\n\t} );\n\treturn getBlockAttributesNamesByRole( ...args );\n};\n\n/**\n * Return a new object with the specified keys omitted.\n *\n * @param {Object} object Original object.\n * @param {Array}  keys   Keys to be omitted.\n *\n * @return {Object} Object with omitted keys.\n */\nexport function omit( object, keys ) {\n\treturn Object.fromEntries(\n\t\tObject.entries( object ).filter( ( [ key ] ) => ! keys.includes( key ) )\n\t);\n}\n", "/**\n * External dependencies\n */\nimport { camelCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { omit } from '../api/utils';\n\n/**\n * @typedef {Object} WPBlockCategory\n *\n * @property {string} slug  Unique category slug.\n * @property {string} title Category label, for display in user interface.\n */\n\n/**\n * Default set of categories.\n *\n * @type {WPBlockCategory[]}\n */\nexport const DEFAULT_CATEGORIES = [\n\t{ slug: 'text', title: __( 'Text' ) },\n\t{ slug: 'media', title: __( 'Media' ) },\n\t{ slug: 'design', title: __( 'Design' ) },\n\t{ slug: 'widgets', title: __( 'Widgets' ) },\n\t{ slug: 'theme', title: __( 'Theme' ) },\n\t{ slug: 'embed', title: __( 'Embeds' ) },\n\t{ slug: 'reusable', title: __( 'Reusable blocks' ) },\n];\n\n// Key block types by their name.\nfunction keyBlockTypesByName( types ) {\n\treturn types.reduce(\n\t\t( newBlockTypes, block ) => ( {\n\t\t\t...newBlockTypes,\n\t\t\t[ block.name ]: block,\n\t\t} ),\n\t\t{}\n\t);\n}\n\n// Filter items to ensure they're unique by their name.\nfunction getUniqueItemsByName( items ) {\n\treturn items.reduce( ( acc, currentItem ) => {\n\t\tif ( ! acc.some( ( item ) => item.name === currentItem.name ) ) {\n\t\t\tacc.push( currentItem );\n\t\t}\n\t\treturn acc;\n\t}, [] );\n}\n\nfunction bootstrappedBlockTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BOOTSTRAPPED_BLOCK_TYPE':\n\t\t\tconst { name, blockType } = action;\n\t\t\tconst serverDefinition = state[ name ];\n\t\t\tlet newDefinition;\n\t\t\t// Don't overwrite if already set. It covers the case when metadata\n\t\t\t// was initialized from the server.\n\t\t\tif ( serverDefinition ) {\n\t\t\t\t// The `blockHooks` prop is not yet included in the server provided\n\t\t\t\t// definitions and needs to be polyfilled. This can be removed when the\n\t\t\t\t// minimum supported WordPress is >= 6.4.\n\t\t\t\tif (\n\t\t\t\t\tserverDefinition.blockHooks === undefined &&\n\t\t\t\t\tblockType.blockHooks\n\t\t\t\t) {\n\t\t\t\t\tnewDefinition = {\n\t\t\t\t\t\t...serverDefinition,\n\t\t\t\t\t\t...newDefinition,\n\t\t\t\t\t\tblockHooks: blockType.blockHooks,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// The `allowedBlocks` prop is not yet included in the server provided\n\t\t\t\t// definitions and needs to be polyfilled. This can be removed when the\n\t\t\t\t// minimum supported WordPress is >= 6.5.\n\t\t\t\tif (\n\t\t\t\t\tserverDefinition.allowedBlocks === undefined &&\n\t\t\t\t\tblockType.allowedBlocks\n\t\t\t\t) {\n\t\t\t\t\tnewDefinition = {\n\t\t\t\t\t\t...serverDefinition,\n\t\t\t\t\t\t...newDefinition,\n\t\t\t\t\t\tallowedBlocks: blockType.allowedBlocks,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewDefinition = Object.fromEntries(\n\t\t\t\t\tObject.entries( blockType )\n\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t( [ , value ] ) =>\n\t\t\t\t\t\t\t\tvalue !== null && value !== undefined\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.map( ( [ key, value ] ) => [\n\t\t\t\t\t\t\tcamelCase( key ),\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t] )\n\t\t\t\t);\n\t\t\t\tnewDefinition.name = name;\n\t\t\t}\n\n\t\t\tif ( newDefinition ) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ name ]: newDefinition,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn state;\n\t\tcase 'REMOVE_BLOCK_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the unprocessed block types in a form passed when registering the by block.\n * It's for internal use only. It allows recomputing the processed block types on-demand after block type filters\n * get added or removed.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function unprocessedBlockTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_UNPROCESSED_BLOCK_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.name ]: action.blockType,\n\t\t\t};\n\t\tcase 'REMOVE_BLOCK_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the processed block types with all filters applied.\n * The state is derived from the `unprocessedBlockTypes` reducer.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function blockTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BLOCK_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBlockTypesByName( action.blockTypes ),\n\t\t\t};\n\t\tcase 'REMOVE_BLOCK_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the block styles.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function blockStyles( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BLOCK_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...Object.fromEntries(\n\t\t\t\t\tObject.entries(\n\t\t\t\t\t\tkeyBlockTypesByName( action.blockTypes )\n\t\t\t\t\t).map( ( [ name, blockType ] ) => [\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tgetUniqueItemsByName( [\n\t\t\t\t\t\t\t...( blockType.styles ?? [] ).map( ( style ) => ( {\n\t\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t\t\tsource: 'block',\n\t\t\t\t\t\t\t} ) ),\n\t\t\t\t\t\t\t...( state[ blockType.name ] ?? [] ).filter(\n\t\t\t\t\t\t\t\t( { source } ) => 'block' !== source\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t] ),\n\t\t\t\t\t] )\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'ADD_BLOCK_STYLES':\n\t\t\tconst updatedStyles = {};\n\t\t\taction.blockNames.forEach( ( blockName ) => {\n\t\t\t\tupdatedStyles[ blockName ] = getUniqueItemsByName( [\n\t\t\t\t\t...( state[ blockName ] ?? [] ),\n\t\t\t\t\t...action.styles,\n\t\t\t\t] );\n\t\t\t} );\n\t\t\treturn { ...state, ...updatedStyles };\n\t\tcase 'REMOVE_BLOCK_STYLES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.blockName ]: (\n\t\t\t\t\tstate[ action.blockName ] ?? []\n\t\t\t\t).filter(\n\t\t\t\t\t( style ) => action.styleNames.indexOf( style.name ) === -1\n\t\t\t\t),\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the block variations.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function blockVariations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BLOCK_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...Object.fromEntries(\n\t\t\t\t\tObject.entries(\n\t\t\t\t\t\tkeyBlockTypesByName( action.blockTypes )\n\t\t\t\t\t).map( ( [ name, blockType ] ) => {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tgetUniqueItemsByName( [\n\t\t\t\t\t\t\t\t...( blockType.variations ?? [] ).map(\n\t\t\t\t\t\t\t\t\t( variation ) => ( {\n\t\t\t\t\t\t\t\t\t\t...variation,\n\t\t\t\t\t\t\t\t\t\tsource: 'block',\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t...( state[ blockType.name ] ?? [] ).filter(\n\t\t\t\t\t\t\t\t\t( { source } ) => 'block' !== source\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t] ),\n\t\t\t\t\t\t];\n\t\t\t\t\t} )\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'ADD_BLOCK_VARIATIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.blockName ]: getUniqueItemsByName( [\n\t\t\t\t\t...( state[ action.blockName ] ?? [] ),\n\t\t\t\t\t...action.variations,\n\t\t\t\t] ),\n\t\t\t};\n\t\tcase 'REMOVE_BLOCK_VARIATIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.blockName ]: (\n\t\t\t\t\tstate[ action.blockName ] ?? []\n\t\t\t\t).filter(\n\t\t\t\t\t( variation ) =>\n\t\t\t\t\t\taction.variationNames.indexOf( variation.name ) === -1\n\t\t\t\t),\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher-order Reducer creating a reducer keeping track of given block name.\n *\n * @param {string} setActionType Action type.\n *\n * @return {Function} Reducer.\n */\nexport function createBlockNameSetterReducer( setActionType ) {\n\treturn ( state = null, action ) => {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'REMOVE_BLOCK_TYPES':\n\t\t\t\tif ( action.names.indexOf( state ) !== -1 ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn state;\n\n\t\t\tcase setActionType:\n\t\t\t\treturn action.name || null;\n\t\t}\n\n\t\treturn state;\n\t};\n}\n\nexport const defaultBlockName = createBlockNameSetterReducer(\n\t'SET_DEFAULT_BLOCK_NAME'\n);\nexport const freeformFallbackBlockName = createBlockNameSetterReducer(\n\t'SET_FREEFORM_FALLBACK_BLOCK_NAME'\n);\nexport const unregisteredFallbackBlockName = createBlockNameSetterReducer(\n\t'SET_UNREGISTERED_FALLBACK_BLOCK_NAME'\n);\nexport const groupingBlockName = createBlockNameSetterReducer(\n\t'SET_GROUPING_BLOCK_NAME'\n);\n\n/**\n * Reducer managing the categories\n *\n * @param {WPBlockCategory[]} state  Current state.\n * @param {Object}            action Dispatched action.\n *\n * @return {WPBlockCategory[]} Updated state.\n */\nexport function categories( state = DEFAULT_CATEGORIES, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_CATEGORIES':\n\t\t\t// Ensure, that categories are unique by slug.\n\t\t\tconst uniqueCategories = new Map();\n\t\t\t( action.categories || [] ).forEach( ( category ) => {\n\t\t\t\tuniqueCategories.set( category.slug, category );\n\t\t\t} );\n\t\t\treturn [ ...uniqueCategories.values() ];\n\t\tcase 'UPDATE_CATEGORY': {\n\t\t\tif (\n\t\t\t\t! action.category ||\n\t\t\t\t! Object.keys( action.category ).length\n\t\t\t) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\tconst categoryToChange = state.find(\n\t\t\t\t( { slug } ) => slug === action.slug\n\t\t\t);\n\t\t\tif ( categoryToChange ) {\n\t\t\t\treturn state.map( ( category ) => {\n\t\t\t\t\tif ( category.slug === action.slug ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...category,\n\t\t\t\t\t\t\t...action.category,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn category;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\treturn state;\n}\n\nexport function collections( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BLOCK_COLLECTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.namespace ]: {\n\t\t\t\t\ttitle: action.title,\n\t\t\t\t\ticon: action.icon,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'REMOVE_BLOCK_COLLECTION':\n\t\t\treturn omit( state, action.namespace );\n\t}\n\treturn state;\n}\n\n/**\n * Merges usesContext with existing values, potentially defined in the server registration.\n *\n * @param {string[]} existingUsesContext Existing `usesContext`.\n * @param {string[]} newUsesContext      Newly added `usesContext`.\n * @return {string[]|undefined} Merged `usesContext`.\n */\nfunction getMergedUsesContext( existingUsesContext = [], newUsesContext = [] ) {\n\tconst mergedArrays = Array.from(\n\t\tnew Set( existingUsesContext.concat( newUsesContext ) )\n\t);\n\treturn mergedArrays.length > 0 ? mergedArrays : undefined;\n}\n\nexport function blockBindingsSources( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_BLOCK_BINDINGS_SOURCE':\n\t\t\t// Only open this API in Gutenberg and for `core/post-meta` for the moment.\n\t\t\tlet getFieldsList;\n\t\t\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t\t\tgetFieldsList = action.getFieldsList;\n\t\t\t} else if ( action.name === 'core/post-meta' ) {\n\t\t\t\tgetFieldsList = action.getFieldsList;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.name ]: {\n\t\t\t\t\t// Don't override the label if it's already set.\n\t\t\t\t\tlabel: state[ action.name ]?.label || action.label,\n\t\t\t\t\tusesContext: getMergedUsesContext(\n\t\t\t\t\t\tstate[ action.name ]?.usesContext,\n\t\t\t\t\t\taction.usesContext\n\t\t\t\t\t),\n\t\t\t\t\tgetValues: action.getValues,\n\t\t\t\t\tsetValues: action.setValues,\n\t\t\t\t\t// Only set `canUserEditValue` if `setValues` is also defined.\n\t\t\t\t\tcanUserEditValue:\n\t\t\t\t\t\taction.setValues && action.canUserEditValue,\n\t\t\t\t\tgetFieldsList,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'ADD_BOOTSTRAPPED_BLOCK_BINDINGS_SOURCE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.name ]: {\n\t\t\t\t\t/*\n\t\t\t\t\t * Keep the exisitng properties in case the source has been registered\n\t\t\t\t\t * in the client before bootstrapping.\n\t\t\t\t\t */\n\t\t\t\t\t...state[ action.name ],\n\t\t\t\t\tlabel: action.label,\n\t\t\t\t\tusesContext: getMergedUsesContext(\n\t\t\t\t\t\tstate[ action.name ]?.usesContext,\n\t\t\t\t\t\taction.usesContext\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'REMOVE_BLOCK_BINDINGS_SOURCE':\n\t\t\treturn omit( state, action.name );\n\t}\n\treturn state;\n}\n\nexport default combineReducers( {\n\tbootstrappedBlockTypes,\n\tunprocessedBlockTypes,\n\tblockTypes,\n\tblockStyles,\n\tblockVariations,\n\tdefaultBlockName,\n\tfreeformFallbackBlockName,\n\tunregisteredFallbackBlockName,\n\tgroupingBlockName,\n\tcategories,\n\tcollections,\n\tblockBindingsSources,\n} );\n", "/**\n * External dependencies\n */\nimport removeAccents from 'remove-accents';\n\n/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\nimport { RichTextData } from '@wordpress/rich-text';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getValueFromObjectPath, matchesAttributes } from './utils';\nimport { hasContentRoleAttribute as privateHasContentRoleAttribute } from './private-selectors';\n\n/** @typedef {import('../api/registration').WPBlockVariation} WPBlockVariation */\n/** @typedef {import('../api/registration').WPBlockVariationScope} WPBlockVariationScope */\n/** @typedef {import('./reducer').WPBlockCategory} WPBlockCategory */\n\n/**\n * Given a block name or block type object, returns the corresponding\n * normalized block type object.\n *\n * @param {Object}          state      Blocks state.\n * @param {(string|Object)} nameOrType Block name or type object\n *\n * @return {Object} Block type object.\n */\nconst getNormalizedBlockType = ( state, nameOrType ) =>\n\t'string' === typeof nameOrType\n\t\t? getBlockType( state, nameOrType )\n\t\t: nameOrType;\n\n/**\n * Returns all the available block types.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const blockTypes = useSelect(\n *         ( select ) => select( blocksStore ).getBlockTypes(),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { blockTypes.map( ( block ) => (\n *                 <li key={ block.name }>{ block.title }</li>\n *             ) ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {Array} Block Types.\n */\nexport const getBlockTypes = createSelector(\n\t( state ) => Object.values( state.blockTypes ),\n\t( state ) => [ state.blockTypes ]\n);\n\n/**\n * Returns a block type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Block type name.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const paragraphBlock = useSelect( ( select ) =>\n *         ( select ) => select( blocksStore ).getBlockType( 'core/paragraph' ),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { paragraphBlock &&\n *                 Object.entries( paragraphBlock.supports ).map(\n *                     ( blockSupportsEntry ) => {\n *                         const [ propertyName, value ] = blockSupportsEntry;\n *                         return (\n *                             <li\n *                                 key={ propertyName }\n *                             >{ `${ propertyName } : ${ value }` }</li>\n *                         );\n *                     }\n *                 ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {Object?} Block Type.\n */\nexport function getBlockType( state, name ) {\n\treturn state.blockTypes[ name ];\n}\n\n/**\n * Returns block styles by block name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Block type name.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const buttonBlockStyles = useSelect( ( select ) =>\n *         select( blocksStore ).getBlockStyles( 'core/button' ),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { buttonBlockStyles &&\n *                 buttonBlockStyles.map( ( style ) => (\n *                     <li key={ style.name }>{ style.label }</li>\n *                 ) ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {Array?} Block Styles.\n */\nexport function getBlockStyles( state, name ) {\n\treturn state.blockStyles[ name ];\n}\n\n/**\n * Returns block variations by block name.\n *\n * @param {Object}                state     Data state.\n * @param {string}                blockName Block type name.\n * @param {WPBlockVariationScope} [scope]   Block variation scope name.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const socialLinkVariations = useSelect( ( select ) =>\n *         select( blocksStore ).getBlockVariations( 'core/social-link' ),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { socialLinkVariations &&\n *                 socialLinkVariations.map( ( variation ) => (\n *                     <li key={ variation.name }>{ variation.title }</li>\n *             ) ) }\n *     </ul>\n *     );\n * };\n * ```\n *\n * @return {(WPBlockVariation[]|void)} Block variations.\n */\nexport const getBlockVariations = createSelector(\n\t( state, blockName, scope ) => {\n\t\tconst variations = state.blockVariations[ blockName ];\n\t\tif ( ! variations || ! scope ) {\n\t\t\treturn variations;\n\t\t}\n\t\treturn variations.filter( ( variation ) => {\n\t\t\t// For backward compatibility reasons, variation's scope defaults to\n\t\t\t// `block` and `inserter` when not set.\n\t\t\treturn ( variation.scope || [ 'block', 'inserter' ] ).includes(\n\t\t\t\tscope\n\t\t\t);\n\t\t} );\n\t},\n\t( state, blockName ) => [ state.blockVariations[ blockName ] ]\n);\n\n/**\n * Returns the active block variation for a given block based on its attributes.\n * Variations are determined by their `isActive` property.\n * Which is either an array of block attribute keys or a function.\n *\n * In case of an array of block attribute keys, the `attributes` are compared\n * to the variation's attributes using strict equality check.\n *\n * In case of function type, the function should accept a block's attributes\n * and the variation's attributes and determines if a variation is active.\n * A function that accepts a block's attributes and the variation's attributes and determines if a variation is active.\n *\n * @param {Object}                state      Data state.\n * @param {string}                blockName  Name of block (example: “core/columns”).\n * @param {Object}                attributes Block attributes used to determine active variation.\n * @param {WPBlockVariationScope} [scope]    Block variation scope name.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { store as blockEditorStore } from '@wordpress/block-editor';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     // This example assumes that a core/embed block is the first block in the Block Editor.\n *     const activeBlockVariation = useSelect( ( select ) => {\n *         // Retrieve the list of blocks.\n *         const [ firstBlock ] = select( blockEditorStore ).getBlocks()\n *\n *         // Return the active block variation for the first block.\n *         return select( blocksStore ).getActiveBlockVariation(\n *             firstBlock.name,\n *             firstBlock.attributes\n *         );\n *     }, [] );\n *\n *     return activeBlockVariation && activeBlockVariation.name === 'spotify' ? (\n *         <p>{ __( 'Spotify variation' ) }</p>\n *         ) : (\n *         <p>{ __( 'Other variation' ) }</p>\n *     );\n * };\n * ```\n *\n * @return {(WPBlockVariation|undefined)} Active block variation.\n */\nexport function getActiveBlockVariation( state, blockName, attributes, scope ) {\n\tconst variations = getBlockVariations( state, blockName, scope );\n\n\tif ( ! variations ) {\n\t\treturn variations;\n\t}\n\n\tconst blockType = getBlockType( state, blockName );\n\tconst attributeKeys = Object.keys( blockType?.attributes || {} );\n\tlet match;\n\tlet maxMatchedAttributes = 0;\n\n\tfor ( const variation of variations ) {\n\t\tif ( Array.isArray( variation.isActive ) ) {\n\t\t\tconst definedAttributes = variation.isActive.filter(\n\t\t\t\t( attribute ) => {\n\t\t\t\t\t// We support nested attribute paths, e.g. `layout.type`.\n\t\t\t\t\t// In this case, we need to check if the part before the\n\t\t\t\t\t// first dot is a known attribute.\n\t\t\t\t\tconst topLevelAttribute = attribute.split( '.' )[ 0 ];\n\t\t\t\t\treturn attributeKeys.includes( topLevelAttribute );\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst definedAttributesLength = definedAttributes.length;\n\t\t\tif ( definedAttributesLength === 0 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isMatch = definedAttributes.every( ( attribute ) => {\n\t\t\t\tconst variationAttributeValue = getValueFromObjectPath(\n\t\t\t\t\tvariation.attributes,\n\t\t\t\t\tattribute\n\t\t\t\t);\n\t\t\t\tif ( variationAttributeValue === undefined ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet blockAttributeValue = getValueFromObjectPath(\n\t\t\t\t\tattributes,\n\t\t\t\t\tattribute\n\t\t\t\t);\n\t\t\t\tif ( blockAttributeValue instanceof RichTextData ) {\n\t\t\t\t\tblockAttributeValue = blockAttributeValue.toHTMLString();\n\t\t\t\t}\n\t\t\t\treturn matchesAttributes(\n\t\t\t\t\tblockAttributeValue,\n\t\t\t\t\tvariationAttributeValue\n\t\t\t\t);\n\t\t\t} );\n\t\t\tif ( isMatch && definedAttributesLength > maxMatchedAttributes ) {\n\t\t\t\tmatch = variation;\n\t\t\t\tmaxMatchedAttributes = definedAttributesLength;\n\t\t\t}\n\t\t} else if ( variation.isActive?.( attributes, variation.attributes ) ) {\n\t\t\t// If isActive is a function, we cannot know how many attributes it matches.\n\t\t\t// This means that we cannot compare the specificity of our matches,\n\t\t\t// and simply return the best match we have found.\n\t\t\treturn match || variation;\n\t\t}\n\t}\n\treturn match;\n}\n\n/**\n * Returns the default block variation for the given block type.\n * When there are multiple variations annotated as the default one,\n * the last added item is picked. This simplifies registering overrides.\n * When there is no default variation set, it returns the first item.\n *\n * @param {Object}                state     Data state.\n * @param {string}                blockName Block type name.\n * @param {WPBlockVariationScope} [scope]   Block variation scope name.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const defaultEmbedBlockVariation = useSelect( ( select ) =>\n *         select( blocksStore ).getDefaultBlockVariation( 'core/embed' ),\n *         []\n *     );\n *\n *     return (\n *         defaultEmbedBlockVariation && (\n *             <p>\n *                 { sprintf(\n *                     __( 'core/embed default variation: %s' ),\n *                     defaultEmbedBlockVariation.title\n *                 ) }\n *             </p>\n *         )\n *     );\n * };\n * ```\n *\n * @return {?WPBlockVariation} The default block variation.\n */\nexport function getDefaultBlockVariation( state, blockName, scope ) {\n\tconst variations = getBlockVariations( state, blockName, scope );\n\n\tconst defaultVariation = [ ...variations ]\n\t\t.reverse()\n\t\t.find( ( { isDefault } ) => !! isDefault );\n\n\treturn defaultVariation || variations[ 0 ];\n}\n\n/**\n * Returns all the available block categories.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect, } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const blockCategories = useSelect( ( select ) =>\n *         select( blocksStore ).getCategories(),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { blockCategories.map( ( category ) => (\n *                 <li key={ category.slug }>{ category.title }</li>\n *             ) ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {WPBlockCategory[]} Categories list.\n */\nexport function getCategories( state ) {\n\treturn state.categories;\n}\n\n/**\n * Returns all the available collections.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const blockCollections = useSelect( ( select ) =>\n *         select( blocksStore ).getCollections(),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { Object.values( blockCollections ).length > 0 &&\n *                 Object.values( blockCollections ).map( ( collection ) => (\n *                     <li key={ collection.title }>{ collection.title }</li>\n *             ) ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {Object} Collections list.\n */\nexport function getCollections( state ) {\n\treturn state.collections;\n}\n\n/**\n * Returns the name of the default block name.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const defaultBlockName = useSelect( ( select ) =>\n *         select( blocksStore ).getDefaultBlockName(),\n *         []\n *     );\n *\n *     return (\n *         defaultBlockName && (\n *             <p>\n *                 { sprintf( __( 'Default block name: %s' ), defaultBlockName ) }\n *             </p>\n *         )\n *     );\n * };\n * ```\n *\n * @return {string?} Default block name.\n */\nexport function getDefaultBlockName( state ) {\n\treturn state.defaultBlockName;\n}\n\n/**\n * Returns the name of the block for handling non-block content.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const freeformFallbackBlockName = useSelect( ( select ) =>\n *         select( blocksStore ).getFreeformFallbackBlockName(),\n *         []\n *     );\n *\n *     return (\n *         freeformFallbackBlockName && (\n *             <p>\n *                 { sprintf( __(\n *                     'Freeform fallback block name: %s' ),\n *                     freeformFallbackBlockName\n *                 ) }\n *             </p>\n *         )\n *     );\n * };\n * ```\n *\n * @return {string?} Name of the block for handling non-block content.\n */\nexport function getFreeformFallbackBlockName( state ) {\n\treturn state.freeformFallbackBlockName;\n}\n\n/**\n * Returns the name of the block for handling unregistered blocks.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const unregisteredFallbackBlockName = useSelect( ( select ) =>\n *         select( blocksStore ).getUnregisteredFallbackBlockName(),\n *         []\n *     );\n *\n *     return (\n *         unregisteredFallbackBlockName && (\n *             <p>\n *                 { sprintf( __(\n *                     'Unregistered fallback block name: %s' ),\n *                     unregisteredFallbackBlockName\n *                 ) }\n *             </p>\n *         )\n *     );\n * };\n * ```\n *\n * @return {string?} Name of the block for handling unregistered blocks.\n */\nexport function getUnregisteredFallbackBlockName( state ) {\n\treturn state.unregisteredFallbackBlockName;\n}\n\n/**\n * Returns the name of the block for handling the grouping of blocks.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const groupingBlockName = useSelect( ( select ) =>\n *         select( blocksStore ).getGroupingBlockName(),\n *         []\n *     );\n *\n *     return (\n *         groupingBlockName && (\n *             <p>\n *                 { sprintf(\n *                     __( 'Default grouping block name: %s' ),\n *                     groupingBlockName\n *                 ) }\n *             </p>\n *         )\n *     );\n * };\n * ```\n *\n * @return {string?} Name of the block for handling the grouping of blocks.\n */\nexport function getGroupingBlockName( state ) {\n\treturn state.groupingBlockName;\n}\n\n/**\n * Returns an array with the child blocks of a given block.\n *\n * @param {Object} state     Data state.\n * @param {string} blockName Block type name.\n *\n * @example\n * ```js\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const childBlockNames = useSelect( ( select ) =>\n *         select( blocksStore ).getChildBlockNames( 'core/navigation' ),\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             { childBlockNames &&\n *                 childBlockNames.map( ( child ) => (\n *                     <li key={ child }>{ child }</li>\n *             ) ) }\n *         </ul>\n *     );\n * };\n * ```\n *\n * @return {Array} Array of child block names.\n */\nexport const getChildBlockNames = createSelector(\n\t( state, blockName ) => {\n\t\treturn getBlockTypes( state )\n\t\t\t.filter( ( blockType ) => {\n\t\t\t\treturn blockType.parent?.includes( blockName );\n\t\t\t} )\n\t\t\t.map( ( { name } ) => name );\n\t},\n\t( state ) => [ state.blockTypes ]\n);\n\n/**\n * Returns the block support value for a feature, if defined.\n *\n * @param {Object}          state           Data state.\n * @param {(string|Object)} nameOrType      Block name or type object\n * @param {Array|string}    feature         Feature to retrieve\n * @param {*}               defaultSupports Default value to return if not\n *                                          explicitly defined\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const paragraphBlockSupportValue = useSelect( ( select ) =>\n *         select( blocksStore ).getBlockSupport( 'core/paragraph', 'anchor' ),\n *         []\n *     );\n *\n *     return (\n *         <p>\n *             { sprintf(\n *                 __( 'core/paragraph supports.anchor value: %s' ),\n *                 paragraphBlockSupportValue\n *             ) }\n *         </p>\n *     );\n * };\n * ```\n *\n * @return {?*} Block support value\n */\nexport const getBlockSupport = (\n\tstate,\n\tnameOrType,\n\tfeature,\n\tdefaultSupports\n) => {\n\tconst blockType = getNormalizedBlockType( state, nameOrType );\n\tif ( ! blockType?.supports ) {\n\t\treturn defaultSupports;\n\t}\n\n\treturn getValueFromObjectPath(\n\t\tblockType.supports,\n\t\tfeature,\n\t\tdefaultSupports\n\t);\n};\n\n/**\n * Returns true if the block defines support for a feature, or false otherwise.\n *\n * @param {Object}          state           Data state.\n * @param {(string|Object)} nameOrType      Block name or type object.\n * @param {string}          feature         Feature to test.\n * @param {boolean}         defaultSupports Whether feature is supported by\n *                                          default if not explicitly defined.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const paragraphBlockSupportClassName = useSelect( ( select ) =>\n *         select( blocksStore ).hasBlockSupport( 'core/paragraph', 'className' ),\n *         []\n *     );\n *\n *     return (\n *         <p>\n *             { sprintf(\n *                 __( 'core/paragraph supports custom class name?: %s' ),\n *                 paragraphBlockSupportClassName\n *             ) }\n *         /p>\n *     );\n * };\n * ```\n *\n * @return {boolean} Whether block supports feature.\n */\nexport function hasBlockSupport( state, nameOrType, feature, defaultSupports ) {\n\treturn !! getBlockSupport( state, nameOrType, feature, defaultSupports );\n}\n\n/**\n * Normalizes a search term string: removes accents, converts to lowercase, removes extra whitespace.\n *\n * @param {string|null|undefined} term Search term to normalize.\n * @return {string} Normalized search term.\n */\nfunction getNormalizedSearchTerm( term ) {\n\treturn removeAccents( term ?? '' )\n\t\t.toLowerCase()\n\t\t.trim();\n}\n\n/**\n * Returns true if the block type by the given name or object value matches a\n * search term, or false otherwise.\n *\n * @param {Object}          state      Blocks state.\n * @param {(string|Object)} nameOrType Block name or type object.\n * @param {string}          searchTerm Search term by which to filter.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const termFound = useSelect(\n *         ( select ) =>\n *             select( blocksStore ).isMatchingSearchTerm(\n *                 'core/navigation',\n *                 'theme'\n *             ),\n *             []\n *         );\n *\n *     return (\n *         <p>\n *             { sprintf(\n *                 __(\n *                     'Search term was found in the title, keywords, category or description in block.json: %s'\n *                 ),\n *                 termFound\n *             ) }\n *         </p>\n *     );\n * };\n * ```\n *\n * @return {Object[]} Whether block type matches search term.\n */\nexport function isMatchingSearchTerm( state, nameOrType, searchTerm = '' ) {\n\tconst blockType = getNormalizedBlockType( state, nameOrType );\n\tconst normalizedSearchTerm = getNormalizedSearchTerm( searchTerm );\n\n\tconst isSearchMatch = ( candidate ) =>\n\t\tgetNormalizedSearchTerm( candidate ).includes( normalizedSearchTerm );\n\n\treturn (\n\t\tisSearchMatch( blockType.title ) ||\n\t\tblockType.keywords?.some( isSearchMatch ) ||\n\t\tisSearchMatch( blockType.category ) ||\n\t\t( typeof blockType.description === 'string' &&\n\t\t\tisSearchMatch( blockType.description ) )\n\t);\n}\n\n/**\n * Returns a boolean indicating if a block has child blocks or not.\n *\n * @param {Object} state     Data state.\n * @param {string} blockName Block type name.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const navigationBlockHasChildBlocks = useSelect( ( select ) =>\n *         select( blocksStore ).hasChildBlocks( 'core/navigation' ),\n *         []\n *     );\n *\n *     return (\n *         <p>\n *             { sprintf(\n *                 __( 'core/navigation has child blocks: %s' ),\n *                 navigationBlockHasChildBlocks\n *             ) }\n *         </p>\n *     );\n * };\n * ```\n *\n * @return {boolean} True if a block contains child blocks and false otherwise.\n */\nexport const hasChildBlocks = ( state, blockName ) => {\n\treturn getChildBlockNames( state, blockName ).length > 0;\n};\n\n/**\n * Returns a boolean indicating if a block has at least one child block with inserter support.\n *\n * @param {Object} state     Data state.\n * @param {string} blockName Block type name.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as blocksStore } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const navigationBlockHasChildBlocksWithInserterSupport = useSelect( ( select ) =>\n *         select( blocksStore ).hasChildBlocksWithInserterSupport(\n *             'core/navigation'\n *         ),\n *         []\n *     );\n *\n *     return (\n *         <p>\n *             { sprintf(\n *                 __( 'core/navigation has child blocks with inserter support: %s' ),\n *                 navigationBlockHasChildBlocksWithInserterSupport\n *             ) }\n *         </p>\n *     );\n * };\n * ```\n *\n * @return {boolean} True if a block contains at least one child blocks with inserter support\n *                   and false otherwise.\n */\nexport const hasChildBlocksWithInserterSupport = ( state, blockName ) => {\n\treturn getChildBlockNames( state, blockName ).some( ( childBlockName ) => {\n\t\treturn hasBlockSupport( state, childBlockName, 'inserter', true );\n\t} );\n};\n\nexport const __experimentalHasContentRoleAttribute = ( ...args ) => {\n\tdeprecated( '__experimentalHasContentRoleAttribute', {\n\t\tsince: '6.7',\n\t\tversion: '6.8',\n\t\thint: 'This is a private selector.',\n\t} );\n\treturn privateHasContentRoleAttribute( ...args );\n};\n", "/**\n * Helper util to return a value from a certain path of the object.\n * Path is specified as either:\n * - a string of properties, separated by dots, for example: \"x.y\".\n * - an array of properties, for example `[ 'x', 'y' ]`.\n * You can also specify a default value in case the result is nullish.\n *\n * @param {Object}       object       Input object.\n * @param {string|Array} path         Path to the object property.\n * @param {*}            defaultValue Default value if the value at the specified path is nullish.\n * @return {*} Value of the object property at the specified path.\n */\nexport const getValueFromObjectPath = ( object, path, defaultValue ) => {\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\n\tlet value = object;\n\tnormalizedPath.forEach( ( fieldName ) => {\n\t\tvalue = value?.[ fieldName ];\n\t} );\n\treturn value ?? defaultValue;\n};\n\nfunction isObject( candidate ) {\n\treturn (\n\t\ttypeof candidate === 'object' &&\n\t\tcandidate.constructor === Object &&\n\t\tcandidate !== null\n\t);\n}\n\n/**\n * Determine whether a set of object properties matches a given object.\n *\n * Given an object of block attributes and an object of variation attributes,\n * this function checks recursively whether all the variation attributes are\n * present in the block attributes object.\n *\n * @param {Object} blockAttributes     The object to inspect.\n * @param {Object} variationAttributes The object of property values to match.\n * @return {boolean} Whether the block attributes match the variation attributes.\n */\nexport function matchesAttributes( blockAttributes, variationAttributes ) {\n\tif ( isObject( blockAttributes ) && isObject( variationAttributes ) ) {\n\t\treturn Object.entries( variationAttributes ).every(\n\t\t\t( [ key, value ] ) =>\n\t\t\t\tmatchesAttributes( blockAttributes?.[ key ], value )\n\t\t);\n\t}\n\n\treturn blockAttributes === variationAttributes;\n}\n", "/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getBlockType } from './selectors';\nimport { getValueFromObjectPath } from './utils';\nimport { __EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY } from '../api/constants';\n\nconst ROOT_BLOCK_SUPPORTS = [\n\t'background',\n\t'backgroundColor',\n\t'color',\n\t'linkColor',\n\t'captionColor',\n\t'buttonColor',\n\t'headingColor',\n\t'fontFamily',\n\t'fontSize',\n\t'fontStyle',\n\t'fontWeight',\n\t'lineHeight',\n\t'padding',\n\t'contentSize',\n\t'wideSize',\n\t'blockGap',\n\t'textDecoration',\n\t'textTransform',\n\t'letterSpacing',\n];\n\n/**\n * Filters the list of supported styles for a given element.\n *\n * @param {string[]}         blockSupports list of supported styles.\n * @param {string|undefined} name          block name.\n * @param {string|undefined} element       element name.\n *\n * @return {string[]} filtered list of supported styles.\n */\nfunction filterElementBlockSupports( blockSupports, name, element ) {\n\treturn blockSupports.filter( ( support ) => {\n\t\tif ( support === 'fontSize' && element === 'heading' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for links\n\t\tif ( support === 'textDecoration' && ! name && element !== 'link' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for heading, button, caption and text\n\t\tif (\n\t\t\tsupport === 'textTransform' &&\n\t\t\t! name &&\n\t\t\t! (\n\t\t\t\t[ 'heading', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ].includes(\n\t\t\t\t\telement\n\t\t\t\t) ||\n\t\t\t\telement === 'button' ||\n\t\t\t\telement === 'caption' ||\n\t\t\t\telement === 'text'\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is only available for heading, button, caption and text\n\t\tif (\n\t\t\tsupport === 'letterSpacing' &&\n\t\t\t! name &&\n\t\t\t! (\n\t\t\t\t[ 'heading', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ].includes(\n\t\t\t\t\telement\n\t\t\t\t) ||\n\t\t\t\telement === 'button' ||\n\t\t\t\telement === 'caption' ||\n\t\t\t\telement === 'text'\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Text columns is only available for blocks.\n\t\tif ( support === 'textColumns' && ! name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} );\n}\n\n/**\n * Returns the list of supported styles for a given block name and element.\n */\nexport const getSupportedStyles = createSelector(\n\t( state, name, element ) => {\n\t\tif ( ! name ) {\n\t\t\treturn filterElementBlockSupports(\n\t\t\t\tROOT_BLOCK_SUPPORTS,\n\t\t\t\tname,\n\t\t\t\telement\n\t\t\t);\n\t\t}\n\n\t\tconst blockType = getBlockType( state, name );\n\n\t\tif ( ! blockType ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst supportKeys = [];\n\n\t\t// Check for blockGap support.\n\t\t// Block spacing support doesn't map directly to a single style property, so needs to be handled separately.\n\t\tif ( blockType?.supports?.spacing?.blockGap ) {\n\t\t\tsupportKeys.push( 'blockGap' );\n\t\t}\n\n\t\t// check for shadow support\n\t\tif ( blockType?.supports?.shadow ) {\n\t\t\tsupportKeys.push( 'shadow' );\n\t\t}\n\n\t\tObject.keys( STYLE_PROPERTY ).forEach( ( styleName ) => {\n\t\t\tif ( ! STYLE_PROPERTY[ styleName ].support ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Opting out means that, for certain support keys like background color,\n\t\t\t// blocks have to explicitly set the support value false. If the key is\n\t\t\t// unset, we still enable it.\n\t\t\tif ( STYLE_PROPERTY[ styleName ].requiresOptOut ) {\n\t\t\t\tif (\n\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support[ 0 ] in\n\t\t\t\t\t\tblockType.supports &&\n\t\t\t\t\tgetValueFromObjectPath(\n\t\t\t\t\t\tblockType.supports,\n\t\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support\n\t\t\t\t\t) !== false\n\t\t\t\t) {\n\t\t\t\t\tsupportKeys.push( styleName );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tgetValueFromObjectPath(\n\t\t\t\t\tblockType.supports,\n\t\t\t\t\tSTYLE_PROPERTY[ styleName ].support,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsupportKeys.push( styleName );\n\t\t\t}\n\t\t} );\n\n\t\treturn filterElementBlockSupports( supportKeys, name, element );\n\t},\n\t( state, name ) => [ state.blockTypes[ name ] ]\n);\n\n/**\n * Returns the bootstrapped block type metadata for a give block name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Block name.\n *\n * @return {Object} Bootstrapped block type metadata for a block.\n */\nexport function getBootstrappedBlockType( state, name ) {\n\treturn state.bootstrappedBlockTypes[ name ];\n}\n\n/**\n * Returns all the unprocessed (before applying the `registerBlockType` filter)\n * block type settings as passed during block registration.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Unprocessed block type settings for all blocks.\n */\nexport function getUnprocessedBlockTypes( state ) {\n\treturn state.unprocessedBlockTypes;\n}\n\n/**\n * Returns all the block bindings sources registered.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} All the registered sources and their properties.\n */\nexport function getAllBlockBindingsSources( state ) {\n\treturn state.blockBindingsSources;\n}\n\n/**\n * Returns a specific block bindings source.\n *\n * @param {Object} state      Data state.\n * @param {string} sourceName Name of the source to get.\n *\n * @return {Object} The specific block binding source and its properties.\n */\nexport function getBlockBindingsSource( state, sourceName ) {\n\treturn state.blockBindingsSources[ sourceName ];\n}\n\n/**\n * Determines if any of the block type's attributes have\n * the content role attribute.\n *\n * @param {Object} state         Data state.\n * @param {string} blockTypeName Block type name.\n * @return {boolean} Whether block type has content role attribute.\n */\nexport const hasContentRoleAttribute = ( state, blockTypeName ) => {\n\tconst blockType = getBlockType( state, blockTypeName );\n\tif ( ! blockType ) {\n\t\treturn false;\n\t}\n\n\treturn Object.values( blockType.attributes ).some(\n\t\t( { role, __experimentalRole } ) => {\n\t\t\tif ( role === 'content' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif ( __experimentalRole === 'content' ) {\n\t\t\t\tdeprecated( '__experimentalRole attribute', {\n\t\t\t\t\tsince: '6.7',\n\t\t\t\t\tversion: '6.8',\n\t\t\t\t\talternative: 'role attribute',\n\t\t\t\t\thint: `Check the block.json of the ${ blockTypeName } block.`,\n\t\t\t\t} );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t);\n};\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { processBlockType } from './process-block-type';\n\n/** @typedef {import('../api/registration').WPBlockVariation} WPBlockVariation */\n/** @typedef {import('../api/registration').WPBlockType} WPBlockType */\n/** @typedef {import('./reducer').WPBlockCategory} WPBlockCategory */\n\n/**\n * Returns an action object used in signalling that block types have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockType from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {WPBlockType|WPBlockType[]} blockTypes Object or array of objects representing blocks to added.\n *\n *\n * @return {Object} Action object.\n */\nexport function addBlockTypes( blockTypes ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_TYPES',\n\t\tblockTypes: Array.isArray( blockTypes ) ? blockTypes : [ blockTypes ],\n\t};\n}\n\n/**\n * Signals that all block types should be computed again.\n * It uses stored unprocessed block types and all the most recent list of registered filters.\n *\n * It addresses the issue where third party block filters get registered after third party blocks. A sample sequence:\n *   1. Filter A.\n *   2. Block B.\n *   3. Block C.\n *   4. Filter D.\n *   5. Filter E.\n *   6. Block F.\n *   7. Filter G.\n * In this scenario some filters would not get applied for all blocks because they are registered too late.\n */\nexport function reapplyBlockTypeFilters() {\n\treturn ( { dispatch, select } ) => {\n\t\tconst processedBlockTypes = [];\n\t\tfor ( const [ name, settings ] of Object.entries(\n\t\t\tselect.getUnprocessedBlockTypes()\n\t\t) ) {\n\t\t\tconst result = dispatch( processBlockType( name, settings ) );\n\t\t\tif ( result ) {\n\t\t\t\tprocessedBlockTypes.push( result );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! processedBlockTypes.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch.addBlockTypes( processedBlockTypes );\n\t};\n}\n\nexport function __experimentalReapplyBlockFilters() {\n\tdeprecated(\n\t\t'wp.data.dispatch( \"core/blocks\" ).__experimentalReapplyBlockFilters',\n\t\t{\n\t\t\tsince: '6.4',\n\t\t\talternative: 'reapplyBlockFilters',\n\t\t}\n\t);\n\n\treturn reapplyBlockTypeFilters();\n}\n\n/**\n * Returns an action object used to remove a registered block type.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockType from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string|string[]} names Block name or array of block names to be removed.\n *\n *\n * @return {Object} Action object.\n */\nexport function removeBlockTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_TYPES',\n\t\tnames: Array.isArray( names ) ? names : [ names ],\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block styles have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockStyle from @wordpress/blocks.\n *\n * @param {string|Array} blockNames Block names to register new styles for.\n * @param {Array|Object} styles     Block style object or array of block style objects.\n *\n * @ignore\n *\n * @return {Object} Action object.\n */\nexport function addBlockStyles( blockNames, styles ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_STYLES',\n\t\tstyles: Array.isArray( styles ) ? styles : [ styles ],\n\t\tblockNames: Array.isArray( blockNames ) ? blockNames : [ blockNames ],\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block styles have been removed.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockStyle from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}       blockName  Block name.\n * @param {Array|string} styleNames Block style names or array of block style names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockStyles( blockName, styleNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_STYLES',\n\t\tstyleNames: Array.isArray( styleNames ) ? styleNames : [ styleNames ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block variations have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockVariation from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}                              blockName  Block name.\n * @param {WPBlockVariation|WPBlockVariation[]} variations Block variations.\n *\n * @return {Object} Action object.\n */\nexport function addBlockVariations( blockName, variations ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_VARIATIONS',\n\t\tvariations: Array.isArray( variations ) ? variations : [ variations ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block variations have been removed.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockVariation from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}          blockName      Block name.\n * @param {string|string[]} variationNames Block variation names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockVariations( blockName, variationNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_VARIATIONS',\n\t\tvariationNames: Array.isArray( variationNames )\n\t\t\t? variationNames\n\t\t\t: [ variationNames ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used to set the default block name.\n * Ignored from documentation as the recommended usage for this action through setDefaultBlockName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setDefaultBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_DEFAULT_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for non-block content.\n * Ignored from documentation as the recommended usage for this action through setFreeformContentHandlerName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setFreeformFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_FREEFORM_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for unregistered blocks.\n * Ignored from documentation as the recommended usage for this action through setUnregisteredTypeHandlerName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setUnregisteredFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_UNREGISTERED_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used\n * when grouping other blocks\n * eg: in \"Group/Ungroup\" interactions\n * Ignored from documentation as the recommended usage for this action through setGroupingBlockName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setGroupingBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_GROUPING_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set block categories.\n * Ignored from documentation as the recommended usage for this action through setCategories from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {WPBlockCategory[]} categories Block categories.\n *\n * @return {Object} Action object.\n */\nexport function setCategories( categories ) {\n\treturn {\n\t\ttype: 'SET_CATEGORIES',\n\t\tcategories,\n\t};\n}\n\n/**\n * Returns an action object used to update a category.\n * Ignored from documentation as the recommended usage for this action through updateCategory from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} slug     Block category slug.\n * @param {Object} category Object containing the category properties that should be updated.\n *\n * @return {Object} Action object.\n */\nexport function updateCategory( slug, category ) {\n\treturn {\n\t\ttype: 'UPDATE_CATEGORY',\n\t\tslug,\n\t\tcategory,\n\t};\n}\n\n/**\n * Returns an action object used to add block collections\n * Ignored from documentation as the recommended usage for this action through registerBlockCollection from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n * @param {string} title     The title to display in the block inserter\n * @param {Object} icon      (optional) The icon to display in the block inserter\n *\n * @return {Object} Action object.\n */\nexport function addBlockCollection( namespace, title, icon ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_COLLECTION',\n\t\tnamespace,\n\t\ttitle,\n\t\ticon,\n\t};\n}\n\n/**\n * Returns an action object used to remove block collections\n * Ignored from documentation as the recommended usage for this action through unregisterBlockCollection from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n *\n * @return {Object} Action object.\n */\nexport function removeBlockCollection( namespace ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_COLLECTION',\n\t\tnamespace,\n\t};\n}\n", "/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\nimport { isValidElementType } from 'react-is';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { applyFilters } from '@wordpress/hooks';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport { isValidIcon, normalizeIconObject, omit } from '../api/utils';\nimport { BLOCK_ICON_DEFAULT, DEPRECATED_ENTRY_KEYS } from '../api/constants';\n\n/** @typedef {import('../api/registration').WPBlockType} WPBlockType */\n\n/**\n * Mapping of legacy category slugs to their latest normal values, used to\n * accommodate updates of the default set of block categories.\n *\n * @type {Record<string,string>}\n */\nconst LEGACY_CATEGORY_MAPPING = {\n\tcommon: 'text',\n\tformatting: 'text',\n\tlayout: 'design',\n};\n\n/**\n * Merge block variations bootstrapped from the server and client.\n *\n * When a variation is registered in both places, its properties are merged.\n *\n * @param {Array} bootstrappedVariations - A block type variations from the server.\n * @param {Array} clientVariations       - A block type variations from the client.\n * @return {Array} The merged array of block variations.\n */\nfunction mergeBlockVariations(\n\tbootstrappedVariations = [],\n\tclientVariations = []\n) {\n\tconst result = [ ...bootstrappedVariations ];\n\n\tclientVariations.forEach( ( clientVariation ) => {\n\t\tconst index = result.findIndex(\n\t\t\t( bootstrappedVariation ) =>\n\t\t\t\tbootstrappedVariation.name === clientVariation.name\n\t\t);\n\n\t\tif ( index !== -1 ) {\n\t\t\tresult[ index ] = { ...result[ index ], ...clientVariation };\n\t\t} else {\n\t\t\tresult.push( clientVariation );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * Takes the unprocessed block type settings, merges them with block type metadata\n * and applies all the existing filters for the registered block type.\n * Next, it validates all the settings and performs additional processing to the block type definition.\n *\n * @param {string}      name          Block name.\n * @param {WPBlockType} blockSettings Unprocessed block type settings.\n *\n * @return {WPBlockType | undefined} The block, if it has been processed and can be registered; otherwise `undefined`.\n */\nexport const processBlockType =\n\t( name, blockSettings ) =>\n\t( { select } ) => {\n\t\tconst bootstrappedBlockType = select.getBootstrappedBlockType( name );\n\n\t\tconst blockType = {\n\t\t\tname,\n\t\t\ticon: BLOCK_ICON_DEFAULT,\n\t\t\tkeywords: [],\n\t\t\tattributes: {},\n\t\t\tprovidesContext: {},\n\t\t\tusesContext: [],\n\t\t\tselectors: {},\n\t\t\tsupports: {},\n\t\t\tstyles: [],\n\t\t\tblockHooks: {},\n\t\t\tsave: () => null,\n\t\t\t...bootstrappedBlockType,\n\t\t\t...blockSettings,\n\t\t\t// blockType.variations can be defined as a filePath.\n\t\t\tvariations: mergeBlockVariations(\n\t\t\t\tArray.isArray( bootstrappedBlockType?.variations )\n\t\t\t\t\t? bootstrappedBlockType.variations\n\t\t\t\t\t: [],\n\t\t\t\tArray.isArray( blockSettings?.variations )\n\t\t\t\t\t? blockSettings.variations\n\t\t\t\t\t: []\n\t\t\t),\n\t\t};\n\n\t\tconst settings = applyFilters(\n\t\t\t'blocks.registerBlockType',\n\t\t\tblockType,\n\t\t\tname,\n\t\t\tnull\n\t\t);\n\n\t\tif (\n\t\t\tsettings.description &&\n\t\t\ttypeof settings.description !== 'string'\n\t\t) {\n\t\t\tdeprecated( 'Declaring non-string block descriptions', {\n\t\t\t\tsince: '6.2',\n\t\t\t} );\n\t\t}\n\n\t\tif ( settings.deprecated ) {\n\t\t\tsettings.deprecated = settings.deprecated.map( ( deprecation ) =>\n\t\t\t\tObject.fromEntries(\n\t\t\t\t\tObject.entries(\n\t\t\t\t\t\t// Only keep valid deprecation keys.\n\t\t\t\t\t\tapplyFilters(\n\t\t\t\t\t\t\t'blocks.registerBlockType',\n\t\t\t\t\t\t\t// Merge deprecation keys with pre-filter settings\n\t\t\t\t\t\t\t// so that filters that depend on specific keys being\n\t\t\t\t\t\t\t// present don't fail.\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Omit deprecation keys here so that deprecations\n\t\t\t\t\t\t\t\t// can opt out of specific keys like \"supports\".\n\t\t\t\t\t\t\t\t...omit( blockType, DEPRECATED_ENTRY_KEYS ),\n\t\t\t\t\t\t\t\t...deprecation,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tblockType.name,\n\t\t\t\t\t\t\tdeprecation\n\t\t\t\t\t\t)\n\t\t\t\t\t).filter( ( [ key ] ) =>\n\t\t\t\t\t\tDEPRECATED_ENTRY_KEYS.includes( key )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif ( ! isPlainObject( settings ) ) {\n\t\t\twarning( 'Block settings must be a valid object.' );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof settings.save !== 'function' ) {\n\t\t\twarning( 'The \"save\" property must be a valid function.' );\n\t\t\treturn;\n\t\t}\n\t\tif ( 'edit' in settings && ! isValidElementType( settings.edit ) ) {\n\t\t\twarning( 'The \"edit\" property must be a valid component.' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Canonicalize legacy categories to equivalent fallback.\n\t\tif ( LEGACY_CATEGORY_MAPPING.hasOwnProperty( settings.category ) ) {\n\t\t\tsettings.category = LEGACY_CATEGORY_MAPPING[ settings.category ];\n\t\t}\n\n\t\tif (\n\t\t\t'category' in settings &&\n\t\t\t! select\n\t\t\t\t.getCategories()\n\t\t\t\t.some( ( { slug } ) => slug === settings.category )\n\t\t) {\n\t\t\twarning(\n\t\t\t\t'The block \"' +\n\t\t\t\t\tname +\n\t\t\t\t\t'\" is registered with an invalid category \"' +\n\t\t\t\t\tsettings.category +\n\t\t\t\t\t'\".'\n\t\t\t);\n\t\t\tdelete settings.category;\n\t\t}\n\n\t\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\t\twarning( 'The block \"' + name + '\" must have a title.' );\n\t\t\treturn;\n\t\t}\n\t\tif ( typeof settings.title !== 'string' ) {\n\t\t\twarning( 'Block titles must be strings.' );\n\t\t\treturn;\n\t\t}\n\n\t\tsettings.icon = normalizeIconObject( settings.icon );\n\t\tif ( ! isValidIcon( settings.icon.src ) ) {\n\t\t\twarning(\n\t\t\t\t'The icon passed is invalid. ' +\n\t\t\t\t\t'The icon should be a string, an element, a function, or an object following the specifications documented in https://developer.wordpress.org/block-editor/developers/block-api/block-registration/#icon-optional'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\treturn settings;\n\t};\n", "/**\n * Internal dependencies\n */\nimport { processBlockType } from './process-block-type';\n\n/** @typedef {import('../api/registration').WPBlockType} WPBlockType */\n\n/**\n * Add bootstrapped block type metadata to the store. These metadata usually come from\n * the `block.json` file and are either statically boostrapped from the server, or\n * passed as the `metadata` parameter to the `registerBlockType` function.\n *\n * @param {string}      name      Block name.\n * @param {WPBlockType} blockType Block type metadata.\n */\nexport function addBootstrappedBlockType( name, blockType ) {\n\treturn {\n\t\ttype: 'ADD_BOOTSTRAPPED_BLOCK_TYPE',\n\t\tname,\n\t\tblockType,\n\t};\n}\n\n/**\n * Add unprocessed block type settings to the store. These data are passed as the\n * `settings` parameter to the client-side `registerBlockType` function.\n *\n * @param {string}      name      Block name.\n * @param {WPBlockType} blockType Unprocessed block type settings.\n */\nexport function addUnprocessedBlockType( name, blockType ) {\n\treturn ( { dispatch } ) => {\n\t\tdispatch( { type: 'ADD_UNPROCESSED_BLOCK_TYPE', name, blockType } );\n\t\tconst processedBlockType = dispatch(\n\t\t\tprocessBlockType( name, blockType )\n\t\t);\n\t\tif ( ! processedBlockType ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch.addBlockTypes( processedBlockType );\n\t};\n}\n\n/**\n * Adds new block bindings source.\n *\n * @param {string} source Name of the source to register.\n */\nexport function addBlockBindingsSource( source ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_BINDINGS_SOURCE',\n\t\tname: source.name,\n\t\tlabel: source.label,\n\t\tusesContext: source.usesContext,\n\t\tgetValues: source.getValues,\n\t\tsetValues: source.setValues,\n\t\tcanUserEditValue: source.canUserEditValue,\n\t\tgetFieldsList: source.getFieldsList,\n\t};\n}\n\n/**\n * Removes existing block bindings source.\n *\n * @param {string} name Name of the source to remove.\n */\nexport function removeBlockBindingsSource( name ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_BINDINGS_SOURCE',\n\t\tname,\n\t};\n}\n\n/**\n * Add bootstrapped block bindings sources, usually initialized from the server.\n *\n * @param {string} source Name of the source to bootstrap.\n */\nexport function addBootstrappedBlockBindingsSource( source ) {\n\treturn {\n\t\ttype: 'ADD_BOOTSTRAPPED_BLOCK_BINDINGS_SOURCE',\n\t\tname: source.name,\n\t\tlabel: source.label,\n\t\tusesContext: source.usesContext,\n\t};\n}\n", "export const STORE_NAME = 'core/blocks';\n", "/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as privateSelectors from './private-selectors';\nimport * as actions from './actions';\nimport * as privateActions from './private-actions';\nimport { STORE_NAME } from './constants';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Store definition for the blocks namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\nunlock( store ).registerPrivateSelectors( privateSelectors );\nunlock( store ).registerPrivateActions( privateActions );\n", "/**\n * External dependencies\n */\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport { createHooks, applyFilters } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetBlockType,\n\tgetBlockTypes,\n\tgetGroupingBlockName,\n} from './registration';\nimport {\n\tnormalizeBlockType,\n\t__experimentalSanitizeBlockAttributes,\n} from './utils';\n\n/**\n * Returns a block object given its type and attributes.\n *\n * @param {string} name        Block name.\n * @param {Object} attributes  Block attributes.\n * @param {?Array} innerBlocks Nested blocks.\n *\n * @return {Object} Block object.\n */\nexport function createBlock( name, attributes = {}, innerBlocks = [] ) {\n\tconst sanitizedAttributes = __experimentalSanitizeBlockAttributes(\n\t\tname,\n\t\tattributes\n\t);\n\n\tconst clientId = uuid();\n\n\t// Blocks are stored with a unique ID, the assigned type name, the block\n\t// attributes, and their inner blocks.\n\treturn {\n\t\tclientId,\n\t\tname,\n\t\tisValid: true,\n\t\tattributes: sanitizedAttributes,\n\t\tinnerBlocks,\n\t};\n}\n\n/**\n * Given an array of InnerBlocks templates or Block Objects,\n * returns an array of created Blocks from them.\n * It handles the case of having InnerBlocks as Blocks by\n * converting them to the proper format to continue recursively.\n *\n * @param {Array} innerBlocksOrTemplate Nested blocks or InnerBlocks templates.\n *\n * @return {Object[]} Array of Block objects.\n */\nexport function createBlocksFromInnerBlocksTemplate(\n\tinnerBlocksOrTemplate = []\n) {\n\treturn innerBlocksOrTemplate.map( ( innerBlock ) => {\n\t\tconst innerBlockTemplate = Array.isArray( innerBlock )\n\t\t\t? innerBlock\n\t\t\t: [\n\t\t\t\t\tinnerBlock.name,\n\t\t\t\t\tinnerBlock.attributes,\n\t\t\t\t\tinnerBlock.innerBlocks,\n\t\t\t  ];\n\t\tconst [ name, attributes, innerBlocks = [] ] = innerBlockTemplate;\n\t\treturn createBlock(\n\t\t\tname,\n\t\t\tattributes,\n\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t);\n\t} );\n}\n\n/**\n * Given a block object, returns a copy of the block object while sanitizing its attributes,\n * optionally merging new attributes and/or replacing its inner blocks.\n *\n * @param {Object} block           Block instance.\n * @param {Object} mergeAttributes Block attributes.\n * @param {?Array} newInnerBlocks  Nested blocks.\n *\n * @return {Object} A cloned block.\n */\nexport function __experimentalCloneSanitizedBlock(\n\tblock,\n\tmergeAttributes = {},\n\tnewInnerBlocks\n) {\n\tconst clientId = uuid();\n\n\tconst sanitizedAttributes = __experimentalSanitizeBlockAttributes(\n\t\tblock.name,\n\t\t{\n\t\t\t...block.attributes,\n\t\t\t...mergeAttributes,\n\t\t}\n\t);\n\n\treturn {\n\t\t...block,\n\t\tclientId,\n\t\tattributes: sanitizedAttributes,\n\t\tinnerBlocks:\n\t\t\tnewInnerBlocks ||\n\t\t\tblock.innerBlocks.map( ( innerBlock ) =>\n\t\t\t\t__experimentalCloneSanitizedBlock( innerBlock )\n\t\t\t),\n\t};\n}\n\n/**\n * Given a block object, returns a copy of the block object,\n * optionally merging new attributes and/or replacing its inner blocks.\n *\n * @param {Object} block           Block instance.\n * @param {Object} mergeAttributes Block attributes.\n * @param {?Array} newInnerBlocks  Nested blocks.\n *\n * @return {Object} A cloned block.\n */\nexport function cloneBlock( block, mergeAttributes = {}, newInnerBlocks ) {\n\tconst clientId = uuid();\n\n\treturn {\n\t\t...block,\n\t\tclientId,\n\t\tattributes: {\n\t\t\t...block.attributes,\n\t\t\t...mergeAttributes,\n\t\t},\n\t\tinnerBlocks:\n\t\t\tnewInnerBlocks ||\n\t\t\tblock.innerBlocks.map( ( innerBlock ) => cloneBlock( innerBlock ) ),\n\t};\n}\n\n/**\n * Returns a boolean indicating whether a transform is possible based on\n * various bits of context.\n *\n * @param {Object} transform The transform object to validate.\n * @param {string} direction Is this a 'from' or 'to' transform.\n * @param {Array}  blocks    The blocks to transform from.\n *\n * @return {boolean} Is the transform possible?\n */\nconst isPossibleTransformForSource = ( transform, direction, blocks ) => {\n\tif ( ! blocks.length ) {\n\t\treturn false;\n\t}\n\n\t// If multiple blocks are selected, only multi block transforms\n\t// or wildcard transforms are allowed.\n\tconst isMultiBlock = blocks.length > 1;\n\tconst firstBlockName = blocks[ 0 ].name;\n\tconst isValidForMultiBlocks =\n\t\tisWildcardBlockTransform( transform ) ||\n\t\t! isMultiBlock ||\n\t\ttransform.isMultiBlock;\n\tif ( ! isValidForMultiBlocks ) {\n\t\treturn false;\n\t}\n\n\t// Check non-wildcard transforms to ensure that transform is valid\n\t// for a block selection of multiple blocks of different types.\n\tif (\n\t\t! isWildcardBlockTransform( transform ) &&\n\t\t! blocks.every( ( block ) => block.name === firstBlockName )\n\t) {\n\t\treturn false;\n\t}\n\n\t// Only consider 'block' type transforms as valid.\n\tconst isBlockType = transform.type === 'block';\n\tif ( ! isBlockType ) {\n\t\treturn false;\n\t}\n\n\t// Check if the transform's block name matches the source block (or is a wildcard)\n\t// only if this is a transform 'from'.\n\tconst sourceBlock = blocks[ 0 ];\n\tconst hasMatchingName =\n\t\tdirection !== 'from' ||\n\t\ttransform.blocks.indexOf( sourceBlock.name ) !== -1 ||\n\t\tisWildcardBlockTransform( transform );\n\tif ( ! hasMatchingName ) {\n\t\treturn false;\n\t}\n\n\t// Don't allow single Grouping blocks to be transformed into\n\t// a Grouping block.\n\tif (\n\t\t! isMultiBlock &&\n\t\tdirection === 'from' &&\n\t\tisContainerGroupBlock( sourceBlock.name ) &&\n\t\tisContainerGroupBlock( transform.blockName )\n\t) {\n\t\treturn false;\n\t}\n\n\t// If the transform has a `isMatch` function specified, check that it returns true.\n\tif ( ! maybeCheckTransformIsMatch( transform, blocks ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Returns block types that the 'blocks' can be transformed into, based on\n * 'from' transforms on other blocks.\n *\n * @param {Array} blocks The blocks to transform from.\n *\n * @return {Array} Block types that the blocks can be transformed into.\n */\nconst getBlockTypesForPossibleFromTransforms = ( blocks ) => {\n\tif ( ! blocks.length ) {\n\t\treturn [];\n\t}\n\n\tconst allBlockTypes = getBlockTypes();\n\n\t// filter all blocks to find those with a 'from' transform.\n\tconst blockTypesWithPossibleFromTransforms = allBlockTypes.filter(\n\t\t( blockType ) => {\n\t\t\tconst fromTransforms = getBlockTransforms( 'from', blockType.name );\n\t\t\treturn !! findTransform( fromTransforms, ( transform ) => {\n\t\t\t\treturn isPossibleTransformForSource(\n\t\t\t\t\ttransform,\n\t\t\t\t\t'from',\n\t\t\t\t\tblocks\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t);\n\n\treturn blockTypesWithPossibleFromTransforms;\n};\n\n/**\n * Returns block types that the 'blocks' can be transformed into, based on\n * the source block's own 'to' transforms.\n *\n * @param {Array} blocks The blocks to transform from.\n *\n * @return {Array} Block types that the source can be transformed into.\n */\nconst getBlockTypesForPossibleToTransforms = ( blocks ) => {\n\tif ( ! blocks.length ) {\n\t\treturn [];\n\t}\n\n\tconst sourceBlock = blocks[ 0 ];\n\tconst blockType = getBlockType( sourceBlock.name );\n\tconst transformsTo = blockType\n\t\t? getBlockTransforms( 'to', blockType.name )\n\t\t: [];\n\n\t// filter all 'to' transforms to find those that are possible.\n\tconst possibleTransforms = transformsTo.filter( ( transform ) => {\n\t\treturn (\n\t\t\ttransform && isPossibleTransformForSource( transform, 'to', blocks )\n\t\t);\n\t} );\n\n\t// Build a list of block names using the possible 'to' transforms.\n\tconst blockNames = possibleTransforms\n\t\t.map( ( transformation ) => transformation.blocks )\n\t\t.flat();\n\n\t// Map block names to block types.\n\treturn blockNames.map( getBlockType );\n};\n\n/**\n * Determines whether transform is a \"block\" type\n * and if so whether it is a \"wildcard\" transform\n * ie: targets \"any\" block type\n *\n * @param {Object} t the Block transform object\n *\n * @return {boolean} whether transform is a wildcard transform\n */\nexport const isWildcardBlockTransform = ( t ) =>\n\tt &&\n\tt.type === 'block' &&\n\tArray.isArray( t.blocks ) &&\n\tt.blocks.includes( '*' );\n\n/**\n * Determines whether the given Block is the core Block which\n * acts as a container Block for other Blocks as part of the\n * Grouping mechanics\n *\n * @param {string} name the name of the Block to test against\n *\n * @return {boolean} whether or not the Block is the container Block type\n */\nexport const isContainerGroupBlock = ( name ) =>\n\tname === getGroupingBlockName();\n\n/**\n * Returns an array of block types that the set of blocks received as argument\n * can be transformed into.\n *\n * @param {Array} blocks Blocks array.\n *\n * @return {Array} Block types that the blocks argument can be transformed to.\n */\nexport function getPossibleBlockTransformations( blocks ) {\n\tif ( ! blocks.length ) {\n\t\treturn [];\n\t}\n\n\tconst blockTypesForFromTransforms =\n\t\tgetBlockTypesForPossibleFromTransforms( blocks );\n\tconst blockTypesForToTransforms =\n\t\tgetBlockTypesForPossibleToTransforms( blocks );\n\n\treturn [\n\t\t...new Set( [\n\t\t\t...blockTypesForFromTransforms,\n\t\t\t...blockTypesForToTransforms,\n\t\t] ),\n\t];\n}\n\n/**\n * Given an array of transforms, returns the highest-priority transform where\n * the predicate function returns a truthy value. A higher-priority transform\n * is one with a lower priority value (i.e. first in priority order). Returns\n * null if the transforms set is empty or the predicate function returns a\n * falsey value for all entries.\n *\n * @param {Object[]} transforms Transforms to search.\n * @param {Function} predicate  Function returning true on matching transform.\n *\n * @return {?Object} Highest-priority transform candidate.\n */\nexport function findTransform( transforms, predicate ) {\n\t// The hooks library already has built-in mechanisms for managing priority\n\t// queue, so leverage via locally-defined instance.\n\tconst hooks = createHooks();\n\n\tfor ( let i = 0; i < transforms.length; i++ ) {\n\t\tconst candidate = transforms[ i ];\n\t\tif ( predicate( candidate ) ) {\n\t\t\thooks.addFilter(\n\t\t\t\t'transform',\n\t\t\t\t'transform/' + i.toString(),\n\t\t\t\t( result ) => ( result ? result : candidate ),\n\t\t\t\tcandidate.priority\n\t\t\t);\n\t\t}\n\t}\n\n\t// Filter name is arbitrarily chosen but consistent with above aggregation.\n\treturn hooks.applyFilters( 'transform', null );\n}\n\n/**\n * Returns normal block transforms for a given transform direction, optionally\n * for a specific block by name, or an empty array if there are no transforms.\n * If no block name is provided, returns transforms for all blocks. A normal\n * transform object includes `blockName` as a property.\n *\n * @param {string}        direction       Transform direction (\"to\", \"from\").\n * @param {string|Object} blockTypeOrName Block type or name.\n *\n * @return {Array} Block transforms for direction.\n */\nexport function getBlockTransforms( direction, blockTypeOrName ) {\n\t// When retrieving transforms for all block types, recurse into self.\n\tif ( blockTypeOrName === undefined ) {\n\t\treturn getBlockTypes()\n\t\t\t.map( ( { name } ) => getBlockTransforms( direction, name ) )\n\t\t\t.flat();\n\t}\n\n\t// Validate that block type exists and has array of direction.\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\tconst { name: blockName, transforms } = blockType || {};\n\tif ( ! transforms || ! Array.isArray( transforms[ direction ] ) ) {\n\t\treturn [];\n\t}\n\n\tconst usingMobileTransformations =\n\t\ttransforms.supportedMobileTransforms &&\n\t\tArray.isArray( transforms.supportedMobileTransforms );\n\tconst filteredTransforms = usingMobileTransformations\n\t\t? transforms[ direction ].filter( ( t ) => {\n\t\t\t\tif ( t.type === 'raw' ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif ( t.type === 'prefix' ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif ( ! t.blocks || ! t.blocks.length ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( isWildcardBlockTransform( t ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn t.blocks.every( ( transformBlockName ) =>\n\t\t\t\t\ttransforms.supportedMobileTransforms.includes(\n\t\t\t\t\t\ttransformBlockName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t  } )\n\t\t: transforms[ direction ];\n\n\t// Map transforms to normal form.\n\treturn filteredTransforms.map( ( transform ) => ( {\n\t\t...transform,\n\t\tblockName,\n\t\tusingMobileTransformations,\n\t} ) );\n}\n\n/**\n * Checks that a given transforms isMatch method passes for given source blocks.\n *\n * @param {Object} transform A transform object.\n * @param {Array}  blocks    Blocks array.\n *\n * @return {boolean} True if given blocks are a match for the transform.\n */\nfunction maybeCheckTransformIsMatch( transform, blocks ) {\n\tif ( typeof transform.isMatch !== 'function' ) {\n\t\treturn true;\n\t}\n\tconst sourceBlock = blocks[ 0 ];\n\tconst attributes = transform.isMultiBlock\n\t\t? blocks.map( ( block ) => block.attributes )\n\t\t: sourceBlock.attributes;\n\tconst block = transform.isMultiBlock ? blocks : sourceBlock;\n\n\treturn transform.isMatch( attributes, block );\n}\n\n/**\n * Switch one or more blocks into one or more blocks of the new block type.\n *\n * @param {Array|Object} blocks Blocks array or block object.\n * @param {string}       name   Block name.\n *\n * @return {?Array} Array of blocks or null.\n */\nexport function switchToBlockType( blocks, name ) {\n\tconst blocksArray = Array.isArray( blocks ) ? blocks : [ blocks ];\n\tconst isMultiBlock = blocksArray.length > 1;\n\tconst firstBlock = blocksArray[ 0 ];\n\tconst sourceName = firstBlock.name;\n\n\t// Find the right transformation by giving priority to the \"to\"\n\t// transformation.\n\tconst transformationsFrom = getBlockTransforms( 'from', name );\n\tconst transformationsTo = getBlockTransforms( 'to', sourceName );\n\n\tconst transformation =\n\t\tfindTransform(\n\t\t\ttransformationsTo,\n\t\t\t( t ) =>\n\t\t\t\tt.type === 'block' &&\n\t\t\t\t( isWildcardBlockTransform( t ) ||\n\t\t\t\t\tt.blocks.indexOf( name ) !== -1 ) &&\n\t\t\t\t( ! isMultiBlock || t.isMultiBlock ) &&\n\t\t\t\tmaybeCheckTransformIsMatch( t, blocksArray )\n\t\t) ||\n\t\tfindTransform(\n\t\t\ttransformationsFrom,\n\t\t\t( t ) =>\n\t\t\t\tt.type === 'block' &&\n\t\t\t\t( isWildcardBlockTransform( t ) ||\n\t\t\t\t\tt.blocks.indexOf( sourceName ) !== -1 ) &&\n\t\t\t\t( ! isMultiBlock || t.isMultiBlock ) &&\n\t\t\t\tmaybeCheckTransformIsMatch( t, blocksArray )\n\t\t);\n\n\t// Stop if there is no valid transformation.\n\tif ( ! transformation ) {\n\t\treturn null;\n\t}\n\n\tlet transformationResults;\n\n\tif ( transformation.isMultiBlock ) {\n\t\tif ( '__experimentalConvert' in transformation ) {\n\t\t\ttransformationResults =\n\t\t\t\ttransformation.__experimentalConvert( blocksArray );\n\t\t} else {\n\t\t\ttransformationResults = transformation.transform(\n\t\t\t\tblocksArray.map( ( currentBlock ) => currentBlock.attributes ),\n\t\t\t\tblocksArray.map( ( currentBlock ) => currentBlock.innerBlocks )\n\t\t\t);\n\t\t}\n\t} else if ( '__experimentalConvert' in transformation ) {\n\t\ttransformationResults =\n\t\t\ttransformation.__experimentalConvert( firstBlock );\n\t} else {\n\t\ttransformationResults = transformation.transform(\n\t\t\tfirstBlock.attributes,\n\t\t\tfirstBlock.innerBlocks\n\t\t);\n\t}\n\n\t// Ensure that the transformation function returned an object or an array\n\t// of objects.\n\tif (\n\t\ttransformationResults === null ||\n\t\ttypeof transformationResults !== 'object'\n\t) {\n\t\treturn null;\n\t}\n\n\t// If the transformation function returned a single object, we want to work\n\t// with an array instead.\n\ttransformationResults = Array.isArray( transformationResults )\n\t\t? transformationResults\n\t\t: [ transformationResults ];\n\n\t// Ensure that every block object returned by the transformation has a\n\t// valid block type.\n\tif (\n\t\ttransformationResults.some(\n\t\t\t( result ) => ! getBlockType( result.name )\n\t\t)\n\t) {\n\t\treturn null;\n\t}\n\n\tconst hasSwitchedBlock = transformationResults.some(\n\t\t( result ) => result.name === name\n\t);\n\n\t// Ensure that at least one block object returned by the transformation has\n\t// the expected \"destination\" block type.\n\tif ( ! hasSwitchedBlock ) {\n\t\treturn null;\n\t}\n\n\tconst ret = transformationResults.map( ( result, index, results ) => {\n\t\t/**\n\t\t * Filters an individual transform result from block transformation.\n\t\t * All of the original blocks are passed, since transformations are\n\t\t * many-to-many, not one-to-one.\n\t\t *\n\t\t * @param {Object}   transformedBlock The transformed block.\n\t\t * @param {Object[]} blocks           Original blocks transformed.\n\t\t * @param {Object[]} index            Index of the transformed block on the array of results.\n\t\t * @param {Object[]} results          An array all the blocks that resulted from the transformation.\n\t\t */\n\t\treturn applyFilters(\n\t\t\t'blocks.switchToBlockType.transformedBlock',\n\t\t\tresult,\n\t\t\tblocks,\n\t\t\tindex,\n\t\t\tresults\n\t\t);\n\t} );\n\n\treturn ret;\n}\n\n/**\n * Create a block object from the example API.\n *\n * @param {string} name\n * @param {Object} example\n *\n * @return {Object} block.\n */\nexport const getBlockFromExample = ( name, example ) => {\n\ttry {\n\t\treturn createBlock(\n\t\t\tname,\n\t\t\texample.attributes,\n\t\t\t( example.innerBlocks ?? [] ).map( ( innerBlock ) =>\n\t\t\t\tgetBlockFromExample( innerBlock.name, innerBlock )\n\t\t\t)\n\t\t);\n\t} catch {\n\t\treturn createBlock( 'core/missing', {\n\t\t\toriginalName: name,\n\t\t\toriginalContent: '',\n\t\t\toriginalUndelimitedContent: '',\n\t\t} );\n\t}\n};\n", "let document: string;\nlet offset: number;\nlet output: ParsedBlock[];\nlet stack: ParsedFrame[];\n\ntype Attributes = Record< string, any > | null;\n\ntype ParsedBlock = {\n\tblockName: string | null;\n\tattrs: Attributes;\n\tinnerBlocks: ParsedBlock[];\n\tinnerHTML: string;\n\tinnerContent: Array< string | null >;\n};\n\ntype ParsedFrame = {\n\tblock: ParsedBlock;\n\ttokenStart: number;\n\ttokenLength: number;\n\tprevOffset: number;\n\tleadingHtmlStart: number | null;\n};\n\ntype TokenType =\n\t| 'no-more-tokens'\n\t| 'void-block'\n\t| 'block-opener'\n\t| 'block-closer';\n\ntype Token = [ TokenType, string, Attributes, number, number ];\n\n/**\n * Matches block comment delimiters\n *\n * While most of this pattern is straightforward the attribute parsing\n * incorporates a tricks to make sure we don't choke on specific input\n *\n *  - since JavaScript has no possessive quantifier or atomic grouping\n *    we are emulating it with a trick\n *\n *    we want a possessive quantifier or atomic group to prevent backtracking\n *    on the `}`s should we fail to match the remainder of the pattern\n *\n *    we can emulate this with a positive lookahead and back reference\n *    (a++)*c === ((?=(a+))\\1)*c\n *\n *    let's examine an example:\n *      - /(a+)*c/.test('aaaaaaaaaaaaad') fails after over 49,000 steps\n *      - /(a++)*c/.test('aaaaaaaaaaaaad') fails after 85 steps\n *      - /(?>a+)*c/.test('aaaaaaaaaaaaad') fails after 126 steps\n *\n *    this is because the possessive `++` and the atomic group `(?>)`\n *    tell the engine that all those `a`s belong together as a single group\n *    and so it won't split it up when stepping backwards to try and match\n *\n *    if we use /((?=(a+))\\1)*c/ then we get the same behavior as the atomic group\n *    or possessive and prevent the backtracking because the `a+` is matched but\n *    not captured. thus, we find the long string of `a`s and remember it, then\n *    reference it as a whole unit inside our pattern\n *\n *    @see http://instanceof.me/post/52245507631/regex-emulate-atomic-grouping-with-lookahead\n *    @see http://blog.stevenlevithan.com/archives/mimic-atomic-groups\n *    @see https://javascript.info/regexp-infinite-backtracking-problem\n *\n *    once browsers reliably support atomic grouping or possessive\n *    quantifiers natively we should remove this trick and simplify\n *\n * @since 3.8.0\n * @since 4.6.1 added optimization to prevent backtracking on attribute parsing\n */\nconst tokenizer =\n\t/<!--\\s+(\\/)?wp:([a-z][a-z0-9_-]*\\/)?([a-z][a-z0-9_-]*)\\s+({(?:(?=([^}]+|}+(?=})|(?!}\\s+\\/?-->)[^])*)\\5|[^]*?)}\\s+)?(\\/)?-->/g;\n\n/**\n * Constructs a block object.\n *\n * @param blockName    Either the abbreviated core types, e.g. \"paragraph\", or the fully-qualified\n *                     block type with namespace and type, e.g. \"core/paragraph\" or \"my-plugin/csv-table\".\n * @param attrs        The attributes for the block, or null if there are no attributes.\n * @param innerBlocks  An array of inner blocks.\n * @param innerHTML    The inner HTML of the block.\n * @param innerContent An array of inner content strings.\n * @return The block object.\n */\nfunction Block(\n\tblockName: string | null,\n\tattrs: Attributes,\n\tinnerBlocks: ParsedBlock[],\n\tinnerHTML: string,\n\tinnerContent: string[]\n): ParsedBlock {\n\treturn {\n\t\tblockName,\n\t\tattrs,\n\t\tinnerBlocks,\n\t\tinnerHTML,\n\t\tinnerContent,\n\t};\n}\n\n/**\n * Constructs a freeform block object.\n *\n * @param innerHTML The inner HTML of the block.\n * @return The freeform block object.\n */\nfunction Freeform( innerHTML: string ): ParsedBlock {\n\treturn Block( null, {}, [], innerHTML, [ innerHTML ] );\n}\n\n/**\n * Constructs a frame object.\n *\n * @param block            The block object.\n * @param tokenStart       The start offset of the token in the document.\n * @param tokenLength      The length of the token in the document.\n * @param prevOffset       The offset of the previous token in the document.\n * @param leadingHtmlStart The start offset of leading HTML before the block.\n * @return The frame object.\n */\nfunction Frame(\n\tblock: ParsedBlock,\n\ttokenStart: number,\n\ttokenLength: number,\n\tprevOffset: number | null,\n\tleadingHtmlStart: number | null\n): ParsedFrame {\n\treturn {\n\t\tblock,\n\t\ttokenStart,\n\t\ttokenLength,\n\t\tprevOffset: prevOffset || tokenStart + tokenLength,\n\t\tleadingHtmlStart,\n\t};\n}\n\n/**\n * Parser function, that converts input HTML into a block based structure.\n *\n * @param doc The HTML document to parse.\n *\n * @example\n * Input post:\n * ```html\n * <!-- wp:columns {\"columns\":3} -->\n * <div class=\"wp-block-columns has-3-columns\"><!-- wp:column -->\n * <div class=\"wp-block-column\"><!-- wp:paragraph -->\n * <p>Left</p>\n * <!-- /wp:paragraph --></div>\n * <!-- /wp:column -->\n *\n * <!-- wp:column -->\n * <div class=\"wp-block-column\"><!-- wp:paragraph -->\n * <p><strong>Middle</strong></p>\n * <!-- /wp:paragraph --></div>\n * <!-- /wp:column -->\n *\n * <!-- wp:column -->\n * <div class=\"wp-block-column\"></div>\n * <!-- /wp:column --></div>\n * <!-- /wp:columns -->\n * ```\n *\n * Parsing code:\n * ```js\n * import { parse } from '@wordpress/block-serialization-default-parser';\n *\n * parse( post ) === [\n *     {\n *         blockName: \"core/columns\",\n *         attrs: {\n *             columns: 3\n *         },\n *         innerBlocks: [\n *             {\n *                 blockName: \"core/column\",\n *                 attrs: null,\n *                 innerBlocks: [\n *                     {\n *                         blockName: \"core/paragraph\",\n *                         attrs: null,\n *                         innerBlocks: [],\n *                         innerHTML: \"\\n<p>Left</p>\\n\"\n *                     }\n *                 ],\n *                 innerHTML: '\\n<div class=\"wp-block-column\"></div>\\n'\n *             },\n *             {\n *                 blockName: \"core/column\",\n *                 attrs: null,\n *                 innerBlocks: [\n *                     {\n *                         blockName: \"core/paragraph\",\n *                         attrs: null,\n *                         innerBlocks: [],\n *                         innerHTML: \"\\n<p><strong>Middle</strong></p>\\n\"\n *                     }\n *                 ],\n *                 innerHTML: '\\n<div class=\"wp-block-column\"></div>\\n'\n *             },\n *             {\n *                 blockName: \"core/column\",\n *                 attrs: null,\n *                 innerBlocks: [],\n *                 innerHTML: '\\n<div class=\"wp-block-column\"></div>\\n'\n *             }\n *         ],\n *         innerHTML: '\\n<div class=\"wp-block-columns has-3-columns\">\\n\\n\\n\\n</div>\\n'\n *     }\n * ];\n * ```\n * @return A block-based representation of the input HTML.\n */\nexport const parse = ( doc: string ): ParsedBlock[] => {\n\tdocument = doc;\n\toffset = 0;\n\toutput = [];\n\tstack = [];\n\ttokenizer.lastIndex = 0;\n\n\tdo {\n\t\t// twiddle our thumbs\n\t} while ( proceed() );\n\n\treturn output;\n};\n\n/**\n * Parses the next token in the input document.\n *\n * @return Returns true when there is more tokens to parse.\n */\nfunction proceed(): boolean {\n\tconst stackDepth = stack.length;\n\tconst next = nextToken();\n\tconst [ tokenType, blockName, attrs, startOffset, tokenLength ] = next;\n\n\t// We may have some HTML soup before the next block.\n\tconst leadingHtmlStart = startOffset > offset ? offset : null;\n\n\tswitch ( tokenType ) {\n\t\tcase 'no-more-tokens':\n\t\t\t// If not in a block then flush output.\n\t\t\tif ( 0 === stackDepth ) {\n\t\t\t\taddFreeform();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Otherwise we have a problem\n\t\t\t// This is an error\n\t\t\t// we have options\n\t\t\t//  - treat it all as freeform text\n\t\t\t//  - assume an implicit closer (easiest when not nesting)\n\n\t\t\t// For the easy case we'll assume an implicit closer.\n\t\t\tif ( 1 === stackDepth ) {\n\t\t\t\taddBlockFromStack();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For the nested case where it's more difficult we'll\n\t\t\t// have to assume that multiple closers are missing\n\t\t\t// and so we'll collapse the whole stack piecewise.\n\t\t\twhile ( 0 < stack.length ) {\n\t\t\t\taddBlockFromStack();\n\t\t\t}\n\t\t\treturn false;\n\t\tcase 'void-block':\n\t\t\t// easy case is if we stumbled upon a void block\n\t\t\t// in the top-level of the document.\n\t\t\tif ( 0 === stackDepth ) {\n\t\t\t\tif ( null !== leadingHtmlStart ) {\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tFreeform(\n\t\t\t\t\t\t\tdocument.substr(\n\t\t\t\t\t\t\t\tleadingHtmlStart,\n\t\t\t\t\t\t\t\tstartOffset - leadingHtmlStart\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\toutput.push( Block( blockName, attrs, [], '', [] ) );\n\t\t\t\toffset = startOffset + tokenLength;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Otherwise we found an inner block.\n\t\t\taddInnerBlock(\n\t\t\t\tBlock( blockName, attrs, [], '', [] ),\n\t\t\t\tstartOffset,\n\t\t\t\ttokenLength\n\t\t\t);\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tcase 'block-opener':\n\t\t\t// Track all newly-opened blocks on the stack.\n\t\t\tstack.push(\n\t\t\t\tFrame(\n\t\t\t\t\tBlock( blockName, attrs, [], '', [] ),\n\t\t\t\t\tstartOffset,\n\t\t\t\t\ttokenLength,\n\t\t\t\t\tstartOffset + tokenLength,\n\t\t\t\t\tleadingHtmlStart\n\t\t\t\t)\n\t\t\t);\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tcase 'block-closer':\n\t\t\t// If we're missing an opener we're in trouble\n\t\t\t// This is an error.\n\t\t\tif ( 0 === stackDepth ) {\n\t\t\t\t// We have options\n\t\t\t\t//  - assume an implicit opener\n\t\t\t\t//  - assume _this_ is the opener\n\t\t\t\t// - give up and close out the document.\n\t\t\t\taddFreeform();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we're not nesting then this is easy - close the block.\n\t\t\tif ( 1 === stackDepth ) {\n\t\t\t\taddBlockFromStack( startOffset );\n\t\t\t\toffset = startOffset + tokenLength;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Otherwise we're nested and we have to close out the current\n\t\t\t// block and add it as a innerBlock to the parent.\n\t\t\tconst stackTop = stack.pop() as ParsedFrame;\n\t\t\tconst html = document.substr(\n\t\t\t\tstackTop.prevOffset,\n\t\t\t\tstartOffset - stackTop.prevOffset\n\t\t\t);\n\t\t\tstackTop.block.innerHTML += html;\n\t\t\tstackTop.block.innerContent.push( html );\n\t\t\tstackTop.prevOffset = startOffset + tokenLength;\n\n\t\t\taddInnerBlock(\n\t\t\t\tstackTop.block,\n\t\t\t\tstackTop.tokenStart,\n\t\t\t\tstackTop.tokenLength,\n\t\t\t\tstartOffset + tokenLength\n\t\t\t);\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tdefault:\n\t\t\t// This is an error.\n\t\t\taddFreeform();\n\t\t\treturn false;\n\t}\n}\n\n/**\n * Parse JSON if valid, otherwise return null\n *\n * Note that JSON coming from the block comment\n * delimiters is constrained to be an object\n * and cannot be things like `true` or `null`\n *\n * @param input JSON input string to parse\n * @return parsed JSON if valid or null if invalid\n */\nfunction parseJSON( input: string ): Object | null {\n\ttry {\n\t\treturn JSON.parse( input );\n\t} catch ( e ) {\n\t\treturn null;\n\t}\n}\n\n/**\n * Finds the next token in the document.\n *\n * @return The next matched token.\n */\nfunction nextToken(): Token {\n\t// Aye the magic\n\t// we're using a single RegExp to tokenize the block comment delimiters\n\t// we're also using a trick here because the only difference between a\n\t// block opener and a block closer is the leading `/` before `wp:` (and\n\t// a closer has no attributes). we can trap them both and process the\n\t// match back in JavaScript to see which one it was.\n\tconst matches = tokenizer.exec( document );\n\n\t// We have no more tokens.\n\tif ( null === matches ) {\n\t\treturn [ 'no-more-tokens', '', null, 0, 0 ];\n\t}\n\n\tconst startedAt = matches.index;\n\tconst [\n\t\tmatch,\n\t\tcloserMatch,\n\t\tnamespaceMatch,\n\t\tnameMatch,\n\t\tattrsMatch /* Internal/unused. */,\n\t\t,\n\t\tvoidMatch,\n\t] = matches;\n\n\tconst length = match.length;\n\tconst isCloser = !! closerMatch;\n\tconst isVoid = !! voidMatch;\n\tconst namespace = namespaceMatch || 'core/';\n\tconst name = namespace + nameMatch;\n\tconst hasAttrs = !! attrsMatch;\n\tconst attrs = hasAttrs ? parseJSON( attrsMatch ) : {};\n\n\t// This state isn't allowed\n\t// This is an error.\n\tif ( isCloser && ( isVoid || hasAttrs ) ) {\n\t\t// We can ignore them since they don't hurt anything\n\t\t// we may warn against this at some point or reject it.\n\t}\n\n\tif ( isVoid ) {\n\t\treturn [ 'void-block', name, attrs, startedAt, length ];\n\t}\n\n\tif ( isCloser ) {\n\t\treturn [ 'block-closer', name, null, startedAt, length ];\n\t}\n\n\treturn [ 'block-opener', name, attrs, startedAt, length ];\n}\n\n/**\n * Adds a freeform block to the output.\n *\n * @param rawLength Optional length of the raw HTML to include as freeform content.\n */\nfunction addFreeform( rawLength?: number ) {\n\tconst length = rawLength ? rawLength : document.length - offset;\n\n\tif ( 0 === length ) {\n\t\treturn;\n\t}\n\n\toutput.push( Freeform( document.substr( offset, length ) ) );\n}\n\n/**\n * Adds inner block to the parent block.\n *\n * @param block       The inner block to be added to the parent.\n * @param tokenStart  The start offset of the block token in the document.\n * @param tokenLength The total length of the block token.\n * @param lastOffset  Optional offset marking the end of the current block,\n *                    used to update the parent's HTML content boundaries.\n */\nfunction addInnerBlock(\n\tblock: ParsedBlock,\n\ttokenStart: number,\n\ttokenLength: number,\n\tlastOffset?: number\n) {\n\tconst parent = stack[ stack.length - 1 ];\n\tparent.block.innerBlocks.push( block );\n\tconst html = document.substr(\n\t\tparent.prevOffset,\n\t\ttokenStart - parent.prevOffset\n\t);\n\n\tif ( html ) {\n\t\tparent.block.innerHTML += html;\n\t\tparent.block.innerContent.push( html );\n\t}\n\n\tparent.block.innerContent.push( null );\n\tparent.prevOffset = lastOffset ? lastOffset : tokenStart + tokenLength;\n}\n\n/**\n * Adds block from the stack to the output.\n *\n * @param endOffset Optional offset marking the end of the block's HTML content.\n */\nfunction addBlockFromStack( endOffset?: number ) {\n\tconst { block, leadingHtmlStart, prevOffset, tokenStart } =\n\t\tstack.pop() as ParsedFrame;\n\n\tconst html = endOffset\n\t\t? document.substr( prevOffset, endOffset - prevOffset )\n\t\t: document.substr( prevOffset );\n\n\tif ( html ) {\n\t\tblock.innerHTML += html;\n\t\tblock.innerContent.push( html );\n\t}\n\n\tif ( null !== leadingHtmlStart ) {\n\t\toutput.push(\n\t\t\tFreeform(\n\t\t\t\tdocument.substr(\n\t\t\t\t\tleadingHtmlStart,\n\t\t\t\t\ttokenStart - leadingHtmlStart\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\toutput.push( block );\n}\n", "/**\n * The regular expression for an HTML element.\n */\nconst htmlSplitRegex: RegExp = ( () => {\n\t/* eslint-disable no-multi-spaces */\n\tconst comments =\n\t\t'!' + // Start of comment, after the <.\n\t\t'(?:' + // Unroll the loop: Consume everything until --> is found.\n\t\t'-(?!->)' + // Dash not followed by end of comment.\n\t\t'[^\\\\-]*' + // Consume non-dashes.\n\t\t')*' + // Loop possessively.\n\t\t'(?:-->)?'; // End of comment. If not found, match all input.\n\n\tconst cdata =\n\t\t'!\\\\[CDATA\\\\[' + // Start of comment, after the <.\n\t\t'[^\\\\]]*' + // Consume non-].\n\t\t'(?:' + // Unroll the loop: Consume everything until ]]> is found.\n\t\t'](?!]>)' + // One ] not followed by end of comment.\n\t\t'[^\\\\]]*' + // Consume non-].\n\t\t')*?' + // Loop possessively.\n\t\t'(?:]]>)?'; // End of comment. If not found, match all input.\n\n\tconst escaped =\n\t\t'(?=' + // Is the element escaped?\n\t\t'!--' +\n\t\t'|' +\n\t\t'!\\\\[CDATA\\\\[' +\n\t\t')' +\n\t\t'((?=!-)' + // If yes, which type?\n\t\tcomments +\n\t\t'|' +\n\t\tcdata +\n\t\t')';\n\n\tconst regex =\n\t\t'(' + // Capture the entire match.\n\t\t'<' + // Find start of element.\n\t\t'(' + // Conditional expression follows.\n\t\tescaped + // Find end of escaped element.\n\t\t'|' + // ... else ...\n\t\t'[^>]*>?' + // Find end of normal element.\n\t\t')' +\n\t\t')';\n\n\treturn new RegExp( regex );\n\t/* eslint-enable no-multi-spaces */\n} )();\n\n/**\n * Separate HTML elements and comments from the text.\n *\n * @param input The text which has to be formatted.\n *\n * @return The formatted text.\n */\nfunction htmlSplit( input: string ): string[] {\n\tconst parts = [];\n\tlet workingInput = input;\n\n\tlet match;\n\twhile ( ( match = workingInput.match( htmlSplitRegex ) ) ) {\n\t\t// The `match` result, when invoked on a RegExp with the `g` flag (`/foo/g`) will not include `index`.\n\t\t// If the `g` flag is omitted, `index` is included.\n\t\t// `htmlSplitRegex` does not have the `g` flag so we can assert it will have an index number.\n\t\t// Assert `match.index` is a number.\n\t\tconst index = match.index as number;\n\n\t\tparts.push( workingInput.slice( 0, index ) );\n\t\tparts.push( match[ 0 ] );\n\t\tworkingInput = workingInput.slice( index + match[ 0 ].length );\n\t}\n\n\tif ( workingInput.length ) {\n\t\tparts.push( workingInput );\n\t}\n\n\treturn parts;\n}\n\n/**\n * Replace characters or phrases within HTML elements only.\n *\n * @param haystack     The text which has to be formatted.\n * @param replacePairs In the form {from: 'to', …}.\n *\n * @return The formatted text.\n */\nfunction replaceInHtmlTags(\n\thaystack: string,\n\treplacePairs: Record< string, string >\n): string {\n\t// Find all elements.\n\tconst textArr = htmlSplit( haystack );\n\tlet changed = false;\n\n\t// Extract all needles.\n\tconst needles = Object.keys( replacePairs );\n\n\t// Loop through delimiters (elements) only.\n\tfor ( let i = 1; i < textArr.length; i += 2 ) {\n\t\tfor ( let j = 0; j < needles.length; j++ ) {\n\t\t\tconst needle = needles[ j ];\n\t\t\tif ( -1 !== textArr[ i ].indexOf( needle ) ) {\n\t\t\t\ttextArr[ i ] = textArr[ i ].replace(\n\t\t\t\t\tnew RegExp( needle, 'g' ),\n\t\t\t\t\treplacePairs[ needle ]\n\t\t\t\t);\n\t\t\t\tchanged = true;\n\t\t\t\t// After one strtr() break out of the foreach loop and look at next element.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( changed ) {\n\t\thaystack = textArr.join( '' );\n\t}\n\n\treturn haystack;\n}\n\n/**\n * Replaces double line-breaks with paragraph elements.\n *\n * A group of regex replaces used to identify text formatted with newlines and\n * replace double line-breaks with HTML paragraph tags. The remaining line-\n * breaks after conversion become `<br />` tags, unless br is set to 'false'.\n *\n * @param text The text which has to be formatted.\n * @param br   Optional. If set, will convert all remaining line-\n *             breaks after paragraphing. Default true.\n *\n * @example\n *```js\n * import { autop } from '@wordpress/autop';\n * autop( 'my text' ); // \"<p>my text</p>\"\n * ```\n *\n * @return Text which has been converted into paragraph tags.\n */\nexport function autop( text: string, br: boolean = true ): string {\n\tconst preTags: Array< [ string, string ] > = [];\n\n\tif ( text.trim() === '' ) {\n\t\treturn '';\n\t}\n\n\t// Just to make things a little easier, pad the end.\n\ttext = text + '\\n';\n\n\t/*\n\t * Pre tags shouldn't be touched by autop.\n\t * Replace pre tags with placeholders and bring them back after autop.\n\t */\n\tif ( text.indexOf( '<pre' ) !== -1 ) {\n\t\tconst textParts = text.split( '</pre>' );\n\t\tconst lastText = textParts.pop();\n\t\ttext = '';\n\n\t\tfor ( let i = 0; i < textParts.length; i++ ) {\n\t\t\tconst textPart = textParts[ i ];\n\t\t\tconst start = textPart.indexOf( '<pre' );\n\n\t\t\t// Malformed html?\n\t\t\tif ( start === -1 ) {\n\t\t\t\ttext += textPart;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = '<pre wp-pre-tag-' + i + '></pre>';\n\t\t\tpreTags.push( [ name, textPart.substr( start ) + '</pre>' ] );\n\n\t\t\ttext += textPart.substr( 0, start ) + name;\n\t\t}\n\n\t\ttext += lastText;\n\t}\n\t// Change multiple <br>s into two line breaks, which will turn into paragraphs.\n\ttext = text.replace( /<br\\s*\\/?>\\s*<br\\s*\\/?>/g, '\\n\\n' );\n\n\tconst allBlocks =\n\t\t'(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';\n\n\t// Add a double line break above block-level opening tags.\n\ttext = text.replace(\n\t\tnew RegExp( '(<' + allBlocks + '[\\\\s/>])', 'g' ),\n\t\t'\\n\\n$1'\n\t);\n\n\t// Add a double line break below block-level closing tags.\n\ttext = text.replace(\n\t\tnew RegExp( '(</' + allBlocks + '>)', 'g' ),\n\t\t'$1\\n\\n'\n\t);\n\n\t// Standardize newline characters to \"\\n\".\n\ttext = text.replace( /\\r\\n|\\r/g, '\\n' );\n\n\t// Find newlines in all elements and add placeholders.\n\ttext = replaceInHtmlTags( text, { '\\n': ' <!-- wpnl --> ' } );\n\n\t// Collapse line breaks before and after <option> elements so they don't get autop'd.\n\tif ( text.indexOf( '<option' ) !== -1 ) {\n\t\ttext = text.replace( /\\s*<option/g, '<option' );\n\t\ttext = text.replace( /<\\/option>\\s*/g, '</option>' );\n\t}\n\n\t/*\n\t * Collapse line breaks inside <object> elements, before <param> and <embed> elements\n\t * so they don't get autop'd.\n\t */\n\tif ( text.indexOf( '</object>' ) !== -1 ) {\n\t\ttext = text.replace( /(<object[^>]*>)\\s*/g, '$1' );\n\t\ttext = text.replace( /\\s*<\\/object>/g, '</object>' );\n\t\ttext = text.replace( /\\s*(<\\/?(?:param|embed)[^>]*>)\\s*/g, '$1' );\n\t}\n\n\t/*\n\t * Collapse line breaks inside <audio> and <video> elements,\n\t * before and after <source> and <track> elements.\n\t */\n\tif ( text.indexOf( '<source' ) !== -1 || text.indexOf( '<track' ) !== -1 ) {\n\t\ttext = text.replace( /([<\\[](?:audio|video)[^>\\]]*[>\\]])\\s*/g, '$1' );\n\t\ttext = text.replace( /\\s*([<\\[]\\/(?:audio|video)[>\\]])/g, '$1' );\n\t\ttext = text.replace( /\\s*(<(?:source|track)[^>]*>)\\s*/g, '$1' );\n\t}\n\n\t// Collapse line breaks before and after <figcaption> elements.\n\tif ( text.indexOf( '<figcaption' ) !== -1 ) {\n\t\ttext = text.replace( /\\s*(<figcaption[^>]*>)/, '$1' );\n\t\ttext = text.replace( /<\\/figcaption>\\s*/, '</figcaption>' );\n\t}\n\n\t// Remove more than two contiguous line breaks.\n\ttext = text.replace( /\\n\\n+/g, '\\n\\n' );\n\n\t// Split up the contents into an array of strings, separated by double line breaks.\n\tconst texts = text.split( /\\n\\s*\\n/ ).filter( Boolean );\n\n\t// Reset text prior to rebuilding.\n\ttext = '';\n\n\t// Rebuild the content as a string, wrapping every bit with a <p>.\n\ttexts.forEach( ( textPiece ) => {\n\t\ttext += '<p>' + textPiece.replace( /^\\n*|\\n*$/g, '' ) + '</p>\\n';\n\t} );\n\n\t// Under certain strange conditions it could create a P of entirely whitespace.\n\ttext = text.replace( /<p>\\s*<\\/p>/g, '' );\n\n\t// Add a closing <p> inside <div>, <address>, or <form> tag if missing.\n\ttext = text.replace(\n\t\t/<p>([^<]+)<\\/(div|address|form)>/g,\n\t\t'<p>$1</p></$2>'\n\t);\n\n\t// If an opening or closing block element tag is wrapped in a <p>, unwrap it.\n\ttext = text.replace(\n\t\tnew RegExp( '<p>\\\\s*(</?' + allBlocks + '[^>]*>)\\\\s*</p>', 'g' ),\n\t\t'$1'\n\t);\n\n\t// In some cases <li> may get wrapped in <p>, fix them.\n\ttext = text.replace( /<p>(<li.+?)<\\/p>/g, '$1' );\n\n\t// If a <blockquote> is wrapped with a <p>, move it inside the <blockquote>.\n\ttext = text.replace( /<p><blockquote([^>]*)>/gi, '<blockquote$1><p>' );\n\ttext = text.replace( /<\\/blockquote><\\/p>/g, '</p></blockquote>' );\n\n\t// If an opening or closing block element tag is preceded by an opening <p> tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '<p>\\\\s*(</?' + allBlocks + '[^>]*>)', 'g' ),\n\t\t'$1'\n\t);\n\n\t// If an opening or closing block element tag is followed by a closing <p> tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '(</?' + allBlocks + '[^>]*>)\\\\s*</p>', 'g' ),\n\t\t'$1'\n\t);\n\n\t// Optionally insert line breaks.\n\tif ( br ) {\n\t\t// Replace newlines that shouldn't be touched with a placeholder.\n\t\ttext = text.replace( /<(script|style).*?<\\/\\\\1>/g, ( match ) =>\n\t\t\tmatch[ 0 ].replace( /\\n/g, '<WPPreserveNewline />' )\n\t\t);\n\n\t\t// Normalize <br>\n\t\ttext = text.replace( /<br>|<br\\/>/g, '<br />' );\n\n\t\t// Replace any new line characters that aren't preceded by a <br /> with a <br />.\n\t\ttext = text.replace( /(<br \\/>)?\\s*\\n/g, ( a, b ) =>\n\t\t\tb ? a : '<br />\\n'\n\t\t);\n\n\t\t// Replace newline placeholders with newlines.\n\t\ttext = text.replace( /<WPPreserveNewline \\/>/g, '\\n' );\n\t}\n\n\t// If a <br /> tag is after an opening or closing block tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '(</?' + allBlocks + '[^>]*>)\\\\s*<br />', 'g' ),\n\t\t'$1'\n\t);\n\n\t// If a <br /> tag is before a subset of opening or closing block tags, remove it.\n\ttext = text.replace(\n\t\t/<br \\/>(\\s*<\\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/g,\n\t\t'$1'\n\t);\n\ttext = text.replace( /\\n<\\/p>$/g, '</p>' );\n\n\t// Replace placeholder <pre> tags with their original content.\n\tpreTags.forEach( ( preTag ) => {\n\t\tconst [ name, original ] = preTag;\n\t\ttext = text.replace( name, original );\n\t} );\n\n\t// Restore newlines in all elements.\n\tif ( -1 !== text.indexOf( '<!-- wpnl -->' ) ) {\n\t\ttext = text.replace( /\\s?<!-- wpnl -->\\s?/g, '\\n' );\n\t}\n\n\treturn text;\n}\n\n/**\n * Replaces `<p>` tags with two line breaks. \"Opposite\" of autop().\n *\n * Replaces `<p>` tags with two line breaks except where the `<p>` has attributes.\n * Unifies whitespace. Indents `<li>`, `<dt>` and `<dd>` for better readability.\n *\n * @param html The content from the editor.\n *\n * @example\n * ```js\n * import { removep } from '@wordpress/autop';\n * removep( '<p>my text</p>' ); // \"my text\"\n * ```\n *\n * @return The content with stripped paragraph tags.\n */\nexport function removep( html: string ): string {\n\tconst blocklist =\n\t\t'blockquote|ul|ol|li|dl|dt|dd|table|thead|tbody|tfoot|tr|th|td|h[1-6]|fieldset|figure';\n\tconst blocklist1 = blocklist + '|div|p';\n\tconst blocklist2 = blocklist + '|pre';\n\tconst preserve: string[] = [];\n\tlet preserveLinebreaks = false;\n\tlet preserveBr = false;\n\n\tif ( ! html ) {\n\t\treturn '';\n\t}\n\n\t// Protect script and style tags.\n\tif ( html.indexOf( '<script' ) !== -1 || html.indexOf( '<style' ) !== -1 ) {\n\t\thtml = html.replace(\n\t\t\t/<(script|style)[^>]*>[\\s\\S]*?<\\/\\1>/g,\n\t\t\t( match ) => {\n\t\t\t\tpreserve.push( match );\n\t\t\t\treturn '<wp-preserve>';\n\t\t\t}\n\t\t);\n\t}\n\n\t// Protect pre tags.\n\tif ( html.indexOf( '<pre' ) !== -1 ) {\n\t\tpreserveLinebreaks = true;\n\t\thtml = html.replace( /<pre[^>]*>[\\s\\S]+?<\\/pre>/g, ( a ) => {\n\t\t\ta = a.replace( /<br ?\\/?>(\\r\\n|\\n)?/g, '<wp-line-break>' );\n\t\t\ta = a.replace( /<\\/?p( [^>]*)?>(\\r\\n|\\n)?/g, '<wp-line-break>' );\n\t\t\treturn a.replace( /\\r?\\n/g, '<wp-line-break>' );\n\t\t} );\n\t}\n\n\t// Remove line breaks but keep <br> tags inside image captions.\n\tif ( html.indexOf( '[caption' ) !== -1 ) {\n\t\tpreserveBr = true;\n\t\thtml = html.replace( /\\[caption[\\s\\S]+?\\[\\/caption\\]/g, ( a ) => {\n\t\t\treturn a\n\t\t\t\t.replace( /<br([^>]*)>/g, '<wp-temp-br$1>' )\n\t\t\t\t.replace( /[\\r\\n\\t]+/, '' );\n\t\t} );\n\t}\n\n\t// Normalize white space characters before and after block tags.\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*</(' + blocklist1 + ')>\\\\s*', 'g' ),\n\t\t'</$1>\\n'\n\t);\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*<((?:' + blocklist1 + ')(?: [^>]*)?)>', 'g' ),\n\t\t'\\n<$1>'\n\t);\n\n\t// Mark </p> if it has any attributes.\n\thtml = html.replace( /(<p [^>]+>[\\s\\S]*?)<\\/p>/g, '$1</p#>' );\n\n\t// Preserve the first <p> inside a <div>.\n\thtml = html.replace( /<div( [^>]*)?>\\s*<p>/gi, '<div$1>\\n\\n' );\n\n\t// Remove paragraph tags.\n\thtml = html.replace( /\\s*<p>/gi, '' );\n\thtml = html.replace( /\\s*<\\/p>\\s*/gi, '\\n\\n' );\n\n\t// Normalize white space chars and remove multiple line breaks.\n\thtml = html.replace( /\\n[\\s\\u00a0]+\\n/g, '\\n\\n' );\n\n\t// Replace <br> tags with line breaks.\n\thtml = html.replace( /(\\s*)<br ?\\/?>\\s*/gi, ( _, space ) => {\n\t\tif ( space && space.indexOf( '\\n' ) !== -1 ) {\n\t\t\treturn '\\n\\n';\n\t\t}\n\n\t\treturn '\\n';\n\t} );\n\n\t// Fix line breaks around <div>.\n\thtml = html.replace( /\\s*<div/g, '\\n<div' );\n\thtml = html.replace( /<\\/div>\\s*/g, '</div>\\n' );\n\n\t// Fix line breaks around caption shortcodes.\n\thtml = html.replace(\n\t\t/\\s*\\[caption([^\\[]+)\\[\\/caption\\]\\s*/gi,\n\t\t'\\n\\n[caption$1[/caption]\\n\\n'\n\t);\n\thtml = html.replace( /caption\\]\\n\\n+\\[caption/g, 'caption]\\n\\n[caption' );\n\n\t// Pad block elements tags with a line break.\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*<((?:' + blocklist2 + ')(?: [^>]*)?)\\\\s*>', 'g' ),\n\t\t'\\n<$1>'\n\t);\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*</(' + blocklist2 + ')>\\\\s*', 'g' ),\n\t\t'</$1>\\n'\n\t);\n\n\t// Indent <li>, <dt> and <dd> tags.\n\thtml = html.replace( /<((li|dt|dd)[^>]*)>/g, ' \\t<$1>' );\n\n\t// Fix line breaks around <select> and <option>.\n\tif ( html.indexOf( '<option' ) !== -1 ) {\n\t\thtml = html.replace( /\\s*<option/g, '\\n<option' );\n\t\thtml = html.replace( /\\s*<\\/select>/g, '\\n</select>' );\n\t}\n\n\t// Pad <hr> with two line breaks.\n\tif ( html.indexOf( '<hr' ) !== -1 ) {\n\t\thtml = html.replace( /\\s*<hr( [^>]*)?>\\s*/g, '\\n\\n<hr$1>\\n\\n' );\n\t}\n\n\t// Remove line breaks in <object> tags.\n\tif ( html.indexOf( '<object' ) !== -1 ) {\n\t\thtml = html.replace( /<object[\\s\\S]+?<\\/object>/g, ( a ) => {\n\t\t\treturn a.replace( /[\\r\\n]+/g, '' );\n\t\t} );\n\t}\n\n\t// Unmark special paragraph closing tags.\n\thtml = html.replace( /<\\/p#>/g, '</p>\\n' );\n\n\t// Pad remaining <p> tags whit a line break.\n\thtml = html.replace( /\\s*(<p [^>]+>[\\s\\S]*?<\\/p>)/g, '\\n$1' );\n\n\t// Trim.\n\thtml = html.replace( /^\\s+/, '' );\n\thtml = html.replace( /[\\s\\u00a0]+$/, '' );\n\n\tif ( preserveLinebreaks ) {\n\t\thtml = html.replace( /<wp-line-break>/g, '\\n' );\n\t}\n\n\tif ( preserveBr ) {\n\t\thtml = html.replace( /<wp-temp-br([^>]*)>/g, '<br$1>' );\n\t}\n\n\t// Restore preserved tags.\n\tif ( preserve.length ) {\n\t\thtml = html.replace( /<wp-preserve>/g, () => {\n\t\t\treturn preserve.shift() as string;\n\t\t} );\n\t}\n\n\treturn html;\n}\n", "/**\n * Internal dependencies\n */\nimport { getCommentDelimitedContent } from '../serializer';\n\n/**\n * @typedef {Object}   Options                   Serialization options.\n * @property {boolean} [isCommentDelimited=true] Whether to output HTML comments around blocks.\n */\n\n/** @typedef {import(\"./\").WPRawBlock} WPRawBlock */\n\n/**\n * Serializes a block node into the native HTML-comment-powered block format.\n * CAVEAT: This function is intended for re-serializing blocks as parsed by\n * valid parsers and skips any validation steps. This is NOT a generic\n * serialization function for in-memory blocks. For most purposes, see the\n * following functions available in the `@wordpress/blocks` package:\n *\n * @see serializeBlock\n * @see serialize\n *\n * For more on the format of block nodes as returned by valid parsers:\n *\n * @see `@wordpress/block-serialization-default-parser` package\n * @see `@wordpress/block-serialization-spec-parser` package\n *\n * @param {WPRawBlock} rawBlock     A block node as returned by a valid parser.\n * @param {Options}    [options={}] Serialization options.\n *\n * @return {string} An HTML string representing a block.\n */\nexport function serializeRawBlock( rawBlock, options = {} ) {\n\tconst { isCommentDelimited = true } = options;\n\tconst {\n\t\tblockName,\n\t\tattrs = {},\n\t\tinnerBlocks = [],\n\t\tinnerContent = [],\n\t} = rawBlock;\n\n\tlet childIndex = 0;\n\tconst content = innerContent\n\t\t.map( ( item ) =>\n\t\t\t// `null` denotes a nested block, otherwise we have an HTML fragment.\n\t\t\titem !== null\n\t\t\t\t? item\n\t\t\t\t: serializeRawBlock( innerBlocks[ childIndex++ ], options )\n\t\t)\n\t\t.join( '\\n' )\n\t\t.replace( /\\n+/g, '\\n' )\n\t\t.trim();\n\n\treturn isCommentDelimited\n\t\t? getCommentDelimitedContent( blockName, attrs, content )\n\t\t: content;\n}\n", "/**\n * WordPress dependencies\n */\nimport {\n\tComponent,\n\tcloneElement,\n\trenderToString,\n\tRawHTML,\n} from '@wordpress/element';\nimport { hasFilter, applyFilters } from '@wordpress/hooks';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport { removep } from '@wordpress/autop';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetBlockType,\n\tgetFreeformContentHandlerName,\n\tgetUnregisteredTypeHandlerName,\n} from './registration';\nimport { serializeRawBlock } from './parser/serialize-raw-block';\nimport { isUnmodifiedDefaultBlock, normalizeBlockType } from './utils';\n\n/** @typedef {import('./parser').WPBlock} WPBlock */\n\n/**\n * @typedef {Object} WPBlockSerializationOptions Serialization Options.\n *\n * @property {boolean} isInnerBlocks Whether we are serializing inner blocks.\n */\n\n/**\n * Returns the block's default classname from its name.\n *\n * @param {string} blockName The block name.\n *\n * @return {string} The block's default class.\n */\nexport function getBlockDefaultClassName( blockName ) {\n\t// Generated HTML classes for blocks follow the `wp-block-{name}` nomenclature.\n\t// Blocks provided by WordPress drop the prefixes 'core/' or 'core-' (historically used in 'core-embed/').\n\tconst className =\n\t\t'wp-block-' + blockName.replace( /\\//, '-' ).replace( /^core-/, '' );\n\n\treturn applyFilters(\n\t\t'blocks.getBlockDefaultClassName',\n\t\tclassName,\n\t\tblockName\n\t);\n}\n\n/**\n * Returns the block's default menu item classname from its name.\n *\n * @param {string} blockName The block name.\n *\n * @return {string} The block's default menu item class.\n */\nexport function getBlockMenuDefaultClassName( blockName ) {\n\t// Generated HTML classes for blocks follow the `editor-block-list-item-{name}` nomenclature.\n\t// Blocks provided by WordPress drop the prefixes 'core/' or 'core-' (historically used in 'core-embed/').\n\tconst className =\n\t\t'editor-block-list-item-' +\n\t\tblockName.replace( /\\//, '-' ).replace( /^core-/, '' );\n\n\treturn applyFilters(\n\t\t'blocks.getBlockMenuDefaultClassName',\n\t\tclassName,\n\t\tblockName\n\t);\n}\n\nconst blockPropsProvider = {};\nconst innerBlocksPropsProvider = {};\n\n/**\n * Call within a save function to get the props for the block wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nexport function getBlockProps( props = {} ) {\n\tconst { blockType, attributes } = blockPropsProvider;\n\treturn getBlockProps.skipFilters\n\t\t? props\n\t\t: applyFilters(\n\t\t\t\t'blocks.getSaveContent.extraProps',\n\t\t\t\t{ ...props },\n\t\t\t\tblockType,\n\t\t\t\tattributes\n\t\t  );\n}\n\n/**\n * Call within a save function to get the props for the inner blocks wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nexport function getInnerBlocksProps( props = {} ) {\n\tconst { innerBlocks } = innerBlocksPropsProvider;\n\t// Allow a different component to be passed to getSaveElement to handle\n\t// inner blocks, bypassing the default serialisation.\n\tif ( ! Array.isArray( innerBlocks ) ) {\n\t\treturn { ...props, children: innerBlocks };\n\t}\n\t// Value is an array of blocks, so defer to block serializer.\n\tconst html = serialize( innerBlocks, { isInnerBlocks: true } );\n\t// Use special-cased raw HTML tag to avoid default escaping.\n\tconst children = <RawHTML>{ html }</RawHTML>;\n\n\treturn { ...props, children };\n}\n\n/**\n * Given a block type containing a save render implementation and attributes, returns the\n * enhanced element to be saved or string when raw HTML expected.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n * @param {Object}        attributes      Block attributes.\n * @param {?Array}        innerBlocks     Nested blocks.\n *\n * @return {Object|string} Save element or raw HTML string.\n */\nexport function getSaveElement(\n\tblockTypeOrName,\n\tattributes,\n\tinnerBlocks = []\n) {\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\n\tif ( ! blockType?.save ) {\n\t\treturn null;\n\t}\n\n\tlet { save } = blockType;\n\n\t// Component classes are unsupported for save since serialization must\n\t// occur synchronously. For improved interoperability with higher-order\n\t// components which often return component class, emulate basic support.\n\tif ( save.prototype instanceof Component ) {\n\t\tconst instance = new save( { attributes } );\n\t\tsave = instance.render.bind( instance );\n\t}\n\n\tblockPropsProvider.blockType = blockType;\n\tblockPropsProvider.attributes = attributes;\n\tinnerBlocksPropsProvider.innerBlocks = innerBlocks;\n\n\tlet element = save( { attributes, innerBlocks } );\n\n\tif (\n\t\telement !== null &&\n\t\ttypeof element === 'object' &&\n\t\thasFilter( 'blocks.getSaveContent.extraProps' ) &&\n\t\t! ( blockType.apiVersion > 1 )\n\t) {\n\t\t/**\n\t\t * Filters the props applied to the block save result element.\n\t\t *\n\t\t * @param {Object}  props      Props applied to save element.\n\t\t * @param {WPBlock} blockType  Block type definition.\n\t\t * @param {Object}  attributes Block attributes.\n\t\t */\n\t\tconst props = applyFilters(\n\t\t\t'blocks.getSaveContent.extraProps',\n\t\t\t{ ...element.props },\n\t\t\tblockType,\n\t\t\tattributes\n\t\t);\n\n\t\tif ( ! isShallowEqual( props, element.props ) ) {\n\t\t\telement = cloneElement( element, props );\n\t\t}\n\t}\n\n\t/**\n\t * Filters the save result of a block during serialization.\n\t *\n\t * @param {Element} element    Block save result.\n\t * @param {WPBlock} blockType  Block type definition.\n\t * @param {Object}  attributes Block attributes.\n\t */\n\treturn applyFilters(\n\t\t'blocks.getSaveElement',\n\t\telement,\n\t\tblockType,\n\t\tattributes\n\t);\n}\n\n/**\n * Given a block type containing a save render implementation and attributes, returns the\n * static markup to be saved.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n * @param {Object}        attributes      Block attributes.\n * @param {?Array}        innerBlocks     Nested blocks.\n *\n * @return {string} Save content.\n */\nexport function getSaveContent( blockTypeOrName, attributes, innerBlocks ) {\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\n\treturn renderToString(\n\t\tgetSaveElement( blockType, attributes, innerBlocks )\n\t);\n}\n\n/**\n * Returns attributes which are to be saved and serialized into the block\n * comment delimiter.\n *\n * When a block exists in memory it contains as its attributes both those\n * parsed the block comment delimiter _and_ those which matched from the\n * contents of the block.\n *\n * This function returns only those attributes which are needed to persist and\n * which cannot be matched from the block content.\n *\n * @param {Object<string,*>} blockType  Block type.\n * @param {Object<string,*>} attributes Attributes from in-memory block data.\n *\n * @return {Object<string,*>} Subset of attributes for comment serialization.\n */\nexport function getCommentAttributes( blockType, attributes ) {\n\treturn Object.entries( blockType.attributes ?? {} ).reduce(\n\t\t( accumulator, [ key, attributeSchema ] ) => {\n\t\t\tconst value = attributes[ key ];\n\t\t\t// Ignore undefined values.\n\t\t\tif ( undefined === value ) {\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\t// Ignore all attributes but the ones with an \"undefined\" source\n\t\t\t// \"undefined\" source refers to attributes saved in the block comment.\n\t\t\tif ( attributeSchema.source !== undefined ) {\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\t// Ignore all local attributes\n\t\t\tif ( attributeSchema.role === 'local' ) {\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\tif ( attributeSchema.__experimentalRole === 'local' ) {\n\t\t\t\tdeprecated( '__experimentalRole attribute', {\n\t\t\t\t\tsince: '6.7',\n\t\t\t\t\tversion: '6.8',\n\t\t\t\t\talternative: 'role attribute',\n\t\t\t\t\thint: `Check the block.json of the ${ blockType?.name } block.`,\n\t\t\t\t} );\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\t// Ignore default value.\n\t\t\tif (\n\t\t\t\t'default' in attributeSchema &&\n\t\t\t\tJSON.stringify( attributeSchema.default ) ===\n\t\t\t\t\tJSON.stringify( value )\n\t\t\t) {\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\t// Otherwise, include in comment set.\n\t\t\taccumulator[ key ] = value;\n\t\t\treturn accumulator;\n\t\t},\n\t\t{}\n\t);\n}\n\n/**\n * Given an attributes object, returns a string in the serialized attributes\n * format prepared for post content.\n *\n * @param {Object} attributes Attributes object.\n *\n * @return {string} Serialized attributes.\n */\nexport function serializeAttributes( attributes ) {\n\treturn (\n\t\tJSON.stringify( attributes )\n\t\t\t// Don't break HTML comments.\n\t\t\t.replace( /--/g, '\\\\u002d\\\\u002d' )\n\n\t\t\t// Don't break non-standard-compliant tools.\n\t\t\t.replace( /</g, '\\\\u003c' )\n\t\t\t.replace( />/g, '\\\\u003e' )\n\t\t\t.replace( /&/g, '\\\\u0026' )\n\n\t\t\t// Bypass server stripslashes behavior which would unescape stringify's\n\t\t\t// escaping of quotation mark.\n\t\t\t//\n\t\t\t// See: https://developer.wordpress.org/reference/functions/wp_kses_stripslashes/\n\t\t\t.replace( /\\\\\"/g, '\\\\u0022' )\n\t);\n}\n\n/**\n * Given a block object, returns the Block's Inner HTML markup.\n *\n * @param {Object} block Block instance.\n *\n * @return {string} HTML.\n */\nexport function getBlockInnerHTML( block ) {\n\t// If block was parsed as invalid or encounters an error while generating\n\t// save content, use original content instead to avoid content loss. If a\n\t// block contains nested content, exempt it from this condition because we\n\t// otherwise have no access to its original content and content loss would\n\t// still occur.\n\tlet saveContent = block.originalContent;\n\tif ( block.isValid || block.innerBlocks.length ) {\n\t\ttry {\n\t\t\tsaveContent = getSaveContent(\n\t\t\t\tblock.name,\n\t\t\t\tblock.attributes,\n\t\t\t\tblock.innerBlocks\n\t\t\t);\n\t\t} catch ( error ) {}\n\t}\n\n\treturn saveContent;\n}\n\n/**\n * Returns the content of a block, including comment delimiters.\n *\n * @param {string} rawBlockName Block name.\n * @param {Object} attributes   Block attributes.\n * @param {string} content      Block save content.\n *\n * @return {string} Comment-delimited block content.\n */\nexport function getCommentDelimitedContent(\n\trawBlockName,\n\tattributes,\n\tcontent\n) {\n\tconst serializedAttributes =\n\t\tattributes && Object.entries( attributes ).length\n\t\t\t? serializeAttributes( attributes ) + ' '\n\t\t\t: '';\n\n\t// Strip core blocks of their namespace prefix.\n\tconst blockName = rawBlockName?.startsWith( 'core/' )\n\t\t? rawBlockName.slice( 5 )\n\t\t: rawBlockName;\n\n\t// @todo make the `wp:` prefix potentially configurable.\n\n\tif ( ! content ) {\n\t\treturn `<!-- wp:${ blockName } ${ serializedAttributes }/-->`;\n\t}\n\n\treturn (\n\t\t`<!-- wp:${ blockName } ${ serializedAttributes }-->\\n` +\n\t\tcontent +\n\t\t`\\n<!-- /wp:${ blockName } -->`\n\t);\n}\n\n/**\n * Returns the content of a block, including comment delimiters, determining\n * serialized attributes and content form from the current state of the block.\n *\n * @param {WPBlock}                     block   Block instance.\n * @param {WPBlockSerializationOptions} options Serialization options.\n *\n * @return {string} Serialized block.\n */\nexport function serializeBlock( block, { isInnerBlocks = false } = {} ) {\n\tif ( ! block.isValid && block.__unstableBlockSource ) {\n\t\treturn serializeRawBlock( block.__unstableBlockSource );\n\t}\n\n\tconst blockName = block.name;\n\tconst saveContent = getBlockInnerHTML( block );\n\n\tif (\n\t\tblockName === getUnregisteredTypeHandlerName() ||\n\t\t( ! isInnerBlocks && blockName === getFreeformContentHandlerName() )\n\t) {\n\t\treturn saveContent;\n\t}\n\n\tconst blockType = getBlockType( blockName );\n\tif ( ! blockType ) {\n\t\treturn saveContent;\n\t}\n\n\tconst saveAttributes = getCommentAttributes( blockType, block.attributes );\n\treturn getCommentDelimitedContent( blockName, saveAttributes, saveContent );\n}\n\nexport function __unstableSerializeAndClean( blocks ) {\n\t// A single unmodified default block is assumed to\n\t// be equivalent to an empty post.\n\tif ( blocks.length === 1 && isUnmodifiedDefaultBlock( blocks[ 0 ] ) ) {\n\t\tblocks = [];\n\t}\n\n\tlet content = serialize( blocks );\n\n\t// For compatibility, treat a post consisting of a\n\t// single freeform block as legacy content and apply\n\t// pre-block-editor removep'd content formatting.\n\tif (\n\t\tblocks.length === 1 &&\n\t\tblocks[ 0 ].name === getFreeformContentHandlerName() &&\n\t\tblocks[ 0 ].name === 'core/freeform'\n\t) {\n\t\tcontent = removep( content );\n\t}\n\n\treturn content;\n}\n\n/**\n * Takes a block or set of blocks and returns the serialized post content.\n *\n * @param {Array}                       blocks  Block(s) to serialize.\n * @param {WPBlockSerializationOptions} options Serialization options.\n *\n * @return {string} The post content.\n */\nexport default function serialize( blocks, options ) {\n\tconst blocksArray = Array.isArray( blocks ) ? blocks : [ blocks ];\n\treturn blocksArray\n\t\t.map( ( block ) => serializeBlock( block, options ) )\n\t\t.join( '\\n\\n' );\n}\n", "/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nexport default {\nAacute:\"Á\",aacute:\"á\",Abreve:\"Ă\",abreve:\"ă\",ac:\"∾\",acd:\"∿\",acE:\"∾̳\",Acirc:\"Â\",acirc:\"â\",acute:\"´\",Acy:\"А\",acy:\"а\",AElig:\"Æ\",aelig:\"æ\",af:\"\\u2061\",Afr:\"𝔄\",afr:\"𝔞\",Agrave:\"À\",agrave:\"à\",alefsym:\"ℵ\",aleph:\"ℵ\",Alpha:\"Α\",alpha:\"α\",Amacr:\"Ā\",amacr:\"ā\",amalg:\"⨿\",amp:\"&\",AMP:\"&\",andand:\"⩕\",And:\"⩓\",and:\"∧\",andd:\"⩜\",andslope:\"⩘\",andv:\"⩚\",ang:\"∠\",ange:\"⦤\",angle:\"∠\",angmsdaa:\"⦨\",angmsdab:\"⦩\",angmsdac:\"⦪\",angmsdad:\"⦫\",angmsdae:\"⦬\",angmsdaf:\"⦭\",angmsdag:\"⦮\",angmsdah:\"⦯\",angmsd:\"∡\",angrt:\"∟\",angrtvb:\"⊾\",angrtvbd:\"⦝\",angsph:\"∢\",angst:\"Å\",angzarr:\"⍼\",Aogon:\"Ą\",aogon:\"ą\",Aopf:\"𝔸\",aopf:\"𝕒\",apacir:\"⩯\",ap:\"≈\",apE:\"⩰\",ape:\"≊\",apid:\"≋\",apos:\"'\",ApplyFunction:\"\\u2061\",approx:\"≈\",approxeq:\"≊\",Aring:\"Å\",aring:\"å\",Ascr:\"𝒜\",ascr:\"𝒶\",Assign:\"≔\",ast:\"*\",asymp:\"≈\",asympeq:\"≍\",Atilde:\"Ã\",atilde:\"ã\",Auml:\"Ä\",auml:\"ä\",awconint:\"∳\",awint:\"⨑\",backcong:\"≌\",backepsilon:\"϶\",backprime:\"‵\",backsim:\"∽\",backsimeq:\"⋍\",Backslash:\"∖\",Barv:\"⫧\",barvee:\"⊽\",barwed:\"⌅\",Barwed:\"⌆\",barwedge:\"⌅\",bbrk:\"⎵\",bbrktbrk:\"⎶\",bcong:\"≌\",Bcy:\"Б\",bcy:\"б\",bdquo:\"„\",becaus:\"∵\",because:\"∵\",Because:\"∵\",bemptyv:\"⦰\",bepsi:\"϶\",bernou:\"ℬ\",Bernoullis:\"ℬ\",Beta:\"Β\",beta:\"β\",beth:\"ℶ\",between:\"≬\",Bfr:\"𝔅\",bfr:\"𝔟\",bigcap:\"⋂\",bigcirc:\"◯\",bigcup:\"⋃\",bigodot:\"⨀\",bigoplus:\"⨁\",bigotimes:\"⨂\",bigsqcup:\"⨆\",bigstar:\"★\",bigtriangledown:\"▽\",bigtriangleup:\"△\",biguplus:\"⨄\",bigvee:\"⋁\",bigwedge:\"⋀\",bkarow:\"⤍\",blacklozenge:\"⧫\",blacksquare:\"▪\",blacktriangle:\"▴\",blacktriangledown:\"▾\",blacktriangleleft:\"◂\",blacktriangleright:\"▸\",blank:\"␣\",blk12:\"▒\",blk14:\"░\",blk34:\"▓\",block:\"█\",bne:\"=⃥\",bnequiv:\"≡⃥\",bNot:\"⫭\",bnot:\"⌐\",Bopf:\"𝔹\",bopf:\"𝕓\",bot:\"⊥\",bottom:\"⊥\",bowtie:\"⋈\",boxbox:\"⧉\",boxdl:\"┐\",boxdL:\"╕\",boxDl:\"╖\",boxDL:\"╗\",boxdr:\"┌\",boxdR:\"╒\",boxDr:\"╓\",boxDR:\"╔\",boxh:\"─\",boxH:\"═\",boxhd:\"┬\",boxHd:\"╤\",boxhD:\"╥\",boxHD:\"╦\",boxhu:\"┴\",boxHu:\"╧\",boxhU:\"╨\",boxHU:\"╩\",boxminus:\"⊟\",boxplus:\"⊞\",boxtimes:\"⊠\",boxul:\"┘\",boxuL:\"╛\",boxUl:\"╜\",boxUL:\"╝\",boxur:\"└\",boxuR:\"╘\",boxUr:\"╙\",boxUR:\"╚\",boxv:\"│\",boxV:\"║\",boxvh:\"┼\",boxvH:\"╪\",boxVh:\"╫\",boxVH:\"╬\",boxvl:\"┤\",boxvL:\"╡\",boxVl:\"╢\",boxVL:\"╣\",boxvr:\"├\",boxvR:\"╞\",boxVr:\"╟\",boxVR:\"╠\",bprime:\"‵\",breve:\"˘\",Breve:\"˘\",brvbar:\"¦\",bscr:\"𝒷\",Bscr:\"ℬ\",bsemi:\"⁏\",bsim:\"∽\",bsime:\"⋍\",bsolb:\"⧅\",bsol:\"\\\\\",bsolhsub:\"⟈\",bull:\"•\",bullet:\"•\",bump:\"≎\",bumpE:\"⪮\",bumpe:\"≏\",Bumpeq:\"≎\",bumpeq:\"≏\",Cacute:\"Ć\",cacute:\"ć\",capand:\"⩄\",capbrcup:\"⩉\",capcap:\"⩋\",cap:\"∩\",Cap:\"⋒\",capcup:\"⩇\",capdot:\"⩀\",CapitalDifferentialD:\"ⅅ\",caps:\"∩︀\",caret:\"⁁\",caron:\"ˇ\",Cayleys:\"ℭ\",ccaps:\"⩍\",Ccaron:\"Č\",ccaron:\"č\",Ccedil:\"Ç\",ccedil:\"ç\",Ccirc:\"Ĉ\",ccirc:\"ĉ\",Cconint:\"∰\",ccups:\"⩌\",ccupssm:\"⩐\",Cdot:\"Ċ\",cdot:\"ċ\",cedil:\"¸\",Cedilla:\"¸\",cemptyv:\"⦲\",cent:\"¢\",centerdot:\"·\",CenterDot:\"·\",cfr:\"𝔠\",Cfr:\"ℭ\",CHcy:\"Ч\",chcy:\"ч\",check:\"✓\",checkmark:\"✓\",Chi:\"Χ\",chi:\"χ\",circ:\"ˆ\",circeq:\"≗\",circlearrowleft:\"↺\",circlearrowright:\"↻\",circledast:\"⊛\",circledcirc:\"⊚\",circleddash:\"⊝\",CircleDot:\"⊙\",circledR:\"®\",circledS:\"Ⓢ\",CircleMinus:\"⊖\",CirclePlus:\"⊕\",CircleTimes:\"⊗\",cir:\"○\",cirE:\"⧃\",cire:\"≗\",cirfnint:\"⨐\",cirmid:\"⫯\",cirscir:\"⧂\",ClockwiseContourIntegral:\"∲\",CloseCurlyDoubleQuote:\"”\",CloseCurlyQuote:\"’\",clubs:\"♣\",clubsuit:\"♣\",colon:\":\",Colon:\"∷\",Colone:\"⩴\",colone:\"≔\",coloneq:\"≔\",comma:\",\",commat:\"@\",comp:\"∁\",compfn:\"∘\",complement:\"∁\",complexes:\"ℂ\",cong:\"≅\",congdot:\"⩭\",Congruent:\"≡\",conint:\"∮\",Conint:\"∯\",ContourIntegral:\"∮\",copf:\"𝕔\",Copf:\"ℂ\",coprod:\"∐\",Coproduct:\"∐\",copy:\"©\",COPY:\"©\",copysr:\"℗\",CounterClockwiseContourIntegral:\"∳\",crarr:\"↵\",cross:\"✗\",Cross:\"⨯\",Cscr:\"𝒞\",cscr:\"𝒸\",csub:\"⫏\",csube:\"⫑\",csup:\"⫐\",csupe:\"⫒\",ctdot:\"⋯\",cudarrl:\"⤸\",cudarrr:\"⤵\",cuepr:\"⋞\",cuesc:\"⋟\",cularr:\"↶\",cularrp:\"⤽\",cupbrcap:\"⩈\",cupcap:\"⩆\",CupCap:\"≍\",cup:\"∪\",Cup:\"⋓\",cupcup:\"⩊\",cupdot:\"⊍\",cupor:\"⩅\",cups:\"∪︀\",curarr:\"↷\",curarrm:\"⤼\",curlyeqprec:\"⋞\",curlyeqsucc:\"⋟\",curlyvee:\"⋎\",curlywedge:\"⋏\",curren:\"¤\",curvearrowleft:\"↶\",curvearrowright:\"↷\",cuvee:\"⋎\",cuwed:\"⋏\",cwconint:\"∲\",cwint:\"∱\",cylcty:\"⌭\",dagger:\"†\",Dagger:\"‡\",daleth:\"ℸ\",darr:\"↓\",Darr:\"↡\",dArr:\"⇓\",dash:\"‐\",Dashv:\"⫤\",dashv:\"⊣\",dbkarow:\"⤏\",dblac:\"˝\",Dcaron:\"Ď\",dcaron:\"ď\",Dcy:\"Д\",dcy:\"д\",ddagger:\"‡\",ddarr:\"⇊\",DD:\"ⅅ\",dd:\"ⅆ\",DDotrahd:\"⤑\",ddotseq:\"⩷\",deg:\"°\",Del:\"∇\",Delta:\"Δ\",delta:\"δ\",demptyv:\"⦱\",dfisht:\"⥿\",Dfr:\"𝔇\",dfr:\"𝔡\",dHar:\"⥥\",dharl:\"⇃\",dharr:\"⇂\",DiacriticalAcute:\"´\",DiacriticalDot:\"˙\",DiacriticalDoubleAcute:\"˝\",DiacriticalGrave:\"`\",DiacriticalTilde:\"˜\",diam:\"⋄\",diamond:\"⋄\",Diamond:\"⋄\",diamondsuit:\"♦\",diams:\"♦\",die:\"¨\",DifferentialD:\"ⅆ\",digamma:\"ϝ\",disin:\"⋲\",div:\"÷\",divide:\"÷\",divideontimes:\"⋇\",divonx:\"⋇\",DJcy:\"Ђ\",djcy:\"ђ\",dlcorn:\"⌞\",dlcrop:\"⌍\",dollar:\"$\",Dopf:\"𝔻\",dopf:\"𝕕\",Dot:\"¨\",dot:\"˙\",DotDot:\"⃜\",doteq:\"≐\",doteqdot:\"≑\",DotEqual:\"≐\",dotminus:\"∸\",dotplus:\"∔\",dotsquare:\"⊡\",doublebarwedge:\"⌆\",DoubleContourIntegral:\"∯\",DoubleDot:\"¨\",DoubleDownArrow:\"⇓\",DoubleLeftArrow:\"⇐\",DoubleLeftRightArrow:\"⇔\",DoubleLeftTee:\"⫤\",DoubleLongLeftArrow:\"⟸\",DoubleLongLeftRightArrow:\"⟺\",DoubleLongRightArrow:\"⟹\",DoubleRightArrow:\"⇒\",DoubleRightTee:\"⊨\",DoubleUpArrow:\"⇑\",DoubleUpDownArrow:\"⇕\",DoubleVerticalBar:\"∥\",DownArrowBar:\"⤓\",downarrow:\"↓\",DownArrow:\"↓\",Downarrow:\"⇓\",DownArrowUpArrow:\"⇵\",DownBreve:\"̑\",downdownarrows:\"⇊\",downharpoonleft:\"⇃\",downharpoonright:\"⇂\",DownLeftRightVector:\"⥐\",DownLeftTeeVector:\"⥞\",DownLeftVectorBar:\"⥖\",DownLeftVector:\"↽\",DownRightTeeVector:\"⥟\",DownRightVectorBar:\"⥗\",DownRightVector:\"⇁\",DownTeeArrow:\"↧\",DownTee:\"⊤\",drbkarow:\"⤐\",drcorn:\"⌟\",drcrop:\"⌌\",Dscr:\"𝒟\",dscr:\"𝒹\",DScy:\"Ѕ\",dscy:\"ѕ\",dsol:\"⧶\",Dstrok:\"Đ\",dstrok:\"đ\",dtdot:\"⋱\",dtri:\"▿\",dtrif:\"▾\",duarr:\"⇵\",duhar:\"⥯\",dwangle:\"⦦\",DZcy:\"Џ\",dzcy:\"џ\",dzigrarr:\"⟿\",Eacute:\"É\",eacute:\"é\",easter:\"⩮\",Ecaron:\"Ě\",ecaron:\"ě\",Ecirc:\"Ê\",ecirc:\"ê\",ecir:\"≖\",ecolon:\"≕\",Ecy:\"Э\",ecy:\"э\",eDDot:\"⩷\",Edot:\"Ė\",edot:\"ė\",eDot:\"≑\",ee:\"ⅇ\",efDot:\"≒\",Efr:\"𝔈\",efr:\"𝔢\",eg:\"⪚\",Egrave:\"È\",egrave:\"è\",egs:\"⪖\",egsdot:\"⪘\",el:\"⪙\",Element:\"∈\",elinters:\"⏧\",ell:\"ℓ\",els:\"⪕\",elsdot:\"⪗\",Emacr:\"Ē\",emacr:\"ē\",empty:\"∅\",emptyset:\"∅\",EmptySmallSquare:\"◻\",emptyv:\"∅\",EmptyVerySmallSquare:\"▫\",emsp13:\" \",emsp14:\" \",emsp:\" \",ENG:\"Ŋ\",eng:\"ŋ\",ensp:\" \",Eogon:\"Ę\",eogon:\"ę\",Eopf:\"𝔼\",eopf:\"𝕖\",epar:\"⋕\",eparsl:\"⧣\",eplus:\"⩱\",epsi:\"ε\",Epsilon:\"Ε\",epsilon:\"ε\",epsiv:\"ϵ\",eqcirc:\"≖\",eqcolon:\"≕\",eqsim:\"≂\",eqslantgtr:\"⪖\",eqslantless:\"⪕\",Equal:\"⩵\",equals:\"=\",EqualTilde:\"≂\",equest:\"≟\",Equilibrium:\"⇌\",equiv:\"≡\",equivDD:\"⩸\",eqvparsl:\"⧥\",erarr:\"⥱\",erDot:\"≓\",escr:\"ℯ\",Escr:\"ℰ\",esdot:\"≐\",Esim:\"⩳\",esim:\"≂\",Eta:\"Η\",eta:\"η\",ETH:\"Ð\",eth:\"ð\",Euml:\"Ë\",euml:\"ë\",euro:\"€\",excl:\"!\",exist:\"∃\",Exists:\"∃\",expectation:\"ℰ\",exponentiale:\"ⅇ\",ExponentialE:\"ⅇ\",fallingdotseq:\"≒\",Fcy:\"Ф\",fcy:\"ф\",female:\"♀\",ffilig:\"ﬃ\",fflig:\"ﬀ\",ffllig:\"ﬄ\",Ffr:\"𝔉\",ffr:\"𝔣\",filig:\"ﬁ\",FilledSmallSquare:\"◼\",FilledVerySmallSquare:\"▪\",fjlig:\"fj\",flat:\"♭\",fllig:\"ﬂ\",fltns:\"▱\",fnof:\"ƒ\",Fopf:\"𝔽\",fopf:\"𝕗\",forall:\"∀\",ForAll:\"∀\",fork:\"⋔\",forkv:\"⫙\",Fouriertrf:\"ℱ\",fpartint:\"⨍\",frac12:\"½\",frac13:\"⅓\",frac14:\"¼\",frac15:\"⅕\",frac16:\"⅙\",frac18:\"⅛\",frac23:\"⅔\",frac25:\"⅖\",frac34:\"¾\",frac35:\"⅗\",frac38:\"⅜\",frac45:\"⅘\",frac56:\"⅚\",frac58:\"⅝\",frac78:\"⅞\",frasl:\"⁄\",frown:\"⌢\",fscr:\"𝒻\",Fscr:\"ℱ\",gacute:\"ǵ\",Gamma:\"Γ\",gamma:\"γ\",Gammad:\"Ϝ\",gammad:\"ϝ\",gap:\"⪆\",Gbreve:\"Ğ\",gbreve:\"ğ\",Gcedil:\"Ģ\",Gcirc:\"Ĝ\",gcirc:\"ĝ\",Gcy:\"Г\",gcy:\"г\",Gdot:\"Ġ\",gdot:\"ġ\",ge:\"≥\",gE:\"≧\",gEl:\"⪌\",gel:\"⋛\",geq:\"≥\",geqq:\"≧\",geqslant:\"⩾\",gescc:\"⪩\",ges:\"⩾\",gesdot:\"⪀\",gesdoto:\"⪂\",gesdotol:\"⪄\",gesl:\"⋛︀\",gesles:\"⪔\",Gfr:\"𝔊\",gfr:\"𝔤\",gg:\"≫\",Gg:\"⋙\",ggg:\"⋙\",gimel:\"ℷ\",GJcy:\"Ѓ\",gjcy:\"ѓ\",gla:\"⪥\",gl:\"≷\",glE:\"⪒\",glj:\"⪤\",gnap:\"⪊\",gnapprox:\"⪊\",gne:\"⪈\",gnE:\"≩\",gneq:\"⪈\",gneqq:\"≩\",gnsim:\"⋧\",Gopf:\"𝔾\",gopf:\"𝕘\",grave:\"`\",GreaterEqual:\"≥\",GreaterEqualLess:\"⋛\",GreaterFullEqual:\"≧\",GreaterGreater:\"⪢\",GreaterLess:\"≷\",GreaterSlantEqual:\"⩾\",GreaterTilde:\"≳\",Gscr:\"𝒢\",gscr:\"ℊ\",gsim:\"≳\",gsime:\"⪎\",gsiml:\"⪐\",gtcc:\"⪧\",gtcir:\"⩺\",gt:\">\",GT:\">\",Gt:\"≫\",gtdot:\"⋗\",gtlPar:\"⦕\",gtquest:\"⩼\",gtrapprox:\"⪆\",gtrarr:\"⥸\",gtrdot:\"⋗\",gtreqless:\"⋛\",gtreqqless:\"⪌\",gtrless:\"≷\",gtrsim:\"≳\",gvertneqq:\"≩︀\",gvnE:\"≩︀\",Hacek:\"ˇ\",hairsp:\" \",half:\"½\",hamilt:\"ℋ\",HARDcy:\"Ъ\",hardcy:\"ъ\",harrcir:\"⥈\",harr:\"↔\",hArr:\"⇔\",harrw:\"↭\",Hat:\"^\",hbar:\"ℏ\",Hcirc:\"Ĥ\",hcirc:\"ĥ\",hearts:\"♥\",heartsuit:\"♥\",hellip:\"…\",hercon:\"⊹\",hfr:\"𝔥\",Hfr:\"ℌ\",HilbertSpace:\"ℋ\",hksearow:\"⤥\",hkswarow:\"⤦\",hoarr:\"⇿\",homtht:\"∻\",hookleftarrow:\"↩\",hookrightarrow:\"↪\",hopf:\"𝕙\",Hopf:\"ℍ\",horbar:\"―\",HorizontalLine:\"─\",hscr:\"𝒽\",Hscr:\"ℋ\",hslash:\"ℏ\",Hstrok:\"Ħ\",hstrok:\"ħ\",HumpDownHump:\"≎\",HumpEqual:\"≏\",hybull:\"⁃\",hyphen:\"‐\",Iacute:\"Í\",iacute:\"í\",ic:\"\\u2063\",Icirc:\"Î\",icirc:\"î\",Icy:\"И\",icy:\"и\",Idot:\"İ\",IEcy:\"Е\",iecy:\"е\",iexcl:\"¡\",iff:\"⇔\",ifr:\"𝔦\",Ifr:\"ℑ\",Igrave:\"Ì\",igrave:\"ì\",ii:\"ⅈ\",iiiint:\"⨌\",iiint:\"∭\",iinfin:\"⧜\",iiota:\"℩\",IJlig:\"Ĳ\",ijlig:\"ĳ\",Imacr:\"Ī\",imacr:\"ī\",image:\"ℑ\",ImaginaryI:\"ⅈ\",imagline:\"ℐ\",imagpart:\"ℑ\",imath:\"ı\",Im:\"ℑ\",imof:\"⊷\",imped:\"Ƶ\",Implies:\"⇒\",incare:\"℅\",in:\"∈\",infin:\"∞\",infintie:\"⧝\",inodot:\"ı\",intcal:\"⊺\",int:\"∫\",Int:\"∬\",integers:\"ℤ\",Integral:\"∫\",intercal:\"⊺\",Intersection:\"⋂\",intlarhk:\"⨗\",intprod:\"⨼\",InvisibleComma:\"\\u2063\",InvisibleTimes:\"\\u2062\",IOcy:\"Ё\",iocy:\"ё\",Iogon:\"Į\",iogon:\"į\",Iopf:\"𝕀\",iopf:\"𝕚\",Iota:\"Ι\",iota:\"ι\",iprod:\"⨼\",iquest:\"¿\",iscr:\"𝒾\",Iscr:\"ℐ\",isin:\"∈\",isindot:\"⋵\",isinE:\"⋹\",isins:\"⋴\",isinsv:\"⋳\",isinv:\"∈\",it:\"\\u2062\",Itilde:\"Ĩ\",itilde:\"ĩ\",Iukcy:\"І\",iukcy:\"і\",Iuml:\"Ï\",iuml:\"ï\",Jcirc:\"Ĵ\",jcirc:\"ĵ\",Jcy:\"Й\",jcy:\"й\",Jfr:\"𝔍\",jfr:\"𝔧\",jmath:\"ȷ\",Jopf:\"𝕁\",jopf:\"𝕛\",Jscr:\"𝒥\",jscr:\"𝒿\",Jsercy:\"Ј\",jsercy:\"ј\",Jukcy:\"Є\",jukcy:\"є\",Kappa:\"Κ\",kappa:\"κ\",kappav:\"ϰ\",Kcedil:\"Ķ\",kcedil:\"ķ\",Kcy:\"К\",kcy:\"к\",Kfr:\"𝔎\",kfr:\"𝔨\",kgreen:\"ĸ\",KHcy:\"Х\",khcy:\"х\",KJcy:\"Ќ\",kjcy:\"ќ\",Kopf:\"𝕂\",kopf:\"𝕜\",Kscr:\"𝒦\",kscr:\"𝓀\",lAarr:\"⇚\",Lacute:\"Ĺ\",lacute:\"ĺ\",laemptyv:\"⦴\",lagran:\"ℒ\",Lambda:\"Λ\",lambda:\"λ\",lang:\"⟨\",Lang:\"⟪\",langd:\"⦑\",langle:\"⟨\",lap:\"⪅\",Laplacetrf:\"ℒ\",laquo:\"«\",larrb:\"⇤\",larrbfs:\"⤟\",larr:\"←\",Larr:\"↞\",lArr:\"⇐\",larrfs:\"⤝\",larrhk:\"↩\",larrlp:\"↫\",larrpl:\"⤹\",larrsim:\"⥳\",larrtl:\"↢\",latail:\"⤙\",lAtail:\"⤛\",lat:\"⪫\",late:\"⪭\",lates:\"⪭︀\",lbarr:\"⤌\",lBarr:\"⤎\",lbbrk:\"❲\",lbrace:\"{\",lbrack:\"[\",lbrke:\"⦋\",lbrksld:\"⦏\",lbrkslu:\"⦍\",Lcaron:\"Ľ\",lcaron:\"ľ\",Lcedil:\"Ļ\",lcedil:\"ļ\",lceil:\"⌈\",lcub:\"{\",Lcy:\"Л\",lcy:\"л\",ldca:\"⤶\",ldquo:\"“\",ldquor:\"„\",ldrdhar:\"⥧\",ldrushar:\"⥋\",ldsh:\"↲\",le:\"≤\",lE:\"≦\",LeftAngleBracket:\"⟨\",LeftArrowBar:\"⇤\",leftarrow:\"←\",LeftArrow:\"←\",Leftarrow:\"⇐\",LeftArrowRightArrow:\"⇆\",leftarrowtail:\"↢\",LeftCeiling:\"⌈\",LeftDoubleBracket:\"⟦\",LeftDownTeeVector:\"⥡\",LeftDownVectorBar:\"⥙\",LeftDownVector:\"⇃\",LeftFloor:\"⌊\",leftharpoondown:\"↽\",leftharpoonup:\"↼\",leftleftarrows:\"⇇\",leftrightarrow:\"↔\",LeftRightArrow:\"↔\",Leftrightarrow:\"⇔\",leftrightarrows:\"⇆\",leftrightharpoons:\"⇋\",leftrightsquigarrow:\"↭\",LeftRightVector:\"⥎\",LeftTeeArrow:\"↤\",LeftTee:\"⊣\",LeftTeeVector:\"⥚\",leftthreetimes:\"⋋\",LeftTriangleBar:\"⧏\",LeftTriangle:\"⊲\",LeftTriangleEqual:\"⊴\",LeftUpDownVector:\"⥑\",LeftUpTeeVector:\"⥠\",LeftUpVectorBar:\"⥘\",LeftUpVector:\"↿\",LeftVectorBar:\"⥒\",LeftVector:\"↼\",lEg:\"⪋\",leg:\"⋚\",leq:\"≤\",leqq:\"≦\",leqslant:\"⩽\",lescc:\"⪨\",les:\"⩽\",lesdot:\"⩿\",lesdoto:\"⪁\",lesdotor:\"⪃\",lesg:\"⋚︀\",lesges:\"⪓\",lessapprox:\"⪅\",lessdot:\"⋖\",lesseqgtr:\"⋚\",lesseqqgtr:\"⪋\",LessEqualGreater:\"⋚\",LessFullEqual:\"≦\",LessGreater:\"≶\",lessgtr:\"≶\",LessLess:\"⪡\",lesssim:\"≲\",LessSlantEqual:\"⩽\",LessTilde:\"≲\",lfisht:\"⥼\",lfloor:\"⌊\",Lfr:\"𝔏\",lfr:\"𝔩\",lg:\"≶\",lgE:\"⪑\",lHar:\"⥢\",lhard:\"↽\",lharu:\"↼\",lharul:\"⥪\",lhblk:\"▄\",LJcy:\"Љ\",ljcy:\"љ\",llarr:\"⇇\",ll:\"≪\",Ll:\"⋘\",llcorner:\"⌞\",Lleftarrow:\"⇚\",llhard:\"⥫\",lltri:\"◺\",Lmidot:\"Ŀ\",lmidot:\"ŀ\",lmoustache:\"⎰\",lmoust:\"⎰\",lnap:\"⪉\",lnapprox:\"⪉\",lne:\"⪇\",lnE:\"≨\",lneq:\"⪇\",lneqq:\"≨\",lnsim:\"⋦\",loang:\"⟬\",loarr:\"⇽\",lobrk:\"⟦\",longleftarrow:\"⟵\",LongLeftArrow:\"⟵\",Longleftarrow:\"⟸\",longleftrightarrow:\"⟷\",LongLeftRightArrow:\"⟷\",Longleftrightarrow:\"⟺\",longmapsto:\"⟼\",longrightarrow:\"⟶\",LongRightArrow:\"⟶\",Longrightarrow:\"⟹\",looparrowleft:\"↫\",looparrowright:\"↬\",lopar:\"⦅\",Lopf:\"𝕃\",lopf:\"𝕝\",loplus:\"⨭\",lotimes:\"⨴\",lowast:\"∗\",lowbar:\"_\",LowerLeftArrow:\"↙\",LowerRightArrow:\"↘\",loz:\"◊\",lozenge:\"◊\",lozf:\"⧫\",lpar:\"(\",lparlt:\"⦓\",lrarr:\"⇆\",lrcorner:\"⌟\",lrhar:\"⇋\",lrhard:\"⥭\",lrm:\"\\u200e\",lrtri:\"⊿\",lsaquo:\"‹\",lscr:\"𝓁\",Lscr:\"ℒ\",lsh:\"↰\",Lsh:\"↰\",lsim:\"≲\",lsime:\"⪍\",lsimg:\"⪏\",lsqb:\"[\",lsquo:\"‘\",lsquor:\"‚\",Lstrok:\"Ł\",lstrok:\"ł\",ltcc:\"⪦\",ltcir:\"⩹\",lt:\"<\",LT:\"<\",Lt:\"≪\",ltdot:\"⋖\",lthree:\"⋋\",ltimes:\"⋉\",ltlarr:\"⥶\",ltquest:\"⩻\",ltri:\"◃\",ltrie:\"⊴\",ltrif:\"◂\",ltrPar:\"⦖\",lurdshar:\"⥊\",luruhar:\"⥦\",lvertneqq:\"≨︀\",lvnE:\"≨︀\",macr:\"¯\",male:\"♂\",malt:\"✠\",maltese:\"✠\",Map:\"⤅\",map:\"↦\",mapsto:\"↦\",mapstodown:\"↧\",mapstoleft:\"↤\",mapstoup:\"↥\",marker:\"▮\",mcomma:\"⨩\",Mcy:\"М\",mcy:\"м\",mdash:\"—\",mDDot:\"∺\",measuredangle:\"∡\",MediumSpace:\" \",Mellintrf:\"ℳ\",Mfr:\"𝔐\",mfr:\"𝔪\",mho:\"℧\",micro:\"µ\",midast:\"*\",midcir:\"⫰\",mid:\"∣\",middot:\"·\",minusb:\"⊟\",minus:\"−\",minusd:\"∸\",minusdu:\"⨪\",MinusPlus:\"∓\",mlcp:\"⫛\",mldr:\"…\",mnplus:\"∓\",models:\"⊧\",Mopf:\"𝕄\",mopf:\"𝕞\",mp:\"∓\",mscr:\"𝓂\",Mscr:\"ℳ\",mstpos:\"∾\",Mu:\"Μ\",mu:\"μ\",multimap:\"⊸\",mumap:\"⊸\",nabla:\"∇\",Nacute:\"Ń\",nacute:\"ń\",nang:\"∠⃒\",nap:\"≉\",napE:\"⩰̸\",napid:\"≋̸\",napos:\"ŉ\",napprox:\"≉\",natural:\"♮\",naturals:\"ℕ\",natur:\"♮\",nbsp:\" \",nbump:\"≎̸\",nbumpe:\"≏̸\",ncap:\"⩃\",Ncaron:\"Ň\",ncaron:\"ň\",Ncedil:\"Ņ\",ncedil:\"ņ\",ncong:\"≇\",ncongdot:\"⩭̸\",ncup:\"⩂\",Ncy:\"Н\",ncy:\"н\",ndash:\"–\",nearhk:\"⤤\",nearr:\"↗\",neArr:\"⇗\",nearrow:\"↗\",ne:\"≠\",nedot:\"≐̸\",NegativeMediumSpace:\"​\",NegativeThickSpace:\"​\",NegativeThinSpace:\"​\",NegativeVeryThinSpace:\"​\",nequiv:\"≢\",nesear:\"⤨\",nesim:\"≂̸\",NestedGreaterGreater:\"≫\",NestedLessLess:\"≪\",NewLine:\"\\u000a\",nexist:\"∄\",nexists:\"∄\",Nfr:\"𝔑\",nfr:\"𝔫\",ngE:\"≧̸\",nge:\"≱\",ngeq:\"≱\",ngeqq:\"≧̸\",ngeqslant:\"⩾̸\",nges:\"⩾̸\",nGg:\"⋙̸\",ngsim:\"≵\",nGt:\"≫⃒\",ngt:\"≯\",ngtr:\"≯\",nGtv:\"≫̸\",nharr:\"↮\",nhArr:\"⇎\",nhpar:\"⫲\",ni:\"∋\",nis:\"⋼\",nisd:\"⋺\",niv:\"∋\",NJcy:\"Њ\",njcy:\"њ\",nlarr:\"↚\",nlArr:\"⇍\",nldr:\"‥\",nlE:\"≦̸\",nle:\"≰\",nleftarrow:\"↚\",nLeftarrow:\"⇍\",nleftrightarrow:\"↮\",nLeftrightarrow:\"⇎\",nleq:\"≰\",nleqq:\"≦̸\",nleqslant:\"⩽̸\",nles:\"⩽̸\",nless:\"≮\",nLl:\"⋘̸\",nlsim:\"≴\",nLt:\"≪⃒\",nlt:\"≮\",nltri:\"⋪\",nltrie:\"⋬\",nLtv:\"≪̸\",nmid:\"∤\",NoBreak:\"\\u2060\",NonBreakingSpace:\" \",nopf:\"𝕟\",Nopf:\"ℕ\",Not:\"⫬\",not:\"¬\",NotCongruent:\"≢\",NotCupCap:\"≭\",NotDoubleVerticalBar:\"∦\",NotElement:\"∉\",NotEqual:\"≠\",NotEqualTilde:\"≂̸\",NotExists:\"∄\",NotGreater:\"≯\",NotGreaterEqual:\"≱\",NotGreaterFullEqual:\"≧̸\",NotGreaterGreater:\"≫̸\",NotGreaterLess:\"≹\",NotGreaterSlantEqual:\"⩾̸\",NotGreaterTilde:\"≵\",NotHumpDownHump:\"≎̸\",NotHumpEqual:\"≏̸\",notin:\"∉\",notindot:\"⋵̸\",notinE:\"⋹̸\",notinva:\"∉\",notinvb:\"⋷\",notinvc:\"⋶\",NotLeftTriangleBar:\"⧏̸\",NotLeftTriangle:\"⋪\",NotLeftTriangleEqual:\"⋬\",NotLess:\"≮\",NotLessEqual:\"≰\",NotLessGreater:\"≸\",NotLessLess:\"≪̸\",NotLessSlantEqual:\"⩽̸\",NotLessTilde:\"≴\",NotNestedGreaterGreater:\"⪢̸\",NotNestedLessLess:\"⪡̸\",notni:\"∌\",notniva:\"∌\",notnivb:\"⋾\",notnivc:\"⋽\",NotPrecedes:\"⊀\",NotPrecedesEqual:\"⪯̸\",NotPrecedesSlantEqual:\"⋠\",NotReverseElement:\"∌\",NotRightTriangleBar:\"⧐̸\",NotRightTriangle:\"⋫\",NotRightTriangleEqual:\"⋭\",NotSquareSubset:\"⊏̸\",NotSquareSubsetEqual:\"⋢\",NotSquareSuperset:\"⊐̸\",NotSquareSupersetEqual:\"⋣\",NotSubset:\"⊂⃒\",NotSubsetEqual:\"⊈\",NotSucceeds:\"⊁\",NotSucceedsEqual:\"⪰̸\",NotSucceedsSlantEqual:\"⋡\",NotSucceedsTilde:\"≿̸\",NotSuperset:\"⊃⃒\",NotSupersetEqual:\"⊉\",NotTilde:\"≁\",NotTildeEqual:\"≄\",NotTildeFullEqual:\"≇\",NotTildeTilde:\"≉\",NotVerticalBar:\"∤\",nparallel:\"∦\",npar:\"∦\",nparsl:\"⫽⃥\",npart:\"∂̸\",npolint:\"⨔\",npr:\"⊀\",nprcue:\"⋠\",nprec:\"⊀\",npreceq:\"⪯̸\",npre:\"⪯̸\",nrarrc:\"⤳̸\",nrarr:\"↛\",nrArr:\"⇏\",nrarrw:\"↝̸\",nrightarrow:\"↛\",nRightarrow:\"⇏\",nrtri:\"⋫\",nrtrie:\"⋭\",nsc:\"⊁\",nsccue:\"⋡\",nsce:\"⪰̸\",Nscr:\"𝒩\",nscr:\"𝓃\",nshortmid:\"∤\",nshortparallel:\"∦\",nsim:\"≁\",nsime:\"≄\",nsimeq:\"≄\",nsmid:\"∤\",nspar:\"∦\",nsqsube:\"⋢\",nsqsupe:\"⋣\",nsub:\"⊄\",nsubE:\"⫅̸\",nsube:\"⊈\",nsubset:\"⊂⃒\",nsubseteq:\"⊈\",nsubseteqq:\"⫅̸\",nsucc:\"⊁\",nsucceq:\"⪰̸\",nsup:\"⊅\",nsupE:\"⫆̸\",nsupe:\"⊉\",nsupset:\"⊃⃒\",nsupseteq:\"⊉\",nsupseteqq:\"⫆̸\",ntgl:\"≹\",Ntilde:\"Ñ\",ntilde:\"ñ\",ntlg:\"≸\",ntriangleleft:\"⋪\",ntrianglelefteq:\"⋬\",ntriangleright:\"⋫\",ntrianglerighteq:\"⋭\",Nu:\"Ν\",nu:\"ν\",num:\"#\",numero:\"№\",numsp:\" \",nvap:\"≍⃒\",nvdash:\"⊬\",nvDash:\"⊭\",nVdash:\"⊮\",nVDash:\"⊯\",nvge:\"≥⃒\",nvgt:\">⃒\",nvHarr:\"⤄\",nvinfin:\"⧞\",nvlArr:\"⤂\",nvle:\"≤⃒\",nvlt:\"<⃒\",nvltrie:\"⊴⃒\",nvrArr:\"⤃\",nvrtrie:\"⊵⃒\",nvsim:\"∼⃒\",nwarhk:\"⤣\",nwarr:\"↖\",nwArr:\"⇖\",nwarrow:\"↖\",nwnear:\"⤧\",Oacute:\"Ó\",oacute:\"ó\",oast:\"⊛\",Ocirc:\"Ô\",ocirc:\"ô\",ocir:\"⊚\",Ocy:\"О\",ocy:\"о\",odash:\"⊝\",Odblac:\"Ő\",odblac:\"ő\",odiv:\"⨸\",odot:\"⊙\",odsold:\"⦼\",OElig:\"Œ\",oelig:\"œ\",ofcir:\"⦿\",Ofr:\"𝔒\",ofr:\"𝔬\",ogon:\"˛\",Ograve:\"Ò\",ograve:\"ò\",ogt:\"⧁\",ohbar:\"⦵\",ohm:\"Ω\",oint:\"∮\",olarr:\"↺\",olcir:\"⦾\",olcross:\"⦻\",oline:\"‾\",olt:\"⧀\",Omacr:\"Ō\",omacr:\"ō\",Omega:\"Ω\",omega:\"ω\",Omicron:\"Ο\",omicron:\"ο\",omid:\"⦶\",ominus:\"⊖\",Oopf:\"𝕆\",oopf:\"𝕠\",opar:\"⦷\",OpenCurlyDoubleQuote:\"“\",OpenCurlyQuote:\"‘\",operp:\"⦹\",oplus:\"⊕\",orarr:\"↻\",Or:\"⩔\",or:\"∨\",ord:\"⩝\",order:\"ℴ\",orderof:\"ℴ\",ordf:\"ª\",ordm:\"º\",origof:\"⊶\",oror:\"⩖\",orslope:\"⩗\",orv:\"⩛\",oS:\"Ⓢ\",Oscr:\"𝒪\",oscr:\"ℴ\",Oslash:\"Ø\",oslash:\"ø\",osol:\"⊘\",Otilde:\"Õ\",otilde:\"õ\",otimesas:\"⨶\",Otimes:\"⨷\",otimes:\"⊗\",Ouml:\"Ö\",ouml:\"ö\",ovbar:\"⌽\",OverBar:\"‾\",OverBrace:\"⏞\",OverBracket:\"⎴\",OverParenthesis:\"⏜\",para:\"¶\",parallel:\"∥\",par:\"∥\",parsim:\"⫳\",parsl:\"⫽\",part:\"∂\",PartialD:\"∂\",Pcy:\"П\",pcy:\"п\",percnt:\"%\",period:\".\",permil:\"‰\",perp:\"⊥\",pertenk:\"‱\",Pfr:\"𝔓\",pfr:\"𝔭\",Phi:\"Φ\",phi:\"φ\",phiv:\"ϕ\",phmmat:\"ℳ\",phone:\"☎\",Pi:\"Π\",pi:\"π\",pitchfork:\"⋔\",piv:\"ϖ\",planck:\"ℏ\",planckh:\"ℎ\",plankv:\"ℏ\",plusacir:\"⨣\",plusb:\"⊞\",pluscir:\"⨢\",plus:\"+\",plusdo:\"∔\",plusdu:\"⨥\",pluse:\"⩲\",PlusMinus:\"±\",plusmn:\"±\",plussim:\"⨦\",plustwo:\"⨧\",pm:\"±\",Poincareplane:\"ℌ\",pointint:\"⨕\",popf:\"𝕡\",Popf:\"ℙ\",pound:\"£\",prap:\"⪷\",Pr:\"⪻\",pr:\"≺\",prcue:\"≼\",precapprox:\"⪷\",prec:\"≺\",preccurlyeq:\"≼\",Precedes:\"≺\",PrecedesEqual:\"⪯\",PrecedesSlantEqual:\"≼\",PrecedesTilde:\"≾\",preceq:\"⪯\",precnapprox:\"⪹\",precneqq:\"⪵\",precnsim:\"⋨\",pre:\"⪯\",prE:\"⪳\",precsim:\"≾\",prime:\"′\",Prime:\"″\",primes:\"ℙ\",prnap:\"⪹\",prnE:\"⪵\",prnsim:\"⋨\",prod:\"∏\",Product:\"∏\",profalar:\"⌮\",profline:\"⌒\",profsurf:\"⌓\",prop:\"∝\",Proportional:\"∝\",Proportion:\"∷\",propto:\"∝\",prsim:\"≾\",prurel:\"⊰\",Pscr:\"𝒫\",pscr:\"𝓅\",Psi:\"Ψ\",psi:\"ψ\",puncsp:\" \",Qfr:\"𝔔\",qfr:\"𝔮\",qint:\"⨌\",qopf:\"𝕢\",Qopf:\"ℚ\",qprime:\"⁗\",Qscr:\"𝒬\",qscr:\"𝓆\",quaternions:\"ℍ\",quatint:\"⨖\",quest:\"?\",questeq:\"≟\",quot:\"\\\"\",QUOT:\"\\\"\",rAarr:\"⇛\",race:\"∽̱\",Racute:\"Ŕ\",racute:\"ŕ\",radic:\"√\",raemptyv:\"⦳\",rang:\"⟩\",Rang:\"⟫\",rangd:\"⦒\",range:\"⦥\",rangle:\"⟩\",raquo:\"»\",rarrap:\"⥵\",rarrb:\"⇥\",rarrbfs:\"⤠\",rarrc:\"⤳\",rarr:\"→\",Rarr:\"↠\",rArr:\"⇒\",rarrfs:\"⤞\",rarrhk:\"↪\",rarrlp:\"↬\",rarrpl:\"⥅\",rarrsim:\"⥴\",Rarrtl:\"⤖\",rarrtl:\"↣\",rarrw:\"↝\",ratail:\"⤚\",rAtail:\"⤜\",ratio:\"∶\",rationals:\"ℚ\",rbarr:\"⤍\",rBarr:\"⤏\",RBarr:\"⤐\",rbbrk:\"❳\",rbrace:\"}\",rbrack:\"]\",rbrke:\"⦌\",rbrksld:\"⦎\",rbrkslu:\"⦐\",Rcaron:\"Ř\",rcaron:\"ř\",Rcedil:\"Ŗ\",rcedil:\"ŗ\",rceil:\"⌉\",rcub:\"}\",Rcy:\"Р\",rcy:\"р\",rdca:\"⤷\",rdldhar:\"⥩\",rdquo:\"”\",rdquor:\"”\",rdsh:\"↳\",real:\"ℜ\",realine:\"ℛ\",realpart:\"ℜ\",reals:\"ℝ\",Re:\"ℜ\",rect:\"▭\",reg:\"®\",REG:\"®\",ReverseElement:\"∋\",ReverseEquilibrium:\"⇋\",ReverseUpEquilibrium:\"⥯\",rfisht:\"⥽\",rfloor:\"⌋\",rfr:\"𝔯\",Rfr:\"ℜ\",rHar:\"⥤\",rhard:\"⇁\",rharu:\"⇀\",rharul:\"⥬\",Rho:\"Ρ\",rho:\"ρ\",rhov:\"ϱ\",RightAngleBracket:\"⟩\",RightArrowBar:\"⇥\",rightarrow:\"→\",RightArrow:\"→\",Rightarrow:\"⇒\",RightArrowLeftArrow:\"⇄\",rightarrowtail:\"↣\",RightCeiling:\"⌉\",RightDoubleBracket:\"⟧\",RightDownTeeVector:\"⥝\",RightDownVectorBar:\"⥕\",RightDownVector:\"⇂\",RightFloor:\"⌋\",rightharpoondown:\"⇁\",rightharpoonup:\"⇀\",rightleftarrows:\"⇄\",rightleftharpoons:\"⇌\",rightrightarrows:\"⇉\",rightsquigarrow:\"↝\",RightTeeArrow:\"↦\",RightTee:\"⊢\",RightTeeVector:\"⥛\",rightthreetimes:\"⋌\",RightTriangleBar:\"⧐\",RightTriangle:\"⊳\",RightTriangleEqual:\"⊵\",RightUpDownVector:\"⥏\",RightUpTeeVector:\"⥜\",RightUpVectorBar:\"⥔\",RightUpVector:\"↾\",RightVectorBar:\"⥓\",RightVector:\"⇀\",ring:\"˚\",risingdotseq:\"≓\",rlarr:\"⇄\",rlhar:\"⇌\",rlm:\"\\u200f\",rmoustache:\"⎱\",rmoust:\"⎱\",rnmid:\"⫮\",roang:\"⟭\",roarr:\"⇾\",robrk:\"⟧\",ropar:\"⦆\",ropf:\"𝕣\",Ropf:\"ℝ\",roplus:\"⨮\",rotimes:\"⨵\",RoundImplies:\"⥰\",rpar:\")\",rpargt:\"⦔\",rppolint:\"⨒\",rrarr:\"⇉\",Rrightarrow:\"⇛\",rsaquo:\"›\",rscr:\"𝓇\",Rscr:\"ℛ\",rsh:\"↱\",Rsh:\"↱\",rsqb:\"]\",rsquo:\"’\",rsquor:\"’\",rthree:\"⋌\",rtimes:\"⋊\",rtri:\"▹\",rtrie:\"⊵\",rtrif:\"▸\",rtriltri:\"⧎\",RuleDelayed:\"⧴\",ruluhar:\"⥨\",rx:\"℞\",Sacute:\"Ś\",sacute:\"ś\",sbquo:\"‚\",scap:\"⪸\",Scaron:\"Š\",scaron:\"š\",Sc:\"⪼\",sc:\"≻\",sccue:\"≽\",sce:\"⪰\",scE:\"⪴\",Scedil:\"Ş\",scedil:\"ş\",Scirc:\"Ŝ\",scirc:\"ŝ\",scnap:\"⪺\",scnE:\"⪶\",scnsim:\"⋩\",scpolint:\"⨓\",scsim:\"≿\",Scy:\"С\",scy:\"с\",sdotb:\"⊡\",sdot:\"⋅\",sdote:\"⩦\",searhk:\"⤥\",searr:\"↘\",seArr:\"⇘\",searrow:\"↘\",sect:\"§\",semi:\";\",seswar:\"⤩\",setminus:\"∖\",setmn:\"∖\",sext:\"✶\",Sfr:\"𝔖\",sfr:\"𝔰\",sfrown:\"⌢\",sharp:\"♯\",SHCHcy:\"Щ\",shchcy:\"щ\",SHcy:\"Ш\",shcy:\"ш\",ShortDownArrow:\"↓\",ShortLeftArrow:\"←\",shortmid:\"∣\",shortparallel:\"∥\",ShortRightArrow:\"→\",ShortUpArrow:\"↑\",shy:\"\\u00ad\",Sigma:\"Σ\",sigma:\"σ\",sigmaf:\"ς\",sigmav:\"ς\",sim:\"∼\",simdot:\"⩪\",sime:\"≃\",simeq:\"≃\",simg:\"⪞\",simgE:\"⪠\",siml:\"⪝\",simlE:\"⪟\",simne:\"≆\",simplus:\"⨤\",simrarr:\"⥲\",slarr:\"←\",SmallCircle:\"∘\",smallsetminus:\"∖\",smashp:\"⨳\",smeparsl:\"⧤\",smid:\"∣\",smile:\"⌣\",smt:\"⪪\",smte:\"⪬\",smtes:\"⪬︀\",SOFTcy:\"Ь\",softcy:\"ь\",solbar:\"⌿\",solb:\"⧄\",sol:\"/\",Sopf:\"𝕊\",sopf:\"𝕤\",spades:\"♠\",spadesuit:\"♠\",spar:\"∥\",sqcap:\"⊓\",sqcaps:\"⊓︀\",sqcup:\"⊔\",sqcups:\"⊔︀\",Sqrt:\"√\",sqsub:\"⊏\",sqsube:\"⊑\",sqsubset:\"⊏\",sqsubseteq:\"⊑\",sqsup:\"⊐\",sqsupe:\"⊒\",sqsupset:\"⊐\",sqsupseteq:\"⊒\",square:\"□\",Square:\"□\",SquareIntersection:\"⊓\",SquareSubset:\"⊏\",SquareSubsetEqual:\"⊑\",SquareSuperset:\"⊐\",SquareSupersetEqual:\"⊒\",SquareUnion:\"⊔\",squarf:\"▪\",squ:\"□\",squf:\"▪\",srarr:\"→\",Sscr:\"𝒮\",sscr:\"𝓈\",ssetmn:\"∖\",ssmile:\"⌣\",sstarf:\"⋆\",Star:\"⋆\",star:\"☆\",starf:\"★\",straightepsilon:\"ϵ\",straightphi:\"ϕ\",strns:\"¯\",sub:\"⊂\",Sub:\"⋐\",subdot:\"⪽\",subE:\"⫅\",sube:\"⊆\",subedot:\"⫃\",submult:\"⫁\",subnE:\"⫋\",subne:\"⊊\",subplus:\"⪿\",subrarr:\"⥹\",subset:\"⊂\",Subset:\"⋐\",subseteq:\"⊆\",subseteqq:\"⫅\",SubsetEqual:\"⊆\",subsetneq:\"⊊\",subsetneqq:\"⫋\",subsim:\"⫇\",subsub:\"⫕\",subsup:\"⫓\",succapprox:\"⪸\",succ:\"≻\",succcurlyeq:\"≽\",Succeeds:\"≻\",SucceedsEqual:\"⪰\",SucceedsSlantEqual:\"≽\",SucceedsTilde:\"≿\",succeq:\"⪰\",succnapprox:\"⪺\",succneqq:\"⪶\",succnsim:\"⋩\",succsim:\"≿\",SuchThat:\"∋\",sum:\"∑\",Sum:\"∑\",sung:\"♪\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",sup:\"⊃\",Sup:\"⋑\",supdot:\"⪾\",supdsub:\"⫘\",supE:\"⫆\",supe:\"⊇\",supedot:\"⫄\",Superset:\"⊃\",SupersetEqual:\"⊇\",suphsol:\"⟉\",suphsub:\"⫗\",suplarr:\"⥻\",supmult:\"⫂\",supnE:\"⫌\",supne:\"⊋\",supplus:\"⫀\",supset:\"⊃\",Supset:\"⋑\",supseteq:\"⊇\",supseteqq:\"⫆\",supsetneq:\"⊋\",supsetneqq:\"⫌\",supsim:\"⫈\",supsub:\"⫔\",supsup:\"⫖\",swarhk:\"⤦\",swarr:\"↙\",swArr:\"⇙\",swarrow:\"↙\",swnwar:\"⤪\",szlig:\"ß\",Tab:\"\\u0009\",target:\"⌖\",Tau:\"Τ\",tau:\"τ\",tbrk:\"⎴\",Tcaron:\"Ť\",tcaron:\"ť\",Tcedil:\"Ţ\",tcedil:\"ţ\",Tcy:\"Т\",tcy:\"т\",tdot:\"⃛\",telrec:\"⌕\",Tfr:\"𝔗\",tfr:\"𝔱\",there4:\"∴\",therefore:\"∴\",Therefore:\"∴\",Theta:\"Θ\",theta:\"θ\",thetasym:\"ϑ\",thetav:\"ϑ\",thickapprox:\"≈\",thicksim:\"∼\",ThickSpace:\"  \",ThinSpace:\" \",thinsp:\" \",thkap:\"≈\",thksim:\"∼\",THORN:\"Þ\",thorn:\"þ\",tilde:\"˜\",Tilde:\"∼\",TildeEqual:\"≃\",TildeFullEqual:\"≅\",TildeTilde:\"≈\",timesbar:\"⨱\",timesb:\"⊠\",times:\"×\",timesd:\"⨰\",tint:\"∭\",toea:\"⤨\",topbot:\"⌶\",topcir:\"⫱\",top:\"⊤\",Topf:\"𝕋\",topf:\"𝕥\",topfork:\"⫚\",tosa:\"⤩\",tprime:\"‴\",trade:\"™\",TRADE:\"™\",triangle:\"▵\",triangledown:\"▿\",triangleleft:\"◃\",trianglelefteq:\"⊴\",triangleq:\"≜\",triangleright:\"▹\",trianglerighteq:\"⊵\",tridot:\"◬\",trie:\"≜\",triminus:\"⨺\",TripleDot:\"⃛\",triplus:\"⨹\",trisb:\"⧍\",tritime:\"⨻\",trpezium:\"⏢\",Tscr:\"𝒯\",tscr:\"𝓉\",TScy:\"Ц\",tscy:\"ц\",TSHcy:\"Ћ\",tshcy:\"ћ\",Tstrok:\"Ŧ\",tstrok:\"ŧ\",twixt:\"≬\",twoheadleftarrow:\"↞\",twoheadrightarrow:\"↠\",Uacute:\"Ú\",uacute:\"ú\",uarr:\"↑\",Uarr:\"↟\",uArr:\"⇑\",Uarrocir:\"⥉\",Ubrcy:\"Ў\",ubrcy:\"ў\",Ubreve:\"Ŭ\",ubreve:\"ŭ\",Ucirc:\"Û\",ucirc:\"û\",Ucy:\"У\",ucy:\"у\",udarr:\"⇅\",Udblac:\"Ű\",udblac:\"ű\",udhar:\"⥮\",ufisht:\"⥾\",Ufr:\"𝔘\",ufr:\"𝔲\",Ugrave:\"Ù\",ugrave:\"ù\",uHar:\"⥣\",uharl:\"↿\",uharr:\"↾\",uhblk:\"▀\",ulcorn:\"⌜\",ulcorner:\"⌜\",ulcrop:\"⌏\",ultri:\"◸\",Umacr:\"Ū\",umacr:\"ū\",uml:\"¨\",UnderBar:\"_\",UnderBrace:\"⏟\",UnderBracket:\"⎵\",UnderParenthesis:\"⏝\",Union:\"⋃\",UnionPlus:\"⊎\",Uogon:\"Ų\",uogon:\"ų\",Uopf:\"𝕌\",uopf:\"𝕦\",UpArrowBar:\"⤒\",uparrow:\"↑\",UpArrow:\"↑\",Uparrow:\"⇑\",UpArrowDownArrow:\"⇅\",updownarrow:\"↕\",UpDownArrow:\"↕\",Updownarrow:\"⇕\",UpEquilibrium:\"⥮\",upharpoonleft:\"↿\",upharpoonright:\"↾\",uplus:\"⊎\",UpperLeftArrow:\"↖\",UpperRightArrow:\"↗\",upsi:\"υ\",Upsi:\"ϒ\",upsih:\"ϒ\",Upsilon:\"Υ\",upsilon:\"υ\",UpTeeArrow:\"↥\",UpTee:\"⊥\",upuparrows:\"⇈\",urcorn:\"⌝\",urcorner:\"⌝\",urcrop:\"⌎\",Uring:\"Ů\",uring:\"ů\",urtri:\"◹\",Uscr:\"𝒰\",uscr:\"𝓊\",utdot:\"⋰\",Utilde:\"Ũ\",utilde:\"ũ\",utri:\"▵\",utrif:\"▴\",uuarr:\"⇈\",Uuml:\"Ü\",uuml:\"ü\",uwangle:\"⦧\",vangrt:\"⦜\",varepsilon:\"ϵ\",varkappa:\"ϰ\",varnothing:\"∅\",varphi:\"ϕ\",varpi:\"ϖ\",varpropto:\"∝\",varr:\"↕\",vArr:\"⇕\",varrho:\"ϱ\",varsigma:\"ς\",varsubsetneq:\"⊊︀\",varsubsetneqq:\"⫋︀\",varsupsetneq:\"⊋︀\",varsupsetneqq:\"⫌︀\",vartheta:\"ϑ\",vartriangleleft:\"⊲\",vartriangleright:\"⊳\",vBar:\"⫨\",Vbar:\"⫫\",vBarv:\"⫩\",Vcy:\"В\",vcy:\"в\",vdash:\"⊢\",vDash:\"⊨\",Vdash:\"⊩\",VDash:\"⊫\",Vdashl:\"⫦\",veebar:\"⊻\",vee:\"∨\",Vee:\"⋁\",veeeq:\"≚\",vellip:\"⋮\",verbar:\"|\",Verbar:\"‖\",vert:\"|\",Vert:\"‖\",VerticalBar:\"∣\",VerticalLine:\"|\",VerticalSeparator:\"❘\",VerticalTilde:\"≀\",VeryThinSpace:\" \",Vfr:\"𝔙\",vfr:\"𝔳\",vltri:\"⊲\",vnsub:\"⊂⃒\",vnsup:\"⊃⃒\",Vopf:\"𝕍\",vopf:\"𝕧\",vprop:\"∝\",vrtri:\"⊳\",Vscr:\"𝒱\",vscr:\"𝓋\",vsubnE:\"⫋︀\",vsubne:\"⊊︀\",vsupnE:\"⫌︀\",vsupne:\"⊋︀\",Vvdash:\"⊪\",vzigzag:\"⦚\",Wcirc:\"Ŵ\",wcirc:\"ŵ\",wedbar:\"⩟\",wedge:\"∧\",Wedge:\"⋀\",wedgeq:\"≙\",weierp:\"℘\",Wfr:\"𝔚\",wfr:\"𝔴\",Wopf:\"𝕎\",wopf:\"𝕨\",wp:\"℘\",wr:\"≀\",wreath:\"≀\",Wscr:\"𝒲\",wscr:\"𝓌\",xcap:\"⋂\",xcirc:\"◯\",xcup:\"⋃\",xdtri:\"▽\",Xfr:\"𝔛\",xfr:\"𝔵\",xharr:\"⟷\",xhArr:\"⟺\",Xi:\"Ξ\",xi:\"ξ\",xlarr:\"⟵\",xlArr:\"⟸\",xmap:\"⟼\",xnis:\"⋻\",xodot:\"⨀\",Xopf:\"𝕏\",xopf:\"𝕩\",xoplus:\"⨁\",xotime:\"⨂\",xrarr:\"⟶\",xrArr:\"⟹\",Xscr:\"𝒳\",xscr:\"𝓍\",xsqcup:\"⨆\",xuplus:\"⨄\",xutri:\"△\",xvee:\"⋁\",xwedge:\"⋀\",Yacute:\"Ý\",yacute:\"ý\",YAcy:\"Я\",yacy:\"я\",Ycirc:\"Ŷ\",ycirc:\"ŷ\",Ycy:\"Ы\",ycy:\"ы\",yen:\"¥\",Yfr:\"𝔜\",yfr:\"𝔶\",YIcy:\"Ї\",yicy:\"ї\",Yopf:\"𝕐\",yopf:\"𝕪\",Yscr:\"𝒴\",yscr:\"𝓎\",YUcy:\"Ю\",yucy:\"ю\",yuml:\"ÿ\",Yuml:\"Ÿ\",Zacute:\"Ź\",zacute:\"ź\",Zcaron:\"Ž\",zcaron:\"ž\",Zcy:\"З\",zcy:\"з\",Zdot:\"Ż\",zdot:\"ż\",zeetrf:\"ℨ\",ZeroWidthSpace:\"​\",Zeta:\"Ζ\",zeta:\"ζ\",zfr:\"𝔷\",Zfr:\"ℨ\",ZHcy:\"Ж\",zhcy:\"ж\",zigrarr:\"⇝\",zopf:\"𝕫\",Zopf:\"ℤ\",Zscr:\"𝒵\",zscr:\"𝓏\",zwj:\"\\u200d\",zwnj:\"\\u200c\"\n};\n", "import { NamedEntityMap } from './types';\n\nconst HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nconst CHARCODE = /^#([0-9]+)$/;\nconst NAMED = /^([A-Za-z0-9]+)$/;\n\nexport default class EntityParser {\n  constructor(private named: NamedEntityMap) {}\n\n  parse(entity: string): string | undefined {\n    if (!entity) {\n      return;\n    }\n    let matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]];\n    }\n  }\n}\n", "const WSP = /[\\t\\n\\f ]/;\nconst ALPHA = /[A-Za-z]/;\nconst CRLF = /\\r\\n?/g;\n\nexport function isSpace(char: string): boolean {\n  return WSP.test(char);\n}\n\nexport function isAlpha(char: string): boolean {\n  return ALPHA.test(char);\n}\n\nexport function preprocessInput(input: string): string {\n  return input.replace(CRLF, '\\n');\n}\n", "import { preprocessInput, isAlpha, isSpace } from './utils';\nimport { EntityParser, TokenizerDelegate, TokenizerState } from './types';\n\nexport default class EventedTokenizer {\n  public state: TokenizerState = TokenizerState.beforeData;\n\n  public line = -1;\n  public column = -1;\n\n  private input = '';\n  private index = -1;\n\n  private tagNameBuffer = '';\n\n  constructor(\n    private delegate: TokenizerDelegate,\n    private entityParser: EntityParser,\n    private mode: 'codemod' | 'precompile' = 'precompile'\n  ) {\n    this.reset();\n  }\n\n  reset() {\n    this.transitionTo(TokenizerState.beforeData);\n    this.input = '';\n    this.tagNameBuffer = '';\n\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n\n    this.delegate.reset();\n  }\n\n  transitionTo(state: TokenizerState) {\n    this.state = state;\n  }\n\n  tokenize(input: string) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  }\n\n  tokenizePart(input: string) {\n    this.input += preprocessInput(input);\n\n    while (this.index < this.input.length) {\n      let handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(`unhandled state ${this.state}`);\n      }\n    }\n  }\n\n  tokenizeEOF() {\n    this.flushData();\n  }\n\n  flushData() {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(TokenizerState.beforeData);\n    }\n  }\n\n  peek() {\n    return this.input.charAt(this.index);\n  }\n\n  consume() {\n    let char = this.peek();\n\n    this.index++;\n\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n\n    return char;\n  }\n\n  consumeCharRef() {\n    let endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    let entity = this.input.slice(this.index, endIndex);\n    let chars = this.entityParser.parse(entity);\n    if (chars) {\n      let count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n\n      return chars;\n    }\n  }\n\n  markTagStart() {\n    this.delegate.tagOpen();\n  }\n\n  private appendToTagName(char: string) : void {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  }\n\n  private isIgnoredEndTag(): boolean {\n    let tag = this.tagNameBuffer;\n\n    return (tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>') ||\n      (tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>') ||\n      (tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>');\n  }\n\n  states: { [k in TokenizerState]?: (this: EventedTokenizer) => void } = {\n    beforeData() {\n      let char = this.peek();\n\n      if (char === '<' && !this.isIgnoredEndTag()) {\n        this.transitionTo(TokenizerState.tagOpen);\n        this.markTagStart();\n        this.consume();\n      } else {\n        if (this.mode === 'precompile' && char === '\\n') {\n          let tag = this.tagNameBuffer.toLowerCase();\n\n          if (tag === 'pre' || tag === 'textarea') {\n            this.consume();\n          }\n        }\n\n        this.transitionTo(TokenizerState.data);\n        this.delegate.beginData();\n      }\n    },\n\n    data() {\n      let char = this.peek();\n      let tag = this.tagNameBuffer;\n\n      if (char === '<' && !this.isIgnoredEndTag()) {\n        this.delegate.finishData();\n        this.transitionTo(TokenizerState.tagOpen);\n        this.markTagStart();\n        this.consume();\n      } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n        this.consume();\n        this.delegate.appendToData(this.consumeCharRef() || '&');\n      } else {\n        this.consume();\n        this.delegate.appendToData(char);\n      }\n    },\n\n    tagOpen() {\n      let char = this.consume();\n\n      if (char === '!') {\n        this.transitionTo(TokenizerState.markupDeclarationOpen);\n      } else if (char === '/') {\n        this.transitionTo(TokenizerState.endTagOpen);\n      } else if (char === '@' || char === ':' || isAlpha(char)) {\n        this.transitionTo(TokenizerState.tagName);\n        this.tagNameBuffer = '';\n        this.delegate.beginStartTag();\n        this.appendToTagName(char);\n      }\n    },\n\n    markupDeclarationOpen() {\n      let char = this.consume();\n\n      if (char === '-' && this.peek() === '-') {\n        this.consume();\n        this.transitionTo(TokenizerState.commentStart);\n        this.delegate.beginComment();\n      } else {\n        let maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n\n        if (maybeDoctype === 'DOCTYPE') {\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n          this.transitionTo(TokenizerState.doctype);\n          if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n        }\n      }\n    },\n\n    doctype() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.beforeDoctypeName);\n      }\n    },\n\n    beforeDoctypeName() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        return;\n      } else {\n        this.transitionTo(TokenizerState.doctypeName);\n        if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n      }\n    },\n\n    doctypeName() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.afterDoctypeName);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n      }\n    },\n\n    afterDoctypeName() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        return;\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        let nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n\n        let isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n        let isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n\n        if (isPublic || isSystem) {\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n          this.consume();\n        }\n\n        if (isPublic) {\n          this.transitionTo(TokenizerState.afterDoctypePublicKeyword);\n        } else if (isSystem) {\n          this.transitionTo(TokenizerState.afterDoctypeSystemKeyword);\n        }\n      }\n    },\n\n    afterDoctypePublicKeyword() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.beforeDoctypePublicIdentifier);\n        this.consume();\n      } else if (char === '\"') {\n        this.transitionTo(TokenizerState.doctypePublicIdentifierDoubleQuoted);\n        this.consume();\n      } else if (char === \"'\") {\n        this.transitionTo(TokenizerState.doctypePublicIdentifierSingleQuoted);\n        this.consume();\n      } else if (char === '>') {\n        this.consume();\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      }\n    },\n\n    doctypePublicIdentifierDoubleQuoted() {\n      let char = this.consume();\n\n      if (char === '\"') {\n        this.transitionTo(TokenizerState.afterDoctypePublicIdentifier);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n      }\n    },\n\n    doctypePublicIdentifierSingleQuoted() {\n      let char = this.consume();\n\n      if (char === \"'\") {\n        this.transitionTo(TokenizerState.afterDoctypePublicIdentifier);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n      }\n    },\n\n    afterDoctypePublicIdentifier() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.betweenDoctypePublicAndSystemIdentifiers);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else if (char === '\"') {\n        this.transitionTo(TokenizerState.doctypeSystemIdentifierDoubleQuoted);\n      } else if (char === \"'\") {\n        this.transitionTo(TokenizerState.doctypeSystemIdentifierSingleQuoted);\n      }\n    },\n\n    betweenDoctypePublicAndSystemIdentifiers() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        return;\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else if (char === '\"') {\n        this.transitionTo(TokenizerState.doctypeSystemIdentifierDoubleQuoted);\n      } else if (char === \"'\") {\n        this.transitionTo(TokenizerState.doctypeSystemIdentifierSingleQuoted);\n      }\n    },\n\n    doctypeSystemIdentifierDoubleQuoted() {\n      let char = this.consume();\n\n      if (char === '\"') {\n        this.transitionTo(TokenizerState.afterDoctypeSystemIdentifier);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n      }\n    },\n\n    doctypeSystemIdentifierSingleQuoted() {\n      let char = this.consume();\n\n      if (char === \"'\") {\n        this.transitionTo(TokenizerState.afterDoctypeSystemIdentifier);\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n      }\n    },\n\n    afterDoctypeSystemIdentifier() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        return;\n      } else if (char === '>') {\n        if (this.delegate.endDoctype) this.delegate.endDoctype();\n        this.transitionTo(TokenizerState.beforeData);\n      }\n    },\n\n    commentStart() {\n      let char = this.consume();\n\n      if (char === '-') {\n        this.transitionTo(TokenizerState.commentStartDash);\n      } else if (char === '>') {\n        this.delegate.finishComment();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.delegate.appendToCommentData(char);\n        this.transitionTo(TokenizerState.comment);\n      }\n    },\n\n    commentStartDash() {\n      let char = this.consume();\n\n      if (char === '-') {\n        this.transitionTo(TokenizerState.commentEnd);\n      } else if (char === '>') {\n        this.delegate.finishComment();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.delegate.appendToCommentData('-');\n        this.transitionTo(TokenizerState.comment);\n      }\n    },\n\n    comment() {\n      let char = this.consume();\n\n      if (char === '-') {\n        this.transitionTo(TokenizerState.commentEndDash);\n      } else {\n        this.delegate.appendToCommentData(char);\n      }\n    },\n\n    commentEndDash() {\n      let char = this.consume();\n\n      if (char === '-') {\n        this.transitionTo(TokenizerState.commentEnd);\n      } else {\n        this.delegate.appendToCommentData('-' + char);\n        this.transitionTo(TokenizerState.comment);\n      }\n    },\n\n    commentEnd() {\n      let char = this.consume();\n\n      if (char === '>') {\n        this.delegate.finishComment();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.delegate.appendToCommentData('--' + char);\n        this.transitionTo(TokenizerState.comment);\n      }\n    },\n\n    tagName() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.beforeAttributeName);\n      } else if (char === '/') {\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n      } else if (char === '>') {\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.appendToTagName(char);\n      }\n    },\n\n    endTagName() {\n      let char = this.consume();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.beforeAttributeName);\n        this.tagNameBuffer = '';\n      } else if (char === '/') {\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n        this.tagNameBuffer = '';\n      } else if (char === '>') {\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n        this.tagNameBuffer = '';\n      } else {\n        this.appendToTagName(char);\n      }\n    },\n\n    beforeAttributeName() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.consume();\n        return;\n      } else if (char === '/') {\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n        this.consume();\n      } else if (char === '>') {\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else if (char === '=') {\n        this.delegate.reportSyntaxError(\n          'attribute name cannot start with equals sign'\n        );\n        this.transitionTo(TokenizerState.attributeName);\n        this.delegate.beginAttribute();\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      } else {\n        this.transitionTo(TokenizerState.attributeName);\n        this.delegate.beginAttribute();\n      }\n    },\n\n    attributeName() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.transitionTo(TokenizerState.afterAttributeName);\n        this.consume();\n      } else if (char === '/') {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n      } else if (char === '=') {\n        this.transitionTo(TokenizerState.beforeAttributeValue);\n        this.consume();\n      } else if (char === '>') {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else if (char === '\"' || char === \"'\" || char === '<') {\n        this.delegate.reportSyntaxError(\n          char + ' is not a valid character within attribute names'\n        );\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      } else {\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      }\n    },\n\n    afterAttributeName() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.consume();\n        return;\n      } else if (char === '/') {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n      } else if (char === '=') {\n        this.consume();\n        this.transitionTo(TokenizerState.beforeAttributeValue);\n      } else if (char === '>') {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.transitionTo(TokenizerState.attributeName);\n        this.delegate.beginAttribute();\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      }\n    },\n\n    beforeAttributeValue() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.consume();\n      } else if (char === '\"') {\n        this.transitionTo(TokenizerState.attributeValueDoubleQuoted);\n        this.delegate.beginAttributeValue(true);\n        this.consume();\n      } else if (char === \"'\") {\n        this.transitionTo(TokenizerState.attributeValueSingleQuoted);\n        this.delegate.beginAttributeValue(true);\n        this.consume();\n      } else if (char === '>') {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.transitionTo(TokenizerState.attributeValueUnquoted);\n        this.delegate.beginAttributeValue(false);\n        this.consume();\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueDoubleQuoted() {\n      let char = this.consume();\n\n      if (char === '\"') {\n        this.delegate.finishAttributeValue();\n        this.transitionTo(TokenizerState.afterAttributeValueQuoted);\n      } else if (char === '&') {\n        this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n      } else {\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueSingleQuoted() {\n      let char = this.consume();\n\n      if (char === \"'\") {\n        this.delegate.finishAttributeValue();\n        this.transitionTo(TokenizerState.afterAttributeValueQuoted);\n      } else if (char === '&') {\n        this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n      } else {\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueUnquoted() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.transitionTo(TokenizerState.beforeAttributeName);\n      } else if (char === '/') {\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n      } else if (char === '&') {\n        this.consume();\n        this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n      } else if (char === '>') {\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.consume();\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    afterAttributeValueQuoted() {\n      let char = this.peek();\n\n      if (isSpace(char)) {\n        this.consume();\n        this.transitionTo(TokenizerState.beforeAttributeName);\n      } else if (char === '/') {\n        this.consume();\n        this.transitionTo(TokenizerState.selfClosingStartTag);\n      } else if (char === '>') {\n        this.consume();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.transitionTo(TokenizerState.beforeAttributeName);\n      }\n    },\n\n    selfClosingStartTag() {\n      let char = this.peek();\n\n      if (char === '>') {\n        this.consume();\n        this.delegate.markTagAsSelfClosing();\n        this.delegate.finishTag();\n        this.transitionTo(TokenizerState.beforeData);\n      } else {\n        this.transitionTo(TokenizerState.beforeAttributeName);\n      }\n    },\n\n    endTagOpen() {\n      let char = this.consume();\n\n      if (char === '@' || char === ':' || isAlpha(char)) {\n        this.transitionTo(TokenizerState.endTagName);\n        this.tagNameBuffer = '';\n        this.delegate.beginEndTag();\n        this.appendToTagName(char);\n      }\n    }\n  };\n}\n", "import EventedTokenizer from './evented-tokenizer';\nimport {\n  Attribute,\n  EntityParser,\n  Token,\n  TokenizerDelegate,\n  TokenMap,\n  TokenType,\n  TokenizerOptions\n} from './types';\n\nexport default class Tokenizer implements TokenizerDelegate {\n  private token: Token | null = null;\n  private startLine = 1;\n  private startColumn = 0;\n  private tokenizer: EventedTokenizer;\n  private tokens: Token[] = [];\n  private _currentAttribute?: Attribute;\n\n  constructor(\n    entityParser: EntityParser,\n    private options: TokenizerOptions = {}\n  ) {\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n\n  tokenize(input: string) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  }\n\n  tokenizePart(input: string) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  }\n\n  tokenizeEOF() {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  }\n\n  reset() {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  }\n\n  current<T extends TokenType, U extends TokenType>(\n    type1: T,\n    type2: U\n  ): TokenMap[T] | TokenMap[U];\n  current<T extends TokenType>(type: T): TokenMap[T];\n  current(): Token;\n  current(): Token {\n    const token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (let i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(`token type was unexpectedly ${token.type}`);\n  }\n\n  push(token: Token) {\n    this.token = token;\n    this.tokens.push(token);\n  }\n\n  currentAttribute() {\n    return this._currentAttribute;\n  }\n\n  addLocInfo() {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  }\n\n  // Data\n\n  beginDoctype() {\n    this.push({\n      type: TokenType.Doctype,\n      name: '',\n    });\n  }\n\n  appendToDoctypeName(char: string) {\n    this.current(TokenType.Doctype).name += char;\n  }\n\n  appendToDoctypePublicIdentifier(char: string) {\n    let doctype = this.current(TokenType.Doctype);\n\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  }\n\n  appendToDoctypeSystemIdentifier(char: string) {\n    let doctype = this.current(TokenType.Doctype);\n\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  }\n\n  endDoctype() {\n    this.addLocInfo();\n  }\n\n  beginData() {\n    this.push({\n      type: TokenType.Chars,\n      chars: ''\n    });\n  }\n\n  appendToData(char: string) {\n    this.current(TokenType.Chars).chars += char;\n  }\n\n  finishData() {\n    this.addLocInfo();\n  }\n\n  // Comment\n\n  beginComment() {\n    this.push({\n      type: TokenType.Comment,\n      chars: ''\n    });\n  }\n\n  appendToCommentData(char: string) {\n    this.current(TokenType.Comment).chars += char;\n  }\n\n  finishComment() {\n    this.addLocInfo();\n  }\n\n  // Tags - basic\n\n  tagOpen() {}\n\n  beginStartTag() {\n    this.push({\n      type: TokenType.StartTag,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  }\n\n  beginEndTag() {\n    this.push({\n      type: TokenType.EndTag,\n      tagName: ''\n    });\n  }\n\n  finishTag() {\n    this.addLocInfo();\n  }\n\n  markTagAsSelfClosing() {\n    this.current(TokenType.StartTag).selfClosing = true;\n  }\n\n  // Tags - name\n  appendToTagName(char: string) {\n    this.current(TokenType.StartTag, TokenType.EndTag).tagName += char;\n  }\n\n  // Tags - attributes\n\n  beginAttribute() {\n    this._currentAttribute = ['', '', false];\n  }\n\n  appendToAttributeName(char: string) {\n    this.currentAttribute()![0] += char;\n  }\n\n  beginAttributeValue(isQuoted: boolean) {\n    this.currentAttribute()![2] = isQuoted;\n  }\n\n  appendToAttributeValue(char: string) {\n    this.currentAttribute()![1] += char;\n  }\n\n  finishAttributeValue() {\n    this.current(TokenType.StartTag).attributes.push(this._currentAttribute!);\n  }\n\n  reportSyntaxError(message: string) {\n    this.current().syntaxError = message;\n  }\n}\n", "import Tokenizer from './tokenizer';\nimport EntityParser from './entity-parser';\nimport namedCharRefs from './generated/html5-named-char-refs';\nimport { TokenizerOptions, Token } from './types';\n\nexport default function tokenize(\n  input: string,\n  options?: TokenizerOptions\n): Token[] {\n  let tokenizer = new Tokenizer(new EntityParser(namedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\n", "/**\n * External dependencies\n */\nimport { Tokenizer } from 'simple-html-tokenizer';\nimport fastDeepEqual from 'fast-deep-equal/es6';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { createLogger, createQueuedLogger } from './logger';\nimport { getSaveContent } from '../serializer';\nimport {\n\tgetFreeformContentHandlerName,\n\tgetUnregisteredTypeHandlerName,\n} from '../registration';\nimport { normalizeBlockType } from '../utils';\n\n/** @typedef {import('../parser').WPBlock} WPBlock */\n/** @typedef {import('../registration').WPBlockType} WPBlockType */\n/** @typedef {import('./logger').LoggerItem} LoggerItem */\n\nconst identity = ( x ) => x;\n\n/**\n * Globally matches any consecutive whitespace\n *\n * @type {RegExp}\n */\nconst REGEXP_WHITESPACE = /[\\t\\n\\r\\v\\f ]+/g;\n\n/**\n * Matches a string containing only whitespace\n *\n * @type {RegExp}\n */\nconst REGEXP_ONLY_WHITESPACE = /^[\\t\\n\\r\\v\\f ]*$/;\n\n/**\n * Matches a CSS URL type value\n *\n * @type {RegExp}\n */\nconst REGEXP_STYLE_URL_TYPE = /^url\\s*\\(['\"\\s]*(.*?)['\"\\s]*\\)$/;\n\n/**\n * Boolean attributes are attributes whose presence as being assigned is\n * meaningful, even if only empty.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( Array.from( document.querySelectorAll( '#attributes-1 > tbody > tr' ) )\n *     .filter( ( tr ) => tr.lastChild.textContent.indexOf( 'Boolean attribute' ) !== -1 )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * @type {Array}\n */\nconst BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'allowusermedia',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'download',\n\t'formnovalidate',\n\t'hidden',\n\t'ismap',\n\t'itemscope',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected',\n\t'typemustmatch',\n];\n\n/**\n * Enumerated attributes are attributes which must be of a specific value form.\n * Like boolean attributes, these are meaningful if specified, even if not of a\n * valid enumerated value.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#enumerated-attribute\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( Array.from( document.querySelectorAll( '#attributes-1 > tbody > tr' ) )\n *     .filter( ( tr ) => /^(\"(.+?)\";?\\s*)+/.test( tr.lastChild.textContent.trim() ) )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * @type {Array}\n */\nconst ENUMERATED_ATTRIBUTES = [\n\t'autocapitalize',\n\t'autocomplete',\n\t'charset',\n\t'contenteditable',\n\t'crossorigin',\n\t'decoding',\n\t'dir',\n\t'draggable',\n\t'enctype',\n\t'formenctype',\n\t'formmethod',\n\t'http-equiv',\n\t'inputmode',\n\t'kind',\n\t'method',\n\t'preload',\n\t'scope',\n\t'shape',\n\t'spellcheck',\n\t'translate',\n\t'type',\n\t'wrap',\n];\n\n/**\n * Meaningful attributes are those who cannot be safely ignored when omitted in\n * one HTML markup string and not another.\n *\n * @type {Array}\n */\nconst MEANINGFUL_ATTRIBUTES = [\n\t...BOOLEAN_ATTRIBUTES,\n\t...ENUMERATED_ATTRIBUTES,\n];\n\n/**\n * Array of functions which receive a text string on which to apply normalizing\n * behavior for consideration in text token equivalence, carefully ordered from\n * least-to-most expensive operations.\n *\n * @type {Array}\n */\nconst TEXT_NORMALIZATIONS = [ identity, getTextWithCollapsedWhitespace ];\n\n/**\n * Regular expression matching a named character reference. In lieu of bundling\n * a full set of references, the pattern covers the minimal necessary to test\n * positively against the full set.\n *\n * \"The ampersand must be followed by one of the names given in the named\n * character references section, using the same case.\"\n *\n * Tested aginst \"12.5 Named character references\":\n *\n * ```\n * const references = Array.from( document.querySelectorAll(\n *     '#named-character-references-table tr[id^=entity-] td:first-child'\n * ) ).map( ( code ) => code.textContent )\n * references.every( ( reference ) => /^[\\da-z]+$/i.test( reference ) )\n * ```\n *\n * @see https://html.spec.whatwg.org/multipage/syntax.html#character-references\n * @see https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references\n *\n * @type {RegExp}\n */\nconst REGEXP_NAMED_CHARACTER_REFERENCE = /^[\\da-z]+$/i;\n\n/**\n * Regular expression matching a decimal character reference.\n *\n * \"The ampersand must be followed by a U+0023 NUMBER SIGN character (#),\n * followed by one or more ASCII digits, representing a base-ten integer\"\n *\n * @see https://html.spec.whatwg.org/multipage/syntax.html#character-references\n *\n * @type {RegExp}\n */\nconst REGEXP_DECIMAL_CHARACTER_REFERENCE = /^#\\d+$/;\n\n/**\n * Regular expression matching a hexadecimal character reference.\n *\n * \"The ampersand must be followed by a U+0023 NUMBER SIGN character (#), which\n * must be followed by either a U+0078 LATIN SMALL LETTER X character (x) or a\n * U+0058 LATIN CAPITAL LETTER X character (X), which must then be followed by\n * one or more ASCII hex digits, representing a hexadecimal integer\"\n *\n * @see https://html.spec.whatwg.org/multipage/syntax.html#character-references\n *\n * @type {RegExp}\n */\nconst REGEXP_HEXADECIMAL_CHARACTER_REFERENCE = /^#x[\\da-f]+$/i;\n\n/**\n * Returns true if the given string is a valid character reference segment, or\n * false otherwise. The text should be stripped of `&` and `;` demarcations.\n *\n * @param {string} text Text to test.\n *\n * @return {boolean} Whether text is valid character reference.\n */\nexport function isValidCharacterReference( text ) {\n\treturn (\n\t\tREGEXP_NAMED_CHARACTER_REFERENCE.test( text ) ||\n\t\tREGEXP_DECIMAL_CHARACTER_REFERENCE.test( text ) ||\n\t\tREGEXP_HEXADECIMAL_CHARACTER_REFERENCE.test( text )\n\t);\n}\n\n/**\n * Subsitute EntityParser class for `simple-html-tokenizer` which uses the\n * implementation of `decodeEntities` from `html-entities`, in order to avoid\n * bundling a massive named character reference.\n *\n * @see https://github.com/tildeio/simple-html-tokenizer/tree/HEAD/src/entity-parser.ts\n */\nexport class DecodeEntityParser {\n\t/**\n\t * Returns a substitute string for an entity string sequence between `&`\n\t * and `;`, or undefined if no substitution should occur.\n\t *\n\t * @param {string} entity Entity fragment discovered in HTML.\n\t *\n\t * @return {string | undefined} Entity substitute value.\n\t */\n\tparse( entity ) {\n\t\tif ( isValidCharacterReference( entity ) ) {\n\t\t\treturn decodeEntities( '&' + entity + ';' );\n\t\t}\n\t}\n}\n\n/**\n * Given a specified string, returns an array of strings split by consecutive\n * whitespace, ignoring leading or trailing whitespace.\n *\n * @param {string} text Original text.\n *\n * @return {string[]} Text pieces split on whitespace.\n */\nexport function getTextPiecesSplitOnWhitespace( text ) {\n\treturn text.trim().split( REGEXP_WHITESPACE );\n}\n\n/**\n * Given a specified string, returns a new trimmed string where all consecutive\n * whitespace is collapsed to a single space.\n *\n * @param {string} text Original text.\n *\n * @return {string} Trimmed text with consecutive whitespace collapsed.\n */\nexport function getTextWithCollapsedWhitespace( text ) {\n\t// This is an overly simplified whitespace comparison. The specification is\n\t// more prescriptive of whitespace behavior in inline and block contexts.\n\t//\n\t// See: https://medium.com/@patrickbrosset/when-does-white-space-matter-in-html-b90e8a7cdd33\n\treturn getTextPiecesSplitOnWhitespace( text ).join( ' ' );\n}\n\n/**\n * Returns attribute pairs of the given StartTag token, including only pairs\n * where the value is non-empty or the attribute is a boolean attribute, an\n * enumerated attribute, or a custom data- attribute.\n *\n * @see MEANINGFUL_ATTRIBUTES\n *\n * @param {Object} token StartTag token.\n *\n * @return {Array[]} Attribute pairs.\n */\nexport function getMeaningfulAttributePairs( token ) {\n\treturn token.attributes.filter( ( pair ) => {\n\t\tconst [ key, value ] = pair;\n\t\treturn (\n\t\t\tvalue ||\n\t\t\tkey.indexOf( 'data-' ) === 0 ||\n\t\t\tMEANINGFUL_ATTRIBUTES.includes( key )\n\t\t);\n\t} );\n}\n\n/**\n * Returns true if two text tokens (with `chars` property) are equivalent, or\n * false otherwise.\n *\n * @param {Object} actual   Actual token.\n * @param {Object} expected Expected token.\n * @param {Object} logger   Validation logger object.\n *\n * @return {boolean} Whether two text tokens are equivalent.\n */\nexport function isEquivalentTextTokens(\n\tactual,\n\texpected,\n\tlogger = createLogger()\n) {\n\t// This function is intentionally written as syntactically \"ugly\" as a hot\n\t// path optimization. Text is progressively normalized in order from least-\n\t// to-most operationally expensive, until the earliest point at which text\n\t// can be confidently inferred as being equal.\n\tlet actualChars = actual.chars;\n\tlet expectedChars = expected.chars;\n\n\tfor ( let i = 0; i < TEXT_NORMALIZATIONS.length; i++ ) {\n\t\tconst normalize = TEXT_NORMALIZATIONS[ i ];\n\n\t\tactualChars = normalize( actualChars );\n\t\texpectedChars = normalize( expectedChars );\n\n\t\tif ( actualChars === expectedChars ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tlogger.warning(\n\t\t'Expected text `%s`, saw `%s`.',\n\t\texpected.chars,\n\t\tactual.chars\n\t);\n\n\treturn false;\n}\n\n/**\n * Given a CSS length value, returns a normalized CSS length value for strict equality\n * comparison.\n *\n * @param {string} value CSS length value.\n *\n * @return {string} Normalized CSS length value.\n */\nexport function getNormalizedLength( value ) {\n\tif ( 0 === parseFloat( value ) ) {\n\t\treturn '0';\n\t}\n\t// Normalize strings with floats to always include a leading zero.\n\tif ( value.indexOf( '.' ) === 0 ) {\n\t\treturn '0' + value;\n\t}\n\n\treturn value;\n}\n\n/**\n * Given a style value, returns a normalized style value for strict equality\n * comparison.\n *\n * @param {string} value Style value.\n *\n * @return {string} Normalized style value.\n */\nexport function getNormalizedStyleValue( value ) {\n\tconst textPieces = getTextPiecesSplitOnWhitespace( value );\n\tconst normalizedPieces = textPieces.map( getNormalizedLength );\n\tconst result = normalizedPieces.join( ' ' );\n\n\treturn (\n\t\tresult\n\t\t\t// Normalize URL type to omit whitespace or quotes.\n\t\t\t.replace( REGEXP_STYLE_URL_TYPE, 'url($1)' )\n\t);\n}\n\n/**\n * Given a style attribute string, returns an object of style properties.\n *\n * @param {string} text Style attribute.\n *\n * @return {Object} Style properties.\n */\nexport function getStyleProperties( text ) {\n\tconst pairs = text\n\t\t// Trim ending semicolon (avoid including in split)\n\t\t.replace( /;?\\s*$/, '' )\n\t\t// Split on property assignment.\n\t\t.split( ';' )\n\t\t// For each property assignment...\n\t\t.map( ( style ) => {\n\t\t\t// ...split further into key-value pairs.\n\t\t\tconst [ key, ...valueParts ] = style.split( ':' );\n\t\t\tconst value = valueParts.join( ':' );\n\n\t\t\treturn [ key.trim(), getNormalizedStyleValue( value.trim() ) ];\n\t\t} );\n\n\treturn Object.fromEntries( pairs );\n}\n\n/**\n * Attribute-specific equality handlers\n *\n * @type {Object}\n */\nexport const isEqualAttributesOfName = {\n\tclass: ( actual, expected ) => {\n\t\t// Class matches if members are the same, even if out of order or\n\t\t// superfluous whitespace between.\n\t\tconst [ actualPieces, expectedPieces ] = [ actual, expected ].map(\n\t\t\tgetTextPiecesSplitOnWhitespace\n\t\t);\n\t\tconst actualDiff = actualPieces.filter(\n\t\t\t( c ) => ! expectedPieces.includes( c )\n\t\t);\n\t\tconst expectedDiff = expectedPieces.filter(\n\t\t\t( c ) => ! actualPieces.includes( c )\n\t\t);\n\n\t\treturn actualDiff.length === 0 && expectedDiff.length === 0;\n\t},\n\tstyle: ( actual, expected ) => {\n\t\treturn fastDeepEqual(\n\t\t\t...[ actual, expected ].map( getStyleProperties )\n\t\t);\n\t},\n\t// For each boolean attribute, mere presence of attribute in both is enough\n\t// to assume equivalence.\n\t...Object.fromEntries(\n\t\tBOOLEAN_ATTRIBUTES.map( ( attribute ) => [ attribute, () => true ] )\n\t),\n};\n\n/**\n * Given two sets of attribute tuples, returns true if the attribute sets are\n * equivalent.\n *\n * @param {Array[]} actual   Actual attributes tuples.\n * @param {Array[]} expected Expected attributes tuples.\n * @param {Object}  logger   Validation logger object.\n *\n * @return {boolean} Whether attributes are equivalent.\n */\nexport function isEqualTagAttributePairs(\n\tactual,\n\texpected,\n\tlogger = createLogger()\n) {\n\t// Attributes is tokenized as tuples. Their lengths should match. This also\n\t// avoids us needing to check both attributes sets, since if A has any keys\n\t// which do not exist in B, we know the sets to be different.\n\tif ( actual.length !== expected.length ) {\n\t\tlogger.warning(\n\t\t\t'Expected attributes %o, instead saw %o.',\n\t\t\texpected,\n\t\t\tactual\n\t\t);\n\t\treturn false;\n\t}\n\n\t// Attributes are not guaranteed to occur in the same order. For validating\n\t// actual attributes, first convert the set of expected attribute values to\n\t// an object, for lookup by key.\n\tconst expectedAttributes = {};\n\tfor ( let i = 0; i < expected.length; i++ ) {\n\t\texpectedAttributes[ expected[ i ][ 0 ].toLowerCase() ] =\n\t\t\texpected[ i ][ 1 ];\n\t}\n\n\tfor ( let i = 0; i < actual.length; i++ ) {\n\t\tconst [ name, actualValue ] = actual[ i ];\n\t\tconst nameLower = name.toLowerCase();\n\n\t\t// As noted above, if missing member in B, assume different.\n\t\tif ( ! expectedAttributes.hasOwnProperty( nameLower ) ) {\n\t\t\tlogger.warning( 'Encountered unexpected attribute `%s`.', name );\n\t\t\treturn false;\n\t\t}\n\n\t\tconst expectedValue = expectedAttributes[ nameLower ];\n\t\tconst isEqualAttributes = isEqualAttributesOfName[ nameLower ];\n\n\t\tif ( isEqualAttributes ) {\n\t\t\t// Defer custom attribute equality handling.\n\t\t\tif ( ! isEqualAttributes( actualValue, expectedValue ) ) {\n\t\t\t\tlogger.warning(\n\t\t\t\t\t'Expected attribute `%s` of value `%s`, saw `%s`.',\n\t\t\t\t\tname,\n\t\t\t\t\texpectedValue,\n\t\t\t\t\tactualValue\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if ( actualValue !== expectedValue ) {\n\t\t\t// Otherwise strict inequality should bail.\n\t\t\tlogger.warning(\n\t\t\t\t'Expected attribute `%s` of value `%s`, saw `%s`.',\n\t\t\t\tname,\n\t\t\t\texpectedValue,\n\t\t\t\tactualValue\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Token-type-specific equality handlers\n *\n * @type {Object}\n */\nexport const isEqualTokensOfType = {\n\tStartTag: ( actual, expected, logger = createLogger() ) => {\n\t\tif (\n\t\t\tactual.tagName !== expected.tagName &&\n\t\t\t// Optimization: Use short-circuit evaluation to defer case-\n\t\t\t// insensitive check on the assumption that the majority case will\n\t\t\t// have exactly equal tag names.\n\t\t\tactual.tagName.toLowerCase() !== expected.tagName.toLowerCase()\n\t\t) {\n\t\t\tlogger.warning(\n\t\t\t\t'Expected tag name `%s`, instead saw `%s`.',\n\t\t\t\texpected.tagName,\n\t\t\t\tactual.tagName\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isEqualTagAttributePairs(\n\t\t\t...[ actual, expected ].map( getMeaningfulAttributePairs ),\n\t\t\tlogger\n\t\t);\n\t},\n\tChars: isEquivalentTextTokens,\n\tComment: isEquivalentTextTokens,\n};\n\n/**\n * Given an array of tokens, returns the first token which is not purely\n * whitespace.\n *\n * Mutates the tokens array.\n *\n * @param {Object[]} tokens Set of tokens to search.\n *\n * @return {Object | undefined} Next non-whitespace token.\n */\nexport function getNextNonWhitespaceToken( tokens ) {\n\tlet token;\n\twhile ( ( token = tokens.shift() ) ) {\n\t\tif ( token.type !== 'Chars' ) {\n\t\t\treturn token;\n\t\t}\n\n\t\tif ( ! REGEXP_ONLY_WHITESPACE.test( token.chars ) ) {\n\t\t\treturn token;\n\t\t}\n\t}\n}\n\n/**\n * Tokenize an HTML string, gracefully handling any errors thrown during\n * underlying tokenization.\n *\n * @param {string} html   HTML string to tokenize.\n * @param {Object} logger Validation logger object.\n *\n * @return {Object[]|null} Array of valid tokenized HTML elements, or null on error\n */\nfunction getHTMLTokens( html, logger = createLogger() ) {\n\ttry {\n\t\treturn new Tokenizer( new DecodeEntityParser() ).tokenize( html );\n\t} catch ( e ) {\n\t\tlogger.warning( 'Malformed HTML detected: %s', html );\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns true if the next HTML token closes the current token.\n *\n * @param {Object}           currentToken Current token to compare with.\n * @param {Object|undefined} nextToken    Next token to compare against.\n *\n * @return {boolean} true if `nextToken` closes `currentToken`, false otherwise\n */\nexport function isClosedByToken( currentToken, nextToken ) {\n\t// Ensure this is a self closed token.\n\tif ( ! currentToken.selfClosing ) {\n\t\treturn false;\n\t}\n\n\t// Check token names and determine if nextToken is the closing tag for currentToken.\n\tif (\n\t\tnextToken &&\n\t\tnextToken.tagName === currentToken.tagName &&\n\t\tnextToken.type === 'EndTag'\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns true if the given HTML strings are effectively equivalent, or\n * false otherwise. Invalid HTML is not considered equivalent, even if the\n * strings directly match.\n *\n * @param {string} actual   Actual HTML string.\n * @param {string} expected Expected HTML string.\n * @param {Object} logger   Validation logger object.\n *\n * @return {boolean} Whether HTML strings are equivalent.\n */\nexport function isEquivalentHTML( actual, expected, logger = createLogger() ) {\n\t// Short-circuit if markup is identical.\n\tif ( actual === expected ) {\n\t\treturn true;\n\t}\n\n\t// Tokenize input content and reserialized save content.\n\tconst [ actualTokens, expectedTokens ] = [ actual, expected ].map(\n\t\t( html ) => getHTMLTokens( html, logger )\n\t);\n\n\t// If either is malformed then stop comparing - the strings are not equivalent.\n\tif ( ! actualTokens || ! expectedTokens ) {\n\t\treturn false;\n\t}\n\n\tlet actualToken, expectedToken;\n\twhile ( ( actualToken = getNextNonWhitespaceToken( actualTokens ) ) ) {\n\t\texpectedToken = getNextNonWhitespaceToken( expectedTokens );\n\n\t\t// Inequal if exhausted all expected tokens.\n\t\tif ( ! expectedToken ) {\n\t\t\tlogger.warning(\n\t\t\t\t'Expected end of content, instead saw %o.',\n\t\t\t\tactualToken\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\t// Inequal if next non-whitespace token of each set are not same type.\n\t\tif ( actualToken.type !== expectedToken.type ) {\n\t\t\tlogger.warning(\n\t\t\t\t'Expected token of type `%s` (%o), instead saw `%s` (%o).',\n\t\t\t\texpectedToken.type,\n\t\t\t\texpectedToken,\n\t\t\t\tactualToken.type,\n\t\t\t\tactualToken\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\t// Defer custom token type equality handling, otherwise continue and\n\t\t// assume as equal.\n\t\tconst isEqualTokens = isEqualTokensOfType[ actualToken.type ];\n\t\tif (\n\t\t\tisEqualTokens &&\n\t\t\t! isEqualTokens( actualToken, expectedToken, logger )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Peek at the next tokens (actual and expected) to see if they close\n\t\t// a self-closing tag.\n\t\tif ( isClosedByToken( actualToken, expectedTokens[ 0 ] ) ) {\n\t\t\t// Consume the next expected token that closes the current actual\n\t\t\t// self-closing token.\n\t\t\tgetNextNonWhitespaceToken( expectedTokens );\n\t\t} else if ( isClosedByToken( expectedToken, actualTokens[ 0 ] ) ) {\n\t\t\t// Consume the next actual token that closes the current expected\n\t\t\t// self-closing token.\n\t\t\tgetNextNonWhitespaceToken( actualTokens );\n\t\t}\n\t}\n\n\tif ( ( expectedToken = getNextNonWhitespaceToken( expectedTokens ) ) ) {\n\t\t// If any non-whitespace tokens remain in expected token set, this\n\t\t// indicates inequality.\n\t\tlogger.warning(\n\t\t\t'Expected %o, instead saw end of content.',\n\t\t\texpectedToken\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns an object with `isValid` property set to `true` if the parsed block\n * is valid given the input content. A block is considered valid if, when serialized\n * with assumed attributes, the content matches the original value. If block is\n * invalid, this function returns all validations issues as well.\n *\n * @param {string|Object} blockTypeOrName      Block type.\n * @param {Object}        attributes           Parsed block attributes.\n * @param {string}        originalBlockContent Original block content.\n * @param {Object}        logger               Validation logger object.\n *\n * @return {Object} Whether block is valid and contains validation messages.\n */\n\n/**\n * Returns an object with `isValid` property set to `true` if the parsed block\n * is valid given the input content. A block is considered valid if, when serialized\n * with assumed attributes, the content matches the original value. If block is\n * invalid, this function returns all validations issues as well.\n *\n * @param {WPBlock}            block                          block object.\n * @param {WPBlockType|string} [blockTypeOrName = block.name] Block type or name, inferred from block if not given.\n *\n * @return {[boolean,Array<LoggerItem>]} validation results.\n */\nexport function validateBlock( block, blockTypeOrName = block.name ) {\n\tconst isFallbackBlock =\n\t\tblock.name === getFreeformContentHandlerName() ||\n\t\tblock.name === getUnregisteredTypeHandlerName();\n\n\t// Shortcut to avoid costly validation.\n\tif ( isFallbackBlock ) {\n\t\treturn [ true, [] ];\n\t}\n\n\tconst logger = createQueuedLogger();\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\tlet generatedBlockContent;\n\ttry {\n\t\tgeneratedBlockContent = getSaveContent( blockType, block.attributes );\n\t} catch ( error ) {\n\t\tlogger.error(\n\t\t\t'Block validation failed because an error occurred while generating block content:\\n\\n%s',\n\t\t\terror.toString()\n\t\t);\n\n\t\treturn [ false, logger.getItems() ];\n\t}\n\n\tconst isValid = isEquivalentHTML(\n\t\tblock.originalContent,\n\t\tgeneratedBlockContent,\n\t\tlogger\n\t);\n\n\tif ( ! isValid ) {\n\t\tlogger.error(\n\t\t\t'Block validation failed for `%s` (%o).\\n\\nContent generated by `save` function:\\n\\n%s\\n\\nContent retrieved from post body:\\n\\n%s',\n\t\t\tblockType.name,\n\t\t\tblockType,\n\t\t\tgeneratedBlockContent,\n\t\t\tblock.originalContent\n\t\t);\n\t}\n\n\treturn [ isValid, logger.getItems() ];\n}\n\n/**\n * Returns true if the parsed block is valid given the input content. A block\n * is considered valid if, when serialized with assumed attributes, the content\n * matches the original value.\n *\n * Logs to console in development environments when invalid.\n *\n * @deprecated Use validateBlock instead to avoid data loss.\n *\n * @param {string|Object} blockTypeOrName      Block type.\n * @param {Object}        attributes           Parsed block attributes.\n * @param {string}        originalBlockContent Original block content.\n *\n * @return {boolean} Whether block is valid.\n */\nexport function isValidBlockContent(\n\tblockTypeOrName,\n\tattributes,\n\toriginalBlockContent\n) {\n\tdeprecated( 'isValidBlockContent introduces opportunity for data loss', {\n\t\tsince: '12.6',\n\t\tplugin: 'Gutenberg',\n\t\talternative: 'validateBlock',\n\t} );\n\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\tconst block = {\n\t\tname: blockType.name,\n\t\tattributes,\n\t\tinnerBlocks: [],\n\t\toriginalContent: originalBlockContent,\n\t};\n\tconst [ isValid ] = validateBlock( block, blockType );\n\n\treturn isValid;\n}\n", "/**\n * @typedef LoggerItem\n * @property {Function}   log  Which logger recorded the message\n * @property {Array<any>} args White arguments were supplied to the logger\n */\n\nexport function createLogger() {\n\t/**\n\t * Creates a log handler with block validation prefix.\n\t *\n\t * @param {Function} logger Original logger function.\n\t *\n\t * @return {Function} Augmented logger function.\n\t */\n\tfunction createLogHandler( logger ) {\n\t\tlet log = ( message, ...args ) =>\n\t\t\tlogger( 'Block validation: ' + message, ...args );\n\n\t\t// In test environments, pre-process string substitutions to improve\n\t\t// readability of error messages. We'd prefer to avoid pulling in this\n\t\t// dependency in runtime environments, and it can be dropped by a combo\n\t\t// of Webpack env substitution + UglifyJS dead code elimination.\n\t\tif ( process.env.NODE_ENV === 'test' ) {\n\t\t\tlog = ( ...args ) => logger( require( 'util' ).format( ...args ) );\n\t\t}\n\n\t\treturn log;\n\t}\n\n\treturn {\n\t\t// eslint-disable-next-line no-console\n\t\terror: createLogHandler( console.error ),\n\t\t// eslint-disable-next-line no-console\n\t\twarning: createLogHandler( console.warn ),\n\t\tgetItems() {\n\t\t\treturn [];\n\t\t},\n\t};\n}\n\nexport function createQueuedLogger() {\n\t/**\n\t * The list of enqueued log actions to print.\n\t *\n\t * @type {Array<LoggerItem>}\n\t */\n\tconst queue = [];\n\n\tconst logger = createLogger();\n\n\treturn {\n\t\terror( ...args ) {\n\t\t\tqueue.push( { log: logger.error, args } );\n\t\t},\n\t\twarning( ...args ) {\n\t\t\tqueue.push( { log: logger.warning, args } );\n\t\t},\n\t\tgetItems() {\n\t\t\treturn queue;\n\t\t},\n\t};\n}\n", "/**\n * Convert legacy blocks to their canonical form. This function is used\n * both in the parser level for previous content and to convert such blocks\n * used in Custom Post Types templates.\n *\n * @param {string} name       The block's name\n * @param {Object} attributes The block's attributes\n *\n * @return {[string, Object]} The block's name and attributes, changed accordingly if a match was found\n */\nexport function convertLegacyBlockNameAndAttributes( name, attributes ) {\n\tconst newAttributes = { ...attributes };\n\t// Convert 'core/cover-image' block in existing content to 'core/cover'.\n\tif ( 'core/cover-image' === name ) {\n\t\tname = 'core/cover';\n\t}\n\n\t// Convert 'core/text' blocks in existing content to 'core/paragraph'.\n\tif ( 'core/text' === name || 'core/cover-text' === name ) {\n\t\tname = 'core/paragraph';\n\t}\n\n\t// Convert derivative blocks such as 'core/social-link-wordpress' to the\n\t// canonical form 'core/social-link'.\n\tif ( name && name.indexOf( 'core/social-link-' ) === 0 ) {\n\t\t// Capture `social-link-wordpress` into `{\"service\":\"wordpress\"}`\n\t\tnewAttributes.service = name.substring( 17 );\n\t\tname = 'core/social-link';\n\t}\n\n\t// Convert derivative blocks such as 'core-embed/instagram' to the\n\t// canonical form 'core/embed'.\n\tif ( name && name.indexOf( 'core-embed/' ) === 0 ) {\n\t\t// Capture `core-embed/instagram` into `{\"providerNameSlug\":\"instagram\"}`\n\t\tconst providerSlug = name.substring( 11 );\n\t\tconst deprecated = {\n\t\t\tspeaker: 'speaker-deck',\n\t\t\tpolldaddy: 'crowdsignal',\n\t\t};\n\t\tnewAttributes.providerNameSlug =\n\t\t\tproviderSlug in deprecated\n\t\t\t\t? deprecated[ providerSlug ]\n\t\t\t\t: providerSlug;\n\t\t// This is needed as the `responsive` attribute was passed\n\t\t// in a different way before the refactoring to block variations.\n\t\tif ( ! [ 'amazon-kindle', 'wordpress' ].includes( providerSlug ) ) {\n\t\t\tnewAttributes.responsive = true;\n\t\t}\n\t\tname = 'core/embed';\n\t}\n\n\t// Convert Post Comment blocks in existing content to Comment blocks.\n\t// TODO: Remove these checks when WordPress 6.0 is released.\n\tif ( name === 'core/post-comment-author' ) {\n\t\tname = 'core/comment-author-name';\n\t}\n\tif ( name === 'core/post-comment-content' ) {\n\t\tname = 'core/comment-content';\n\t}\n\tif ( name === 'core/post-comment-date' ) {\n\t\tname = 'core/comment-date';\n\t}\n\tif ( name === 'core/comments-query-loop' ) {\n\t\tname = 'core/comments';\n\t\tconst { className = '' } = newAttributes;\n\t\tif ( ! className.includes( 'wp-block-comments-query-loop' ) ) {\n\t\t\tnewAttributes.className = [\n\t\t\t\t'wp-block-comments-query-loop',\n\t\t\t\tclassName,\n\t\t\t].join( ' ' );\n\t\t}\n\t\t// Note that we also had to add a deprecation to the block in order\n\t\t// for the ID change to work.\n\t}\n\tif ( name === 'core/post-comments' ) {\n\t\tname = 'core/comments';\n\t\tnewAttributes.legacy = true;\n\t}\n\n\t// Column count was stored as a string from WP 6.3-6.6. Convert it to a number.\n\tif (\n\t\tattributes.layout?.type === 'grid' &&\n\t\ttypeof attributes.layout?.columnCount === 'string'\n\t) {\n\t\tnewAttributes.layout = {\n\t\t\t...newAttributes.layout,\n\t\t\tcolumnCount: parseInt( attributes.layout.columnCount, 10 ),\n\t\t};\n\t}\n\n\t// Column span and row span were stored as strings in WP 6.6. Convert them to numbers.\n\tif ( typeof attributes.style?.layout?.columnSpan === 'string' ) {\n\t\tconst columnSpanNumber = parseInt(\n\t\t\tattributes.style.layout.columnSpan,\n\t\t\t10\n\t\t);\n\t\tnewAttributes.style = {\n\t\t\t...newAttributes.style,\n\t\t\tlayout: {\n\t\t\t\t...newAttributes.style.layout,\n\t\t\t\tcolumnSpan: isNaN( columnSpanNumber )\n\t\t\t\t\t? undefined\n\t\t\t\t\t: columnSpanNumber,\n\t\t\t},\n\t\t};\n\t}\n\tif ( typeof attributes.style?.layout?.rowSpan === 'string' ) {\n\t\tconst rowSpanNumber = parseInt( attributes.style.layout.rowSpan, 10 );\n\t\tnewAttributes.style = {\n\t\t\t...newAttributes.style,\n\t\t\tlayout: {\n\t\t\t\t...newAttributes.style.layout,\n\t\t\t\trowSpan: isNaN( rowSpanNumber ) ? undefined : rowSpanNumber,\n\t\t\t},\n\t\t};\n\t}\n\n\t// The following code is only relevant for the Gutenberg plugin.\n\t// It's a stand-alone if statement for dead-code elimination.\n\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t// Convert pattern overrides added during experimental phase.\n\t\t// Only four blocks were supported initially.\n\t\t// These checks can be removed in WordPress 6.6.\n\t\tif (\n\t\t\tnewAttributes.metadata?.bindings &&\n\t\t\t( name === 'core/paragraph' ||\n\t\t\t\tname === 'core/heading' ||\n\t\t\t\tname === 'core/image' ||\n\t\t\t\tname === 'core/button' ) &&\n\t\t\tnewAttributes.metadata.bindings.__default?.source !==\n\t\t\t\t'core/pattern-overrides'\n\t\t) {\n\t\t\tconst bindings = [\n\t\t\t\t'content',\n\t\t\t\t'url',\n\t\t\t\t'title',\n\t\t\t\t'id',\n\t\t\t\t'alt',\n\t\t\t\t'text',\n\t\t\t\t'linkTarget',\n\t\t\t];\n\t\t\t// Delete any existing individual bindings and add a default binding.\n\t\t\t// It was only possible to add all the default attributes through the UI,\n\t\t\t// So as soon as we find an attribute, we can assume all default attributes are overridable.\n\t\t\tlet hasPatternOverrides = false;\n\t\t\tbindings.forEach( ( binding ) => {\n\t\t\t\tif (\n\t\t\t\t\tnewAttributes.metadata.bindings[ binding ]?.source ===\n\t\t\t\t\t'core/pattern-overrides'\n\t\t\t\t) {\n\t\t\t\t\thasPatternOverrides = true;\n\t\t\t\t\tnewAttributes.metadata = {\n\t\t\t\t\t\t...newAttributes.metadata,\n\t\t\t\t\t\tbindings: { ...newAttributes.metadata.bindings },\n\t\t\t\t\t};\n\t\t\t\t\tdelete newAttributes.metadata.bindings[ binding ];\n\t\t\t\t}\n\t\t\t} );\n\t\t\tif ( hasPatternOverrides ) {\n\t\t\t\tnewAttributes.metadata.bindings.__default = {\n\t\t\t\t\tsource: 'core/pattern-overrides',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\treturn [ name, newAttributes ];\n}\n", "/**\n * Given object and string of dot-delimited path segments, returns value at\n * path or undefined if path cannot be resolved.\n *\n * @param object Lookup object\n * @param path   Path to resolve\n * @return       Resolved value\n */\nexport default function getPath(object, path) {\n  var segments = path.split('.');\n  var segment;\n  while (segment = segments.shift()) {\n    if (!(segment in object)) {\n      return;\n    }\n    object = object[segment];\n  }\n  return object;\n}", "/**\n * Internal dependencies\n */\nimport getPath from './get-path';\n/**\n * Function returning a DOM document created by `createHTMLDocument`. The same\n * document is returned between invocations.\n *\n * @return DOM document.\n */\nvar getDocument = function () {\n  var doc;\n  return function () {\n    if (!doc) {\n      doc = document.implementation.createHTMLDocument('');\n    }\n    return doc;\n  };\n}();\n\n/**\n * Given a markup string or DOM element, creates an object aligning with the\n * shape of the matchers object, or the value returned by the matcher.\n *\n * @param source Source content\n * @param matchers Matcher function or object of matchers\n */\n\n/**\n * Given a markup string or DOM element, creates an object aligning with the\n * shape of the matchers object, or the value returned by the matcher.\n *\n * @param source Source content\n * @param matchers Matcher function or object of matchers\n */\nexport function parse(source, matchers) {\n  if (!matchers) {\n    return;\n  }\n\n  // Coerce to element\n  if ('string' === typeof source) {\n    var doc = getDocument();\n    doc.body.innerHTML = source;\n    source = doc.body;\n  }\n\n  // Return singular value\n  if (typeof matchers === 'function') {\n    return matchers(source);\n  }\n\n  // Bail if we can't handle matchers\n  if (Object !== matchers.constructor) {\n    return;\n  }\n\n  // Shape result by matcher object\n  return Object.keys(matchers).reduce(function (memo, key) {\n    var inner = matchers[key];\n    memo[key] = parse(source, inner);\n    return memo;\n  }, {});\n}\n\n/**\n * Generates a function which matches node of type selector, returning an\n * attribute by property if the attribute exists. If no selector is passed,\n * returns property of the query element.\n *\n * @param name Property name\n * @return Property value\n */\n\n/**\n * Generates a function which matches node of type selector, returning an\n * attribute by property if the attribute exists. If no selector is passed,\n * returns property of the query element.\n *\n * @param selector Optional selector\n * @param name Property name\n * @return Property value\n */\nexport function prop(arg1, arg2) {\n  var name;\n  var selector;\n  if (1 === arguments.length) {\n    name = arg1;\n    selector = undefined;\n  } else {\n    name = arg2;\n    selector = arg1;\n  }\n  return function (node) {\n    var match = node;\n    if (selector) {\n      match = node.querySelector(selector);\n    }\n    if (match) {\n      return getPath(match, name);\n    }\n  };\n}\n\n/**\n * Generates a function which matches node of type selector, returning an\n * attribute by name if the attribute exists. If no selector is passed,\n * returns attribute of the query element.\n *\n * @param name Attribute name\n * @return Attribute value\n */\n\n/**\n * Generates a function which matches node of type selector, returning an\n * attribute by name if the attribute exists. If no selector is passed,\n * returns attribute of the query element.\n *\n * @param selector Optional selector\n * @param name Attribute name\n * @return Attribute value\n */\nexport function attr(arg1, arg2) {\n  var name;\n  var selector;\n  if (1 === arguments.length) {\n    name = arg1;\n    selector = undefined;\n  } else {\n    name = arg2;\n    selector = arg1;\n  }\n  return function (node) {\n    var attributes = prop(selector, 'attributes')(node);\n    if (attributes && Object.prototype.hasOwnProperty.call(attributes, name)) {\n      return attributes[name].value;\n    }\n  };\n}\n\n/**\n * Convenience for `prop( selector, 'innerHTML' )`.\n *\n * @see prop()\n *\n * @param selector Optional selector\n * @return Inner HTML\n */\nexport function html(selector) {\n  return prop(selector, 'innerHTML');\n}\n\n/**\n * Convenience for `prop( selector, 'textContent' )`.\n *\n * @see prop()\n *\n * @param selector Optional selector\n * @return Text content\n */\nexport function text(selector) {\n  return prop(selector, 'textContent');\n}\n\n/**\n * Creates a new matching context by first finding elements matching selector\n * using querySelectorAll before then running another `parse` on `matchers`\n * scoped to the matched elements.\n *\n * @see parse()\n *\n * @param selector Selector to match\n * @param matchers Matcher function or object of matchers\n * @return Matcher function which returns an array of matched value(s)\n */\nexport function query(selector, matchers) {\n  return function (node) {\n    var matches = node.querySelectorAll(selector);\n    return [].map.call(matches, function (match) {\n      return parse(match, matchers);\n    });\n  };\n}", "/**\n * WordPress dependencies\n */\nimport { renderToString } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport * as node from './node';\n\n/**\n * A representation of a block's rich text value.\n *\n * @typedef {WPBlockNode[]} WPBlockChildren\n */\n\n/**\n * Given block children, returns a serialize-capable WordPress element.\n *\n * @param {WPBlockChildren} children Block children object to convert.\n *\n * @return {Element} A serialize-capable element.\n */\nexport function getSerializeCapableElement( children ) {\n\t// The fact that block children are compatible with the element serializer is\n\t// merely an implementation detail that currently serves to be true, but\n\t// should not be mistaken as being a guarantee on the external API. The\n\t// public API only offers guarantees to work with strings (toHTML) and DOM\n\t// elements (fromDOM), and should provide utilities to manipulate the value\n\t// rather than expect consumers to inspect or construct its shape (concat).\n\treturn children;\n}\n\n/**\n * Given block children, returns an array of block nodes.\n *\n * @param {WPBlockChildren} children Block children object to convert.\n *\n * @return {Array<WPBlockNode>} An array of individual block nodes.\n */\nfunction getChildrenArray( children ) {\n\tdeprecated( 'wp.blocks.children.getChildrenArray', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\t// The fact that block children are compatible with the element serializer\n\t// is merely an implementation detail that currently serves to be true, but\n\t// should not be mistaken as being a guarantee on the external API.\n\treturn children;\n}\n\n/**\n * Given two or more block nodes, returns a new block node representing a\n * concatenation of its values.\n *\n * @param {...WPBlockChildren} blockNodes Block nodes to concatenate.\n *\n * @return {WPBlockChildren} Concatenated block node.\n */\nexport function concat( ...blockNodes ) {\n\tdeprecated( 'wp.blocks.children.concat', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'wp.richText.concat',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\tconst result = [];\n\tfor ( let i = 0; i < blockNodes.length; i++ ) {\n\t\tconst blockNode = Array.isArray( blockNodes[ i ] )\n\t\t\t? blockNodes[ i ]\n\t\t\t: [ blockNodes[ i ] ];\n\t\tfor ( let j = 0; j < blockNode.length; j++ ) {\n\t\t\tconst child = blockNode[ j ];\n\t\t\tconst canConcatToPreviousString =\n\t\t\t\ttypeof child === 'string' &&\n\t\t\t\ttypeof result[ result.length - 1 ] === 'string';\n\n\t\t\tif ( canConcatToPreviousString ) {\n\t\t\t\tresult[ result.length - 1 ] += child;\n\t\t\t} else {\n\t\t\t\tresult.push( child );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Given an iterable set of DOM nodes, returns equivalent block children.\n * Ignores any non-element/text nodes included in set.\n *\n * @param {Iterable.<Node>} domNodes Iterable set of DOM nodes to convert.\n *\n * @return {WPBlockChildren} Block children equivalent to DOM nodes.\n */\nexport function fromDOM( domNodes ) {\n\tdeprecated( 'wp.blocks.children.fromDOM', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'wp.richText.create',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\tconst result = [];\n\tfor ( let i = 0; i < domNodes.length; i++ ) {\n\t\ttry {\n\t\t\tresult.push( node.fromDOM( domNodes[ i ] ) );\n\t\t} catch ( error ) {\n\t\t\t// Simply ignore if DOM node could not be converted.\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Given a block node, returns its HTML string representation.\n *\n * @param {WPBlockChildren} children Block node(s) to convert to string.\n *\n * @return {string} String HTML representation of block node.\n */\nexport function toHTML( children ) {\n\tdeprecated( 'wp.blocks.children.toHTML', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'wp.richText.toHTMLString',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\tconst element = getSerializeCapableElement( children );\n\n\treturn renderToString( element );\n}\n\n/**\n * Given a selector, returns an hpq matcher generating a WPBlockChildren value\n * matching the selector result.\n *\n * @param {string} selector DOM selector.\n *\n * @return {Function} hpq matcher.\n */\nexport function matcher( selector ) {\n\tdeprecated( 'wp.blocks.children.matcher', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'html source',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\treturn ( domNode ) => {\n\t\tlet match = domNode;\n\n\t\tif ( selector ) {\n\t\t\tmatch = domNode.querySelector( selector );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\treturn fromDOM( match.childNodes );\n\t\t}\n\n\t\treturn [];\n\t};\n}\n\n/**\n * Object of utility functions used in managing block attribute values of\n * source `children`.\n *\n * @see https://github.com/WordPress/gutenberg/pull/10439\n *\n * @deprecated since 4.0. The `children` source should not be used, and can be\n *             replaced by the `html` source.\n *\n * @private\n */\nexport default {\n\tconcat,\n\tgetChildrenArray,\n\tfromDOM,\n\ttoHTML,\n\tmatcher,\n};\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport * as children from './children';\n\n/**\n * A representation of a single node within a block's rich text value. If\n * representing a text node, the value is simply a string of the node value.\n * As representing an element node, it is an object of:\n *\n * 1. `type` (string): Tag name.\n * 2. `props` (object): Attributes and children array of WPBlockNode.\n *\n * @typedef {string|Object} WPBlockNode\n */\n\n/**\n * Given a single node and a node type (e.g. `'br'`), returns true if the node\n * corresponds to that type, false otherwise.\n *\n * @param {WPBlockNode} node Block node to test\n * @param {string}      type Node to type to test against.\n *\n * @return {boolean} Whether node is of intended type.\n */\nfunction isNodeOfType( node, type ) {\n\tdeprecated( 'wp.blocks.node.isNodeOfType', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\treturn node && node.type === type;\n}\n\n/**\n * Given an object implementing the NamedNodeMap interface, returns a plain\n * object equivalent value of name, value key-value pairs.\n *\n * @see https://dom.spec.whatwg.org/#interface-namednodemap\n *\n * @param {NamedNodeMap} nodeMap NamedNodeMap to convert to object.\n *\n * @return {Object} Object equivalent value of NamedNodeMap.\n */\nexport function getNamedNodeMapAsObject( nodeMap ) {\n\tconst result = {};\n\tfor ( let i = 0; i < nodeMap.length; i++ ) {\n\t\tconst { name, value } = nodeMap[ i ];\n\t\tresult[ name ] = value;\n\t}\n\n\treturn result;\n}\n\n/**\n * Given a DOM Element or Text node, returns an equivalent block node. Throws\n * if passed any node type other than element or text.\n *\n * @throws {TypeError} If non-element/text node is passed.\n *\n * @param {Node} domNode DOM node to convert.\n *\n * @return {WPBlockNode} Block node equivalent to DOM node.\n */\nexport function fromDOM( domNode ) {\n\tdeprecated( 'wp.blocks.node.fromDOM', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'wp.richText.create',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\tif ( domNode.nodeType === domNode.TEXT_NODE ) {\n\t\treturn domNode.nodeValue;\n\t}\n\n\tif ( domNode.nodeType !== domNode.ELEMENT_NODE ) {\n\t\tthrow new TypeError(\n\t\t\t'A block node can only be created from a node of type text or ' +\n\t\t\t\t'element.'\n\t\t);\n\t}\n\n\treturn {\n\t\ttype: domNode.nodeName.toLowerCase(),\n\t\tprops: {\n\t\t\t...getNamedNodeMapAsObject( domNode.attributes ),\n\t\t\tchildren: children.fromDOM( domNode.childNodes ),\n\t\t},\n\t};\n}\n\n/**\n * Given a block node, returns its HTML string representation.\n *\n * @param {WPBlockNode} node Block node to convert to string.\n *\n * @return {string} String HTML representation of block node.\n */\nexport function toHTML( node ) {\n\tdeprecated( 'wp.blocks.node.toHTML', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'wp.richText.toHTMLString',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\treturn children.toHTML( [ node ] );\n}\n\n/**\n * Given a selector, returns an hpq matcher generating a WPBlockNode value\n * matching the selector result.\n *\n * @param {string} selector DOM selector.\n *\n * @return {Function} hpq matcher.\n */\nexport function matcher( selector ) {\n\tdeprecated( 'wp.blocks.node.matcher', {\n\t\tsince: '6.1',\n\t\tversion: '6.3',\n\t\talternative: 'html source',\n\t\tlink: 'https://developer.wordpress.org/block-editor/how-to-guides/block-tutorial/introducing-attributes-and-editable-fields/',\n\t} );\n\n\treturn ( domNode ) => {\n\t\tlet match = domNode;\n\n\t\tif ( selector ) {\n\t\t\tmatch = domNode.querySelector( selector );\n\t\t}\n\n\t\ttry {\n\t\t\treturn fromDOM( match );\n\t\t} catch ( error ) {\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\n/**\n * Object of utility functions used in managing block attribute values of\n * source `node`.\n *\n * @see https://github.com/WordPress/gutenberg/pull/10439\n *\n * @deprecated since 4.0. The `node` source should not be used, and can be\n *             replaced by the `html` source.\n *\n * @private\n */\nexport default {\n\tisNodeOfType,\n\tfromDOM,\n\ttoHTML,\n\tmatcher,\n};\n", "/**\n * External dependencies\n */\nexport { attr, prop, text, query } from 'hpq';\n\n/**\n * WordPress dependencies\n */\nimport { RichTextData } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nexport { matcher as node } from './node';\nexport { matcher as children } from './children';\n\nexport function html( selector, multilineTag ) {\n\treturn ( domNode ) => {\n\t\tlet match = domNode;\n\n\t\tif ( selector ) {\n\t\t\tmatch = domNode.querySelector( selector );\n\t\t}\n\n\t\tif ( ! match ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet value = '';\n\t\t\tconst length = match.children.length;\n\n\t\t\tfor ( let index = 0; index < length; index++ ) {\n\t\t\t\tconst child = match.children[ index ];\n\n\t\t\t\tif ( child.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvalue += child.outerHTML;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn match.innerHTML;\n\t};\n}\n\nexport const richText = ( selector, preserveWhiteSpace ) => ( el ) => {\n\tconst target = selector ? el.querySelector( selector ) : el;\n\treturn target\n\t\t? RichTextData.fromHTMLElement( target, { preserveWhiteSpace } )\n\t\t: RichTextData.empty();\n};\n", "/**\n * External dependencies\n */\nimport { parse as hpqParse } from 'hpq';\nimport memoize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { applyFilters } from '@wordpress/hooks';\nimport { RichTextData } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport {\n\tattr,\n\thtml,\n\ttext,\n\tquery,\n\tnode,\n\tchildren,\n\tprop,\n\trichText,\n} from '../matchers';\nimport { normalizeBlockType, getDefault } from '../utils';\n\n/**\n * Higher-order hpq matcher which enhances an attribute matcher to return true\n * or false depending on whether the original matcher returns undefined. This\n * is useful for boolean attributes (e.g. disabled) whose attribute values may\n * be technically falsey (empty string), though their mere presence should be\n * enough to infer as true.\n *\n * @param {Function} matcher Original hpq matcher.\n *\n * @return {Function} Enhanced hpq matcher.\n */\nexport const toBooleanAttributeMatcher = ( matcher ) => ( value ) =>\n\tmatcher( value ) !== undefined;\n\n/**\n * Returns true if value is of the given JSON schema type, or false otherwise.\n *\n * @see http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.25\n *\n * @param {*}      value Value to test.\n * @param {string} type  Type to test.\n *\n * @return {boolean} Whether value is of type.\n */\nexport function isOfType( value, type ) {\n\tswitch ( type ) {\n\t\tcase 'rich-text':\n\t\t\treturn value instanceof RichTextData;\n\n\t\tcase 'string':\n\t\t\treturn typeof value === 'string';\n\n\t\tcase 'boolean':\n\t\t\treturn typeof value === 'boolean';\n\n\t\tcase 'object':\n\t\t\treturn !! value && value.constructor === Object;\n\n\t\tcase 'null':\n\t\t\treturn value === null;\n\n\t\tcase 'array':\n\t\t\treturn Array.isArray( value );\n\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn typeof value === 'number';\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns true if value is of an array of given JSON schema types, or false\n * otherwise.\n *\n * @see http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.25\n *\n * @param {*}        value Value to test.\n * @param {string[]} types Types to test.\n *\n * @return {boolean} Whether value is of types.\n */\nexport function isOfTypes( value, types ) {\n\treturn types.some( ( type ) => isOfType( value, type ) );\n}\n\n/**\n * Given an attribute key, an attribute's schema, a block's raw content and the\n * commentAttributes returns the attribute value depending on its source\n * definition of the given attribute key.\n *\n * @param {string} attributeKey      Attribute key.\n * @param {Object} attributeSchema   Attribute's schema.\n * @param {Node}   innerDOM          Parsed DOM of block's inner HTML.\n * @param {Object} commentAttributes Block's comment attributes.\n * @param {string} innerHTML         Raw HTML from block node's innerHTML property.\n *\n * @return {*} Attribute value.\n */\nexport function getBlockAttribute(\n\tattributeKey,\n\tattributeSchema,\n\tinnerDOM,\n\tcommentAttributes,\n\tinnerHTML\n) {\n\tlet value;\n\n\tswitch ( attributeSchema.source ) {\n\t\t// An undefined source means that it's an attribute serialized to the\n\t\t// block's \"comment\".\n\t\tcase undefined:\n\t\t\tvalue = commentAttributes\n\t\t\t\t? commentAttributes[ attributeKey ]\n\t\t\t\t: undefined;\n\t\t\tbreak;\n\t\t// raw source means that it's the original raw block content.\n\t\tcase 'raw':\n\t\t\tvalue = innerHTML;\n\t\t\tbreak;\n\t\tcase 'attribute':\n\t\tcase 'property':\n\t\tcase 'html':\n\t\tcase 'text':\n\t\tcase 'rich-text':\n\t\tcase 'children':\n\t\tcase 'node':\n\t\tcase 'query':\n\t\tcase 'tag':\n\t\t\tvalue = parseWithAttributeSchema( innerDOM, attributeSchema );\n\t\t\tbreak;\n\t}\n\n\tif (\n\t\t! isValidByType( value, attributeSchema.type ) ||\n\t\t! isValidByEnum( value, attributeSchema.enum )\n\t) {\n\t\t// Reject the value if it is not valid. Reverting to the undefined\n\t\t// value ensures the default is respected, if applicable.\n\t\tvalue = undefined;\n\t}\n\n\tif ( value === undefined ) {\n\t\tvalue = getDefault( attributeSchema );\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns true if value is valid per the given block attribute schema type\n * definition, or false otherwise.\n *\n * @see https://json-schema.org/latest/json-schema-validation.html#rfc.section.6.1.1\n *\n * @param {*}                       value Value to test.\n * @param {?(Array<string>|string)} type  Block attribute schema type.\n *\n * @return {boolean} Whether value is valid.\n */\nexport function isValidByType( value, type ) {\n\treturn (\n\t\ttype === undefined ||\n\t\tisOfTypes( value, Array.isArray( type ) ? type : [ type ] )\n\t);\n}\n\n/**\n * Returns true if value is valid per the given block attribute schema enum\n * definition, or false otherwise.\n *\n * @see https://json-schema.org/latest/json-schema-validation.html#rfc.section.6.1.2\n *\n * @param {*}      value   Value to test.\n * @param {?Array} enumSet Block attribute schema enum.\n *\n * @return {boolean} Whether value is valid.\n */\nexport function isValidByEnum( value, enumSet ) {\n\treturn ! Array.isArray( enumSet ) || enumSet.includes( value );\n}\n\n/**\n * Returns an hpq matcher given a source object.\n *\n * @param {Object} sourceConfig Attribute Source object.\n *\n * @return {Function} A hpq Matcher.\n */\nexport const matcherFromSource = memoize( ( sourceConfig ) => {\n\tswitch ( sourceConfig.source ) {\n\t\tcase 'attribute': {\n\t\t\tlet matcher = attr( sourceConfig.selector, sourceConfig.attribute );\n\t\t\tif ( sourceConfig.type === 'boolean' ) {\n\t\t\t\tmatcher = toBooleanAttributeMatcher( matcher );\n\t\t\t}\n\t\t\treturn matcher;\n\t\t}\n\t\tcase 'html':\n\t\t\treturn html( sourceConfig.selector, sourceConfig.multiline );\n\t\tcase 'text':\n\t\t\treturn text( sourceConfig.selector );\n\t\tcase 'rich-text':\n\t\t\treturn richText(\n\t\t\t\tsourceConfig.selector,\n\t\t\t\tsourceConfig.__unstablePreserveWhiteSpace\n\t\t\t);\n\t\tcase 'children':\n\t\t\treturn children( sourceConfig.selector );\n\t\tcase 'node':\n\t\t\treturn node( sourceConfig.selector );\n\t\tcase 'query':\n\t\t\tconst subMatchers = Object.fromEntries(\n\t\t\t\tObject.entries( sourceConfig.query ).map(\n\t\t\t\t\t( [ key, subSourceConfig ] ) => [\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tmatcherFromSource( subSourceConfig ),\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn query( sourceConfig.selector, subMatchers );\n\t\tcase 'tag': {\n\t\t\tconst matcher = prop( sourceConfig.selector, 'nodeName' );\n\t\t\treturn ( domNode ) => matcher( domNode )?.toLowerCase();\n\t\t}\n\t\tdefault:\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( `Unknown source type \"${ sourceConfig.source }\"` );\n\t}\n} );\n\n/**\n * Parse a HTML string into DOM tree.\n *\n * @param {string|Node} innerHTML HTML string or already parsed DOM node.\n *\n * @return {Node} Parsed DOM node.\n */\nfunction parseHtml( innerHTML ) {\n\treturn hpqParse( innerHTML, ( h ) => h );\n}\n\n/**\n * Given a block's raw content and an attribute's schema returns the attribute's\n * value depending on its source.\n *\n * @param {string|Node} innerHTML       Block's raw content.\n * @param {Object}      attributeSchema Attribute's schema.\n *\n * @return {*} Attribute value.\n */\nexport function parseWithAttributeSchema( innerHTML, attributeSchema ) {\n\treturn matcherFromSource( attributeSchema )( parseHtml( innerHTML ) );\n}\n\n/**\n * Returns the block attributes of a registered block node given its type.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n * @param {string|Node}   innerHTML       Raw block content.\n * @param {?Object}       attributes      Known block attributes (from delimiters).\n *\n * @return {Object} All block attributes.\n */\nexport function getBlockAttributes(\n\tblockTypeOrName,\n\tinnerHTML,\n\tattributes = {}\n) {\n\tconst doc = parseHtml( innerHTML );\n\tconst blockType = normalizeBlockType( blockTypeOrName );\n\n\tconst blockAttributes = Object.fromEntries(\n\t\tObject.entries( blockType.attributes ?? {} ).map(\n\t\t\t( [ key, schema ] ) => [\n\t\t\t\tkey,\n\t\t\t\tgetBlockAttribute( key, schema, doc, attributes, innerHTML ),\n\t\t\t]\n\t\t)\n\t);\n\n\treturn applyFilters(\n\t\t'blocks.getBlockAttributes',\n\t\tblockAttributes,\n\t\tblockType,\n\t\tinnerHTML,\n\t\tattributes\n\t);\n}\n", "/**\n * Internal dependencies\n */\nimport { hasBlockSupport } from '../registration';\nimport { getSaveContent } from '../serializer';\nimport { parseWithAttributeSchema } from './get-block-attributes';\n\nconst CLASS_ATTR_SCHEMA = {\n\ttype: 'string',\n\tsource: 'attribute',\n\tselector: '[data-custom-class-name] > *',\n\tattribute: 'class',\n};\n\n/**\n * Given an HTML string, returns an array of class names assigned to the root\n * element in the markup.\n *\n * @param {string} innerHTML Markup string from which to extract classes.\n *\n * @return {string[]} Array of class names assigned to the root element.\n */\nexport function getHTMLRootElementClasses( innerHTML ) {\n\tconst parsed = parseWithAttributeSchema(\n\t\t`<div data-custom-class-name>${ innerHTML }</div>`,\n\t\tCLASS_ATTR_SCHEMA\n\t);\n\n\treturn parsed ? parsed.trim().split( /\\s+/ ) : [];\n}\n\n/**\n * Given a parsed set of block attributes, if the block supports custom class\n * names and an unknown class (per the block's serialization behavior) is\n * found, the unknown classes are treated as custom classes. This prevents the\n * block from being considered as invalid.\n *\n * @param {Object} blockAttributes Original block attributes.\n * @param {Object} blockType       Block type settings.\n * @param {string} innerHTML       Original block markup.\n *\n * @return {Object} Filtered block attributes.\n */\nexport function fixCustomClassname( blockAttributes, blockType, innerHTML ) {\n\tif ( ! hasBlockSupport( blockType, 'customClassName', true ) ) {\n\t\treturn blockAttributes;\n\t}\n\n\tconst modifiedBlockAttributes = { ...blockAttributes };\n\t// To determine difference, serialize block given the known set of\n\t// attributes, with the exception of `className`. This will determine\n\t// the default set of classes. From there, any difference in innerHTML\n\t// can be considered as custom classes.\n\tconst { className: omittedClassName, ...attributesSansClassName } =\n\t\tmodifiedBlockAttributes;\n\tconst serialized = getSaveContent( blockType, attributesSansClassName );\n\tconst defaultClasses = getHTMLRootElementClasses( serialized );\n\tconst actualClasses = getHTMLRootElementClasses( innerHTML );\n\n\tconst customClasses = actualClasses.filter(\n\t\t( className ) => ! defaultClasses.includes( className )\n\t);\n\n\tif ( customClasses.length ) {\n\t\tmodifiedBlockAttributes.className = customClasses.join( ' ' );\n\t} else if ( serialized ) {\n\t\tdelete modifiedBlockAttributes.className;\n\t}\n\n\treturn modifiedBlockAttributes;\n}\n", "/**\n * Internal dependencies\n */\nimport { fixCustomClassname } from './fix-custom-classname';\n\n/**\n * Attempts to fix block invalidation by applying build-in validation fixes\n * like moving all extra classNames to the className attribute.\n *\n * @param {WPBlock}                               block     block object.\n * @param {import('../registration').WPBlockType} blockType Block type. This is normalize not necessary and\n *                                                          can be inferred from the block name,\n *                                                          but it's here for performance reasons.\n *\n * @return {WPBlock} Fixed block object\n */\nexport function applyBuiltInValidationFixes( block, blockType ) {\n\tconst updatedBlockAttributes = fixCustomClassname(\n\t\tblock.attributes,\n\t\tblockType,\n\t\tblock.originalContent\n\t);\n\treturn {\n\t\t...block,\n\t\tattributes: updatedBlockAttributes,\n\t};\n}\n", "/**\n * Internal dependencies\n */\nimport { DEPRECATED_ENTRY_KEYS } from '../constants';\nimport { validateBlock } from '../validation';\nimport { getBlockAttributes } from './get-block-attributes';\nimport { applyBuiltInValidationFixes } from './apply-built-in-validation-fixes';\nimport { omit } from '../utils';\n\n/**\n * Function that takes no arguments and always returns false.\n *\n * @return {boolean} Always returns false.\n */\nfunction stubFalse() {\n\treturn false;\n}\n\n/**\n * Given a block object, returns a new copy of the block with any applicable\n * deprecated migrations applied, or the original block if it was both valid\n * and no eligible migrations exist.\n *\n * @param {import(\".\").WPBlock}                   block     Parsed and invalid block object.\n * @param {import(\".\").WPRawBlock}                rawBlock  Raw block object.\n * @param {import('../registration').WPBlockType} blockType Block type. This is normalize not necessary and\n *                                                          can be inferred from the block name,\n *                                                          but it's here for performance reasons.\n *\n * @return {import(\".\").WPBlock} Migrated block object.\n */\nexport function applyBlockDeprecatedVersions( block, rawBlock, blockType ) {\n\tconst parsedAttributes = rawBlock.attrs;\n\tconst { deprecated: deprecatedDefinitions } = blockType;\n\t// Bail early if there are no registered deprecations to be handled.\n\tif ( ! deprecatedDefinitions || ! deprecatedDefinitions.length ) {\n\t\treturn block;\n\t}\n\n\t// By design, blocks lack any sort of version tracking. Instead, to process\n\t// outdated content the system operates a queue out of all the defined\n\t// attribute shapes and tries each definition until the input produces a\n\t// valid result. This mechanism seeks to avoid polluting the user-space with\n\t// machine-specific code. An invalid block is thus a block that could not be\n\t// matched successfully with any of the registered deprecation definitions.\n\tfor ( let i = 0; i < deprecatedDefinitions.length; i++ ) {\n\t\t// A block can opt into a migration even if the block is valid by\n\t\t// defining `isEligible` on its deprecation. If the block is both valid\n\t\t// and does not opt to migrate, skip.\n\t\tconst { isEligible = stubFalse } = deprecatedDefinitions[ i ];\n\t\tif (\n\t\t\tblock.isValid &&\n\t\t\t! isEligible( parsedAttributes, block.innerBlocks, {\n\t\t\t\tblockNode: rawBlock,\n\t\t\t\tblock,\n\t\t\t} )\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Block type properties which could impact either serialization or\n\t\t// parsing are not considered in the deprecated block type by default,\n\t\t// and must be explicitly provided.\n\t\tconst deprecatedBlockType = Object.assign(\n\t\t\tomit( blockType, DEPRECATED_ENTRY_KEYS ),\n\t\t\tdeprecatedDefinitions[ i ]\n\t\t);\n\n\t\tlet migratedBlock = {\n\t\t\t...block,\n\t\t\tattributes: getBlockAttributes(\n\t\t\t\tdeprecatedBlockType,\n\t\t\t\tblock.originalContent,\n\t\t\t\tparsedAttributes\n\t\t\t),\n\t\t};\n\n\t\t// Ignore the deprecation if it produces a block which is not valid.\n\t\tlet [ isValid ] = validateBlock( migratedBlock, deprecatedBlockType );\n\n\t\t// If the migrated block is not valid initially, try the built-in fixes.\n\t\tif ( ! isValid ) {\n\t\t\tmigratedBlock = applyBuiltInValidationFixes(\n\t\t\t\tmigratedBlock,\n\t\t\t\tdeprecatedBlockType\n\t\t\t);\n\t\t\t[ isValid ] = validateBlock( migratedBlock, deprecatedBlockType );\n\t\t}\n\n\t\t// An invalid block does not imply incorrect HTML but the fact block\n\t\t// source information could be lost on re-serialization.\n\t\tif ( ! isValid ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet migratedInnerBlocks = migratedBlock.innerBlocks;\n\t\tlet migratedAttributes = migratedBlock.attributes;\n\n\t\t// A block may provide custom behavior to assign new attributes and/or\n\t\t// inner blocks.\n\t\tconst { migrate } = deprecatedBlockType;\n\t\tif ( migrate ) {\n\t\t\tlet migrated = migrate( migratedAttributes, block.innerBlocks );\n\t\t\tif ( ! Array.isArray( migrated ) ) {\n\t\t\t\tmigrated = [ migrated ];\n\t\t\t}\n\n\t\t\t[\n\t\t\t\tmigratedAttributes = parsedAttributes,\n\t\t\t\tmigratedInnerBlocks = block.innerBlocks,\n\t\t\t] = migrated;\n\t\t}\n\n\t\tblock = {\n\t\t\t...block,\n\t\t\tattributes: migratedAttributes,\n\t\t\tinnerBlocks: migratedInnerBlocks,\n\t\t\tisValid: true,\n\t\t\tvalidationIssues: [],\n\t\t};\n\t}\n\n\treturn block;\n}\n", "/**\n * WordPress dependencies\n */\nimport { parse as grammarParse } from '@wordpress/block-serialization-default-parser';\nimport { autop } from '@wordpress/autop';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetFreeformContentHandlerName,\n\tgetUnregisteredTypeHandlerName,\n\tgetBlockType,\n} from '../registration';\nimport { getSaveContent } from '../serializer';\nimport { validateBlock } from '../validation';\nimport { createBlock } from '../factory';\nimport { convertLegacyBlockNameAndAttributes } from './convert-legacy-block';\nimport { serializeRawBlock } from './serialize-raw-block';\nimport { getBlockAttributes } from './get-block-attributes';\nimport { applyBlockDeprecatedVersions } from './apply-block-deprecated-versions';\nimport { applyBuiltInValidationFixes } from './apply-built-in-validation-fixes';\n\n/**\n * The raw structure of a block includes its attributes, inner\n * blocks, and inner HTML. It is important to distinguish inner blocks from\n * the HTML content of the block as only the latter is relevant for block\n * validation and edit operations.\n *\n * @typedef WPRawBlock\n *\n * @property {string=}         blockName    Block name\n * @property {Object=}         attrs        Block raw or comment attributes.\n * @property {string}          innerHTML    HTML content of the block.\n * @property {(string|null)[]} innerContent Content without inner blocks.\n * @property {WPRawBlock[]}    innerBlocks  Inner Blocks.\n */\n\n/**\n * Fully parsed block object.\n *\n * @typedef WPBlock\n *\n * @property {string}     name                    Block name\n * @property {Object}     attributes              Block raw or comment attributes.\n * @property {WPBlock[]}  innerBlocks             Inner Blocks.\n * @property {string}     originalContent         Original content of the block before validation fixes.\n * @property {boolean}    isValid                 Whether the block is valid.\n * @property {Object[]}   validationIssues        Validation issues.\n * @property {WPRawBlock} [__unstableBlockSource] Un-processed original copy of block if created through parser.\n */\n\n/**\n * @typedef  {Object}  ParseOptions\n * @property {boolean?} __unstableSkipMigrationLogs If a block is migrated from a deprecated version, skip logging the migration details.\n * @property {boolean?} __unstableSkipAutop         Whether to skip autop when processing freeform content.\n */\n\n/**\n * Convert legacy blocks to their canonical form. This function is used\n * both in the parser level for previous content and to convert such blocks\n * used in Custom Post Types templates.\n *\n * @param {WPRawBlock} rawBlock\n *\n * @return {WPRawBlock} The block's name and attributes, changed accordingly if a match was found\n */\nfunction convertLegacyBlocks( rawBlock ) {\n\tconst [ correctName, correctedAttributes ] =\n\t\tconvertLegacyBlockNameAndAttributes(\n\t\t\trawBlock.blockName,\n\t\t\trawBlock.attrs\n\t\t);\n\treturn {\n\t\t...rawBlock,\n\t\tblockName: correctName,\n\t\tattrs: correctedAttributes,\n\t};\n}\n\n/**\n * Normalize the raw block by applying the fallback block name if none given,\n * sanitize the parsed HTML...\n *\n * @param {WPRawBlock}    rawBlock The raw block object.\n * @param {ParseOptions?} options  Extra options for handling block parsing.\n *\n * @return {WPRawBlock} The normalized block object.\n */\nexport function normalizeRawBlock( rawBlock, options ) {\n\tconst fallbackBlockName = getFreeformContentHandlerName();\n\n\t// If the grammar parsing don't produce any block name, use the freeform block.\n\tconst rawBlockName = rawBlock.blockName || getFreeformContentHandlerName();\n\tconst rawAttributes = rawBlock.attrs || {};\n\tconst rawInnerBlocks = rawBlock.innerBlocks || [];\n\tlet rawInnerHTML = rawBlock.innerHTML.trim();\n\n\t// Fallback content may be upgraded from classic content expecting implicit\n\t// automatic paragraphs, so preserve them. Assumes wpautop is idempotent,\n\t// meaning there are no negative consequences to repeated autop calls.\n\tif (\n\t\trawBlockName === fallbackBlockName &&\n\t\trawBlockName === 'core/freeform' &&\n\t\t! options?.__unstableSkipAutop\n\t) {\n\t\trawInnerHTML = autop( rawInnerHTML ).trim();\n\t}\n\n\treturn {\n\t\t...rawBlock,\n\t\tblockName: rawBlockName,\n\t\tattrs: rawAttributes,\n\t\tinnerHTML: rawInnerHTML,\n\t\tinnerBlocks: rawInnerBlocks,\n\t};\n}\n\n/**\n * Uses the \"unregistered blockType\" to create a block object.\n *\n * @param {WPRawBlock} rawBlock block.\n *\n * @return {WPRawBlock} The unregistered block object.\n */\nfunction createMissingBlockType( rawBlock ) {\n\tconst unregisteredFallbackBlock =\n\t\tgetUnregisteredTypeHandlerName() || getFreeformContentHandlerName();\n\n\t// Preserve undelimited content for use by the unregistered type\n\t// handler. A block node's `innerHTML` isn't enough, as that field only\n\t// carries the block's own HTML and not its nested blocks.\n\tconst originalUndelimitedContent = serializeRawBlock( rawBlock, {\n\t\tisCommentDelimited: false,\n\t} );\n\n\t// Preserve full block content for use by the unregistered type\n\t// handler, block boundaries included.\n\tconst originalContent = serializeRawBlock( rawBlock, {\n\t\tisCommentDelimited: true,\n\t} );\n\n\treturn {\n\t\tblockName: unregisteredFallbackBlock,\n\t\tattrs: {\n\t\t\toriginalName: rawBlock.blockName,\n\t\t\toriginalContent,\n\t\t\toriginalUndelimitedContent,\n\t\t},\n\t\tinnerHTML: rawBlock.blockName ? originalContent : rawBlock.innerHTML,\n\t\tinnerBlocks: rawBlock.innerBlocks,\n\t\tinnerContent: rawBlock.innerContent,\n\t};\n}\n\n/**\n * Validates a block and wraps with validation meta.\n *\n * The name here is regrettable but `validateBlock` is already taken.\n *\n * @param {WPBlock}                               unvalidatedBlock\n * @param {import('../registration').WPBlockType} blockType\n * @return {WPBlock}                              validated block, with auto-fixes if initially invalid\n */\nfunction applyBlockValidation( unvalidatedBlock, blockType ) {\n\t// Attempt to validate the block.\n\tconst [ isValid ] = validateBlock( unvalidatedBlock, blockType );\n\n\tif ( isValid ) {\n\t\treturn { ...unvalidatedBlock, isValid, validationIssues: [] };\n\t}\n\n\t// If the block is invalid, attempt some built-in fixes\n\t// like custom classNames handling.\n\tconst fixedBlock = applyBuiltInValidationFixes(\n\t\tunvalidatedBlock,\n\t\tblockType\n\t);\n\t// Attempt to validate the block once again after the built-in fixes.\n\tconst [ isFixedValid, validationIssues ] = validateBlock(\n\t\tfixedBlock,\n\t\tblockType\n\t);\n\n\treturn { ...fixedBlock, isValid: isFixedValid, validationIssues };\n}\n\n/**\n * Given a raw block returned by grammar parsing, returns a fully parsed block.\n *\n * @param {WPRawBlock}   rawBlock The raw block object.\n * @param {ParseOptions} options  Extra options for handling block parsing.\n *\n * @return {WPBlock | undefined} Fully parsed block.\n */\nexport function parseRawBlock( rawBlock, options ) {\n\tlet normalizedBlock = normalizeRawBlock( rawBlock, options );\n\n\t// During the lifecycle of the project, we renamed some old blocks\n\t// and transformed others to new blocks. To avoid breaking existing content,\n\t// we added this function to properly parse the old content.\n\tnormalizedBlock = convertLegacyBlocks( normalizedBlock );\n\n\t// Try finding the type for known block name.\n\tlet blockType = getBlockType( normalizedBlock.blockName );\n\n\t// If not blockType is found for the specified name, fallback to the \"unregistedBlockType\".\n\tif ( ! blockType ) {\n\t\tnormalizedBlock = createMissingBlockType( normalizedBlock );\n\t\tblockType = getBlockType( normalizedBlock.blockName );\n\t}\n\n\t// If it's an empty freeform block or there's no blockType (no missing block handler)\n\t// Then, just ignore the block.\n\t// It might be a good idea to throw a warning here.\n\t// TODO: I'm unsure about the unregisteredFallbackBlock check,\n\t// it might ignore some dynamic unregistered third party blocks wrongly.\n\tconst isFallbackBlock =\n\t\tnormalizedBlock.blockName === getFreeformContentHandlerName() ||\n\t\tnormalizedBlock.blockName === getUnregisteredTypeHandlerName();\n\tif ( ! blockType || ( ! normalizedBlock.innerHTML && isFallbackBlock ) ) {\n\t\treturn;\n\t}\n\n\t// Parse inner blocks recursively.\n\tconst parsedInnerBlocks = normalizedBlock.innerBlocks\n\t\t.map( ( innerBlock ) => parseRawBlock( innerBlock, options ) )\n\t\t// See https://github.com/WordPress/gutenberg/pull/17164.\n\t\t.filter( ( innerBlock ) => !! innerBlock );\n\n\t// Get the fully parsed block.\n\tconst parsedBlock = createBlock(\n\t\tnormalizedBlock.blockName,\n\t\tgetBlockAttributes(\n\t\t\tblockType,\n\t\t\tnormalizedBlock.innerHTML,\n\t\t\tnormalizedBlock.attrs\n\t\t),\n\t\tparsedInnerBlocks\n\t);\n\tparsedBlock.originalContent = normalizedBlock.innerHTML;\n\n\tconst validatedBlock = applyBlockValidation( parsedBlock, blockType );\n\tconst { validationIssues } = validatedBlock;\n\n\t// Run the block deprecation and migrations.\n\t// This is performed on both invalid and valid blocks because\n\t// migration using the `migrate` functions should run even\n\t// if the output is deemed valid.\n\tconst updatedBlock = applyBlockDeprecatedVersions(\n\t\tvalidatedBlock,\n\t\tnormalizedBlock,\n\t\tblockType\n\t);\n\n\tif ( ! updatedBlock.isValid ) {\n\t\t// Preserve the original unprocessed version of the block\n\t\t// that we received (no fixes, no deprecations) so that\n\t\t// we can save it as close to exactly the same way as\n\t\t// we loaded it. This is important to avoid corruption\n\t\t// and data loss caused by block implementations trying\n\t\t// to process data that isn't fully recognized.\n\t\tupdatedBlock.__unstableBlockSource = rawBlock;\n\t}\n\n\tif (\n\t\t! validatedBlock.isValid &&\n\t\tupdatedBlock.isValid &&\n\t\t! options?.__unstableSkipMigrationLogs\n\t) {\n\t\t/* eslint-disable no-console */\n\t\tconsole.groupCollapsed( 'Updated Block: %s', blockType.name );\n\t\tconsole.info(\n\t\t\t'Block successfully updated for `%s` (%o).\\n\\nNew content generated by `save` function:\\n\\n%s\\n\\nContent retrieved from post body:\\n\\n%s',\n\t\t\tblockType.name,\n\t\t\tblockType,\n\t\t\tgetSaveContent( blockType, updatedBlock.attributes ),\n\t\t\tupdatedBlock.originalContent\n\t\t);\n\t\tconsole.groupEnd();\n\t\t/* eslint-enable no-console */\n\t} else if ( ! validatedBlock.isValid && ! updatedBlock.isValid ) {\n\t\tvalidationIssues.forEach( ( { log, args } ) => log( ...args ) );\n\t}\n\n\treturn updatedBlock;\n}\n\n/**\n * Utilizes an optimized token-driven parser based on the Gutenberg grammar spec\n * defined through a parsing expression grammar to take advantage of the regular\n * cadence provided by block delimiters -- composed syntactically through HTML\n * comments -- which, given a general HTML document as an input, returns a block\n * list array representation.\n *\n * This is a recursive-descent parser that scans linearly once through the input\n * document. Instead of directly recursing it utilizes a trampoline mechanism to\n * prevent stack overflow. This initial pass is mainly interested in separating\n * and isolating the blocks serialized in the document and manifestly not in the\n * content within the blocks.\n *\n * @see\n * https://developer.wordpress.org/block-editor/packages/packages-block-serialization-default-parser/\n *\n * @param {string}       content The post content.\n * @param {ParseOptions} options Extra options for handling block parsing.\n *\n * @return {Array} Block list.\n */\nexport default function parse( content, options ) {\n\treturn grammarParse( content ).reduce( ( accumulator, rawBlock ) => {\n\t\tconst block = parseRawBlock( rawBlock, options );\n\t\tif ( block ) {\n\t\t\taccumulator.push( block );\n\t\t}\n\t\treturn accumulator;\n\t}, [] );\n}\n", "/**\n * Internal dependencies\n */\nimport { getBlockTransforms } from '../factory';\n\nexport function getRawTransforms() {\n\treturn getBlockTransforms( 'from' )\n\t\t.filter( ( { type } ) => type === 'raw' )\n\t\t.map( ( transform ) => {\n\t\t\treturn transform.isMatch\n\t\t\t\t? transform\n\t\t\t\t: {\n\t\t\t\t\t\t...transform,\n\t\t\t\t\t\tisMatch: ( node ) =>\n\t\t\t\t\t\t\ttransform.selector &&\n\t\t\t\t\t\t\tnode.matches( transform.selector ),\n\t\t\t\t  };\n\t\t} );\n}\n", "/**\n * WordPress dependencies\n */\nimport { Platform } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { createBlock, findTransform } from '../factory';\nimport parse from '../parser';\nimport { getBlockAttributes } from '../parser/get-block-attributes';\nimport { getRawTransforms } from './get-raw-transforms';\n\n/**\n * Converts HTML directly to blocks. Looks for a matching transform for each\n * top-level tag. The HTML should be filtered to not have any text between\n * top-level tags and formatted in a way that blocks can handle the HTML.\n *\n * @param {string}   html    HTML to convert.\n * @param {Function} handler The handler calling htmlToBlocks: either rawHandler\n *                           or pasteHandler.\n *\n * @return {Array} An array of blocks.\n */\nexport function htmlToBlocks( html, handler ) {\n\tconst doc = document.implementation.createHTMLDocument( '' );\n\n\tdoc.body.innerHTML = html;\n\n\treturn Array.from( doc.body.children ).flatMap( ( node ) => {\n\t\tconst rawTransform = findTransform(\n\t\t\tgetRawTransforms(),\n\t\t\t( { isMatch } ) => isMatch( node )\n\t\t);\n\n\t\tif ( ! rawTransform ) {\n\t\t\t// Until the HTML block is supported in the native version, we'll parse it\n\t\t\t// instead of creating the block to generate it as an unsupported block.\n\t\t\tif ( Platform.isNative ) {\n\t\t\t\treturn parse(\n\t\t\t\t\t`<!-- wp:html -->${ node.outerHTML }<!-- /wp:html -->`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn createBlock(\n\t\t\t\t// Should not be hardcoded.\n\t\t\t\t'core/html',\n\t\t\t\tgetBlockAttributes( 'core/html', node.outerHTML )\n\t\t\t);\n\t\t}\n\n\t\tconst { transform, blockName } = rawTransform;\n\n\t\tif ( transform ) {\n\t\t\tconst block = transform( node, handler );\n\t\t\tif ( node.hasAttribute( 'class' ) ) {\n\t\t\t\tblock.attributes.className = node.getAttribute( 'class' );\n\t\t\t}\n\t\t\treturn block;\n\t\t}\n\n\t\treturn createBlock(\n\t\t\tblockName,\n\t\t\tgetBlockAttributes( blockName, node.outerHTML )\n\t\t);\n\t} );\n}\n", "/**\n * WordPress dependencies\n */\nimport { isEmpty, isPhrasingContent } from '@wordpress/dom';\n\nexport default function normaliseBlocks( HTML, options = {} ) {\n\tconst decuDoc = document.implementation.createHTMLDocument( '' );\n\tconst accuDoc = document.implementation.createHTMLDocument( '' );\n\n\tconst decu = decuDoc.body;\n\tconst accu = accuDoc.body;\n\n\tdecu.innerHTML = HTML;\n\n\twhile ( decu.firstChild ) {\n\t\tconst node = decu.firstChild;\n\n\t\t// Text nodes: wrap in a paragraph, or append to previous.\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tif ( isEmpty( node ) ) {\n\t\t\t\tdecu.removeChild( node );\n\t\t\t} else {\n\t\t\t\tif ( ! accu.lastChild || accu.lastChild.nodeName !== 'P' ) {\n\t\t\t\t\taccu.appendChild( accuDoc.createElement( 'P' ) );\n\t\t\t\t}\n\n\t\t\t\taccu.lastChild.appendChild( node );\n\t\t\t}\n\t\t\t// Element nodes.\n\t\t} else if ( node.nodeType === node.ELEMENT_NODE ) {\n\t\t\t// BR nodes: create a new paragraph on double, or append to previous.\n\t\t\tif ( node.nodeName === 'BR' ) {\n\t\t\t\tif ( node.nextSibling && node.nextSibling.nodeName === 'BR' ) {\n\t\t\t\t\taccu.appendChild( accuDoc.createElement( 'P' ) );\n\t\t\t\t\tdecu.removeChild( node.nextSibling );\n\t\t\t\t}\n\n\t\t\t\t// Don't append to an empty paragraph.\n\t\t\t\tif (\n\t\t\t\t\taccu.lastChild &&\n\t\t\t\t\taccu.lastChild.nodeName === 'P' &&\n\t\t\t\t\taccu.lastChild.hasChildNodes()\n\t\t\t\t) {\n\t\t\t\t\taccu.lastChild.appendChild( node );\n\t\t\t\t} else {\n\t\t\t\t\tdecu.removeChild( node );\n\t\t\t\t}\n\t\t\t} else if ( node.nodeName === 'P' ) {\n\t\t\t\t// Only append non-empty paragraph nodes.\n\t\t\t\tif ( isEmpty( node ) && ! options.raw ) {\n\t\t\t\t\tdecu.removeChild( node );\n\t\t\t\t} else {\n\t\t\t\t\taccu.appendChild( node );\n\t\t\t\t}\n\t\t\t} else if ( isPhrasingContent( node ) ) {\n\t\t\t\tif ( ! accu.lastChild || accu.lastChild.nodeName !== 'P' ) {\n\t\t\t\t\taccu.appendChild( accuDoc.createElement( 'P' ) );\n\t\t\t\t}\n\t\t\t\taccu.lastChild.appendChild( node );\n\t\t\t} else {\n\t\t\t\taccu.appendChild( node );\n\t\t\t}\n\t\t} else {\n\t\t\tdecu.removeChild( node );\n\t\t}\n\t}\n\n\treturn accu.innerHTML;\n}\n", "/**\n * WordPress dependencies\n */\nimport { remove, replace } from '@wordpress/dom';\n\n/**\n * Looks for `<!--nextpage-->` and `<!--more-->` comments and\n * replaces them with a custom element representing a future block.\n *\n * The custom element is a way to bypass the rest of the `raw-handling`\n * transforms, which would eliminate other kinds of node with which to carry\n * `<!--more-->`'s data: nodes with `data` attributes, empty paragraphs, etc.\n *\n * The custom element is then expected to be recognized by any registered\n * block's `raw` transform.\n *\n * @param {Node}     node The node to be processed.\n * @param {Document} doc  The document of the node.\n * @return {void}\n */\nexport default function specialCommentConverter( node, doc ) {\n\tif ( node.nodeType !== node.COMMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tif (\n\t\tnode.nodeValue !== 'nextpage' &&\n\t\tnode.nodeValue.indexOf( 'more' ) !== 0\n\t) {\n\t\treturn;\n\t}\n\n\tconst block = createBlock( node, doc );\n\n\t// If our `<!--more-->` comment is in the middle of a paragraph, we should\n\t// split the paragraph in two and insert the more block in between. If it's\n\t// inside an empty paragraph, we should still move it out of the paragraph\n\t// and remove the paragraph. If there's no paragraph, fall back to simply\n\t// replacing the comment.\n\tif ( ! node.parentNode || node.parentNode.nodeName !== 'P' ) {\n\t\treplace( node, block );\n\t} else {\n\t\tconst childNodes = Array.from( node.parentNode.childNodes );\n\t\tconst nodeIndex = childNodes.indexOf( node );\n\t\tconst wrapperNode = node.parentNode.parentNode || doc.body;\n\n\t\tconst paragraphBuilder = ( acc, child ) => {\n\t\t\tif ( ! acc ) {\n\t\t\t\tacc = doc.createElement( 'p' );\n\t\t\t}\n\n\t\t\tacc.appendChild( child );\n\n\t\t\treturn acc;\n\t\t};\n\n\t\t// Split the original parent node and insert our more block\n\t\t[\n\t\t\tchildNodes.slice( 0, nodeIndex ).reduce( paragraphBuilder, null ),\n\t\t\tblock,\n\t\t\tchildNodes.slice( nodeIndex + 1 ).reduce( paragraphBuilder, null ),\n\t\t].forEach(\n\t\t\t( element ) =>\n\t\t\t\telement && wrapperNode.insertBefore( element, node.parentNode )\n\t\t);\n\n\t\t// Remove the old parent paragraph\n\t\tremove( node.parentNode );\n\t}\n}\n\nfunction createBlock( commentNode, doc ) {\n\tif ( commentNode.nodeValue === 'nextpage' ) {\n\t\treturn createNextpage( doc );\n\t}\n\n\t// Grab any custom text in the comment.\n\tconst customText = commentNode.nodeValue.slice( 4 ).trim();\n\n\t/*\n\t * When a `<!--more-->` comment is found, we need to look for any\n\t * `<!--noteaser-->` sibling, but it may not be a direct sibling\n\t * (whitespace typically lies in between)\n\t */\n\tlet sibling = commentNode;\n\tlet noTeaser = false;\n\twhile ( ( sibling = sibling.nextSibling ) ) {\n\t\tif (\n\t\t\tsibling.nodeType === sibling.COMMENT_NODE &&\n\t\t\tsibling.nodeValue === 'noteaser'\n\t\t) {\n\t\t\tnoTeaser = true;\n\t\t\tremove( sibling );\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn createMore( customText, noTeaser, doc );\n}\n\nfunction createMore( customText, noTeaser, doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/more';\n\tif ( customText ) {\n\t\tnode.dataset.customText = customText;\n\t}\n\tif ( noTeaser ) {\n\t\t// \"Boolean\" data attribute.\n\t\tnode.dataset.noTeaser = '';\n\t}\n\treturn node;\n}\n\nfunction createNextpage( doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/nextpage';\n\n\treturn node;\n}\n", "/**\n * WordPress dependencies\n */\nimport { unwrap } from '@wordpress/dom';\n\nfunction isList( node ) {\n\treturn node.nodeName === 'OL' || node.nodeName === 'UL';\n}\n\nfunction shallowTextContent( element ) {\n\treturn Array.from( element.childNodes )\n\t\t.map( ( { nodeValue = '' } ) => nodeValue )\n\t\t.join( '' );\n}\n\nexport default function listReducer( node ) {\n\tif ( ! isList( node ) ) {\n\t\treturn;\n\t}\n\n\tconst list = node;\n\tconst prevElement = node.previousElementSibling;\n\n\t// Merge with previous list if:\n\t// * There is a previous list of the same type.\n\t// * There is only one list item.\n\tif (\n\t\tprevElement &&\n\t\tprevElement.nodeName === node.nodeName &&\n\t\tlist.children.length === 1\n\t) {\n\t\t// Move all child nodes, including any text nodes, if any.\n\t\twhile ( list.firstChild ) {\n\t\t\tprevElement.appendChild( list.firstChild );\n\t\t}\n\n\t\tlist.parentNode.removeChild( list );\n\t}\n\n\tconst parentElement = node.parentNode;\n\n\t// Nested list with empty parent item.\n\tif (\n\t\tparentElement &&\n\t\tparentElement.nodeName === 'LI' &&\n\t\tparentElement.children.length === 1 &&\n\t\t! /\\S/.test( shallowTextContent( parentElement ) )\n\t) {\n\t\tconst parentListItem = parentElement;\n\t\tconst prevListItem = parentListItem.previousElementSibling;\n\t\tconst parentList = parentListItem.parentNode;\n\n\t\tif ( prevListItem ) {\n\t\t\tprevListItem.appendChild( list );\n\t\t\tparentList.removeChild( parentListItem );\n\t\t}\n\t}\n\n\t// Invalid: OL/UL > OL/UL.\n\tif ( parentElement && isList( parentElement ) ) {\n\t\tconst prevListItem = node.previousElementSibling;\n\n\t\tif ( prevListItem ) {\n\t\t\tprevListItem.appendChild( node );\n\t\t} else {\n\t\t\tunwrap( node );\n\t\t}\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport normaliseBlocks from './normalise-blocks';\n\nexport default function blockquoteNormaliser( options ) {\n\treturn ( node ) => {\n\t\tif ( node.nodeName !== 'BLOCKQUOTE' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnode.innerHTML = normaliseBlocks( node.innerHTML, options );\n\t};\n}\n", "/**\n * WordPress dependencies\n */\nimport { isTextContent } from '@wordpress/dom';\n\n/**\n * Whether or not the given node is figure content.\n *\n * @param {Node}   node   The node to check.\n * @param {Object} schema The schema to use.\n *\n * @return {boolean} True if figure content, false if not.\n */\nfunction isFigureContent( node, schema ) {\n\tconst tag = node.nodeName.toLowerCase();\n\n\t// We are looking for tags that can be a child of the figure tag, excluding\n\t// `figcaption` and any phrasing content.\n\tif ( tag === 'figcaption' || isTextContent( node ) ) {\n\t\treturn false;\n\t}\n\n\treturn tag in ( schema?.figure?.children ?? {} );\n}\n\n/**\n * Whether or not the given node can have an anchor.\n *\n * @param {Node}   node   The node to check.\n * @param {Object} schema The schema to use.\n *\n * @return {boolean} True if it can, false if not.\n */\nfunction canHaveAnchor( node, schema ) {\n\tconst tag = node.nodeName.toLowerCase();\n\n\treturn tag in ( schema?.figure?.children?.a?.children ?? {} );\n}\n\n/**\n * Wraps the given element in a figure element.\n *\n * @param {Element} element       The element to wrap.\n * @param {Element} beforeElement The element before which to place the figure.\n */\nfunction wrapFigureContent( element, beforeElement = element ) {\n\tconst figure = element.ownerDocument.createElement( 'figure' );\n\tbeforeElement.parentNode.insertBefore( figure, beforeElement );\n\tfigure.appendChild( element );\n}\n\n/**\n * This filter takes figure content out of paragraphs, wraps it in a figure\n * element, and moves any anchors with it if needed.\n *\n * @param {Node}     node   The node to filter.\n * @param {Document} doc    The document of the node.\n * @param {Object}   schema The schema to use.\n *\n * @return {void}\n */\nexport default function figureContentReducer( node, doc, schema ) {\n\tif ( ! isFigureContent( node, schema ) ) {\n\t\treturn;\n\t}\n\n\tlet nodeToInsert = node;\n\tconst parentNode = node.parentNode;\n\n\t// If the figure content can have an anchor and its parent is an anchor with\n\t// only the figure content, take the anchor out instead of just the content.\n\tif (\n\t\tcanHaveAnchor( node, schema ) &&\n\t\tparentNode.nodeName === 'A' &&\n\t\tparentNode.childNodes.length === 1\n\t) {\n\t\tnodeToInsert = node.parentNode;\n\t}\n\n\tconst wrapper = nodeToInsert.closest( 'p,div' );\n\n\t// If wrapped in a paragraph or div, only extract if it's aligned or if\n\t// there is no text content.\n\t// Otherwise, if directly at the root, wrap in a figure element.\n\tif ( wrapper ) {\n\t\t// In jsdom-jscore, 'node.classList' can be undefined.\n\t\t// In this case, default to extract as it offers a better UI experience on mobile.\n\t\tif ( ! node.classList ) {\n\t\t\twrapFigureContent( nodeToInsert, wrapper );\n\t\t} else if (\n\t\t\tnode.classList.contains( 'alignright' ) ||\n\t\t\tnode.classList.contains( 'alignleft' ) ||\n\t\t\tnode.classList.contains( 'aligncenter' ) ||\n\t\t\t! wrapper.textContent.trim()\n\t\t) {\n\t\t\twrapFigureContent( nodeToInsert, wrapper );\n\t\t}\n\t} else {\n\t\twrapFigureContent( nodeToInsert );\n\t}\n}\n", "/**\n * External dependencies\n */\nimport memize from 'memize';\n\nexport * from './types';\n\n/**\n * Find the next matching shortcode.\n *\n * @param {string} tag   Shortcode tag.\n * @param {string} text  Text to search.\n * @param {number} index Index to start search from.\n *\n * @return {import('./types').ShortcodeMatch | undefined} Matched information.\n */\nexport function next( tag, text, index = 0 ) {\n\tconst re = regexp( tag );\n\n\tre.lastIndex = index;\n\n\tconst match = re.exec( text );\n\n\tif ( ! match ) {\n\t\treturn;\n\t}\n\n\t// If we matched an escaped shortcode, try again.\n\tif ( '[' === match[ 1 ] && ']' === match[ 7 ] ) {\n\t\treturn next( tag, text, re.lastIndex );\n\t}\n\n\tconst result = {\n\t\tindex: match.index,\n\t\tcontent: match[ 0 ],\n\t\tshortcode: fromMatch( match ),\n\t};\n\n\t// If we matched a leading `[`, strip it from the match and increment the\n\t// index accordingly.\n\tif ( match[ 1 ] ) {\n\t\tresult.content = result.content.slice( 1 );\n\t\tresult.index++;\n\t}\n\n\t// If we matched a trailing `]`, strip it from the match.\n\tif ( match[ 7 ] ) {\n\t\tresult.content = result.content.slice( 0, -1 );\n\t}\n\n\treturn result;\n}\n\n/**\n * Replace matching shortcodes in a block of text.\n *\n * @param {string}                            tag      Shortcode tag.\n * @param {string}                            text     Text to search.\n * @param {import('./types').ReplaceCallback} callback Function to process the match and return\n *                                                     replacement string.\n *\n * @return {string} Text with shortcodes replaced.\n */\nexport function replace( tag, text, callback ) {\n\treturn text.replace(\n\t\tregexp( tag ),\n\t\tfunction ( match, left, $3, attrs, slash, content, closing, right ) {\n\t\t\t// If both extra brackets exist, the shortcode has been properly\n\t\t\t// escaped.\n\t\t\tif ( left === '[' && right === ']' ) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\t// Create the match object and pass it through the callback.\n\t\t\tconst result = callback( fromMatch( arguments ) );\n\n\t\t\t// Make sure to return any of the extra brackets if they weren't used to\n\t\t\t// escape the shortcode.\n\t\t\treturn result || result === '' ? left + result + right : match;\n\t\t}\n\t);\n}\n\n/**\n * Generate a string from shortcode parameters.\n *\n * Creates a shortcode instance and returns a string.\n *\n * Accepts the same `options` as the `shortcode()` constructor, containing a\n * `tag` string, a string or object of `attrs`, a boolean indicating whether to\n * format the shortcode using a `single` tag, and a `content` string.\n *\n * @param {Object} options\n *\n * @return {string} String representation of the shortcode.\n */\nexport function string( options ) {\n\treturn new shortcode( options ).string();\n}\n\n/**\n * Generate a RegExp to identify a shortcode.\n *\n * The base regex is functionally equivalent to the one found in\n * `get_shortcode_regex()` in `wp-includes/shortcodes.php`.\n *\n * Capture groups:\n *\n * 1. An extra `[` to allow for escaping shortcodes with double `[[]]`\n * 2. The shortcode name\n * 3. The shortcode argument list\n * 4. The self closing `/`\n * 5. The content of a shortcode when it wraps some content.\n * 6. The closing tag.\n * 7. An extra `]` to allow for escaping shortcodes with double `[[]]`\n *\n * @param {string} tag Shortcode tag.\n *\n * @return {RegExp} Shortcode RegExp.\n */\nexport function regexp( tag ) {\n\treturn new RegExp(\n\t\t'\\\\[(\\\\[?)(' +\n\t\t\ttag +\n\t\t\t')(?![\\\\w-])([^\\\\]\\\\/]*(?:\\\\/(?!\\\\])[^\\\\]\\\\/]*)*?)(?:(\\\\/)\\\\]|\\\\](?:([^\\\\[]*(?:\\\\[(?!\\\\/\\\\2\\\\])[^\\\\[]*)*)(\\\\[\\\\/\\\\2\\\\]))?)(\\\\]?)',\n\t\t'g'\n\t);\n}\n\n/**\n * Parse shortcode attributes.\n *\n * Shortcodes accept many types of attributes. These can chiefly be divided into\n * named and numeric attributes:\n *\n * Named attributes are assigned on a key/value basis, while numeric attributes\n * are treated as an array.\n *\n * Named attributes can be formatted as either `name=\"value\"`, `name='value'`,\n * or `name=value`. Numeric attributes can be formatted as `\"value\"` or just\n * `value`.\n *\n * @param {string} text Serialised shortcode attributes.\n *\n * @return {import('./types').ShortcodeAttrs} Parsed shortcode attributes.\n */\nexport const attrs = memize( ( text ) => {\n\tconst named = {};\n\tconst numeric = [];\n\n\t// This regular expression is reused from `shortcode_parse_atts()` in\n\t// `wp-includes/shortcodes.php`.\n\t//\n\t// Capture groups:\n\t//\n\t// 1. An attribute name, that corresponds to...\n\t// 2. a value in double quotes.\n\t// 3. An attribute name, that corresponds to...\n\t// 4. a value in single quotes.\n\t// 5. An attribute name, that corresponds to...\n\t// 6. an unquoted value.\n\t// 7. A numeric attribute in double quotes.\n\t// 8. A numeric attribute in single quotes.\n\t// 9. An unquoted numeric attribute.\n\tconst pattern =\n\t\t/([\\w-]+)\\s*=\\s*\"([^\"]*)\"(?:\\s|$)|([\\w-]+)\\s*=\\s*'([^']*)'(?:\\s|$)|([\\w-]+)\\s*=\\s*([^\\s'\"]+)(?:\\s|$)|\"([^\"]*)\"(?:\\s|$)|'([^']*)'(?:\\s|$)|(\\S+)(?:\\s|$)/g;\n\n\t// Map zero-width spaces to actual spaces.\n\ttext = text.replace( /[\\u00a0\\u200b]/g, ' ' );\n\n\tlet match;\n\n\t// Match and normalize attributes.\n\twhile ( ( match = pattern.exec( text ) ) ) {\n\t\tif ( match[ 1 ] ) {\n\t\t\tnamed[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t} else if ( match[ 3 ] ) {\n\t\t\tnamed[ match[ 3 ].toLowerCase() ] = match[ 4 ];\n\t\t} else if ( match[ 5 ] ) {\n\t\t\tnamed[ match[ 5 ].toLowerCase() ] = match[ 6 ];\n\t\t} else if ( match[ 7 ] ) {\n\t\t\tnumeric.push( match[ 7 ] );\n\t\t} else if ( match[ 8 ] ) {\n\t\t\tnumeric.push( match[ 8 ] );\n\t\t} else if ( match[ 9 ] ) {\n\t\t\tnumeric.push( match[ 9 ] );\n\t\t}\n\t}\n\n\treturn { named, numeric };\n} );\n\n/**\n * Generate a Shortcode Object from a RegExp match.\n *\n * Accepts a `match` object from calling `regexp.exec()` on a `RegExp` generated\n * by `regexp()`. `match` can also be set to the `arguments` from a callback\n * passed to `regexp.replace()`.\n *\n * @param {import('./types').Match} match Match array.\n *\n * @return {InstanceType<import('./types').shortcode>} Shortcode instance.\n */\nexport function fromMatch( match ) {\n\tlet type;\n\n\tif ( match[ 4 ] ) {\n\t\ttype = 'self-closing';\n\t} else if ( match[ 6 ] ) {\n\t\ttype = 'closed';\n\t} else {\n\t\ttype = 'single';\n\t}\n\n\treturn new shortcode( {\n\t\ttag: match[ 2 ],\n\t\tattrs: match[ 3 ],\n\t\ttype,\n\t\tcontent: match[ 5 ],\n\t} );\n}\n\n/**\n * Creates a shortcode instance.\n *\n * To access a raw representation of a shortcode, pass an `options` object,\n * containing a `tag` string, a string or object of `attrs`, a string indicating\n * the `type` of the shortcode ('single', 'self-closing', or 'closed'), and a\n * `content` string.\n *\n * @type {import('./types').shortcode} Shortcode instance.\n */\nconst shortcode = Object.assign(\n\tfunction ( options ) {\n\t\tconst { tag, attrs: attributes, type, content } = options || {};\n\t\tObject.assign( this, { tag, type, content } );\n\n\t\t// Ensure we have a correctly formatted `attrs` object.\n\t\tthis.attrs = {\n\t\t\tnamed: {},\n\t\t\tnumeric: [],\n\t\t};\n\n\t\tif ( ! attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attributeTypes = [ 'named', 'numeric' ];\n\n\t\t// Parse a string of attributes.\n\t\tif ( typeof attributes === 'string' ) {\n\t\t\tthis.attrs = attrs( attributes );\n\t\t\t// Identify a correctly formatted `attrs` object.\n\t\t} else if (\n\t\t\tattributes.length === attributeTypes.length &&\n\t\t\tattributeTypes.every( ( t, key ) => t === attributes[ key ] )\n\t\t) {\n\t\t\tthis.attrs = attributes;\n\t\t\t// Handle a flat object of attributes.\n\t\t} else {\n\t\t\tObject.entries( attributes ).forEach( ( [ key, value ] ) => {\n\t\t\t\tthis.set( key, value );\n\t\t\t} );\n\t\t}\n\t},\n\t{\n\t\tnext,\n\t\treplace,\n\t\tstring,\n\t\tregexp,\n\t\tattrs,\n\t\tfromMatch,\n\t}\n);\n\nObject.assign( shortcode.prototype, {\n\t/**\n\t * Get a shortcode attribute.\n\t *\n\t * Automatically detects whether `attr` is named or numeric and routes it\n\t * accordingly.\n\t *\n\t * @param {(number|string)} attr Attribute key.\n\t *\n\t * @return {string} Attribute value.\n\t */\n\tget( attr ) {\n\t\treturn this.attrs[ typeof attr === 'number' ? 'numeric' : 'named' ][\n\t\t\tattr\n\t\t];\n\t},\n\n\t/**\n\t * Set a shortcode attribute.\n\t *\n\t * Automatically detects whether `attr` is named or numeric and routes it\n\t * accordingly.\n\t *\n\t * @param {(number|string)} attr  Attribute key.\n\t * @param {string}          value Attribute value.\n\t *\n\t * @return {InstanceType< import('./types').shortcode >} Shortcode instance.\n\t */\n\tset( attr, value ) {\n\t\tthis.attrs[ typeof attr === 'number' ? 'numeric' : 'named' ][ attr ] =\n\t\t\tvalue;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Transform the shortcode into a string.\n\t *\n\t * @return {string} String representation of the shortcode.\n\t */\n\tstring() {\n\t\tlet text = '[' + this.tag;\n\n\t\tthis.attrs.numeric.forEach( ( value ) => {\n\t\t\tif ( /\\s/.test( value ) ) {\n\t\t\t\ttext += ' \"' + value + '\"';\n\t\t\t} else {\n\t\t\t\ttext += ' ' + value;\n\t\t\t}\n\t\t} );\n\n\t\tObject.entries( this.attrs.named ).forEach( ( [ name, value ] ) => {\n\t\t\ttext += ' ' + name + '=\"' + value + '\"';\n\t\t} );\n\n\t\t// If the tag is marked as `single` or `self-closing`, close the tag and\n\t\t// ignore any additional content.\n\t\tif ( 'single' === this.type ) {\n\t\t\treturn text + ']';\n\t\t} else if ( 'self-closing' === this.type ) {\n\t\t\treturn text + ' /]';\n\t\t}\n\n\t\t// Complete the opening tag.\n\t\ttext += ']';\n\n\t\tif ( this.content ) {\n\t\t\ttext += this.content;\n\t\t}\n\n\t\t// Add the closing tag.\n\t\treturn text + '[/' + this.tag + ']';\n\t},\n} );\n\nexport default shortcode;\n", "/**\n * WordPress dependencies\n */\nimport { regexp, next } from '@wordpress/shortcode';\n\n/**\n * Internal dependencies\n */\nimport { createBlock, getBlockTransforms, findTransform } from '../factory';\nimport { getBlockType } from '../registration';\nimport { getBlockAttributes } from '../parser/get-block-attributes';\nimport { applyBuiltInValidationFixes } from '../parser/apply-built-in-validation-fixes';\n\nconst castArray = ( maybeArray ) =>\n\tArray.isArray( maybeArray ) ? maybeArray : [ maybeArray ];\n\nconst beforeLineRegexp = /(\\n|<p>)\\s*$/;\nconst afterLineRegexp = /^\\s*(\\n|<\\/p>)/;\n\nfunction segmentHTMLToShortcodeBlock(\n\tHTML,\n\tlastIndex = 0,\n\texcludedBlockNames = []\n) {\n\t// Get all matches.\n\tconst transformsFrom = getBlockTransforms( 'from' );\n\n\tconst transformation = findTransform(\n\t\ttransformsFrom,\n\t\t( transform ) =>\n\t\t\texcludedBlockNames.indexOf( transform.blockName ) === -1 &&\n\t\t\ttransform.type === 'shortcode' &&\n\t\t\tcastArray( transform.tag ).some( ( tag ) =>\n\t\t\t\tregexp( tag ).test( HTML )\n\t\t\t)\n\t);\n\n\tif ( ! transformation ) {\n\t\treturn [ HTML ];\n\t}\n\n\tconst transformTags = castArray( transformation.tag );\n\tconst transformTag = transformTags.find( ( tag ) =>\n\t\tregexp( tag ).test( HTML )\n\t);\n\n\tlet match;\n\tconst previousIndex = lastIndex;\n\n\tif ( ( match = next( transformTag, HTML, lastIndex ) ) ) {\n\t\tlastIndex = match.index + match.content.length;\n\t\tconst beforeHTML = HTML.substr( 0, match.index );\n\t\tconst afterHTML = HTML.substr( lastIndex );\n\n\t\t// If the shortcode content does not contain HTML and the shortcode is\n\t\t// not on a new line (or in paragraph from Markdown converter),\n\t\t// consider the shortcode as inline text, and thus skip conversion for\n\t\t// this segment.\n\t\tif (\n\t\t\t! match.shortcode.content?.includes( '<' ) &&\n\t\t\t! (\n\t\t\t\tbeforeLineRegexp.test( beforeHTML ) &&\n\t\t\t\tafterLineRegexp.test( afterHTML )\n\t\t\t)\n\t\t) {\n\t\t\treturn segmentHTMLToShortcodeBlock( HTML, lastIndex );\n\t\t}\n\n\t\t// If a transformation's `isMatch` predicate fails for the inbound\n\t\t// shortcode, try again by excluding the current block type.\n\t\t//\n\t\t// This is the only call to `segmentHTMLToShortcodeBlock` that should\n\t\t// ever carry over `excludedBlockNames`. Other calls in the module\n\t\t// should skip that argument as a way to reset the exclusion state, so\n\t\t// that one `isMatch` fail in an HTML fragment doesn't prevent any\n\t\t// valid matches in subsequent fragments.\n\t\tif (\n\t\t\ttransformation.isMatch &&\n\t\t\t! transformation.isMatch( match.shortcode.attrs )\n\t\t) {\n\t\t\treturn segmentHTMLToShortcodeBlock( HTML, previousIndex, [\n\t\t\t\t...excludedBlockNames,\n\t\t\t\ttransformation.blockName,\n\t\t\t] );\n\t\t}\n\n\t\tlet blocks = [];\n\t\tif ( typeof transformation.transform === 'function' ) {\n\t\t\t// Passing all of `match` as second argument is intentionally broad\n\t\t\t// but shouldn't be too relied upon.\n\t\t\t//\n\t\t\t// See: https://github.com/WordPress/gutenberg/pull/3610#discussion_r152546926\n\t\t\tblocks = [].concat(\n\t\t\t\ttransformation.transform( match.shortcode.attrs, match )\n\t\t\t);\n\n\t\t\t// Applying the built-in fixes can enhance the attributes with missing content like \"className\".\n\t\t\tblocks = blocks.map( ( block ) => {\n\t\t\t\tblock.originalContent = match.shortcode.content;\n\t\t\t\treturn applyBuiltInValidationFixes(\n\t\t\t\t\tblock,\n\t\t\t\t\tgetBlockType( block.name )\n\t\t\t\t);\n\t\t\t} );\n\t\t} else {\n\t\t\tconst attributes = Object.fromEntries(\n\t\t\t\tObject.entries( transformation.attributes )\n\t\t\t\t\t.filter( ( [ , schema ] ) => schema.shortcode )\n\t\t\t\t\t// Passing all of `match` as second argument is intentionally broad\n\t\t\t\t\t// but shouldn't be too relied upon.\n\t\t\t\t\t//\n\t\t\t\t\t// See: https://github.com/WordPress/gutenberg/pull/3610#discussion_r152546926\n\t\t\t\t\t.map( ( [ key, schema ] ) => [\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tschema.shortcode( match.shortcode.attrs, match ),\n\t\t\t\t\t] )\n\t\t\t);\n\n\t\t\tconst blockType = getBlockType( transformation.blockName );\n\t\t\tif ( ! blockType ) {\n\t\t\t\treturn [ HTML ];\n\t\t\t}\n\n\t\t\tconst transformationBlockType = {\n\t\t\t\t...blockType,\n\t\t\t\tattributes: transformation.attributes,\n\t\t\t};\n\n\t\t\tlet block = createBlock(\n\t\t\t\ttransformation.blockName,\n\t\t\t\tgetBlockAttributes(\n\t\t\t\t\ttransformationBlockType,\n\t\t\t\t\tmatch.shortcode.content,\n\t\t\t\t\tattributes\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Applying the built-in fixes can enhance the attributes with missing content like \"className\".\n\t\t\tblock.originalContent = match.shortcode.content;\n\t\t\tblock = applyBuiltInValidationFixes(\n\t\t\t\tblock,\n\t\t\t\ttransformationBlockType\n\t\t\t);\n\n\t\t\tblocks = [ block ];\n\t\t}\n\n\t\treturn [\n\t\t\t...segmentHTMLToShortcodeBlock(\n\t\t\t\tbeforeHTML.replace( beforeLineRegexp, '' )\n\t\t\t),\n\t\t\t...blocks,\n\t\t\t...segmentHTMLToShortcodeBlock(\n\t\t\t\tafterHTML.replace( afterLineRegexp, '' )\n\t\t\t),\n\t\t];\n\t}\n\n\treturn [ HTML ];\n}\n\nexport default segmentHTMLToShortcodeBlock;\n", "/**\n * WordPress dependencies\n */\nimport { isPhrasingContent, getPhrasingContentSchema } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { hasBlockSupport } from '..';\nimport { getRawTransforms } from './get-raw-transforms';\n\nexport function getBlockContentSchemaFromTransforms( transforms, context ) {\n\tconst phrasingContentSchema = getPhrasingContentSchema( context );\n\tconst schemaArgs = { phrasingContentSchema, isPaste: context === 'paste' };\n\tconst schemas = transforms.map( ( { isMatch, blockName, schema } ) => {\n\t\tconst hasAnchorSupport = hasBlockSupport( blockName, 'anchor' );\n\n\t\tschema = typeof schema === 'function' ? schema( schemaArgs ) : schema;\n\n\t\t// If the block does not has anchor support and the transform does not\n\t\t// provides an isMatch we can return the schema right away.\n\t\tif ( ! hasAnchorSupport && ! isMatch ) {\n\t\t\treturn schema;\n\t\t}\n\n\t\tif ( ! schema ) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries( schema ).map( ( [ key, value ] ) => {\n\t\t\t\tlet attributes = value.attributes || [];\n\t\t\t\t// If the block supports the \"anchor\" functionality, it needs to keep its ID attribute.\n\t\t\t\tif ( hasAnchorSupport ) {\n\t\t\t\t\tattributes = [ ...attributes, 'id' ];\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tkey,\n\t\t\t\t\t{\n\t\t\t\t\t\t...value,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tisMatch: isMatch ? isMatch : undefined,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t} )\n\t\t);\n\t} );\n\n\tfunction mergeTagNameSchemaProperties( objValue, srcValue, key ) {\n\t\tswitch ( key ) {\n\t\t\tcase 'children': {\n\t\t\t\tif ( objValue === '*' || srcValue === '*' ) {\n\t\t\t\t\treturn '*';\n\t\t\t\t}\n\n\t\t\t\treturn { ...objValue, ...srcValue };\n\t\t\t}\n\t\t\tcase 'attributes':\n\t\t\tcase 'require': {\n\t\t\t\treturn [ ...( objValue || [] ), ...( srcValue || [] ) ];\n\t\t\t}\n\t\t\tcase 'isMatch': {\n\t\t\t\t// If one of the values being merge is undefined (matches everything),\n\t\t\t\t// the result of the merge will be undefined.\n\t\t\t\tif ( ! objValue || ! srcValue ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// When merging two isMatch functions, the result is a new function\n\t\t\t\t// that returns if one of the source functions returns true.\n\t\t\t\treturn ( ...args ) => {\n\t\t\t\t\treturn objValue( ...args ) || srcValue( ...args );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// A tagName schema is an object with children, attributes, require, and\n\t// isMatch properties.\n\tfunction mergeTagNameSchemas( a, b ) {\n\t\tfor ( const key in b ) {\n\t\t\ta[ key ] = a[ key ]\n\t\t\t\t? mergeTagNameSchemaProperties( a[ key ], b[ key ], key )\n\t\t\t\t: { ...b[ key ] };\n\t\t}\n\t\treturn a;\n\t}\n\n\t// A schema is an object with tagName schemas by tag name.\n\tfunction mergeSchemas( a, b ) {\n\t\tfor ( const key in b ) {\n\t\t\ta[ key ] = a[ key ]\n\t\t\t\t? mergeTagNameSchemas( a[ key ], b[ key ] )\n\t\t\t\t: { ...b[ key ] };\n\t\t}\n\t\treturn a;\n\t}\n\n\treturn schemas.reduce( mergeSchemas, {} );\n}\n\n/**\n * Gets the block content schema, which is extracted and merged from all\n * registered blocks with raw transfroms.\n *\n * @param {string} context Set to \"paste\" when in paste context, where the\n *                         schema is more strict.\n *\n * @return {Object} A complete block content schema.\n */\nexport function getBlockContentSchema( context ) {\n\treturn getBlockContentSchemaFromTransforms( getRawTransforms(), context );\n}\n\n/**\n * Checks whether HTML can be considered plain text. That is, it does not contain\n * any elements that are not line breaks.\n *\n * @param {string} HTML The HTML to check.\n *\n * @return {boolean} Whether the HTML can be considered plain text.\n */\nexport function isPlain( HTML ) {\n\treturn ! /<(?!br[ />])/i.test( HTML );\n}\n\n/**\n * Given node filters, deeply filters and mutates a NodeList.\n *\n * @param {NodeList} nodeList The nodeList to filter.\n * @param {Array}    filters  An array of functions that can mutate with the provided node.\n * @param {Document} doc      The document of the nodeList.\n * @param {Object}   schema   The schema to use.\n */\nexport function deepFilterNodeList( nodeList, filters, doc, schema ) {\n\tArray.from( nodeList ).forEach( ( node ) => {\n\t\tdeepFilterNodeList( node.childNodes, filters, doc, schema );\n\n\t\tfilters.forEach( ( item ) => {\n\t\t\t// Make sure the node is still attached to the document.\n\t\t\tif ( ! doc.contains( node ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titem( node, doc, schema );\n\t\t} );\n\t} );\n}\n\n/**\n * Given node filters, deeply filters HTML tags.\n * Filters from the deepest nodes to the top.\n *\n * @param {string} HTML    The HTML to filter.\n * @param {Array}  filters An array of functions that can mutate with the provided node.\n * @param {Object} schema  The schema to use.\n *\n * @return {string} The filtered HTML.\n */\nexport function deepFilterHTML( HTML, filters = [], schema ) {\n\tconst doc = document.implementation.createHTMLDocument( '' );\n\n\tdoc.body.innerHTML = HTML;\n\n\tdeepFilterNodeList( doc.body.childNodes, filters, doc, schema );\n\n\treturn doc.body.innerHTML;\n}\n\n/**\n * Gets a sibling within text-level context.\n *\n * @param {Element} node  The subject node.\n * @param {string}  which \"next\" or \"previous\".\n */\nexport function getSibling( node, which ) {\n\tconst sibling = node[ `${ which }Sibling` ];\n\n\tif ( sibling && isPhrasingContent( sibling ) ) {\n\t\treturn sibling;\n\t}\n\n\tconst { parentNode } = node;\n\n\tif ( ! parentNode || ! isPhrasingContent( parentNode ) ) {\n\t\treturn;\n\t}\n\n\treturn getSibling( parentNode, which );\n}\n", "/**\n * WordPress dependencies\n */\nimport { remove } from '@wordpress/dom';\n\n/**\n * Looks for comments, and removes them.\n *\n * @param {Node} node The node to be processed.\n * @return {void}\n */\nexport default function commentRemover( node ) {\n\tif ( node.nodeType === node.COMMENT_NODE ) {\n\t\tremove( node );\n\t}\n}\n", "/**\n * WordPress dependencies\n */\nimport { isTextContent } from '@wordpress/dom';\n\n/**\n * Checks if the given node should be considered inline content, optionally\n * depending on a context tag.\n *\n * @param {Node}   node       Node name.\n * @param {string} contextTag Tag name.\n *\n * @return {boolean} True if the node is inline content, false if nohe.\n */\nfunction isInline( node, contextTag ) {\n\tif ( isTextContent( node ) ) {\n\t\treturn true;\n\t}\n\n\tif ( ! contextTag ) {\n\t\treturn false;\n\t}\n\n\tconst tag = node.nodeName.toLowerCase();\n\tconst inlineAllowedTagGroups = [\n\t\t[ 'ul', 'li', 'ol' ],\n\t\t[ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ],\n\t];\n\n\treturn inlineAllowedTagGroups.some(\n\t\t( tagGroup ) =>\n\t\t\t[ tag, contextTag ].filter( ( t ) => ! tagGroup.includes( t ) )\n\t\t\t\t.length === 0\n\t);\n}\n\nfunction deepCheck( nodes, contextTag ) {\n\treturn nodes.every(\n\t\t( node ) =>\n\t\t\tisInline( node, contextTag ) &&\n\t\t\tdeepCheck( Array.from( node.children ), contextTag )\n\t);\n}\n\nfunction isDoubleBR( node ) {\n\treturn (\n\t\tnode.nodeName === 'BR' &&\n\t\tnode.previousSibling &&\n\t\tnode.previousSibling.nodeName === 'BR'\n\t);\n}\n\nexport default function isInlineContent( HTML, contextTag ) {\n\tconst doc = document.implementation.createHTMLDocument( '' );\n\n\tdoc.body.innerHTML = HTML;\n\n\tconst nodes = Array.from( doc.body.children );\n\n\treturn ! nodes.some( isDoubleBR ) && deepCheck( nodes, contextTag );\n}\n", "/**\n * WordPress dependencies\n */\nimport { wrap, replaceTag } from '@wordpress/dom';\n\nexport default function phrasingContentReducer( node, doc ) {\n\t// In jsdom-jscore, 'node.style' can be null.\n\t// TODO: Explore fixing this by patching jsdom-jscore.\n\tif ( node.nodeName === 'SPAN' && node.style ) {\n\t\tconst {\n\t\t\tfontWeight,\n\t\t\tfontStyle,\n\t\t\ttextDecorationLine,\n\t\t\ttextDecoration,\n\t\t\tverticalAlign,\n\t\t} = node.style;\n\n\t\tif ( fontWeight === 'bold' || fontWeight === '700' ) {\n\t\t\twrap( doc.createElement( 'strong' ), node );\n\t\t}\n\n\t\tif ( fontStyle === 'italic' ) {\n\t\t\twrap( doc.createElement( 'em' ), node );\n\t\t}\n\n\t\t// Some DOM implementations (Safari, JSDom) don't support\n\t\t// style.textDecorationLine, so we check style.textDecoration as a\n\t\t// fallback.\n\t\tif (\n\t\t\ttextDecorationLine === 'line-through' ||\n\t\t\ttextDecoration.includes( 'line-through' )\n\t\t) {\n\t\t\twrap( doc.createElement( 's' ), node );\n\t\t}\n\n\t\tif ( verticalAlign === 'super' ) {\n\t\t\twrap( doc.createElement( 'sup' ), node );\n\t\t} else if ( verticalAlign === 'sub' ) {\n\t\t\twrap( doc.createElement( 'sub' ), node );\n\t\t}\n\t} else if ( node.nodeName === 'B' ) {\n\t\tnode = replaceTag( node, 'strong' );\n\t} else if ( node.nodeName === 'I' ) {\n\t\tnode = replaceTag( node, 'em' );\n\t} else if ( node.nodeName === 'A' ) {\n\t\t// In jsdom-jscore, 'node.target' can be null.\n\t\t// TODO: Explore fixing this by patching jsdom-jscore.\n\t\tif ( node.target && node.target.toLowerCase() === '_blank' ) {\n\t\t\tnode.rel = 'noreferrer noopener';\n\t\t} else {\n\t\t\tnode.removeAttribute( 'target' );\n\t\t\tnode.removeAttribute( 'rel' );\n\t\t}\n\n\t\t// Saves anchor elements name attribute as id\n\t\tif ( node.name && ! node.id ) {\n\t\t\tnode.id = node.name;\n\t\t}\n\n\t\t// Keeps id only if there is an internal link pointing to it\n\t\tif (\n\t\t\tnode.id &&\n\t\t\t! node.ownerDocument.querySelector( `[href=\"#${ node.id }\"]` )\n\t\t) {\n\t\t\tnode.removeAttribute( 'id' );\n\t\t}\n\t}\n}\n", "export default function headRemover( node ) {\n\tif (\n\t\tnode.nodeName !== 'SCRIPT' &&\n\t\tnode.nodeName !== 'NOSCRIPT' &&\n\t\tnode.nodeName !== 'TEMPLATE' &&\n\t\tnode.nodeName !== 'STYLE'\n\t) {\n\t\treturn;\n\t}\n\n\tnode.parentNode.removeChild( node );\n}\n", "/**\n * Looks for comments, and removes them.\n *\n * @param {Node} node The node to be processed.\n * @return {void}\n */\nexport default function msListIgnore( node ) {\n\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst style = node.getAttribute( 'style' );\n\n\tif ( ! style || ! style.includes( 'mso-list' ) ) {\n\t\treturn;\n\t}\n\n\tconst rules = style.split( ';' ).reduce( ( acc, rule ) => {\n\t\tconst [ key, value ] = rule.split( ':' );\n\n\t\tif ( key && value ) {\n\t\t\tacc[ key.trim().toLowerCase() ] = value.trim().toLowerCase();\n\t\t}\n\t\treturn acc;\n\t}, {} );\n\n\tif ( rules[ 'mso-list' ] === 'ignore' ) {\n\t\tnode.remove();\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport { deepFilterHTML } from './utils';\nimport msListIgnore from './ms-list-ignore';\n\nfunction isList( node ) {\n\treturn node.nodeName === 'OL' || node.nodeName === 'UL';\n}\n\nexport default function msListConverter( node, doc ) {\n\tif ( node.nodeName !== 'P' ) {\n\t\treturn;\n\t}\n\n\tconst style = node.getAttribute( 'style' );\n\n\tif ( ! style || ! style.includes( 'mso-list' ) ) {\n\t\treturn;\n\t}\n\n\tconst prevNode = node.previousElementSibling;\n\n\t// Add new list if no previous.\n\tif ( ! prevNode || ! isList( prevNode ) ) {\n\t\t// See https://html.spec.whatwg.org/multipage/grouping-content.html#attr-ol-type.\n\t\tconst type = node.textContent.trim().slice( 0, 1 );\n\t\tconst isNumeric = /[1iIaA]/.test( type );\n\t\tconst newListNode = doc.createElement( isNumeric ? 'ol' : 'ul' );\n\n\t\tif ( isNumeric ) {\n\t\t\tnewListNode.setAttribute( 'type', type );\n\t\t}\n\n\t\tnode.parentNode.insertBefore( newListNode, node );\n\t}\n\n\tconst listNode = node.previousElementSibling;\n\tconst listType = listNode.nodeName;\n\tconst listItem = doc.createElement( 'li' );\n\n\tlet receivingNode = listNode;\n\n\t// Add content.\n\tlistItem.innerHTML = deepFilterHTML( node.innerHTML, [ msListIgnore ] );\n\n\tconst matches = /mso-list\\s*:[^;]+level([0-9]+)/i.exec( style );\n\tlet level = matches ? parseInt( matches[ 1 ], 10 ) - 1 || 0 : 0;\n\n\t// Change pointer depending on indentation level.\n\twhile ( level-- ) {\n\t\treceivingNode = receivingNode.lastChild || receivingNode;\n\n\t\t// If it's a list, move pointer to the last item.\n\t\tif ( isList( receivingNode ) ) {\n\t\t\treceivingNode = receivingNode.lastChild || receivingNode;\n\t\t}\n\t}\n\n\t// Make sure we append to a list.\n\tif ( ! isList( receivingNode ) ) {\n\t\treceivingNode = receivingNode.appendChild(\n\t\t\tdoc.createElement( listType )\n\t\t);\n\t}\n\n\t// Append the list item to the list.\n\treceivingNode.appendChild( listItem );\n\n\t// Remove the wrapper paragraph.\n\tnode.parentNode.removeChild( node );\n}\n", "const cache: Record< string, File > = {};\n\n/**\n * Create a blob URL from a file.\n *\n * @param file The file to create a blob URL for.\n *\n * @return The blob URL.\n */\nexport function createBlobURL( file: File ): string {\n\tconst url = window.URL.createObjectURL( file );\n\n\tcache[ url ] = file;\n\n\treturn url;\n}\n\n/**\n * Retrieve a file based on a blob URL. The file must have been created by\n * `createBlobURL` and not removed by `revokeBlobURL`, otherwise it will return\n * `undefined`.\n *\n * @param url The blob URL.\n *\n * @return The file for the blob URL.\n */\nexport function getBlobByURL( url: string ): File | undefined {\n\treturn cache[ url ];\n}\n\n/**\n * Retrieve a blob type based on URL. The file must have been created by\n * `createBlobURL` and not removed by `revokeBlobURL`, otherwise it will return\n * `undefined`.\n *\n * @param url The blob URL.\n *\n * @return The blob type.\n */\nexport function getBlobTypeByURL( url: string ): string | undefined {\n\treturn getBlobByURL( url )?.type.split( '/' )[ 0 ]; // 0: media type , 1: file extension eg ( type: 'image/jpeg' ).\n}\n\n/**\n * Remove the resource and file cache from memory.\n *\n * @param url The blob URL.\n */\nexport function revokeBlobURL( url: string ): void {\n\tif ( cache[ url ] ) {\n\t\twindow.URL.revokeObjectURL( url );\n\t}\n\n\tdelete cache[ url ];\n}\n\n/**\n * Check whether a url is a blob url.\n *\n * @param url The URL.\n *\n * @return Is the url a blob url?\n */\nexport function isBlobURL( url: string | undefined ): boolean {\n\tif ( ! url || ! url.indexOf ) {\n\t\treturn false;\n\t}\n\treturn url.indexOf( 'blob:' ) === 0;\n}\n\n/**\n * Downloads a file, e.g., a text or readable stream, in the browser.\n * Appropriate for downloading smaller file sizes, e.g., < 5 MB.\n *\n * Example usage:\n *\n * ```js\n * \tconst fileContent = JSON.stringify(\n * \t\t{\n * \t\t\t\"title\": \"My Post\",\n * \t\t},\n * \t\tnull,\n * \t\t2\n * \t);\n * \tconst filename = 'file.json';\n *\n * \tdownloadBlob( filename, fileContent, 'application/json' );\n * ```\n *\n * @param filename    File name.\n * @param content     File content (BufferSource | Blob | string).\n * @param contentType (Optional) File mime type. Default is `''`.\n */\nexport function downloadBlob(\n\tfilename: string,\n\tcontent: BlobPart,\n\tcontentType: string = ''\n): void {\n\tif ( ! filename || ! content ) {\n\t\treturn;\n\t}\n\n\tconst file = new window.Blob( [ content ], { type: contentType } );\n\tconst url = window.URL.createObjectURL( file );\n\tconst anchorElement = document.createElement( 'a' );\n\tanchorElement.href = url;\n\tanchorElement.download = filename;\n\tanchorElement.style.display = 'none';\n\tdocument.body.appendChild( anchorElement );\n\tanchorElement.click();\n\tdocument.body.removeChild( anchorElement );\n\twindow.URL.revokeObjectURL( url );\n}\n", "/**\n * WordPress dependencies\n */\nimport { createBlobURL } from '@wordpress/blob';\n\nexport default function imageCorrector( node ) {\n\tif ( node.nodeName !== 'IMG' ) {\n\t\treturn;\n\t}\n\n\tif ( node.src.indexOf( 'file:' ) === 0 ) {\n\t\tnode.src = '';\n\t}\n\n\t// This piece cannot be tested outside a browser env.\n\tif ( node.src.indexOf( 'data:' ) === 0 ) {\n\t\tconst [ properties, data ] = node.src.split( ',' );\n\t\tconst [ type ] = properties.slice( 5 ).split( ';' );\n\n\t\tif ( ! data || ! type ) {\n\t\t\tnode.src = '';\n\t\t\treturn;\n\t\t}\n\n\t\tlet decoded;\n\n\t\t// Can throw DOMException!\n\t\ttry {\n\t\t\tdecoded = atob( data );\n\t\t} catch ( e ) {\n\t\t\tnode.src = '';\n\t\t\treturn;\n\t\t}\n\n\t\tconst uint8Array = new Uint8Array( decoded.length );\n\n\t\tfor ( let i = 0; i < uint8Array.length; i++ ) {\n\t\t\tuint8Array[ i ] = decoded.charCodeAt( i );\n\t\t}\n\n\t\tconst name = type.replace( '/', '.' );\n\t\tconst file = new window.File( [ uint8Array ], name, { type } );\n\n\t\tnode.src = createBlobURL( file );\n\t}\n\n\t// Remove trackers and hardly visible images.\n\tif ( node.height === 1 || node.width === 1 ) {\n\t\tnode.parentNode.removeChild( node );\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport normaliseBlocks from './normalise-blocks';\n\nexport default function divNormaliser( node ) {\n\tif ( node.nodeName !== 'DIV' ) {\n\t\treturn;\n\t}\n\n\tnode.innerHTML = normaliseBlocks( node.innerHTML );\n}\n", "/**\n * External dependencies\n */\nimport showdown from 'showdown';\n\n// Reuse the same showdown converter.\nconst converter = new showdown.Converter( {\n\tnoHeaderId: true,\n\ttables: true,\n\tliteralMidWordUnderscores: true,\n\tomitExtraWLInCodeBlocks: true,\n\tsimpleLineBreaks: true,\n\tstrikethrough: true,\n} );\n\n/**\n * Corrects the Slack Markdown variant of the code block.\n * If uncorrected, it will be converted to inline code.\n *\n * @see https://get.slack.help/hc/en-us/articles/202288908-how-can-i-add-formatting-to-my-messages-#code-blocks\n *\n * @param {string} text The potential Markdown text to correct.\n *\n * @return {string} The corrected Markdown.\n */\nfunction slackMarkdownVariantCorrector( text ) {\n\treturn text.replace(\n\t\t/((?:^|\\n)```)([^\\n`]+)(```(?:$|\\n))/,\n\t\t( match, p1, p2, p3 ) => `${ p1 }\\n${ p2 }\\n${ p3 }`\n\t);\n}\n\nfunction bulletsToAsterisks( text ) {\n\treturn text.replace( /(^|\\n)•( +)/g, '$1*$2' );\n}\n\n/**\n * Converts a piece of text into HTML based on any Markdown present.\n * Also decodes any encoded HTML.\n *\n * @param {string} text The plain text to convert.\n *\n * @return {string} HTML.\n */\nexport default function markdownConverter( text ) {\n\treturn converter.makeHtml(\n\t\tslackMarkdownVariantCorrector( bulletsToAsterisks( text ) )\n\t);\n}\n", "/**\n * Removes iframes.\n *\n * @param {Node} node The node to check.\n *\n * @return {void}\n */\nexport default function iframeRemover( node ) {\n\tif ( node.nodeName === 'IFRAME' ) {\n\t\tconst text = node.ownerDocument.createTextNode( node.src );\n\t\tnode.parentNode.replaceChild( text, node );\n\t}\n}\n", "/**\n * WordPress dependencies\n */\nimport { unwrap } from '@wordpress/dom';\n\nexport default function googleDocsUIdRemover( node ) {\n\tif ( ! node.id || node.id.indexOf( 'docs-internal-guid-' ) !== 0 ) {\n\t\treturn;\n\t}\n\n\t// Google Docs sometimes wraps the content in a B tag. We don't want to keep\n\t// this.\n\tif ( node.tagName === 'B' ) {\n\t\tunwrap( node );\n\t} else {\n\t\tnode.removeAttribute( 'id' );\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport { getSibling } from './utils';\n\nfunction isFormattingSpace( character ) {\n\treturn (\n\t\tcharacter === ' ' ||\n\t\tcharacter === '\\r' ||\n\t\tcharacter === '\\n' ||\n\t\tcharacter === '\\t'\n\t);\n}\n\n/**\n * Removes spacing that formats HTML.\n *\n * @see https://www.w3.org/TR/css-text-3/#white-space-processing\n *\n * @param {Node} node The node to be processed.\n * @return {void}\n */\nexport default function htmlFormattingRemover( node ) {\n\tif ( node.nodeType !== node.TEXT_NODE ) {\n\t\treturn;\n\t}\n\n\t// Ignore pre content. Note that this does not use Element#closest due to\n\t// a combination of (a) node may not be Element and (b) node.parentElement\n\t// does not have full support in all browsers (Internet Exporer).\n\t//\n\t// See: https://developer.mozilla.org/en-US/docs/Web/API/Node/parentElement#Browser_compatibility\n\n\t/** @type {Node?} */\n\tlet parent = node;\n\twhile ( ( parent = parent.parentNode ) ) {\n\t\tif (\n\t\t\tparent.nodeType === parent.ELEMENT_NODE &&\n\t\t\tparent.nodeName === 'PRE'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// First, replace any sequence of HTML formatting space with a single space.\n\tlet newData = node.data.replace( /[ \\r\\n\\t]+/g, ' ' );\n\n\t// Remove the leading space if the text element is at the start of a block,\n\t// is preceded by a line break element, or has a space in the previous\n\t// node.\n\tif ( newData[ 0 ] === ' ' ) {\n\t\tconst previousSibling = getSibling( node, 'previous' );\n\n\t\tif (\n\t\t\t! previousSibling ||\n\t\t\tpreviousSibling.nodeName === 'BR' ||\n\t\t\tpreviousSibling.textContent.slice( -1 ) === ' '\n\t\t) {\n\t\t\tnewData = newData.slice( 1 );\n\t\t}\n\t}\n\n\t// Remove the trailing space if the text element is at the end of a block,\n\t// is succeded by a line break element, or has a space in the next text\n\t// node.\n\tif ( newData[ newData.length - 1 ] === ' ' ) {\n\t\tconst nextSibling = getSibling( node, 'next' );\n\n\t\tif (\n\t\t\t! nextSibling ||\n\t\t\tnextSibling.nodeName === 'BR' ||\n\t\t\t( nextSibling.nodeType === nextSibling.TEXT_NODE &&\n\t\t\t\tisFormattingSpace( nextSibling.textContent[ 0 ] ) )\n\t\t) {\n\t\t\tnewData = newData.slice( 0, -1 );\n\t\t}\n\t}\n\n\t// If there's no data left, remove the node, so `previousSibling` stays\n\t// accurate. Otherwise, update the node data.\n\tif ( ! newData ) {\n\t\tnode.parentNode.removeChild( node );\n\t} else {\n\t\tnode.data = newData;\n\t}\n}\n", "/**\n * Internal dependencies\n */\nimport { getSibling } from './utils';\n\n/**\n * Removes trailing br elements from text-level content.\n *\n * @param {Element} node Node to check.\n */\nexport default function brRemover( node ) {\n\tif ( node.nodeName !== 'BR' ) {\n\t\treturn;\n\t}\n\n\tif ( getSibling( node, 'next' ) ) {\n\t\treturn;\n\t}\n\n\tnode.parentNode.removeChild( node );\n}\n", "/**\n * Removes empty paragraph elements.\n *\n * @param {Element} node Node to check.\n */\nexport default function emptyParagraphRemover( node ) {\n\tif ( node.nodeName !== 'P' ) {\n\t\treturn;\n\t}\n\n\tif ( node.hasChildNodes() ) {\n\t\treturn;\n\t}\n\n\tnode.parentNode.removeChild( node );\n}\n", "/**\n * Replaces Slack paragraph markup with a double line break (later converted to\n * a proper paragraph).\n *\n * @param {Element} node Node to check.\n */\nexport default function slackParagraphCorrector( node ) {\n\tif ( node.nodeName !== 'SPAN' ) {\n\t\treturn;\n\t}\n\n\tif ( node.getAttribute( 'data-stringify-type' ) !== 'paragraph-break' ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\n\tparentNode.insertBefore( node.ownerDocument.createElement( 'br' ), node );\n\tparentNode.insertBefore( node.ownerDocument.createElement( 'br' ), node );\n\tparentNode.removeChild( node );\n}\n", "/**\n * WordPress dependencies\n */\nimport { getPhrasingContentSchema, removeInvalidHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { htmlToBlocks } from './html-to-blocks';\nimport { hasBlockSupport } from '../registration';\nimport { getBlockInnerHTML } from '../serializer';\nimport parse from '../parser';\nimport normaliseBlocks from './normalise-blocks';\nimport specialCommentConverter from './special-comment-converter';\nimport commentRemover from './comment-remover';\nimport isInlineContent from './is-inline-content';\nimport phrasingContentReducer from './phrasing-content-reducer';\nimport headRemover from './head-remover';\nimport msListConverter from './ms-list-converter';\nimport msListIgnore from './ms-list-ignore';\nimport listReducer from './list-reducer';\nimport imageCorrector from './image-corrector';\nimport blockquoteNormaliser from './blockquote-normaliser';\nimport divNormaliser from './div-normaliser';\nimport figureContentReducer from './figure-content-reducer';\nimport shortcodeConverter from './shortcode-converter';\nimport markdownConverter from './markdown-converter';\nimport iframeRemover from './iframe-remover';\nimport googleDocsUIDRemover from './google-docs-uid-remover';\nimport htmlFormattingRemover from './html-formatting-remover';\nimport brRemover from './br-remover';\nimport { deepFilterHTML, isPlain, getBlockContentSchema } from './utils';\nimport emptyParagraphRemover from './empty-paragraph-remover';\nimport slackParagraphCorrector from './slack-paragraph-corrector';\n\nconst log = ( ...args ) => window?.console?.log?.( ...args );\n\n/**\n * Filters HTML to only contain phrasing content.\n *\n * @param {string} HTML The HTML to filter.\n *\n * @return {string} HTML only containing phrasing content.\n */\nfunction filterInlineHTML( HTML ) {\n\tHTML = deepFilterHTML( HTML, [\n\t\theadRemover,\n\t\tgoogleDocsUIDRemover,\n\t\tmsListIgnore,\n\t\tphrasingContentReducer,\n\t\tcommentRemover,\n\t] );\n\tHTML = removeInvalidHTML( HTML, getPhrasingContentSchema( 'paste' ), {\n\t\tinline: true,\n\t} );\n\n\tHTML = deepFilterHTML( HTML, [ htmlFormattingRemover, brRemover ] );\n\n\t// Allows us to ask for this information when we get a report.\n\tlog( 'Processed inline HTML:\\n\\n', HTML );\n\n\treturn HTML;\n}\n\n/**\n * Converts an HTML string to known blocks. Strips everything else.\n *\n * @param {Object} options\n * @param {string} [options.HTML]      The HTML to convert.\n * @param {string} [options.plainText] Plain text version.\n * @param {string} [options.mode]      Handle content as blocks or inline content.\n *                                     * 'AUTO': Decide based on the content passed.\n *                                     * 'INLINE': Always handle as inline content, and return string.\n *                                     * 'BLOCKS': Always handle as blocks, and return array of blocks.\n * @param {Array}  [options.tagName]   The tag into which content will be inserted.\n *\n * @return {Array|string} A list of blocks or a string, depending on `handlerMode`.\n */\nexport function pasteHandler( {\n\tHTML = '',\n\tplainText = '',\n\tmode = 'AUTO',\n\ttagName,\n} ) {\n\t// First of all, strip any meta tags.\n\tHTML = HTML.replace( /<meta[^>]+>/g, '' );\n\t// Strip Windows markers.\n\tHTML = HTML.replace(\n\t\t/^\\s*<html[^>]*>\\s*<body[^>]*>(?:\\s*<!--\\s*StartFragment\\s*-->)?/i,\n\t\t''\n\t);\n\tHTML = HTML.replace(\n\t\t/(?:<!--\\s*EndFragment\\s*-->\\s*)?<\\/body>\\s*<\\/html>\\s*$/i,\n\t\t''\n\t);\n\n\t// If we detect block delimiters in HTML, parse entirely as blocks.\n\tif ( mode !== 'INLINE' ) {\n\t\t// Check plain text if there is no HTML.\n\t\tconst content = HTML ? HTML : plainText;\n\n\t\tif ( content.indexOf( '<!-- wp:' ) !== -1 ) {\n\t\t\tconst parseResult = parse( content );\n\t\t\tconst isSingleFreeFormBlock =\n\t\t\t\tparseResult.length === 1 &&\n\t\t\t\tparseResult[ 0 ].name === 'core/freeform';\n\t\t\tif ( ! isSingleFreeFormBlock ) {\n\t\t\t\treturn parseResult;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize unicode to use composed characters.\n\t// Not normalizing the content will only affect older browsers and won't\n\t// entirely break the app.\n\t// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t// See: https://core.trac.wordpress.org/ticket/30130\n\t// See: https://github.com/WordPress/gutenberg/pull/6983#pullrequestreview-125151075\n\tif ( String.prototype.normalize ) {\n\t\tHTML = HTML.normalize();\n\t}\n\n\t// Must be run before checking if it's inline content.\n\tHTML = deepFilterHTML( HTML, [ slackParagraphCorrector ] );\n\n\t// Consider plain text if:\n\t// * There is a plain text version.\n\t// * There is no HTML version, or it has no formatting.\n\tconst isPlainText = plainText && ( ! HTML || isPlain( HTML ) );\n\n\t// Parse Markdown (and encoded HTML) if it's considered plain text.\n\tif ( isPlainText ) {\n\t\tHTML = plainText;\n\n\t\t// The markdown converter (Showdown) trims whitespace.\n\t\tif ( ! /^\\s+$/.test( plainText ) ) {\n\t\t\tHTML = markdownConverter( HTML );\n\t\t}\n\t}\n\n\t// An array of HTML strings and block objects. The blocks replace matched\n\t// shortcodes.\n\tconst pieces = shortcodeConverter( HTML );\n\n\t// The call to shortcodeConverter will always return more than one element\n\t// if shortcodes are matched. The reason is when shortcodes are matched\n\t// empty HTML strings are included.\n\tconst hasShortcodes = pieces.length > 1;\n\n\tif ( isPlainText && ! hasShortcodes ) {\n\t\t// Switch to inline mode if:\n\t\t// * The current mode is AUTO.\n\t\t// * The original plain text had no line breaks.\n\t\t// * The original plain text was not an HTML paragraph.\n\t\t// * The converted text is just a paragraph.\n\t\tif (\n\t\t\tmode === 'AUTO' &&\n\t\t\tplainText.indexOf( '\\n' ) === -1 &&\n\t\t\tplainText.indexOf( '<p>' ) !== 0 &&\n\t\t\tHTML.indexOf( '<p>' ) === 0\n\t\t) {\n\t\t\tmode = 'INLINE';\n\t\t}\n\t}\n\n\tif ( mode === 'INLINE' ) {\n\t\treturn filterInlineHTML( HTML );\n\t}\n\n\tif (\n\t\tmode === 'AUTO' &&\n\t\t! hasShortcodes &&\n\t\tisInlineContent( HTML, tagName )\n\t) {\n\t\treturn filterInlineHTML( HTML );\n\t}\n\n\tconst phrasingContentSchema = getPhrasingContentSchema( 'paste' );\n\tconst blockContentSchema = getBlockContentSchema( 'paste' );\n\n\tconst blocks = pieces\n\t\t.map( ( piece ) => {\n\t\t\t// Already a block from shortcode.\n\t\t\tif ( typeof piece !== 'string' ) {\n\t\t\t\treturn piece;\n\t\t\t}\n\n\t\t\tconst filters = [\n\t\t\t\tgoogleDocsUIDRemover,\n\t\t\t\tmsListConverter,\n\t\t\t\theadRemover,\n\t\t\t\tlistReducer,\n\t\t\t\timageCorrector,\n\t\t\t\tphrasingContentReducer,\n\t\t\t\tspecialCommentConverter,\n\t\t\t\tcommentRemover,\n\t\t\t\tiframeRemover,\n\t\t\t\tfigureContentReducer,\n\t\t\t\tblockquoteNormaliser(),\n\t\t\t\tdivNormaliser,\n\t\t\t];\n\n\t\t\tconst schema = {\n\t\t\t\t...blockContentSchema,\n\t\t\t\t// Keep top-level phrasing content, normalised by `normaliseBlocks`.\n\t\t\t\t...phrasingContentSchema,\n\t\t\t};\n\n\t\t\tpiece = deepFilterHTML( piece, filters, blockContentSchema );\n\t\t\tpiece = removeInvalidHTML( piece, schema );\n\t\t\tpiece = normaliseBlocks( piece );\n\t\t\tpiece = deepFilterHTML(\n\t\t\t\tpiece,\n\t\t\t\t[ htmlFormattingRemover, brRemover, emptyParagraphRemover ],\n\t\t\t\tblockContentSchema\n\t\t\t);\n\n\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\tlog( 'Processed HTML piece:\\n\\n', piece );\n\n\t\t\treturn htmlToBlocks( piece, pasteHandler );\n\t\t} )\n\t\t.flat()\n\t\t.filter( Boolean );\n\n\t// If we're allowed to return inline content, and there is only one\n\t// inlineable block, and the original plain text content does not have any\n\t// line breaks, then treat it as inline paste.\n\tif (\n\t\tmode === 'AUTO' &&\n\t\tblocks.length === 1 &&\n\t\thasBlockSupport( blocks[ 0 ].name, '__unstablePasteTextInline', false )\n\t) {\n\t\tconst trimRegex = /^[\\n]+|[\\n]+$/g;\n\t\t// Don't catch line breaks at the start or end.\n\t\tconst trimmedPlainText = plainText.replace( trimRegex, '' );\n\n\t\tif (\n\t\t\ttrimmedPlainText !== '' &&\n\t\t\ttrimmedPlainText.indexOf( '\\n' ) === -1\n\t\t) {\n\t\t\treturn removeInvalidHTML(\n\t\t\t\tgetBlockInnerHTML( blocks[ 0 ] ),\n\t\t\t\tphrasingContentSchema\n\t\t\t).replace( trimRegex, '' );\n\t\t}\n\t}\n\n\treturn blocks;\n}\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { getPhrasingContentSchema } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { htmlToBlocks } from './html-to-blocks';\nimport parse from '../parser';\nimport normaliseBlocks from './normalise-blocks';\nimport specialCommentConverter from './special-comment-converter';\nimport listReducer from './list-reducer';\nimport blockquoteNormaliser from './blockquote-normaliser';\nimport figureContentReducer from './figure-content-reducer';\nimport shortcodeConverter from './shortcode-converter';\nimport { deepFilterHTML, getBlockContentSchema } from './utils';\n\nexport { pasteHandler } from './paste-handler';\n\nexport function deprecatedGetPhrasingContentSchema( context ) {\n\tdeprecated( 'wp.blocks.getPhrasingContentSchema', {\n\t\tsince: '5.6',\n\t\talternative: 'wp.dom.getPhrasingContentSchema',\n\t} );\n\treturn getPhrasingContentSchema( context );\n}\n\n/**\n * Converts an HTML string to known blocks.\n *\n * @param {Object} $1\n * @param {string} $1.HTML The HTML to convert.\n *\n * @return {Array} A list of blocks.\n */\nexport function rawHandler( { HTML = '' } ) {\n\t// If we detect block delimiters, parse entirely as blocks.\n\tif ( HTML.indexOf( '<!-- wp:' ) !== -1 ) {\n\t\tconst parseResult = parse( HTML );\n\t\tconst isSingleFreeFormBlock =\n\t\t\tparseResult.length === 1 &&\n\t\t\tparseResult[ 0 ].name === 'core/freeform';\n\t\tif ( ! isSingleFreeFormBlock ) {\n\t\t\treturn parseResult;\n\t\t}\n\t}\n\n\t// An array of HTML strings and block objects. The blocks replace matched\n\t// shortcodes.\n\tconst pieces = shortcodeConverter( HTML );\n\tconst blockContentSchema = getBlockContentSchema();\n\n\treturn pieces\n\t\t.map( ( piece ) => {\n\t\t\t// Already a block from shortcode.\n\t\t\tif ( typeof piece !== 'string' ) {\n\t\t\t\treturn piece;\n\t\t\t}\n\n\t\t\t// These filters are essential for some blocks to be able to transform\n\t\t\t// from raw HTML. These filters move around some content or add\n\t\t\t// additional tags, they do not remove any content.\n\t\t\tconst filters = [\n\t\t\t\t// Needed to adjust invalid lists.\n\t\t\t\tlistReducer,\n\t\t\t\t// Needed to create more and nextpage blocks.\n\t\t\t\tspecialCommentConverter,\n\t\t\t\t// Needed to create media blocks.\n\t\t\t\tfigureContentReducer,\n\t\t\t\t// Needed to create the quote block, which cannot handle text\n\t\t\t\t// without wrapper paragraphs.\n\t\t\t\tblockquoteNormaliser( { raw: true } ),\n\t\t\t];\n\n\t\t\tpiece = deepFilterHTML( piece, filters, blockContentSchema );\n\t\t\tpiece = normaliseBlocks( piece, { raw: true } );\n\n\t\t\treturn htmlToBlocks( piece, rawHandler );\n\t\t} )\n\t\t.flat()\n\t\t.filter( Boolean );\n}\n", "/**\n * WordPress dependencies\n */\nimport { dispatch, select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blocksStore } from '../store';\n\n/** @typedef {import('../store/reducer').WPBlockCategory} WPBlockCategory */\n\n/**\n * Returns all the block categories.\n * Ignored from documentation as the recommended usage is via useSelect from @wordpress/data.\n *\n * @ignore\n *\n * @return {WPBlockCategory[]} Block categories.\n */\nexport function getCategories() {\n\treturn select( blocksStore ).getCategories();\n}\n\n/**\n * Sets the block categories.\n *\n * @param {WPBlockCategory[]} categories Block categories.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { store as blocksStore, setCategories } from '@wordpress/blocks';\n * import { useSelect } from '@wordpress/data';\n * import { Button } from '@wordpress/components';\n *\n * const ExampleComponent = () => {\n *     // Retrieve the list of current categories.\n *     const blockCategories = useSelect(\n *         ( select ) => select( blocksStore ).getCategories(),\n *         []\n *     );\n *\n *     return (\n *         <Button\n *             onClick={ () => {\n *                 // Add a custom category to the existing list.\n *                 setCategories( [\n *                     ...blockCategories,\n *                     { title: 'Custom Category', slug: 'custom-category' },\n *                 ] );\n *             } }\n *         >\n *             { __( 'Add a new custom block category' ) }\n *         </Button>\n *     );\n * };\n * ```\n */\nexport function setCategories( categories ) {\n\tdispatch( blocksStore ).setCategories( categories );\n}\n\n/**\n * Updates a category.\n *\n * @param {string}          slug     Block category slug.\n * @param {WPBlockCategory} category Object containing the category properties\n *                                   that should be updated.\n *\n * @example\n * ```js\n * import { __ } from '@wordpress/i18n';\n * import { updateCategory } from '@wordpress/blocks';\n * import { Button } from '@wordpress/components';\n *\n * const ExampleComponent = () => {\n *     return (\n *         <Button\n *             onClick={ () => {\n *                 updateCategory( 'text', { title: __( 'Written Word' ) } );\n *             } }\n *         >\n *             { __( 'Update Text category title' ) }\n *         </Button>\n * )    ;\n * };\n * ```\n */\nexport function updateCategory( slug, category ) {\n\tdispatch( blocksStore ).updateCategory( slug, category );\n}\n", "/**\n * WordPress dependencies\n */\nimport { renderToString } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { convertLegacyBlockNameAndAttributes } from './parser/convert-legacy-block';\nimport { createBlock } from './factory';\nimport { getBlockType } from './registration';\n\n/**\n * Checks whether a list of blocks matches a template by comparing the block names.\n *\n * @param {Array} blocks   Block list.\n * @param {Array} template Block template.\n *\n * @return {boolean} Whether the list of blocks matches a templates.\n */\nexport function doBlocksMatchTemplate( blocks = [], template = [] ) {\n\treturn (\n\t\tblocks.length === template.length &&\n\t\ttemplate.every( ( [ name, , innerBlocksTemplate ], index ) => {\n\t\t\tconst block = blocks[ index ];\n\t\t\treturn (\n\t\t\t\tname === block.name &&\n\t\t\t\tdoBlocksMatchTemplate( block.innerBlocks, innerBlocksTemplate )\n\t\t\t);\n\t\t} )\n\t);\n}\n\nconst isHTMLAttribute = ( attributeDefinition ) =>\n\tattributeDefinition?.source === 'html';\n\nconst isQueryAttribute = ( attributeDefinition ) =>\n\tattributeDefinition?.source === 'query';\n\nfunction normalizeAttributes( schema, values ) {\n\tif ( ! values ) {\n\t\treturn {};\n\t}\n\n\treturn Object.fromEntries(\n\t\tObject.entries( values ).map( ( [ key, value ] ) => [\n\t\t\tkey,\n\t\t\tnormalizeAttribute( schema[ key ], value ),\n\t\t] )\n\t);\n}\n\nfunction normalizeAttribute( definition, value ) {\n\tif ( isHTMLAttribute( definition ) && Array.isArray( value ) ) {\n\t\t// Introduce a deprecated call at this point\n\t\t// When we're confident that \"children\" format should be removed from the templates.\n\n\t\treturn renderToString( value );\n\t}\n\n\tif ( isQueryAttribute( definition ) && value ) {\n\t\treturn value.map( ( subValues ) => {\n\t\t\treturn normalizeAttributes( definition.query, subValues );\n\t\t} );\n\t}\n\n\treturn value;\n}\n\n/**\n * Synchronize a block list with a block template.\n *\n * Synchronizing a block list with a block template means that we loop over the blocks\n * keep the block as is if it matches the block at the same position in the template\n * (If it has the same name) and if doesn't match, we create a new block based on the template.\n * Extra blocks not present in the template are removed.\n *\n * @param {Array} blocks   Block list.\n * @param {Array} template Block template.\n *\n * @return {Array} Updated Block list.\n */\nexport function synchronizeBlocksWithTemplate( blocks = [], template ) {\n\t// If no template is provided, return blocks unmodified.\n\tif ( ! template ) {\n\t\treturn blocks;\n\t}\n\n\treturn template.map(\n\t\t( [ name, attributes, innerBlocksTemplate ], index ) => {\n\t\t\tconst block = blocks[ index ];\n\n\t\t\tif ( block && block.name === name ) {\n\t\t\t\tconst innerBlocks = synchronizeBlocksWithTemplate(\n\t\t\t\t\tblock.innerBlocks,\n\t\t\t\t\tinnerBlocksTemplate\n\t\t\t\t);\n\t\t\t\treturn { ...block, innerBlocks };\n\t\t\t}\n\n\t\t\t// To support old templates that were using the \"children\" format\n\t\t\t// for the attributes using \"html\" strings now, we normalize the template attributes\n\t\t\t// before creating the blocks.\n\n\t\t\tconst blockType = getBlockType( name );\n\n\t\t\tconst normalizedAttributes = normalizeAttributes(\n\t\t\t\tblockType?.attributes ?? {},\n\t\t\t\tattributes\n\t\t\t);\n\n\t\t\tlet [ blockName, blockAttributes ] =\n\t\t\t\tconvertLegacyBlockNameAndAttributes(\n\t\t\t\t\tname,\n\t\t\t\t\tnormalizedAttributes\n\t\t\t\t);\n\n\t\t\t// If a Block is undefined at this point, use the core/missing block as\n\t\t\t// a placeholder for a better user experience.\n\t\t\tif ( undefined === getBlockType( blockName ) ) {\n\t\t\t\tblockAttributes = {\n\t\t\t\t\toriginalName: name,\n\t\t\t\t\toriginalContent: '',\n\t\t\t\t\toriginalUndelimitedContent: '',\n\t\t\t\t};\n\t\t\t\tblockName = 'core/missing';\n\t\t\t}\n\n\t\t\treturn createBlock(\n\t\t\t\tblockName,\n\t\t\t\tblockAttributes,\n\t\t\t\tsynchronizeBlocksWithTemplate( [], innerBlocksTemplate )\n\t\t\t);\n\t\t}\n\t);\n}\n", "/**\n * Internal dependencies\n */\nimport { lock } from '../lock-unlock';\nimport { isUnmodifiedBlockContent } from './utils';\n\n// The blocktype is the most important concept within the block API. It defines\n// all aspects of the block configuration and its interfaces, including `edit`\n// and `save`. The transforms specification allows converting one blocktype to\n// another through formulas defined by either the source or the destination.\n// Switching a blocktype is to be considered a one-way operation implying a\n// transformation in the opposite way has to be handled explicitly.\nexport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tcloneBlock,\n\t__experimentalCloneSanitizedBlock,\n\tgetPossibleBlockTransformations,\n\tswitchToBlockType,\n\tgetBlockTransforms,\n\tfindTransform,\n\tgetBlockFromExample,\n} from './factory';\n\n// The block tree is composed of a collection of block nodes. Blocks contained\n// within other blocks are called inner blocks. An important design\n// consideration is that inner blocks are -- conceptually -- not part of the\n// territory established by the parent block that contains them.\n//\n// This has multiple practical implications: when parsing, we can safely dispose\n// of any block boundary found within a block from the innerHTML property when\n// transfering to state. Not doing so would have a compounding effect on memory\n// and uncertainty over the source of truth. This can be illustrated in how,\n// given a tree of `n` nested blocks, the entry node would have to contain the\n// actual content of each block while each subsequent block node in the state\n// tree would replicate the entire chain `n-1`, meaning the extreme end node\n// would have been replicated `n` times as the tree is traversed and would\n// generate uncertainty as to which one is to hold the current value of the\n// block. For composition, it also means inner blocks can effectively be child\n// components whose mechanisms can be shielded from the `edit` implementation\n// and just passed along.\nexport { default as parse } from './parser';\nexport { serializeRawBlock } from './parser/serialize-raw-block';\nexport {\n\tgetBlockAttributes,\n\tparseWithAttributeSchema,\n} from './parser/get-block-attributes';\n\n// While block transformations account for a specific surface of the API, there\n// are also raw transformations which handle arbitrary sources not made out of\n// blocks but producing block basaed on various heursitics. This includes\n// pasting rich text or HTML data.\nexport {\n\tpasteHandler,\n\trawHandler,\n\tdeprecatedGetPhrasingContentSchema as getPhrasingContentSchema,\n} from './raw-handling';\n\n// The process of serialization aims to deflate the internal memory of the block\n// editor and its state representation back into an HTML valid string. This\n// process restores the document integrity and inserts invisible delimiters\n// around each block with HTML comment boundaries which can contain any extra\n// attributes needed to operate with the block later on.\nexport {\n\tdefault as serialize,\n\tgetBlockInnerHTML as getBlockContent,\n\tgetBlockDefaultClassName,\n\tgetBlockMenuDefaultClassName,\n\tgetSaveElement,\n\tgetSaveContent,\n\tgetBlockProps as __unstableGetBlockProps,\n\tgetInnerBlocksProps as __unstableGetInnerBlocksProps,\n\t__unstableSerializeAndClean,\n} from './serializer';\n\n// Validation is the process of comparing a block source with its output before\n// there is any user input or interaction with a block. When this operation\n// fails -- for whatever reason -- the block is to be considered invalid. As\n// part of validating a block the system will attempt to run the source against\n// any provided deprecation definitions.\n//\n// Worth emphasizing that validation is not a case of whether the markup is\n// merely HTML spec-compliant but about how the editor knows to create such\n// markup and that its inability to create an identical result can be a strong\n// indicator of potential data loss (the invalidation is then a protective\n// measure).\n//\n// The invalidation process can also be deconstructed in phases: 1) validate the\n// block exists; 2) validate the source matches the output; 3) validate the\n// source matches deprecated outputs; 4) work through the significance of\n// differences. These are stacked in a way that favors performance and optimizes\n// for the majority of cases. That is to say, the evaluation logic can become\n// more sophisticated the further down it goes in the process as the cost is\n// accounted for. The first logic checks have to be extremely efficient since\n// they will be run for all valid and invalid blocks alike. However, once a\n// block is detected as invalid -- failing the three first steps -- it is\n// adequate to spend more time determining validity before throwing a conflict.\nexport { isValidBlockContent, validateBlock } from './validation';\nexport { getCategories, setCategories, updateCategory } from './categories';\n\n// Blocks are inherently indifferent about where the data they operate with ends\n// up being saved. For example, all blocks can have a static and dynamic aspect\n// to them depending on the needs. The static nature of a block is the `save()`\n// definition that is meant to be serialized into HTML and which can be left\n// void. Any block can also register a `render_callback` on the server, which\n// makes its output dynamic either in part or in its totality.\n//\n// Child blocks are defined as a relationship that builds on top of the inner\n// blocks mechanism. A child block is a block node of a particular type that can\n// only exist within the inner block boundaries of a specific parent type. This\n// allows block authors to compose specific blocks that are not meant to be used\n// outside of a specified parent block context. Thus, child blocks extend the\n// concept of inner blocks to support a more direct relationship between sets of\n// blocks. The addition of parent–child would be a subset of the inner block\n// functionality under the premise that certain blocks only make sense as\n// children of another block.\nexport {\n\tregisterBlockType,\n\tregisterBlockCollection,\n\tunregisterBlockType,\n\tsetFreeformContentHandlerName,\n\tgetFreeformContentHandlerName,\n\tsetUnregisteredTypeHandlerName,\n\tgetUnregisteredTypeHandlerName,\n\tsetDefaultBlockName,\n\tgetDefaultBlockName,\n\tsetGroupingBlockName,\n\tgetGroupingBlockName,\n\tgetBlockType,\n\tgetBlockTypes,\n\tgetBlockSupport,\n\thasBlockSupport,\n\tgetBlockVariations,\n\tisReusableBlock,\n\tisTemplatePart,\n\tgetChildBlockNames,\n\thasChildBlocks,\n\thasChildBlocksWithInserterSupport,\n\tunstable__bootstrapServerSideBlockDefinitions, // eslint-disable-line camelcase\n\tregisterBlockStyle,\n\tunregisterBlockStyle,\n\tregisterBlockVariation,\n\tunregisterBlockVariation,\n\tregisterBlockBindingsSource,\n\tunregisterBlockBindingsSource,\n\tgetBlockBindingsSource,\n\tgetBlockBindingsSources,\n} from './registration';\nexport {\n\tisUnmodifiedBlock,\n\tisUnmodifiedDefaultBlock,\n\tnormalizeIconObject,\n\tisValidIcon,\n\tgetBlockLabel as __experimentalGetBlockLabel,\n\tgetAccessibleBlockLabel as __experimentalGetAccessibleBlockLabel,\n\t__experimentalSanitizeBlockAttributes,\n\tgetBlockAttributesNamesByRole,\n\t__experimentalGetBlockAttributesNamesByRole,\n} from './utils';\n\n// Templates are, in a general sense, a basic collection of block nodes with any\n// given set of predefined attributes that are supplied as the initial state of\n// an inner blocks group. These nodes can, in turn, contain any number of nested\n// blocks within their definition. Templates allow both to specify a default\n// state for an editor session or a default set of blocks for any inner block\n// implementation within a specific block.\nexport {\n\tdoBlocksMatchTemplate,\n\tsynchronizeBlocksWithTemplate,\n} from './templates';\nexport { default as children } from './children';\nexport { default as node } from './node';\nexport {\n\t__EXPERIMENTAL_STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS,\n\t__EXPERIMENTAL_PATHS_WITH_OVERRIDE,\n} from './constants';\n\nexport const privateApis = {};\nlock( privateApis, { isUnmodifiedBlockContent } );\n", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * A Higher Order Component used to inject BlockContent using context to the\n * wrapped component.\n *\n * @deprecated\n *\n * @param {Component} OriginalComponent The component to enhance.\n * @return {Component} The same component.\n */\nexport function withBlockContentContext( OriginalComponent ) {\n\tdeprecated( 'wp.blocks.withBlockContentContext', {\n\t\tsince: '6.1',\n\t} );\n\n\treturn OriginalComponent;\n}\n"],
  "mappings": "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;;ACFA,eAAS,eAAgB,QAAQ;AAC/B;AAEA,YAAI,iBAAiB;UACnB,yBAAyB;YACvB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,YAAY;YACV,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,gBAAgB;YACd,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,mBAAmB;YACjB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,sBAAsB;YACpB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,aAAa;YACX,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,kBAAkB;YAChB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oBAAoB;YAClB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oBAAoB;YAClB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oCAAoC;YAClC,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,2BAA2B;YACzB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,yBAAyB;YACvB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,eAAe;YACb,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,QAAQ;YACN,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,gBAAgB;YACd,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,cAAc;YACZ,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,WAAW;YACT,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,mBAAmB;YACjB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,qBAAqB;YACnB,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,sCAAsC;YACpC,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,kBAAkB;YAChB,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,+BAA+B;YAC7B,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,YAAY;YACV,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,gBAAgB;YACd,cAAc;YACd,aAAa;YACb,MAAM;UACR;UACA,cAAc;YACZ,cAAc;YACd,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,IAAMC,mBAAmB,oBAAIC,IAAK,CAAE,UAAU,WAAW,QAAQ,CAAG;AAOpE,IAAMC,oBAAoB,oBAAID,IAAK,CAClC,QACA,QACA,MACA,OACA,WACA,SACA,MACA,OACA,SACA,UACA,QACA,QACA,SACA,UACA,SACA,KAAK,CACJ;AAiBF,IAAME,qBAAqB,oBAAIF,IAAK,CACnC,mBACA,uBACA,kBACA,SACA,aACA,YACA,WACA,YACA,WACA,SACA,YACA,YACA,kBACA,UACA,SACA,aACA,QACA,YACA,SACA,YACA,cACA,QACA,eACA,YACA,YACA,YACA,YACA,eAAe,CACd;AAsBF,IAAMG,wBAAwB,oBAAIH,IAAK,CACtC,kBACA,gBACA,WACA,mBACA,eACA,YACA,OACA,aACA,WACA,eACA,cACA,cACA,aACA,QACA,UACA,WACA,SACA,SACA,cACA,aACA,QACA,MAAM,CACL;AAoBF,IAAMI,mCAAmC,oBAAIJ,IAAK,CACjD,aACA,2BACA,iBACA,qBACA,oBACA,oBACA,eACA,MACA,MACA,eACA,YACA,cACA,gBACA,cACA,iBACA,mBACA,cACA,gBACA,cACA,WACA,SACA,WACA,KACA,MACA,MACA,uBACA,eACA,mBACA,oBACA,oBACA,iBACA,eACA,WACA,UACA,KACA,KACA,UACA,MAAM,CACL;AAWK,SAASK,UAAWC,SAAQC,UAAW;AAC7C,SAAOA,SAASC,KAAQC,YAAYH,QAAOI,QAASD,MAAO,MAAM,CAAE;AACpE;AAUA,SAASE,oBAAqBC,WAAY;AACzC,SAAO,UAAUA,aAAa,eAAeA;AAC9C;AAUA,SAASC,wBAAyBD,WAAWE,OAAQ;AACpD,UAASF,WAAS;IACjB,KAAK;AACJ,aAAOG,YAAaD,KAAM;EAC5B;AAEA,SAAOA;AACR;AAOA,IAAME,iCAAiC,CACtC,gBACA,qBACA,cACA,iBACA,aACA,YACA,YACA,sBACA,6BACA,gBACA,kBACA,oBACA,oBACA,eACA,YACA,cACA,gBACA,cACA,YACA,kBACA,eACA,aACA,eACA,cACA,aACA,8BACA,4BACA,aACA,gBACA,kBACA,iBACA,iBACA,aACA,aACA,eACA,oBACA,qBACA,cACA,WACA,iBACA,mBACA,kBACA,aACA,eACA,yBACA,0BACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,eACA,cACA,kBACA,iBACA,qBACA,sBACA,eACA,gBACA,cACA,eACA,YACA,gBACA,iBACA,gBACA,YACA,eACA,eACA,eACA,eACA,cACA,SAAS,EACRC,OAAQ,CAAEC,KAAKN,cAAe;AAE/BM,MAAKN,UAAUO,YAAY,CAAC,IAAKP;AACjC,SAAOM;AACR,GAAG,CAAC,CAAE;AAQN,IAAME,gCAAgC,CACrC,gBACA,iBACA,iBACA,eACA,iBACA,eACA,YACA,iBACA,qBACA,oBACA,mBACA,YACA,6BACA,aACA,eACA,YACA,qBACA,iBACA,gBACA,oBACA,aACA,cACA,YACA,gBACA,qBACA,gBACA,eACA,eACA,oBACA,aACA,cACA,cACA,uBACA,oBACA,gBACA,aACA,aACA,aACA,iBACA,uBACA,kBACA,QACA,QACA,eACA,aACA,sBACA,oBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,kCACA,4BACA,gBACA,kBACA,eACA,WACA,WACA,cACA,WACA,cACA,oBACA,kBAAkB,EACjBH,OAAQ,CAAEC,KAAKN,cAAe;AAE/BM,MAAKN,UAAUO,YAAY,CAAC,IAAKP;AACjC,SAAOM;AACR,GAAG,CAAC,CAAE;AAMN,IAAMG,6BAA6B,CAClC,iBACA,iBACA,cACA,cACA,cACA,eACA,cACA,YACA,YACA,aACA,aAAa,EACZJ,OAAQ,CAAEC,KAAKN,cAAe;AAC/BM,MAAKN,UAAUU,QAAS,KAAK,EAAG,EAAEH,YAAY,CAAC,IAAKP;AACpD,SAAOM;AACR,GAAG,CAAC,CAAE;AASN,SAASK,uBAAwBX,WAAY;AAC5C,UAASA,WAAS;IACjB,KAAK;AACJ,aAAO;IAER,KAAK;AACJ,aAAO;EACT;AACA,QAAMY,qBAAqBZ,UAAUO,YAAY;AAEjD,MAAKC,8BAA+BI,kBAAkB,GAAK;AAC1D,WAAOJ,8BAA+BI,kBAAkB;EACzD,WAAYR,+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",
  "names": ["isValidElementType", "ForwardRef", "Fragment", "StrictMode", "Suspense", "showdown", "prop", "text", "dispatch", "options", "doc", "i", "html", "style", "import_equivalent_key_map", "object", "Symbol", "iterator", "next", "isAction", "object", "isPlainObject", "type", "isActionOfType", "expectedType", "controls", "dispatch", "rungenControls", "Object", "entries", "map", "actionType", "control", "value", "next", "iterate", "yieldNext", "yieldError", "isActionOfType", "routine", "isPromise", "then", "unhandledActionControl", "isAction", "push", "rungenRuntime", "create", "action", "Promise", "resolve", "reject", "result", "controls", "store", "runtime", "createRuntime", "dispatch", "next", "action", "isGenerator", "combineReducers", "reducers", "keys", "Object", "combinedReducer", "state", "action", "nextState", "hasChanged", "key", "reducer", "prevStateForKey", "nextStateForKey", "createRegistryControl", "registryControl", "isRegistryControl", "SELECT", "RESOLVE_SELECT", "DISPATCH", "builtinControls", "SELECT", "createRegistryControl", "registry", "storeKey", "selectorName", "args", "select", "RESOLVE_SELECT", "method", "hasResolver", "DISPATCH", "actionName", "dispatch", "lock", "unlock", "__dangerousOptInToUnstableAPIsOnlyForCoreModules", "promiseMiddleware", "next", "action", "isPromise", "then", "resolvedAction", "createResolversCacheMiddleware", "registry", "storeName", "next", "action", "resolvers", "select", "getCachedResolvers", "resolverEntries", "Object", "entries", "forEach", "selectorName", "resolversByArgs", "resolver", "stores", "shouldInvalidate", "value", "args", "undefined", "status", "dispatch", "invalidateResolution", "args", "next", "action", "onSubKey", "actionProperty", "reducer", "state", "action", "key", "undefined", "nextKeyState", "selectorArgsToStateKey", "args", "len", "length", "idx", "slice", "subKeysIsResolved", "onSubKey", "state", "EquivalentKeyMap", "action", "type", "nextState", "set", "selectorArgsToStateKey", "args", "status", "error", "resolutionArgs", "forEach", "idx", "resolutionState", "undefined", "errors", "delete", "isResolved", "selectorName", "removedSelector", "restState", "getResolutionState", "state", "selectorName", "args", "map", "get", "selectorArgsToStateKey", "getIsResolving", "deprecated", "since", "version", "alternative", "resolutionState", "status", "hasStartedResolution", "undefined", "hasFinishedResolution", "hasResolutionFailed", "getResolutionError", "error", "isResolving", "getCachedResolvers", "hasResolvingSelectors", "Object", "values", "some", "selectorState", "Array", "from", "_map", "resolution", "countSelectorsByStatus", "createSelector", "selectorsByStatus", "forEach", "_resolution$1$status", "currentStatus", "startResolution", "selectorName", "args", "type", "finishResolution", "failResolution", "error", "startResolutions", "finishResolutions", "failResolutions", "errors", "invalidateResolution", "invalidateResolutionForStore", "invalidateResolutionForStoreSelector", "trimUndefinedValues", "array", "result", "i", "length", "undefined", "splice", "mapValues", "obj", "callback", "Object", "fromEntries", "entries", "map", "key", "value", "devToolsReplacer", "state", "Map", "window", "HTMLElement", "createResolversCache", "cache", "isRunning", "selectorName", "args", "get", "clear", "delete", "markAsRunning", "EquivalentKeyMap", "set", "createBindingCache", "getItem", "bindItem", "WeakMap", "itemName", "item", "boundItem", "createPrivateProxy", "publicItems", "privateItems", "Proxy", "target", "Reflect", "options", "privateActions", "privateSelectors", "privateRegistrationFunctions", "registerPrivateActions", "actions", "assign", "registerPrivateSelectors", "selectors", "storeDescriptor", "name", "instantiate", "registry", "listeners", "Set", "reducer", "thunkArgs", "dispatch", "thunkDispatch", "select", "thunkSelect", "resolveSelect", "resolveSelectors", "store", "instantiateReduxStore", "lock", "resolversCache", "bindAction", "action", "Promise", "resolve", "metadataActions", "allActions", "resolvers", "mapResolver", "bindSelector", "selector", "isRegistrySelector", "boundSelector", "normalize", "__unstableOriginalGetState", "root", "__unstableNormalizeArgs", "resolver", "hasResolver", "mapSelectorWithResolver", "boundMetadataSelectors", "bindMetadataSelector", "metaDataSelector", "selectorArgs", "targetSelector", "metadata", "metadataSelectors", "boundSelectors", "boundPrivateSelectors", "allSelectors", "keys", "bindResolveSelector", "mapResolveSelector", "allResolveSelectors", "bindSuspendSelector", "mapSuspendSelector", "suspendSelectors", "allSuspendSelectors", "getSelectors", "getActions", "getResolveSelectors", "getSuspendSelectors", "getState", "subscribe", "listener", "add", "lastState", "hasChanged", "controls", "builtinControls", "normalizedControls", "control", "isRegistryControl", "middlewares", "createResolversCacheMiddleware", "promise", "createReduxRoutineMiddleware", "createThunkMiddleware", "enhancers", "applyMiddleware", "__REDUX_DEVTOOLS_EXTENSION__", "push", "instanceId", "serialize", "replacer", "initialState", "enhancedReducer", "combineReducers", "metadataReducer", "createStore", "compose", "apply", "reject", "hasFinished", "hasFinishedResolution", "finalize", "hasFailed", "hasResolutionFailed", "error", "getResolutionError", "getResult", "unsubscribe", "fulfill", "fulfillSelector", "isFulfilled", "hasStartedResolution", "setTimeout", "startResolution", "finishResolution", "failResolution", "selectorResolver", "coreDataStore", "name", "instantiate", "registry", "getCoreDataSelector", "selectorName", "key", "args", "select", "getCoreDataAction", "actionName", "dispatch", "getSelectors", "Object", "fromEntries", "map", "getActions", "subscribe", "createEmitter", "isPaused", "isPending", "listeners", "Set", "notifyListeners", "Array", "from", "forEach", "listener", "subscribe", "add", "delete", "pause", "resume", "emit", "getStoreName", "storeNameOrDescriptor", "name", "createRegistry", "storeConfigs", "parent", "stores", "emitter", "createEmitter", "listeningStores", "globalListener", "emit", "subscribe", "listener", "storeName", "store", "select", "add", "getSelectors", "__unstableMarkListeningStores", "callback", "ref", "Set", "call", "current", "Array", "from", "resolveSelect", "getResolveSelectors", "suspendSelect", "getSuspendSelectors", "dispatch", "getActions", "withPlugins", "attributes", "Object", "fromEntries", "entries", "map", "key", "attribute", "registry", "apply", "arguments", "registerStoreInstance", "createStore", "console", "error", "TypeError", "currentSubscribe", "unsubscribeFromEmitter", "unsubscribeFromStore", "isPaused", "unlock", "registerPrivateActions", "privateActionsOf", "registerPrivateSelectors", "privateSelectorsOf", "e", "register", "instantiate", "registerGenericStore", "deprecated", "since", "alternative", "registerStore", "options", "reducer", "createReduxStore", "batch", "pause", "values", "forEach", "resume", "namespaces", "use", "plugin", "coreDataStore", "config", "registryWithPlugins", "lock", "privateActions", "privateSelectors", "createRegistry", "objectStorage", "storage", "getItem", "key", "setItem", "value", "clear", "String", "Object", "create", "storage", "window", "localStorage", "setItem", "removeItem", "error", "objectStorage", "DEFAULT_STORAGE", "defaultStorage", "DEFAULT_STORAGE_KEY", "withLazySameState", "reducer", "state", "action", "nextState", "createPersistenceInterface", "options", "storage", "storageKey", "data", "getData", "undefined", "persisted", "getItem", "JSON", "parse", "error", "setData", "key", "value", "setItem", "stringify", "get", "set", "persistencePlugin", "registry", "pluginOptions", "persistence", "createPersistOnChange", "getState", "storeName", "keys", "getPersistedState", "Array", "isArray", "reducers", "reduce", "accumulator", "Object", "assign", "combineReducers", "lastState", "registerStore", "persist", "persistedState", "initialState", "type", "isPlainObject", "deepmerge", "isMergeableObject", "store", "subscribe", "__unstableMigrate", "Platform", "OS", "select", "spec", "web", "default", "isWeb", "children", "props", "rawHtml", "Children", "toArray", "forEach", "child", "trim", "createElement", "dangerouslySetInnerHTML", "__html", "Provider", "Consumer", "createContext", "undefined", "ForwardRef", "forwardRef", "ATTRIBUTES_TYPES", "Set", "SELF_CLOSING_TAGS", "BOOLEAN_ATTRIBUTES", "ENUMERATED_ATTRIBUTES", "CSS_PROPERTIES_SUPPORTS_UNITLESS", "hasPrefix", "string", "prefixes", "some", "prefix", "indexOf", "isInternalAttribute", "attribute", "getNormalAttributeValue", "value", "renderStyle", "SVG_ATTRIBUTE_WITH_DASHES_LIST", "reduce", "map", "toLowerCase", "CASE_SENSITIVE_SVG_ATTRIBUTES", "SVG_ATTRIBUTES_WITH_COLONS", "replace", "getNormalAttributeName", "attributeLowerCase", "kebabCase", "getNormalStylePropertyName", "property", "startsWith", "getNormalStylePropertyValue", "has", "renderElement", "element", "context", "legacyContext", "Array", "isArray", "renderChildren", "escapeHTML", "toString", "type", "props", "StrictMode", "Fragment", "children", "RawHTML", "wrapperProps", "renderNativeComponent", "Object", "keys", "length", "dangerouslySetInnerHTML", "__html", "prototype", "render", "renderComponent", "$$typeof", "_currentValue", "content", "hasOwnProperty", "restProps", "attributes", "renderAttributes", "Component", "instance", "getChildContext", "assign", "html", "result", "i", "child", "key", "isValidAttributeName", "isBooleanAttribute", "isMeaningfulAttribute", "escapeAttribute", "style", "isPlainObject", "normalName", "normalValue", "Context", "createContext", "defaultRegistry", "displayName", "Consumer", "Provider", "RegistryConsumer", "Context", "createContext", "displayName", "Consumer", "Provider", "renderQueue", "createQueue", "import_jsx_runtime", "import_jsx_runtime", "withRegistry", "createHigherOrderComponent", "OriginalComponent", "props", "_jsx", "RegistryConsumer", "children", "registry", "dispatch", "storeNameOrDescriptor", "defaultRegistry", "select", "storeNameOrDescriptor", "defaultRegistry", "combineReducers", "combineReducersModule", "resolveSelect", "defaultRegistry", "suspendSelect", "subscribe", "registerGenericStore", "registerStore", "use", "register", "logErrorOnce", "memoize", "console", "error", "sprintf", "format", "args", "sprintfjs", "Error", "toString", "DEFAULT_LOCALE_DATA", "plural_forms", "n", "I18N_HOOK_REGEXP", "createI18n", "initialData", "initialDomain", "hooks", "tannin", "Tannin", "listeners", "Set", "notifyListeners", "forEach", "listener", "subscribe", "callback", "add", "delete", "getLocaleData", "domain", "data", "doSetLocaleData", "pluralForms", "setLocaleData", "addLocaleData", "resetLocaleData", "dcnpgettext", "context", "single", "plural", "number", "undefined", "getFilterDomain", "__", "text", "translation", "applyFilters", "_x", "_n", "_nx", "isRTL", "hasTranslation", "key", "result", "onHookAddedOrRemoved", "hookName", "test", "addAction", "i18n", "createI18n", "undefined", "defaultHooks", "getLocaleData", "i18n", "bind", "setLocaleData", "resetLocaleData", "subscribe", "__", "_x", "_n", "_nx", "isRTL", "hasTranslation", "BLOCK_ICON_DEFAULT", "DEPRECATED_ENTRY_KEYS", "__EXPERIMENTAL_STYLE_PROPERTY", "value", "support", "aspectRatio", "useEngine", "background", "backgroundColor", "requiresOptOut", "backgroundImage", "backgroundRepeat", "backgroundSize", "backgroundPosition", "borderColor", "borderRadius", "properties", "borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius", "borderStyle", "borderWidth", "borderTopColor", "borderTopStyle", "borderTopWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "color", "columnCount", "filter", "linkColor", "captionColor", "buttonColor", "buttonBackgroundColor", "headingColor", "headingBackgroundColor", "fontFamily", "fontSize", "fontStyle", "fontWeight", "lineHeight", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "minHeight", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "textAlign", "textDecoration", "textTransform", "letterSpacing", "writingMode", "rootOnly", "__EXPERIMENTAL_ELEMENTS", "link", "heading", "h1", "h2", "h3", "h4", "h5", "h6", "button", "caption", "cite", "__EXPERIMENTAL_PATHS_WITH_OVERRIDE", "lock", "unlock", "__dangerousOptInToUnstableAPIsOnlyForCoreModules", "i18nBlockSchema", "title", "description", "keywords", "styles", "label", "variations", "isObject", "object", "unstable__bootstrapServerSideBlockDefinitions", "definitions", "addBootstrappedBlockType", "unlock", "dispatch", "blocksStore", "name", "blockType", "Object", "entries", "getBlockSettingsFromMetadata", "textdomain", "metadata", "allowedFields", "settings", "fromEntries", "filter", "key", "includes", "keys", "forEach", "translateBlockSettingUsingI18nSchema", "registerBlockType", "blockNameOrMetadata", "globalThis", "SCRIPT_DEBUG", "warning", "test", "select", "getBlockType", "addUnprocessedBlockType", "i18nSchema", "settingValue", "_x", "Array", "isArray", "length", "map", "value", "reduce", "accumulator", "registerBlockCollection", "namespace", "icon", "addBlockCollection", "unregisterBlockType", "name", "oldBlock", "select", "blocksStore", "getBlockType", "globalThis", "SCRIPT_DEBUG", "warning", "dispatch", "removeBlockTypes", "setFreeformContentHandlerName", "blockName", "setFreeformFallbackBlockName", "getFreeformContentHandlerName", "getFreeformFallbackBlockName", "getGroupingBlockName", "setUnregisteredTypeHandlerName", "setUnregisteredFallbackBlockName", "getUnregisteredTypeHandlerName", "getUnregisteredFallbackBlockName", "setDefaultBlockName", "setGroupingBlockName", "getDefaultBlockName", "getBlockTypes", "getBlockSupport", "nameOrType", "feature", "defaultSupports", "hasBlockSupport", "isReusableBlock", "blockOrType", "isTemplatePart", "getChildBlockNames", "hasChildBlocks", "hasChildBlocksWithInserterSupport", "registerBlockStyle", "blockNames", "styleVariation", "addBlockStyles", "unregisterBlockStyle", "styleVariationName", "removeBlockStyles", "getBlockVariations", "scope", "registerBlockVariation", "variation", "addBlockVariations", "unregisterBlockVariation", "variationName", "removeBlockVariations", "registerBlockBindingsSource", "source", "label", "usesContext", "getValues", "setValues", "canUserEditValue", "getFieldsList", "existingSource", "unlock", "getBlockBindingsSource", "test", "Array", "isArray", "addBlockBindingsSource", "unregisterBlockBindingsSource", "oldSource", "removeBlockBindingsSource", "getBlockBindingsSources", "getAllBlockBindingsSources", "extend", "namesPlugin", "a11yPlugin", "ICON_COLORS", "isUnmodifiedAttribute", "attributeDefinition", "value", "hasOwnProperty", "default", "type", "length", "undefined", "isUnmodifiedBlock", "block", "_getBlockType$attribu", "Object", "entries", "getBlockType", "name", "attributes", "every", "key", "definition", "isUnmodifiedDefaultBlock", "getDefaultBlockName", "isUnmodifiedBlockContent", "contentAttributes", "getBlockAttributesNamesByRole", "isValidIcon", "icon", "isValidElement", "Component", "normalizeIconObject", "BLOCK_ICON_DEFAULT", "src", "colordBgColor", "colord", "background", "getColorContrast", "iconColor", "contrast", "maxContrast", "Math", "max", "map", "foreground", "find", "shadowColor", "alpha", "toRgbString", "normalizeBlockType", "blockTypeOrName", "getBlockLabel", "blockType", "context", "__experimentalLabel", "getLabel", "title", "label", "toPlainText", "stripHTML", "getAccessibleBlockLabel", "position", "direction", "hasPosition", "hasLabel", "sprintf", "__", "getDefault", "attributeSchema", "RichTextData", "__experimentalSanitizeBlockAttributes", "Error", "reduce", "accumulator", "schema", "fromHTMLString", "toHTMLString", "_default", "indexOf", "source", "Array", "isArray", "role", "attributesNames", "keys", "filter", "attributeName", "attribute", "__experimentalRole", "deprecated", "since", "version", "alternative", "hint", "__experimentalGetBlockAttributesNamesByRole", "args", "omit", "object", "fromEntries", "includes", "DEFAULT_CATEGORIES", "slug", "title", "__", "keyBlockTypesByName", "types", "reduce", "newBlockTypes", "block", "name", "getUniqueItemsByName", "items", "acc", "currentItem", "some", "item", "push", "bootstrappedBlockTypes", "state", "action", "type", "blockType", "serverDefinition", "newDefinition", "blockHooks", "undefined", "allowedBlocks", "Object", "fromEntries", "entries", "filter", "value", "map", "key", "camelCase", "omit", "names", "unprocessedBlockTypes", "blockTypes", "blockStyles", "_state$action$blockNa", "_blockType$styles", "_state$blockType$name", "styles", "style", "source", "updatedStyles", "blockNames", "forEach", "blockName", "_state$blockName", "styleNames", "indexOf", "blockVariations", "_state$action$blockNa2", "_state$action$blockNa3", "_blockType$variations", "_state$blockType$name2", "variations", "variation", "variationNames", "createBlockNameSetterReducer", "setActionType", "defaultBlockName", "freeformFallbackBlockName", "unregisteredFallbackBlockName", "groupingBlockName", "categories", "uniqueCategories", "Map", "category", "set", "values", "keys", "length", "categoryToChange", "find", "collections", "namespace", "icon", "getMergedUsesContext", "existingUsesContext", "newUsesContext", "mergedArrays", "Array", "from", "Set", "concat", "blockBindingsSources", "getFieldsList", "globalThis", "IS_GUTENBERG_PLUGIN", "label", "usesContext", "getValues", "setValues", "canUserEditValue", "reducer_default", "combineReducers", "selectors_exports", "getBlockSupport", "getBlockType", "getBlockTypes", "getBlockVariations", "getChildBlockNames", "getDefaultBlockName", "getGroupingBlockName", "hasBlockSupport", "hasChildBlocks", "hasChildBlocksWithInserterSupport", "getValueFromObjectPath", "object", "path", "defaultValue", "_value", "normalizedPath", "Array", "isArray", "split", "value", "forEach", "fieldName", "isObject", "candidate", "constructor", "Object", "matchesAttributes", "blockAttributes", "variationAttributes", "entries", "every", "key", "getBlockBindingsSource", "ROOT_BLOCK_SUPPORTS", "filterElementBlockSupports", "blockSupports", "name", "element", "filter", "support", "includes", "getSupportedStyles", "createSelector", "state", "blockType", "getBlockType", "supportKeys", "supports", "spacing", "blockGap", "push", "shadow", "Object", "keys", "STYLE_PROPERTY", "forEach", "styleName", "requiresOptOut", "getValueFromObjectPath", "blockTypes", "getBootstrappedBlockType", "bootstrappedBlockTypes", "getUnprocessedBlockTypes", "unprocessedBlockTypes", "getAllBlockBindingsSources", "blockBindingsSources", "getBlockBindingsSource", "sourceName", "hasContentRoleAttribute", "blockTypeName", "values", "attributes", "some", "role", "__experimentalRole", "deprecated", "since", "version", "alternative", "hint", "getNormalizedBlockType", "state", "nameOrType", "getBlockType", "getBlockTypes", "createSelector", "Object", "values", "blockTypes", "name", "getBlockStyles", "blockStyles", "getBlockVariations", "blockName", "scope", "variations", "blockVariations", "filter", "variation", "includes", "getActiveBlockVariation", "attributes", "blockType", "attributeKeys", "keys", "match", "maxMatchedAttributes", "Array", "isArray", "isActive", "definedAttributes", "attribute", "topLevelAttribute", "split", "definedAttributesLength", "length", "isMatch", "every", "variationAttributeValue", "getValueFromObjectPath", "undefined", "blockAttributeValue", "RichTextData", "toHTMLString", "matchesAttributes", "getDefaultBlockVariation", "defaultVariation", "reverse", "find", "isDefault", "getCategories", "categories", "getCollections", "collections", "getDefaultBlockName", "defaultBlockName", "getFreeformFallbackBlockName", "freeformFallbackBlockName", "getUnregisteredFallbackBlockName", "unregisteredFallbackBlockName", "getGroupingBlockName", "groupingBlockName", "getChildBlockNames", "parent", "map", "getBlockSupport", "feature", "defaultSupports", "supports", "hasBlockSupport", "getNormalizedSearchTerm", "term", "removeAccents", "toLowerCase", "trim", "isMatchingSearchTerm", "searchTerm", "normalizedSearchTerm", "isSearchMatch", "candidate", "title", "keywords", "some", "category", "description", "hasChildBlocks", "hasChildBlocksWithInserterSupport", "childBlockName", "__experimentalHasContentRoleAttribute", "args", "deprecated", "since", "version", "hint", "privateHasContentRoleAttribute", "actions_exports", "setDefaultBlockName", "setGroupingBlockName", "LEGACY_CATEGORY_MAPPING", "common", "formatting", "layout", "mergeBlockVariations", "bootstrappedVariations", "clientVariations", "result", "forEach", "clientVariation", "index", "findIndex", "bootstrappedVariation", "name", "push", "processBlockType", "blockSettings", "select", "bootstrappedBlockType", "getBootstrappedBlockType", "blockType", "icon", "BLOCK_ICON_DEFAULT", "keywords", "attributes", "providesContext", "usesContext", "selectors", "supports", "styles", "blockHooks", "save", "variations", "Array", "isArray", "settings", "applyFilters", "description", "deprecated", "since", "map", "deprecation", "Object", "fromEntries", "entries", "omit", "DEPRECATED_ENTRY_KEYS", "filter", "key", "includes", "isPlainObject", "globalThis", "SCRIPT_DEBUG", "warning", "isValidElementType", "edit", "hasOwnProperty", "category", "getCategories", "some", "slug", "title", "normalizeIconObject", "isValidIcon", "src", "addBlockTypes", "blockTypes", "type", "Array", "isArray", "reapplyBlockTypeFilters", "dispatch", "select", "processedBlockTypes", "name", "settings", "Object", "entries", "getUnprocessedBlockTypes", "result", "processBlockType", "push", "length", "__experimentalReapplyBlockFilters", "deprecated", "since", "alternative", "removeBlockTypes", "names", "addBlockStyles", "blockNames", "styles", "removeBlockStyles", "blockName", "styleNames", "addBlockVariations", "variations", "removeBlockVariations", "variationNames", "setDefaultBlockName", "setFreeformFallbackBlockName", "setUnregisteredFallbackBlockName", "setGroupingBlockName", "setCategories", "categories", "updateCategory", "slug", "category", "addBlockCollection", "namespace", "title", "icon", "removeBlockCollection", "addBootstrappedBlockType", "name", "blockType", "type", "addUnprocessedBlockType", "dispatch", "processedBlockType", "processBlockType", "addBlockTypes", "addBlockBindingsSource", "source", "label", "usesContext", "getValues", "setValues", "canUserEditValue", "getFieldsList", "removeBlockBindingsSource", "addBootstrappedBlockBindingsSource", "STORE_NAME", "store", "createReduxStore", "STORE_NAME", "reducer", "selectors", "actions", "register", "unlock", "registerPrivateSelectors", "privateSelectors", "registerPrivateActions", "privateActions", "createBlock", "name", "attributes", "innerBlocks", "sanitizedAttributes", "__experimentalSanitizeBlockAttributes", "clientId", "uuid", "isValid", "createBlocksFromInnerBlocksTemplate", "innerBlocksOrTemplate", "map", "innerBlock", "innerBlockTemplate", "Array", "isArray", "__experimentalCloneSanitizedBlock", "block", "mergeAttributes", "newInnerBlocks", "cloneBlock", "isPossibleTransformForSource", "transform", "direction", "blocks", "length", "isMultiBlock", "firstBlockName", "isValidForMultiBlocks", "isWildcardBlockTransform", "every", "isBlockType", "type", "sourceBlock", "hasMatchingName", "indexOf", "isContainerGroupBlock", "blockName", "maybeCheckTransformIsMatch", "getBlockTypesForPossibleFromTransforms", "allBlockTypes", "getBlockTypes", "blockTypesWithPossibleFromTransforms", "filter", "blockType", "fromTransforms", "getBlockTransforms", "findTransform", "getBlockTypesForPossibleToTransforms", "getBlockType", "transformsTo", "possibleTransforms", "blockNames", "transformation", "flat", "t", "includes", "getGroupingBlockName", "getPossibleBlockTransformations", "blockTypesForFromTransforms", "blockTypesForToTransforms", "Set", "transforms", "predicate", "hooks", "createHooks", "i", "candidate", "addFilter", "toString", "result", "priority", "applyFilters", "blockTypeOrName", "undefined", "normalizeBlockType", "usingMobileTransformations", "supportedMobileTransforms", "filteredTransforms", "transformBlockName", "isMatch", "switchToBlockType", "blocksArray", "firstBlock", "sourceName", "transformationsFrom", "transformationsTo", "transformationResults", "__experimentalConvert", "currentBlock", "some", "hasSwitchedBlock", "ret", "index", "results", "getBlockFromExample", "example", "_example$innerBlocks", "originalName", "originalContent", "originalUndelimitedContent", "document", "offset", "output", "stack", "tokenizer", "Block", "blockName", "attrs", "innerBlocks", "innerHTML", "innerContent", "Freeform", "Frame", "block", "tokenStart", "tokenLength", "prevOffset", "leadingHtmlStart", "parse", "doc", "lastIndex", "proceed", "stackDepth", "length", "next", "nextToken", "tokenType", "startOffset", "addFreeform", "addBlockFromStack", "push", "substr", "addInnerBlock", "stackTop", "pop", "html", "parseJSON", "input", "JSON", "e", "matches", "exec", "startedAt", "index", "match", "closerMatch", "namespaceMatch", "nameMatch", "attrsMatch", "voidMatch", "isCloser", "isVoid", "namespace", "name", "hasAttrs", "rawLength", "lastOffset", "parent", "endOffset", "htmlSplitRegex", "comments", "cdata", "escaped", "regex", "RegExp", "htmlSplit", "input", "parts", "workingInput", "match", "index", "push", "slice", "length", "replaceInHtmlTags", "haystack", "replacePairs", "textArr", "changed", "needles", "Object", "keys", "i", "j", "needle", "indexOf", "replace", "join", "autop", "text", "br", "preTags", "trim", "textParts", "split", "lastText", "pop", "textPart", "start", "name", "substr", "allBlocks", "texts", "filter", "Boolean", "forEach", "textPiece", "a", "b", "preTag", "original", "removep", "html", "blocklist", "blocklist1", "blocklist2", "preserve", "preserveLinebreaks", "preserveBr", "_", "space", "shift", "serializeRawBlock", "rawBlock", "options", "isCommentDelimited", "blockName", "attrs", "innerBlocks", "innerContent", "childIndex", "content", "map", "item", "join", "replace", "trim", "getCommentDelimitedContent", "import_jsx_runtime", "getBlockDefaultClassName", "blockName", "className", "replace", "applyFilters", "getBlockMenuDefaultClassName", "blockPropsProvider", "innerBlocksPropsProvider", "getBlockProps", "props", "blockType", "attributes", "skipFilters", "getInnerBlocksProps", "innerBlocks", "Array", "isArray", "children", "html", "serialize", "isInnerBlocks", "_jsx", "RawHTML", "getSaveElement", "blockTypeOrName", "normalizeBlockType", "save", "prototype", "Component", "instance", "render", "bind", "element", "hasFilter", "apiVersion", "isShallowEqual", "cloneElement", "getSaveContent", "renderToString", "getCommentAttributes", "_blockType$attributes", "Object", "entries", "reduce", "accumulator", "key", "attributeSchema", "value", "undefined", "source", "role", "__experimentalRole", "deprecated", "since", "version", "alternative", "hint", "name", "JSON", "stringify", "default", "serializeAttributes", "getBlockInnerHTML", "block", "saveContent", "originalContent", "isValid", "length", "error", "getCommentDelimitedContent", "rawBlockName", "content", "serializedAttributes", "startsWith", "slice", "serializeBlock", "__unstableBlockSource", "serializeRawBlock", "getUnregisteredTypeHandlerName", "getFreeformContentHandlerName", "getBlockType", "saveAttributes", "__unstableSerializeAndClean", "blocks", "isUnmodifiedDefaultBlock", "removep", "options", "blocksArray", "map", "join", "EntityParser", "EventedTokenizer", "Tokenizer", "createLogger", "createLogHandler", "logger", "log", "message", "args", "process", "require", "format", "error", "console", "warning", "warn", "getItems", "createQueuedLogger", "queue", "push", "identity", "x", "REGEXP_WHITESPACE", "REGEXP_ONLY_WHITESPACE", "REGEXP_STYLE_URL_TYPE", "BOOLEAN_ATTRIBUTES", "ENUMERATED_ATTRIBUTES", "MEANINGFUL_ATTRIBUTES", "TEXT_NORMALIZATIONS", "getTextWithCollapsedWhitespace", "REGEXP_NAMED_CHARACTER_REFERENCE", "REGEXP_DECIMAL_CHARACTER_REFERENCE", "REGEXP_HEXADECIMAL_CHARACTER_REFERENCE", "isValidCharacterReference", "text", "test", "DecodeEntityParser", "parse", "entity", "decodeEntities", "getTextPiecesSplitOnWhitespace", "trim", "split", "join", "getMeaningfulAttributePairs", "token", "attributes", "filter", "pair", "key", "value", "indexOf", "includes", "isEquivalentTextTokens", "actual", "expected", "logger", "createLogger", "actualChars", "chars", "expectedChars", "i", "length", "normalize", "warning", "getNormalizedLength", "parseFloat", "getNormalizedStyleValue", "textPieces", "normalizedPieces", "map", "result", "replace", "getStyleProperties", "pairs", "style", "valueParts", "Object", "fromEntries", "isEqualAttributesOfName", "class", "actualPieces", "expectedPieces", "actualDiff", "c", "expectedDiff", "fastDeepEqual", "attribute", "isEqualTagAttributePairs", "expectedAttributes", "toLowerCase", "name", "actualValue", "nameLower", "hasOwnProperty", "expectedValue", "isEqualAttributes", "isEqualTokensOfType", "StartTag", "tagName", "Chars", "Comment", "getNextNonWhitespaceToken", "tokens", "shift", "type", "getHTMLTokens", "html", "Tokenizer", "tokenize", "e", "isClosedByToken", "currentToken", "nextToken", "selfClosing", "isEquivalentHTML", "actualTokens", "expectedTokens", "actualToken", "expectedToken", "isEqualTokens", "validateBlock", "block", "blockTypeOrName", "isFallbackBlock", "getFreeformContentHandlerName", "getUnregisteredTypeHandlerName", "createQueuedLogger", "blockType", "normalizeBlockType", "generatedBlockContent", "getSaveContent", "error", "toString", "getItems", "isValid", "originalContent", "isValidBlockContent", "originalBlockContent", "deprecated", "since", "plugin", "alternative", "innerBlocks", "convertLegacyBlockNameAndAttributes", "name", "attributes", "newAttributes", "indexOf", "service", "substring", "providerSlug", "deprecated", "speaker", "polldaddy", "providerNameSlug", "includes", "responsive", "className", "join", "legacy", "layout", "type", "columnCount", "parseInt", "style", "columnSpan", "columnSpanNumber", "isNaN", "undefined", "rowSpan", "rowSpanNumber", "globalThis", "IS_GUTENBERG_PLUGIN", "metadata", "bindings", "__default", "source", "hasPatternOverrides", "forEach", "binding", "_a", "parse", "memo", "parse", "getSerializeCapableElement", "children", "getChildrenArray", "deprecated", "since", "version", "link", "concat", "blockNodes", "alternative", "result", "i", "length", "blockNode", "Array", "isArray", "j", "child", "canConcatToPreviousString", "push", "fromDOM", "domNodes", "error", "toHTML", "element", "renderToString", "matcher", "selector", "domNode", "match", "querySelector", "childNodes", "isNodeOfType", "node", "type", "deprecated", "since", "version", "link", "getNamedNodeMapAsObject", "nodeMap", "result", "i", "length", "name", "value", "fromDOM", "domNode", "alternative", "nodeType", "TEXT_NODE", "nodeValue", "ELEMENT_NODE", "TypeError", "nodeName", "toLowerCase", "props", "attributes", "children", "childNodes", "toHTML", "matcher", "selector", "match", "querySelector", "error", "html", "selector", "multilineTag", "domNode", "match", "querySelector", "value", "length", "children", "index", "child", "nodeName", "toLowerCase", "outerHTML", "innerHTML", "richText", "preserveWhiteSpace", "el", "target", "RichTextData", "fromHTMLElement", "empty", "toBooleanAttributeMatcher", "matcher", "value", "undefined", "isOfType", "type", "RichTextData", "constructor", "Object", "Array", "isArray", "isOfTypes", "types", "some", "getBlockAttribute", "attributeKey", "attributeSchema", "innerDOM", "commentAttributes", "innerHTML", "source", "parseWithAttributeSchema", "isValidByType", "isValidByEnum", "enum", "getDefault", "enumSet", "includes", "matcherFromSource", "memoize", "sourceConfig", "attr", "selector", "attribute", "html", "multiline", "text", "richText", "__unstablePreserveWhiteSpace", "children", "node", "subMatchers", "fromEntries", "entries", "query", "map", "key", "subSourceConfig", "prop", "domNode", "toLowerCase", "console", "error", "parseHtml", "hpqParse", "h", "getBlockAttributes", "blockTypeOrName", "attributes", "_blockType$attributes", "doc", "blockType", "normalizeBlockType", "blockAttributes", "schema", "applyFilters", "CLASS_ATTR_SCHEMA", "type", "source", "selector", "attribute", "getHTMLRootElementClasses", "innerHTML", "parsed", "parseWithAttributeSchema", "trim", "split", "fixCustomClassname", "blockAttributes", "blockType", "hasBlockSupport", "modifiedBlockAttributes", "className", "omittedClassName", "attributesSansClassName", "serialized", "getSaveContent", "defaultClasses", "actualClasses", "customClasses", "filter", "includes", "length", "join", "applyBuiltInValidationFixes", "block", "blockType", "updatedBlockAttributes", "fixCustomClassname", "attributes", "originalContent", "stubFalse", "applyBlockDeprecatedVersions", "block", "rawBlock", "blockType", "parsedAttributes", "attrs", "deprecated", "deprecatedDefinitions", "length", "i", "isEligible", "isValid", "innerBlocks", "blockNode", "deprecatedBlockType", "Object", "assign", "omit", "DEPRECATED_ENTRY_KEYS", "migratedBlock", "attributes", "getBlockAttributes", "originalContent", "validateBlock", "applyBuiltInValidationFixes", "migratedInnerBlocks", "migratedAttributes", "migrate", "migrated", "Array", "isArray", "validationIssues", "convertLegacyBlocks", "rawBlock", "correctName", "correctedAttributes", "convertLegacyBlockNameAndAttributes", "blockName", "attrs", "normalizeRawBlock", "options", "fallbackBlockName", "getFreeformContentHandlerName", "rawBlockName", "rawAttributes", "rawInnerBlocks", "innerBlocks", "rawInnerHTML", "innerHTML", "trim", "__unstableSkipAutop", "autop", "createMissingBlockType", "unregisteredFallbackBlock", "getUnregisteredTypeHandlerName", "originalUndelimitedContent", "serializeRawBlock", "isCommentDelimited", "originalContent", "originalName", "innerContent", "applyBlockValidation", "unvalidatedBlock", "blockType", "isValid", "validateBlock", "validationIssues", "fixedBlock", "applyBuiltInValidationFixes", "isFixedValid", "parseRawBlock", "normalizedBlock", "getBlockType", "isFallbackBlock", "parsedInnerBlocks", "map", "innerBlock", "filter", "parsedBlock", "createBlock", "getBlockAttributes", "validatedBlock", "updatedBlock", "applyBlockDeprecatedVersions", "__unstableBlockSource", "__unstableSkipMigrationLogs", "console", "groupCollapsed", "name", "info", "getSaveContent", "attributes", "groupEnd", "forEach", "log", "args", "parse", "content", "grammarParse", "reduce", "accumulator", "block", "push", "getRawTransforms", "getBlockTransforms", "filter", "type", "map", "transform", "isMatch", "node", "selector", "matches", "htmlToBlocks", "html", "handler", "doc", "document", "implementation", "createHTMLDocument", "body", "innerHTML", "Array", "from", "children", "flatMap", "node", "rawTransform", "findTransform", "getRawTransforms", "isMatch", "Platform", "isNative", "parse", "outerHTML", "createBlock", "getBlockAttributes", "transform", "blockName", "block", "hasAttribute", "attributes", "className", "getAttribute", "HTML", "options", "decuDoc", "document", "implementation", "createHTMLDocument", "accuDoc", "decu", "body", "accu", "innerHTML", "firstChild", "node", "nodeType", "TEXT_NODE", "isEmpty", "removeChild", "lastChild", "nodeName", "appendChild", "createElement", "ELEMENT_NODE", "nextSibling", "hasChildNodes", "raw", "isPhrasingContent", "node", "doc", "nodeType", "COMMENT_NODE", "nodeValue", "indexOf", "block", "createBlock", "parentNode", "nodeName", "replace", "childNodes", "Array", "from", "nodeIndex", "wrapperNode", "body", "paragraphBuilder", "acc", "child", "createElement", "appendChild", "slice", "reduce", "forEach", "element", "insertBefore", "remove", "commentNode", "createNextpage", "customText", "trim", "sibling", "noTeaser", "nextSibling", "createMore", "dataset", "isList", "node", "nodeName", "shallowTextContent", "element", "Array", "from", "childNodes", "map", "nodeValue", "join", "list", "prevElement", "previousElementSibling", "children", "length", "firstChild", "appendChild", "parentNode", "removeChild", "parentElement", "test", "parentListItem", "prevListItem", "parentList", "unwrap", "options", "node", "nodeName", "innerHTML", "normaliseBlocks", "isFigureContent", "node", "schema", "_schema$figure$childr", "tag", "nodeName", "toLowerCase", "isTextContent", "figure", "children", "canHaveAnchor", "_schema$figure$childr2", "a", "wrapFigureContent", "element", "beforeElement", "ownerDocument", "createElement", "parentNode", "insertBefore", "appendChild", "doc", "nodeToInsert", "childNodes", "length", "wrapper", "closest", "classList", "contains", "textContent", "trim", "next", "tag", "text", "index", "re", "regexp", "lastIndex", "match", "exec", "result", "content", "shortcode", "fromMatch", "slice", "replace", "callback", "left", "$3", "attrs", "slash", "closing", "right", "arguments", "string", "options", "RegExp", "memize", "named", "numeric", "pattern", "toLowerCase", "push", "type", "Object", "assign", "attributes", "attributeTypes", "length", "every", "t", "key", "entries", "forEach", "value", "set", "prototype", "get", "attr", "test", "name", "castArray", "maybeArray", "Array", "isArray", "beforeLineRegexp", "afterLineRegexp", "segmentHTMLToShortcodeBlock", "HTML", "lastIndex", "excludedBlockNames", "transformsFrom", "getBlockTransforms", "transformation", "findTransform", "transform", "indexOf", "blockName", "type", "tag", "some", "regexp", "test", "transformTags", "transformTag", "find", "match", "previousIndex", "next", "index", "content", "length", "beforeHTML", "substr", "afterHTML", "shortcode", "includes", "isMatch", "attrs", "blocks", "concat", "map", "block", "originalContent", "applyBuiltInValidationFixes", "getBlockType", "name", "attributes", "Object", "fromEntries", "entries", "filter", "schema", "key", "blockType", "transformationBlockType", "createBlock", "getBlockAttributes", "replace", "getBlockContentSchemaFromTransforms", "transforms", "context", "phrasingContentSchema", "getPhrasingContentSchema", "schemaArgs", "isPaste", "schemas", "map", "isMatch", "blockName", "schema", "hasAnchorSupport", "hasBlockSupport", "Object", "fromEntries", "entries", "key", "value", "attributes", "undefined", "mergeTagNameSchemaProperties", "objValue", "srcValue", "args", "mergeTagNameSchemas", "a", "b", "mergeSchemas", "reduce", "getBlockContentSchema", "getRawTransforms", "isPlain", "HTML", "test", "deepFilterNodeList", "nodeList", "filters", "doc", "Array", "from", "forEach", "node", "childNodes", "item", "contains", "deepFilterHTML", "document", "implementation", "createHTMLDocument", "body", "innerHTML", "getSibling", "which", "sibling", "isPhrasingContent", "parentNode", "node", "nodeType", "COMMENT_NODE", "remove", "isInline", "node", "contextTag", "isTextContent", "tag", "nodeName", "toLowerCase", "inlineAllowedTagGroups", "some", "tagGroup", "filter", "t", "includes", "length", "deepCheck", "nodes", "every", "Array", "from", "children", "isDoubleBR", "previousSibling", "HTML", "doc", "document", "implementation", "createHTMLDocument", "body", "innerHTML", "node", "doc", "nodeName", "style", "fontWeight", "fontStyle", "textDecorationLine", "textDecoration", "verticalAlign", "wrap", "createElement", "includes", "replaceTag", "target", "toLowerCase", "rel", "removeAttribute", "name", "id", "ownerDocument", "querySelector", "node", "nodeName", "parentNode", "removeChild", "node", "nodeType", "ELEMENT_NODE", "style", "getAttribute", "includes", "rules", "split", "reduce", "acc", "rule", "key", "value", "trim", "toLowerCase", "remove", "isList", "node", "nodeName", "doc", "style", "getAttribute", "includes", "prevNode", "previousElementSibling", "type", "textContent", "trim", "slice", "isNumeric", "test", "newListNode", "createElement", "setAttribute", "parentNode", "insertBefore", "listNode", "listType", "listItem", "receivingNode", "innerHTML", "deepFilterHTML", "msListIgnore", "matches", "exec", "level", "parseInt", "lastChild", "appendChild", "removeChild", "cache", "createBlobURL", "file", "url", "window", "URL", "createObjectURL", "isBlobURL", "url", "indexOf", "node", "nodeName", "src", "indexOf", "properties", "data", "split", "type", "slice", "decoded", "atob", "e", "uint8Array", "Uint8Array", "length", "i", "charCodeAt", "name", "replace", "file", "window", "File", "createBlobURL", "height", "width", "parentNode", "removeChild", "node", "nodeName", "innerHTML", "normaliseBlocks", "converter", "showdown", "Converter", "noHeaderId", "tables", "literalMidWordUnderscores", "omitExtraWLInCodeBlocks", "simpleLineBreaks", "strikethrough", "slackMarkdownVariantCorrector", "text", "replace", "match", "p1", "p2", "p3", "bulletsToAsterisks", "makeHtml", "node", "nodeName", "text", "ownerDocument", "createTextNode", "src", "parentNode", "replaceChild", "node", "id", "indexOf", "tagName", "unwrap", "removeAttribute", "isFormattingSpace", "character", "node", "nodeType", "TEXT_NODE", "parent", "parentNode", "ELEMENT_NODE", "nodeName", "newData", "data", "replace", "previousSibling", "getSibling", "textContent", "slice", "length", "nextSibling", "removeChild", "node", "nodeName", "getSibling", "parentNode", "removeChild", "node", "nodeName", "hasChildNodes", "parentNode", "removeChild", "node", "nodeName", "getAttribute", "parentNode", "insertBefore", "ownerDocument", "createElement", "removeChild", "log", "args", "window", "console", "filterInlineHTML", "HTML", "deepFilterHTML", "headRemover", "googleDocsUIDRemover", "msListIgnore", "phrasingContentReducer", "commentRemover", "removeInvalidHTML", "getPhrasingContentSchema", "inline", "htmlFormattingRemover", "brRemover", "pasteHandler", "plainText", "mode", "tagName", "replace", "content", "indexOf", "parseResult", "parse", "isSingleFreeFormBlock", "length", "name", "String", "prototype", "normalize", "slackParagraphCorrector", "isPlainText", "isPlain", "test", "markdownConverter", "pieces", "shortcodeConverter", "hasShortcodes", "isInlineContent", "phrasingContentSchema", "blockContentSchema", "getBlockContentSchema", "blocks", "map", "piece", "filters", "msListConverter", "listReducer", "imageCorrector", "specialCommentConverter", "iframeRemover", "figureContentReducer", "blockquoteNormaliser", "divNormaliser", "schema", "normaliseBlocks", "emptyParagraphRemover", "htmlToBlocks", "flat", "filter", "Boolean", "hasBlockSupport", "trimRegex", "trimmedPlainText", "getBlockInnerHTML", "deprecatedGetPhrasingContentSchema", "context", "deprecated", "since", "alternative", "getPhrasingContentSchema", "rawHandler", "HTML", "indexOf", "parseResult", "parse", "isSingleFreeFormBlock", "length", "name", "pieces", "shortcodeConverter", "blockContentSchema", "getBlockContentSchema", "map", "piece", "filters", "listReducer", "specialCommentConverter", "figureContentReducer", "blockquoteNormaliser", "raw", "deepFilterHTML", "normaliseBlocks", "htmlToBlocks", "flat", "filter", "Boolean", "getCategories", "select", "blocksStore", "setCategories", "categories", "dispatch", "updateCategory", "slug", "category", "doBlocksMatchTemplate", "blocks", "template", "length", "every", "name", "innerBlocksTemplate", "index", "block", "innerBlocks", "isHTMLAttribute", "attributeDefinition", "source", "isQueryAttribute", "normalizeAttributes", "schema", "values", "Object", "fromEntries", "entries", "map", "key", "value", "normalizeAttribute", "definition", "Array", "isArray", "renderToString", "subValues", "query", "synchronizeBlocksWithTemplate", "attributes", "_blockType$attributes", "blockType", "getBlockType", "normalizedAttributes", "blockName", "blockAttributes", "convertLegacyBlockNameAndAttributes", "undefined", "originalName", "originalContent", "originalUndelimitedContent", "createBlock", "privateApis", "lock", "isUnmodifiedBlockContent", "withBlockContentContext", "OriginalComponent", "deprecated", "since"]
}
