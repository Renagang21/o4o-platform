{
  "version": 3,
  "sources": ["../../../../node_modules/remove-accents/index.js", "../../../../node_modules/fast-deep-equal/es6/index.js", "../../../../node_modules/sprintf-js/src/sprintf.js", "../../../../node_modules/memize/dist/index.js", "../../../../node_modules/colord/index.mjs", "../../../../node_modules/colord/plugins/names.mjs", "../../../../node_modules/colord/plugins/a11y.mjs", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/special-characters.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-text-content.js", "../../../../node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/reducer.js", "../../../../node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/selectors.js", "../../../../node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/actions.js", "../../../../node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/index.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create-element.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-format-equal.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/normalise-formats.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/concat.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-formats.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-format-type.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-tree.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-html-string.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-collapsed.ts", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-format.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/slice.js", "../../../../node_modules/@wordpress/a11y/build-module/shared/@wordpress/a11y/src/shared/clear.js", "../../../../node_modules/@wordpress/a11y/build-module/shared/@wordpress/a11y/src/shared/filter-message.js", "../../../../node_modules/@wordpress/a11y/build-module/shared/@wordpress/a11y/src/shared/index.js", "../../../../node_modules/@wordpress/dom-ready/build-module/@wordpress/dom-ready/src/index.js", "../../../../node_modules/@wordpress/a11y/build-module/script/@wordpress/a11y/src/script/add-container.js", "../../../../node_modules/@wordpress/a11y/build-module/script/@wordpress/a11y/src/script/add-intro-text.ts", "../../../../node_modules/@wordpress/a11y/build-module/@wordpress/a11y/src/index.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-range-equal.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-dom.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-default-style.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-boundary-style.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/copy-handler.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/select-object.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/format-boundaries.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/delete.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/update-formats.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/input-and-selection.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/selection-change-compat.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/prevent-focus-capture.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/index.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/index.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-format.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-object.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-empty.js", "../../../../node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/split.js", "../../../../node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor.js", "../../../../node_modules/@wordpress/warning/build-module/@wordpress/warning/src/utils.ts", "../../../../node_modules/@wordpress/warning/build-module/@wordpress/warning/src/index.ts", "../../../../node_modules/@wordpress/html-entities/build-module/@wordpress/html-entities/src/index.ts"],
  "sourcesContent": ["var characterMap = {\n\t\"À\": \"A\",\n\t\"Á\": \"A\",\n\t\"Â\": \"A\",\n\t\"Ã\": \"A\",\n\t\"Ä\": \"A\",\n\t\"Å\": \"A\",\n\t\"Ấ\": \"A\",\n\t\"Ắ\": \"A\",\n\t\"Ẳ\": \"A\",\n\t\"Ẵ\": \"A\",\n\t\"Ặ\": \"A\",\n\t\"Æ\": \"AE\",\n\t\"Ầ\": \"A\",\n\t\"Ằ\": \"A\",\n\t\"Ȃ\": \"A\",\n\t\"Ả\": \"A\",\n\t\"Ạ\": \"A\",\n\t\"Ẩ\": \"A\",\n\t\"Ẫ\": \"A\",\n\t\"Ậ\": \"A\",\n\t\"Ç\": \"C\",\n\t\"Ḉ\": \"C\",\n\t\"È\": \"E\",\n\t\"É\": \"E\",\n\t\"Ê\": \"E\",\n\t\"Ë\": \"E\",\n\t\"Ế\": \"E\",\n\t\"Ḗ\": \"E\",\n\t\"Ề\": \"E\",\n\t\"Ḕ\": \"E\",\n\t\"Ḝ\": \"E\",\n\t\"Ȇ\": \"E\",\n\t\"Ẻ\": \"E\",\n\t\"Ẽ\": \"E\",\n\t\"Ẹ\": \"E\",\n\t\"Ể\": \"E\",\n\t\"Ễ\": \"E\",\n\t\"Ệ\": \"E\",\n\t\"Ì\": \"I\",\n\t\"Í\": \"I\",\n\t\"Î\": \"I\",\n\t\"Ï\": \"I\",\n\t\"Ḯ\": \"I\",\n\t\"Ȋ\": \"I\",\n\t\"Ỉ\": \"I\",\n\t\"Ị\": \"I\",\n\t\"Ð\": \"D\",\n\t\"Ñ\": \"N\",\n\t\"Ò\": \"O\",\n\t\"Ó\": \"O\",\n\t\"Ô\": \"O\",\n\t\"Õ\": \"O\",\n\t\"Ö\": \"O\",\n\t\"Ø\": \"O\",\n\t\"Ố\": \"O\",\n\t\"Ṍ\": \"O\",\n\t\"Ṓ\": \"O\",\n\t\"Ȏ\": \"O\",\n\t\"Ỏ\": \"O\",\n\t\"Ọ\": \"O\",\n\t\"Ổ\": \"O\",\n\t\"Ỗ\": \"O\",\n\t\"Ộ\": \"O\",\n\t\"Ờ\": \"O\",\n\t\"Ở\": \"O\",\n\t\"Ỡ\": \"O\",\n\t\"Ớ\": \"O\",\n\t\"Ợ\": \"O\",\n\t\"Ù\": \"U\",\n\t\"Ú\": \"U\",\n\t\"Û\": \"U\",\n\t\"Ü\": \"U\",\n\t\"Ủ\": \"U\",\n\t\"Ụ\": \"U\",\n\t\"Ử\": \"U\",\n\t\"Ữ\": \"U\",\n\t\"Ự\": \"U\",\n\t\"Ý\": \"Y\",\n\t\"à\": \"a\",\n\t\"á\": \"a\",\n\t\"â\": \"a\",\n\t\"ã\": \"a\",\n\t\"ä\": \"a\",\n\t\"å\": \"a\",\n\t\"ấ\": \"a\",\n\t\"ắ\": \"a\",\n\t\"ẳ\": \"a\",\n\t\"ẵ\": \"a\",\n\t\"ặ\": \"a\",\n\t\"æ\": \"ae\",\n\t\"ầ\": \"a\",\n\t\"ằ\": \"a\",\n\t\"ȃ\": \"a\",\n\t\"ả\": \"a\",\n\t\"ạ\": \"a\",\n\t\"ẩ\": \"a\",\n\t\"ẫ\": \"a\",\n\t\"ậ\": \"a\",\n\t\"ç\": \"c\",\n\t\"ḉ\": \"c\",\n\t\"è\": \"e\",\n\t\"é\": \"e\",\n\t\"ê\": \"e\",\n\t\"ë\": \"e\",\n\t\"ế\": \"e\",\n\t\"ḗ\": \"e\",\n\t\"ề\": \"e\",\n\t\"ḕ\": \"e\",\n\t\"ḝ\": \"e\",\n\t\"ȇ\": \"e\",\n\t\"ẻ\": \"e\",\n\t\"ẽ\": \"e\",\n\t\"ẹ\": \"e\",\n\t\"ể\": \"e\",\n\t\"ễ\": \"e\",\n\t\"ệ\": \"e\",\n\t\"ì\": \"i\",\n\t\"í\": \"i\",\n\t\"î\": \"i\",\n\t\"ï\": \"i\",\n\t\"ḯ\": \"i\",\n\t\"ȋ\": \"i\",\n\t\"ỉ\": \"i\",\n\t\"ị\": \"i\",\n\t\"ð\": \"d\",\n\t\"ñ\": \"n\",\n\t\"ò\": \"o\",\n\t\"ó\": \"o\",\n\t\"ô\": \"o\",\n\t\"õ\": \"o\",\n\t\"ö\": \"o\",\n\t\"ø\": \"o\",\n\t\"ố\": \"o\",\n\t\"ṍ\": \"o\",\n\t\"ṓ\": \"o\",\n\t\"ȏ\": \"o\",\n\t\"ỏ\": \"o\",\n\t\"ọ\": \"o\",\n\t\"ổ\": \"o\",\n\t\"ỗ\": \"o\",\n\t\"ộ\": \"o\",\n\t\"ờ\": \"o\",\n\t\"ở\": \"o\",\n\t\"ỡ\": \"o\",\n\t\"ớ\": \"o\",\n\t\"ợ\": \"o\",\n\t\"ù\": \"u\",\n\t\"ú\": \"u\",\n\t\"û\": \"u\",\n\t\"ü\": \"u\",\n\t\"ủ\": \"u\",\n\t\"ụ\": \"u\",\n\t\"ử\": \"u\",\n\t\"ữ\": \"u\",\n\t\"ự\": \"u\",\n\t\"ý\": \"y\",\n\t\"ÿ\": \"y\",\n\t\"Ā\": \"A\",\n\t\"ā\": \"a\",\n\t\"Ă\": \"A\",\n\t\"ă\": \"a\",\n\t\"Ą\": \"A\",\n\t\"ą\": \"a\",\n\t\"Ć\": \"C\",\n\t\"ć\": \"c\",\n\t\"Ĉ\": \"C\",\n\t\"ĉ\": \"c\",\n\t\"Ċ\": \"C\",\n\t\"ċ\": \"c\",\n\t\"Č\": \"C\",\n\t\"č\": \"c\",\n\t\"C̆\": \"C\",\n\t\"c̆\": \"c\",\n\t\"Ď\": \"D\",\n\t\"ď\": \"d\",\n\t\"Đ\": \"D\",\n\t\"đ\": \"d\",\n\t\"Ē\": \"E\",\n\t\"ē\": \"e\",\n\t\"Ĕ\": \"E\",\n\t\"ĕ\": \"e\",\n\t\"Ė\": \"E\",\n\t\"ė\": \"e\",\n\t\"Ę\": \"E\",\n\t\"ę\": \"e\",\n\t\"Ě\": \"E\",\n\t\"ě\": \"e\",\n\t\"Ĝ\": \"G\",\n\t\"Ǵ\": \"G\",\n\t\"ĝ\": \"g\",\n\t\"ǵ\": \"g\",\n\t\"Ğ\": \"G\",\n\t\"ğ\": \"g\",\n\t\"Ġ\": \"G\",\n\t\"ġ\": \"g\",\n\t\"Ģ\": \"G\",\n\t\"ģ\": \"g\",\n\t\"Ĥ\": \"H\",\n\t\"ĥ\": \"h\",\n\t\"Ħ\": \"H\",\n\t\"ħ\": \"h\",\n\t\"Ḫ\": \"H\",\n\t\"ḫ\": \"h\",\n\t\"Ĩ\": \"I\",\n\t\"ĩ\": \"i\",\n\t\"Ī\": \"I\",\n\t\"ī\": \"i\",\n\t\"Ĭ\": \"I\",\n\t\"ĭ\": \"i\",\n\t\"Į\": \"I\",\n\t\"į\": \"i\",\n\t\"İ\": \"I\",\n\t\"ı\": \"i\",\n\t\"Ĳ\": \"IJ\",\n\t\"ĳ\": \"ij\",\n\t\"Ĵ\": \"J\",\n\t\"ĵ\": \"j\",\n\t\"Ķ\": \"K\",\n\t\"ķ\": \"k\",\n\t\"Ḱ\": \"K\",\n\t\"ḱ\": \"k\",\n\t\"K̆\": \"K\",\n\t\"k̆\": \"k\",\n\t\"Ĺ\": \"L\",\n\t\"ĺ\": \"l\",\n\t\"Ļ\": \"L\",\n\t\"ļ\": \"l\",\n\t\"Ľ\": \"L\",\n\t\"ľ\": \"l\",\n\t\"Ŀ\": \"L\",\n\t\"ŀ\": \"l\",\n\t\"Ł\": \"l\",\n\t\"ł\": \"l\",\n\t\"Ḿ\": \"M\",\n\t\"ḿ\": \"m\",\n\t\"M̆\": \"M\",\n\t\"m̆\": \"m\",\n\t\"Ń\": \"N\",\n\t\"ń\": \"n\",\n\t\"Ņ\": \"N\",\n\t\"ņ\": \"n\",\n\t\"Ň\": \"N\",\n\t\"ň\": \"n\",\n\t\"ŉ\": \"n\",\n\t\"N̆\": \"N\",\n\t\"n̆\": \"n\",\n\t\"Ō\": \"O\",\n\t\"ō\": \"o\",\n\t\"Ŏ\": \"O\",\n\t\"ŏ\": \"o\",\n\t\"Ő\": \"O\",\n\t\"ő\": \"o\",\n\t\"Œ\": \"OE\",\n\t\"œ\": \"oe\",\n\t\"P̆\": \"P\",\n\t\"p̆\": \"p\",\n\t\"Ŕ\": \"R\",\n\t\"ŕ\": \"r\",\n\t\"Ŗ\": \"R\",\n\t\"ŗ\": \"r\",\n\t\"Ř\": \"R\",\n\t\"ř\": \"r\",\n\t\"R̆\": \"R\",\n\t\"r̆\": \"r\",\n\t\"Ȓ\": \"R\",\n\t\"ȓ\": \"r\",\n\t\"Ś\": \"S\",\n\t\"ś\": \"s\",\n\t\"Ŝ\": \"S\",\n\t\"ŝ\": \"s\",\n\t\"Ş\": \"S\",\n\t\"Ș\": \"S\",\n\t\"ș\": \"s\",\n\t\"ş\": \"s\",\n\t\"Š\": \"S\",\n\t\"š\": \"s\",\n\t\"Ţ\": \"T\",\n\t\"ţ\": \"t\",\n\t\"ț\": \"t\",\n\t\"Ț\": \"T\",\n\t\"Ť\": \"T\",\n\t\"ť\": \"t\",\n\t\"Ŧ\": \"T\",\n\t\"ŧ\": \"t\",\n\t\"T̆\": \"T\",\n\t\"t̆\": \"t\",\n\t\"Ũ\": \"U\",\n\t\"ũ\": \"u\",\n\t\"Ū\": \"U\",\n\t\"ū\": \"u\",\n\t\"Ŭ\": \"U\",\n\t\"ŭ\": \"u\",\n\t\"Ů\": \"U\",\n\t\"ů\": \"u\",\n\t\"Ű\": \"U\",\n\t\"ű\": \"u\",\n\t\"Ų\": \"U\",\n\t\"ų\": \"u\",\n\t\"Ȗ\": \"U\",\n\t\"ȗ\": \"u\",\n\t\"V̆\": \"V\",\n\t\"v̆\": \"v\",\n\t\"Ŵ\": \"W\",\n\t\"ŵ\": \"w\",\n\t\"Ẃ\": \"W\",\n\t\"ẃ\": \"w\",\n\t\"X̆\": \"X\",\n\t\"x̆\": \"x\",\n\t\"Ŷ\": \"Y\",\n\t\"ŷ\": \"y\",\n\t\"Ÿ\": \"Y\",\n\t\"Y̆\": \"Y\",\n\t\"y̆\": \"y\",\n\t\"Ź\": \"Z\",\n\t\"ź\": \"z\",\n\t\"Ż\": \"Z\",\n\t\"ż\": \"z\",\n\t\"Ž\": \"Z\",\n\t\"ž\": \"z\",\n\t\"ſ\": \"s\",\n\t\"ƒ\": \"f\",\n\t\"Ơ\": \"O\",\n\t\"ơ\": \"o\",\n\t\"Ư\": \"U\",\n\t\"ư\": \"u\",\n\t\"Ǎ\": \"A\",\n\t\"ǎ\": \"a\",\n\t\"Ǐ\": \"I\",\n\t\"ǐ\": \"i\",\n\t\"Ǒ\": \"O\",\n\t\"ǒ\": \"o\",\n\t\"Ǔ\": \"U\",\n\t\"ǔ\": \"u\",\n\t\"Ǖ\": \"U\",\n\t\"ǖ\": \"u\",\n\t\"Ǘ\": \"U\",\n\t\"ǘ\": \"u\",\n\t\"Ǚ\": \"U\",\n\t\"ǚ\": \"u\",\n\t\"Ǜ\": \"U\",\n\t\"ǜ\": \"u\",\n\t\"Ứ\": \"U\",\n\t\"ứ\": \"u\",\n\t\"Ṹ\": \"U\",\n\t\"ṹ\": \"u\",\n\t\"Ǻ\": \"A\",\n\t\"ǻ\": \"a\",\n\t\"Ǽ\": \"AE\",\n\t\"ǽ\": \"ae\",\n\t\"Ǿ\": \"O\",\n\t\"ǿ\": \"o\",\n\t\"Þ\": \"TH\",\n\t\"þ\": \"th\",\n\t\"Ṕ\": \"P\",\n\t\"ṕ\": \"p\",\n\t\"Ṥ\": \"S\",\n\t\"ṥ\": \"s\",\n\t\"X́\": \"X\",\n\t\"x́\": \"x\",\n\t\"Ѓ\": \"Г\",\n\t\"ѓ\": \"г\",\n\t\"Ќ\": \"К\",\n\t\"ќ\": \"к\",\n\t\"A̋\": \"A\",\n\t\"a̋\": \"a\",\n\t\"E̋\": \"E\",\n\t\"e̋\": \"e\",\n\t\"I̋\": \"I\",\n\t\"i̋\": \"i\",\n\t\"Ǹ\": \"N\",\n\t\"ǹ\": \"n\",\n\t\"Ồ\": \"O\",\n\t\"ồ\": \"o\",\n\t\"Ṑ\": \"O\",\n\t\"ṑ\": \"o\",\n\t\"Ừ\": \"U\",\n\t\"ừ\": \"u\",\n\t\"Ẁ\": \"W\",\n\t\"ẁ\": \"w\",\n\t\"Ỳ\": \"Y\",\n\t\"ỳ\": \"y\",\n\t\"Ȁ\": \"A\",\n\t\"ȁ\": \"a\",\n\t\"Ȅ\": \"E\",\n\t\"ȅ\": \"e\",\n\t\"Ȉ\": \"I\",\n\t\"ȉ\": \"i\",\n\t\"Ȍ\": \"O\",\n\t\"ȍ\": \"o\",\n\t\"Ȑ\": \"R\",\n\t\"ȑ\": \"r\",\n\t\"Ȕ\": \"U\",\n\t\"ȕ\": \"u\",\n\t\"B̌\": \"B\",\n\t\"b̌\": \"b\",\n\t\"Č̣\": \"C\",\n\t\"č̣\": \"c\",\n\t\"Ê̌\": \"E\",\n\t\"ê̌\": \"e\",\n\t\"F̌\": \"F\",\n\t\"f̌\": \"f\",\n\t\"Ǧ\": \"G\",\n\t\"ǧ\": \"g\",\n\t\"Ȟ\": \"H\",\n\t\"ȟ\": \"h\",\n\t\"J̌\": \"J\",\n\t\"ǰ\": \"j\",\n\t\"Ǩ\": \"K\",\n\t\"ǩ\": \"k\",\n\t\"M̌\": \"M\",\n\t\"m̌\": \"m\",\n\t\"P̌\": \"P\",\n\t\"p̌\": \"p\",\n\t\"Q̌\": \"Q\",\n\t\"q̌\": \"q\",\n\t\"Ř̩\": \"R\",\n\t\"ř̩\": \"r\",\n\t\"Ṧ\": \"S\",\n\t\"ṧ\": \"s\",\n\t\"V̌\": \"V\",\n\t\"v̌\": \"v\",\n\t\"W̌\": \"W\",\n\t\"w̌\": \"w\",\n\t\"X̌\": \"X\",\n\t\"x̌\": \"x\",\n\t\"Y̌\": \"Y\",\n\t\"y̌\": \"y\",\n\t\"A̧\": \"A\",\n\t\"a̧\": \"a\",\n\t\"B̧\": \"B\",\n\t\"b̧\": \"b\",\n\t\"Ḑ\": \"D\",\n\t\"ḑ\": \"d\",\n\t\"Ȩ\": \"E\",\n\t\"ȩ\": \"e\",\n\t\"Ɛ̧\": \"E\",\n\t\"ɛ̧\": \"e\",\n\t\"Ḩ\": \"H\",\n\t\"ḩ\": \"h\",\n\t\"I̧\": \"I\",\n\t\"i̧\": \"i\",\n\t\"Ɨ̧\": \"I\",\n\t\"ɨ̧\": \"i\",\n\t\"M̧\": \"M\",\n\t\"m̧\": \"m\",\n\t\"O̧\": \"O\",\n\t\"o̧\": \"o\",\n\t\"Q̧\": \"Q\",\n\t\"q̧\": \"q\",\n\t\"U̧\": \"U\",\n\t\"u̧\": \"u\",\n\t\"X̧\": \"X\",\n\t\"x̧\": \"x\",\n\t\"Z̧\": \"Z\",\n\t\"z̧\": \"z\",\n\t\"й\":\"и\",\n\t\"Й\":\"И\",\n\t\"ё\":\"е\",\n\t\"Ё\":\"Е\",\n};\n\nvar chars = Object.keys(characterMap).join('|');\nvar allAccents = new RegExp(chars, 'g');\nvar firstAccent = new RegExp(chars, '');\n\nfunction matcher(match) {\n\treturn characterMap[match];\n}\n\nvar removeAccents = function(string) {\n\treturn string.replace(allAccents, matcher);\n};\n\nvar hasAccents = function(string) {\n\treturn !!string.match(firstAccent);\n};\n\nmodule.exports = removeAccents;\nmodule.exports.has = hasAccents;\nmodule.exports.remove = removeAccents;\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n", "/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n", "var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n", "export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n", "var o=function(o){var t=o/255;return t<.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)},t=function(t){return.2126*o(t.r)+.7152*o(t.g)+.0722*o(t.b)};export default function(o){o.prototype.luminance=function(){return o=t(this.rgba),void 0===(r=2)&&(r=0),void 0===n&&(n=Math.pow(10,r)),Math.round(n*o)/n+0;var o,r,n},o.prototype.contrast=function(r){void 0===r&&(r=\"#FFF\");var n,a,i,e,v,u,d,c=r instanceof o?r:new o(r);return e=this.rgba,v=c.toRgb(),u=t(e),d=t(v),n=u>d?(u+.05)/(d+.05):(d+.05)/(u+.05),void 0===(a=2)&&(a=0),void 0===i&&(i=Math.pow(10,a)),Math.floor(i*n)/i+0},o.prototype.isReadable=function(o,t){return void 0===o&&(o=\"#FFF\"),void 0===t&&(t={}),this.contrast(o)>=(e=void 0===(i=(r=t).size)?\"normal\":i,\"AAA\"===(a=void 0===(n=r.level)?\"AA\":n)&&\"normal\"===e?7:\"AA\"===a&&\"large\"===e?3:4.5);var r,n,a,i,e}}\n", "/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n", "/**\n * Internal dependencies\n */\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text.replace( OBJECT_REPLACEMENT_CHARACTER, '' );\n}\n", "/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// Key format types by their name.\n\t\t\t\t...action.formatTypes.reduce(\n\t\t\t\t\t( newFormatTypes, type ) => ( {\n\t\t\t\t\t\t...newFormatTypes,\n\t\t\t\t\t\t[ type.name ]: type,\n\t\t\t\t\t} ),\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).filter(\n\t\t\t\t\t( [ key ] ) => ! action.names.includes( key )\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n", "/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypes } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const availableFormats = getFormatTypes();\n *\n *    return availableFormats ? (\n *        <ul>\n *            { availableFormats?.map( ( format ) => (\n *                <li>{ format.name }</li>\n *           ) ) }\n *        </ul>\n *    ) : (\n *        __( 'No Formats available' )\n *    );\n * };\n * ```\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [ state.formatTypes ]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Format type name.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatType } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const boldFormat = getFormatType( 'core/bold' );\n *\n *    return boldFormat ? (\n *        <ul>\n *            { Object.entries( boldFormat )?.map( ( [ key, value ] ) => (\n *                <li>\n *                    { key } : { value }\n *                </li>\n *           ) ) }\n *       </ul>\n *    ) : (\n *        __( 'Not Found' )\n *    ;\n * };\n * ```\n *\n * @return {?Object} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypeForBareElement } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const format = getFormatTypeForBareElement( 'strong' );\n *\n *    return format && <p>{ sprintf( __( 'Format name: %s' ), format.name ) }</p>;\n * }\n * ```\n *\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\tconst formatTypes = getFormatTypes( state );\n\treturn (\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && bareElementTagName === tagName;\n\t\t} ) ||\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && '*' === tagName;\n\t\t} )\n\t);\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypeForClassName } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const format = getFormatTypeForClassName( 'has-inline-color' );\n *\n *    return format && <p>{ sprintf( __( 'Format name: %s' ), format.name ) }</p>;\n * };\n * ```\n *\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn getFormatTypes( state ).find( ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n", "/**\n * Returns an action object used in signalling that format types have been\n * added.\n * Ignored from documentation as registerFormatType should be used instead from @wordpress/rich-text\n *\n * @ignore\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: Array.isArray( formatTypes )\n\t\t\t? formatTypes\n\t\t\t: [ formatTypes ],\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * Ignored from documentation as unregisterFormatType should be used instead from @wordpress/rich-text\n *\n * @ignore\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: Array.isArray( names ) ? names : [ names ],\n\t};\n}\n", "/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'core/rich-text';\n\n/**\n * Store definition for the rich-text namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\n", "/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n", "/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Optimised equality check for format objects.\n *\n * @param {?RichTextFormat} format1 Format to compare.\n * @param {?RichTextFormat} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n", "/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {RichTextValue} value Value to normalise formats of.\n *\n * @return {RichTextValue} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n", "/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param {Object} a Value to mutate.\n * @param {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...RichTextValue} values Objects to combine.\n *\n * @return {RichTextValue} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n", "/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormatList} RichTextFormatList */\n\n/**\n * Internal dependencies\n */\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {RichTextValue} value                Value to inspect.\n * @param {Array}         EMPTY_ACTIVE_FORMATS Array to return if there are no\n *                                             active formats.\n *\n * @return {RichTextFormatList} Active format objects.\n */\nexport function getActiveFormats( value, EMPTY_ACTIVE_FORMATS = [] ) {\n\tconst { formats, start, end, activeFormats } = value;\n\tif ( start === undefined ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\t// If there's no formats at the start index, there are not active formats.\n\tif ( ! formats[ start ] ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tconst selectedFormats = formats.slice( start, end );\n\n\t// Clone the formats so we're not mutating the live value.\n\tconst _activeFormats = [ ...selectedFormats[ 0 ] ];\n\tlet i = selectedFormats.length;\n\n\t// For performance reasons, start from the end where it's much quicker to\n\t// realise that there are no active formats.\n\twhile ( i-- ) {\n\t\tconst formatsAtIndex = selectedFormats[ i ];\n\n\t\t// If we run into any index without formats, we're sure that there's no\n\t\t// active formats.\n\t\tif ( ! formatsAtIndex ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\n\t\tlet ii = _activeFormats.length;\n\n\t\t// Loop over the active formats and remove any that are not present at\n\t\t// the current index.\n\t\twhile ( ii-- ) {\n\t\t\tconst format = _activeFormats[ ii ];\n\n\t\t\tif (\n\t\t\t\t! formatsAtIndex.find( ( _format ) =>\n\t\t\t\t\tisFormatEqual( format, _format )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_activeFormats.splice( ii, 1 );\n\t\t\t}\n\t\t}\n\n\t\t// If there are no active formats, we can stop.\n\t\tif ( _activeFormats.length === 0 ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\t}\n\n\treturn _activeFormats || EMPTY_ACTIVE_FORMATS;\n}\n", "/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( richTextStore ).getFormatType( name );\n}\n", "/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\n\nfunction restoreOnAttributes( attributes, isEditableTree ) {\n\tif ( isEditableTree ) {\n\t\treturn attributes;\n\t}\n\n\tconst newAttributes = {};\n\n\tfor ( const key in attributes ) {\n\t\tlet newKey = key;\n\t\tif ( key.startsWith( 'data-disable-rich-text-' ) ) {\n\t\t\tnewKey = key.slice( 'data-disable-rich-text-'.length );\n\t\t}\n\n\t\tnewAttributes[ newKey ] = attributes[ key ];\n\t}\n\n\treturn newAttributes;\n}\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param {Object}  $1                        Named parameters.\n * @param {string}  $1.type                   The format type.\n * @param {string}  $1.tagName                The tag name.\n * @param {Object}  $1.attributes             The format attributes.\n * @param {Object}  $1.unregisteredAttributes The unregistered format\n *                                            attributes.\n * @param {boolean} $1.object                 Whether or not it is an object\n *                                            format.\n * @param {boolean} $1.boundaryClass          Whether or not to apply a boundary\n *                                            class.\n * @param {boolean} $1.isEditableTree\n *\n * @return {Object} Information to be used for element creation.\n */\nfunction fromFormat( {\n\ttype,\n\ttagName,\n\tattributes,\n\tunregisteredAttributes,\n\tobject,\n\tboundaryClass,\n\tisEditableTree,\n} ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass && isEditableTree ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tattributes: restoreOnAttributes(\n\t\t\t\telementAttributes,\n\t\t\t\tisEditableTree\n\t\t\t),\n\t\t\tobject,\n\t\t};\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes\n\t\t\t? formatType.attributes[ name ]\n\t\t\t: false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\t// When a format is declared as non editable, make it non editable in the\n\t// editor.\n\tif ( isEditableTree && formatType.contentEditable === false ) {\n\t\telementAttributes.contenteditable = 'false';\n\t}\n\n\treturn {\n\t\ttype: tagName || formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: restoreOnAttributes( elementAttributes, isEditableTree ),\n\t};\n}\n\n/**\n * Checks if both arrays of formats up until a certain index are equal.\n *\n * @param {Array}  a     Array of formats to compare.\n * @param {Array}  b     Array of formats to compare.\n * @param {number} index Index to check until.\n */\nfunction isEqualUntil( a, b, index ) {\n\tdo {\n\t\tif ( a[ index ] !== b[ index ] ) {\n\t\t\treturn false;\n\t\t}\n\t} while ( index-- );\n\n\treturn true;\n}\n\nexport function toTree( {\n\tvalue,\n\tpreserveWhiteSpace,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\tappend( tree, '' );\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding =\n\t\t\tisEditableTree &&\n\t\t\t// Pad the line if the line is empty.\n\t\t\t( ! lastCharacter ||\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t\t// the line break won't be visible.\n\t\t\t\tlastCharacter === '\\n' );\n\n\t\tconst characterFormats = formats[ i ];\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\n\t\t\t\t\tisEqualUntil(\n\t\t\t\t\t\tcharacterFormats,\n\t\t\t\t\t\tlastCharacterFormats,\n\t\t\t\t\t\tformatIndex\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, tagName, attributes, unregisteredAttributes } =\n\t\t\t\t\tformat;\n\n\t\t\t\tconst boundaryClass =\n\t\t\t\t\tisEditableTree && format === deepestActiveFormat;\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append(\n\t\t\t\t\tparent,\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\ttagName,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\t\tboundaryClass,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tconst replacement = replacements[ i ];\n\t\t\tif ( ! replacement ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { type, attributes, innerHTML } = replacement;\n\t\t\tconst formatType = getFormatType( type );\n\n\t\t\tif ( isEditableTree && type === '#comment' ) {\n\t\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tcontenteditable: 'false',\n\t\t\t\t\t\t'data-rich-text-comment':\n\t\t\t\t\t\t\tattributes[ 'data-rich-text-comment' ],\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t\tappend(\n\t\t\t\t\tappend( pointer, { type: 'span' } ),\n\t\t\t\t\tattributes[ 'data-rich-text-comment' ].trim()\n\t\t\t\t);\n\t\t\t} else if ( ! isEditableTree && type === 'script' ) {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype: 'script',\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tappend( pointer, {\n\t\t\t\t\thtml: decodeURIComponent(\n\t\t\t\t\t\tattributes[ 'data-rich-text-script' ]\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t} else if ( formatType?.contentEditable === false ) {\n\t\t\t\t// For non editable formats, render the stored inner HTML.\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t\tboundaryClass: start === i && end === i + 1,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( innerHTML ) {\n\t\t\t\t\tappend( pointer, {\n\t\t\t\t\t\thtml: innerHTML,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tobject: true,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\t// We CANNOT use CSS to add a placeholder with pseudo elements on\n\t\t\t// the main block wrappers because that could clash with theme CSS.\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection and being editable.\n\t\t\t\t\t\tstyle: 'pointer-events:none;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n", "/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeEditableHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Create an HTML string from a Rich Text value.\n *\n * @param {Object}        $1                      Named arguments.\n * @param {RichTextValue} $1.value                Rich text value.\n * @param {boolean}       [$1.preserveWhiteSpace] Preserves newlines if true.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, preserveWhiteSpace } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tpreserveWhiteSpace,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tif ( type === '#comment' ) {\n\t\t// We can't restore the original comment delimiters, because once parsed\n\t\t// into DOM nodes, we don't have the information. But in the future we\n\t\t// could allow comment handlers to specify custom delimiters, for\n\t\t// example `</{comment-content}>` for Bits, where `comment-content`\n\t\t// would be `/{bit-name}` or `__{translatable-string}` (TBD).\n\t\treturn `<!--${ attributes[ 'data-rich-text-comment' ] }-->`;\n\t}\n\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute(\n\t\t\tattributes[ key ]\n\t\t) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML(\n\t\tchildren\n\t) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children\n\t\t.map( ( child ) => {\n\t\t\tif ( child.html !== undefined ) {\n\t\t\t\treturn child.html;\n\t\t\t}\n\n\t\t\treturn child.text === undefined\n\t\t\t\t? createElementHTML( child )\n\t\t\t\t: escapeEditableHTML( child.text );\n\t\t} )\n\t\t.join( '' );\n}\n", "/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\nimport { toHTMLString } from './to-html-string';\nimport { getTextContent } from './get-text-content';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction toFormat( { tagName, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType =\n\t\t\tselect( richTextStore ).getFormatTypeForBareElement( tagName );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type: tagName, attributes } : { type: tagName };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { formatType, type: formatType.name, tagName };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\tconst _attributes = { ...attributes };\n\n\tfor ( const key in formatType.attributes ) {\n\t\tconst name = formatType.attributes[ key ];\n\n\t\tregisteredAttributes[ key ] = _attributes[ name ];\n\n\t\t// delete the attribute and what's left is considered\n\t\t// to be unregistered.\n\t\tdelete _attributes[ name ];\n\n\t\tif ( typeof registeredAttributes[ key ] === 'undefined' ) {\n\t\t\tdelete registeredAttributes[ key ];\n\t\t}\n\t}\n\n\tfor ( const name in _attributes ) {\n\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t}\n\n\tif ( formatType.contentEditable === false ) {\n\t\tdelete unregisteredAttributes.contenteditable;\n\t}\n\n\treturn {\n\t\tformatType,\n\t\ttype: formatType.name,\n\t\ttagName,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * The RichTextData class is used to instantiate a wrapper around rich text\n * values, with methods that can be used to transform or manipulate the data.\n *\n * - Create an empty instance: `new RichTextData()`.\n * - Create one from an HTML string: `RichTextData.fromHTMLString(\n *   '<em>hello</em>' )`.\n * - Create one from a wrapper HTMLElement: `RichTextData.fromHTMLElement(\n *   document.querySelector( 'p' ) )`.\n * - Create one from plain text: `RichTextData.fromPlainText( '1\\n2' )`.\n * - Create one from a rich text value: `new RichTextData( { text: '...',\n *   formats: [ ... ] } )`.\n *\n * @todo Add methods to manipulate the data, such as applyFormat, slice etc.\n */\nexport class RichTextData {\n\t#value;\n\n\tstatic empty() {\n\t\treturn new RichTextData();\n\t}\n\tstatic fromPlainText( text ) {\n\t\treturn new RichTextData( create( { text } ) );\n\t}\n\tstatic fromHTMLString( html ) {\n\t\treturn new RichTextData( create( { html } ) );\n\t}\n\t/**\n\t * Create a RichTextData instance from an HTML element.\n\t *\n\t * @param {HTMLElement}                    htmlElement The HTML element to create the instance from.\n\t * @param {{preserveWhiteSpace?: boolean}} options     Options.\n\t * @return {RichTextData} The RichTextData instance.\n\t */\n\tstatic fromHTMLElement( htmlElement, options = {} ) {\n\t\tconst { preserveWhiteSpace = false } = options;\n\t\tconst element = preserveWhiteSpace\n\t\t\t? htmlElement\n\t\t\t: collapseWhiteSpace( htmlElement );\n\t\tconst richTextData = new RichTextData( create( { element } ) );\n\t\tObject.defineProperty( richTextData, 'originalHTML', {\n\t\t\tvalue: htmlElement.innerHTML,\n\t\t} );\n\t\treturn richTextData;\n\t}\n\tconstructor( init = createEmptyValue() ) {\n\t\tthis.#value = init;\n\t}\n\ttoPlainText() {\n\t\treturn getTextContent( this.#value );\n\t}\n\t// We could expose `toHTMLElement` at some point as well, but we'd only use\n\t// it internally.\n\t/**\n\t * Convert the rich text value to an HTML string.\n\t *\n\t * @param {{preserveWhiteSpace?: boolean}} options Options.\n\t * @return {string} The HTML string.\n\t */\n\ttoHTMLString( { preserveWhiteSpace } = {} ) {\n\t\treturn (\n\t\t\tthis.originalHTML ||\n\t\t\ttoHTMLString( { value: this.#value, preserveWhiteSpace } )\n\t\t);\n\t}\n\tvalueOf() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoString() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoJSON() {\n\t\treturn this.toHTMLString();\n\t}\n\tget length() {\n\t\treturn this.text.length;\n\t}\n\tget formats() {\n\t\treturn this.#value.formats;\n\t}\n\tget replacements() {\n\t\treturn this.#value.replacements;\n\t}\n\tget text() {\n\t\treturn this.#value.text;\n\t}\n}\n\nfor ( const name of Object.getOwnPropertyNames( String.prototype ) ) {\n\tif ( RichTextData.prototype.hasOwnProperty( name ) ) {\n\t\tcontinue;\n\t}\n\n\tObject.defineProperty( RichTextData.prototype, name, {\n\t\tvalue( ...args ) {\n\t\t\t// Should we convert back to RichTextData?\n\t\t\treturn this.toHTMLString()[ name ]( ...args );\n\t\t},\n\t} );\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. The optional\n * functions can be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                          Optional named arguments.\n * @param {Element} [$1.element]                  Element to create value from.\n * @param {string}  [$1.text]                     Text to create value from.\n * @param {string}  [$1.html]                     HTML to create value from.\n * @param {Range}   [$1.range]                    Range to create value from.\n * @param {boolean} [$1.__unstableIsEditableTree]\n * @return {RichTextValue} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\t__unstableIsEditableTree: isEditableTree,\n} = {} ) {\n\tif ( html instanceof RichTextData ) {\n\t\treturn {\n\t\t\ttext: html.text,\n\t\t\tformats: html.formats,\n\t\t\treplacements: html.replacements,\n\t\t};\n\t}\n\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\t// It does not matter which document this is, we're just using it to\n\t\t// parse.\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\treturn createFromElement( {\n\t\telement,\n\t\trange,\n\t\tisEditableTree,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {Object|void} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * We need to strip it from the content because we use white-space: pre-wrap for\n * displaying editable rich text. Without using white-space: pre-wrap, the\n * browser will litter the content with non breaking spaces, among other issues.\n * See packages/rich-text/src/component/use-default-style.js.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/CSS/white-space-collapse#collapsing_of_white_space\n *\n * @param {HTMLElement} element\n * @param {boolean}     isRoot\n *\n * @return {HTMLElement} New element with collapsed whitespace.\n */\nfunction collapseWhiteSpace( element, isRoot = true ) {\n\tconst clone = element.cloneNode( true );\n\tclone.normalize();\n\tArray.from( clone.childNodes ).forEach( ( node, i, nodes ) => {\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tlet newNodeValue = node.nodeValue;\n\n\t\t\tif ( /[\\n\\t\\r\\f]/.test( newNodeValue ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( /[\\n\\t\\r\\f]+/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( newNodeValue.indexOf( '  ' ) !== -1 ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( / {2,}/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( i === 0 && newNodeValue.startsWith( ' ' ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 1 );\n\t\t\t} else if (\n\t\t\t\tisRoot &&\n\t\t\t\ti === nodes.length - 1 &&\n\t\t\t\tnewNodeValue.endsWith( ' ' )\n\t\t\t) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 0, -1 );\n\t\t\t}\n\n\t\t\tnode.nodeValue = newNodeValue;\n\t\t} else if ( node.nodeType === node.ELEMENT_NODE ) {\n\t\t\tcollapseWhiteSpace( node, false );\n\t\t}\n\t} );\n\treturn clone;\n}\n\n/**\n * We need to normalise line breaks to `\\n` so they are consistent across\n * platforms and serialised properly. Not removing \\r would cause it to\n * linger and result in double line breaks when whitespace is preserved.\n */\nconst CARRIAGE_RETURN = '\\r';\n\n/**\n * Removes reserved characters used by rich-text (zero width non breaking spaces\n * added by `toTree` and object replacement characters).\n *\n * @param {string} string\n */\nexport function removeReservedCharacters( string ) {\n\t// with the global flag, note that we should create a new regex each time OR\n\t// reset lastIndex state.\n\treturn string.replace(\n\t\tnew RegExp(\n\t\t\t`[${ ZWNBSP }${ OBJECT_REPLACEMENT_CHARACTER }${ CARRIAGE_RETURN }]`,\n\t\t\t'gu'\n\t\t),\n\t\t''\n\t);\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}  $1                  Named arguments.\n * @param {Element} [$1.element]        Element to create value from.\n * @param {Range}   [$1.range]          Range to create value from.\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromElement( { element, range, isEditableTree } ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst tagName = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tconst text = removeReservedCharacters( node.nodeValue );\n\t\t\trange = filterRange( node, range, removeReservedCharacters );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tnode.nodeType === node.COMMENT_NODE ||\n\t\t\t( node.nodeType === node.ELEMENT_NODE &&\n\t\t\t\tnode.tagName === 'SPAN' &&\n\t\t\t\tnode.hasAttribute( 'data-rich-text-comment' ) )\n\t\t) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: '#comment',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-comment':\n\t\t\t\t\t\t\t\tnode.nodeType === node.COMMENT_NODE\n\t\t\t\t\t\t\t\t\t? node.nodeValue\n\t\t\t\t\t\t\t\t\t: node.getAttribute(\n\t\t\t\t\t\t\t\t\t\t\t'data-rich-text-comment'\n\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\ttagName === 'br' &&\n\t\t\t! node.getAttribute( 'data-rich-text-line-break' )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'script' ) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: tagName,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-script':\n\t\t\t\t\t\t\t\tnode.getAttribute( 'data-rich-text-script' ) ||\n\t\t\t\t\t\t\t\tencodeURIComponent( node.innerHTML ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst format = toFormat( {\n\t\t\ttagName,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\n\t\t// When a format type is declared as not editable, replace it with an\n\t\t// object replacement character and preserve the inner HTML.\n\t\tif ( format?.formatType?.contentEditable === false ) {\n\t\t\tdelete format.formatType;\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...format,\n\t\t\t\t\t\tinnerHTML: node.innerHTML,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( format ) {\n\t\t\tdelete format.formatType;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\t// Ignore any placeholders, but keep their content since the browser\n\t\t// might insert text inside them when the editable element is flex.\n\t\tif ( ! format || node.getAttribute( 'data-rich-text-placeholder' ) ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}  $1         Named arguments.\n * @param {Element} $1.element Element to get attributes from.\n *\n * @return {Object|void} Attribute object or `undefined` if the element has no\n *                       attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst safeName = /^on/i.test( name )\n\t\t\t? 'data-disable-rich-text-' + name\n\t\t\t: name;\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ safeName ] = value;\n\t}\n\n\treturn accumulator;\n}\n", "/**\n * Internal dependencies\n */\nimport type { RichTextValue } from './types';\n\n/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param props       The rich text value to check.\n * @param props.start\n * @param props.end\n * @return True if the selection is collapsed, false if not, undefined if there is no selection.\n */\nexport function isCollapsed( {\n\tstart,\n\tend,\n}: RichTextValue ): boolean | undefined {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n", "/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {string}        formatType   Format type to remove.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = newFormats[ startIndex ]?.find(\n\t\t\t( { type } ) => type === formatType\n\t\t);\n\n\t\tif ( format ) {\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats:\n\t\t\tactiveFormats?.filter( ( { type } ) => type !== formatType ) || [],\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter(\n\t\t( { type } ) => type !== formatType\n\t);\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n", "/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {RichTextValue}        value         Value to modify.\n * @param {RichTextValue|string} valueToInsert Value to insert.\n * @param {number}               [startIndex]  Start index.\n * @param {number}               [endIndex]    End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n", "/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new extracted value.\n */\nexport function slice( value, startIndex = value.start, endIndex = value.end ) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n", "/**\n * Clears the a11y-speak-region elements and hides the explanatory text.\n */\nexport default function clear() {\n\tconst regions = document.getElementsByClassName( 'a11y-speak-region' );\n\tconst introText = document.getElementById( 'a11y-speak-intro-text' );\n\n\tfor ( let i = 0; i < regions.length; i++ ) {\n\t\tregions[ i ].textContent = '';\n\t}\n\n\t// Make sure the explanatory text is hidden from assistive technologies.\n\tif ( introText ) {\n\t\tintroText.setAttribute( 'hidden', 'hidden' );\n\t}\n}\n", "let previousMessage = '';\n\n/**\n * Filter the message to be announced to the screenreader.\n *\n * @param {string} message The message to be announced.\n *\n * @return {string} The filtered message.\n */\nexport default function filterMessage( message ) {\n\t/*\n\t * Strip HTML tags (if any) from the message string. Ideally, messages should\n\t * be simple strings, carefully crafted for specific use with A11ySpeak.\n\t * When re-using already existing strings this will ensure simple HTML to be\n\t * stripped out and replaced with a space. Browsers will collapse multiple\n\t * spaces natively.\n\t */\n\tmessage = message.replace( /<[^<>]+>/g, ' ' );\n\n\t/*\n\t * Safari + VoiceOver don't announce repeated, identical strings. We use\n\t * a `no-break space` to force them to think identical strings are different.\n\t */\n\tif ( previousMessage === message ) {\n\t\tmessage += '\\u00A0';\n\t}\n\n\tpreviousMessage = message;\n\n\treturn message;\n}\n", "/**\n * Internal dependencies\n */\nimport clear from './clear';\nimport filterMessage from './filter-message';\n\n/**\n * Allows you to easily announce dynamic interface updates to screen readers using ARIA live regions.\n * This module is inspired by the `speak` function in `wp-a11y.js`.\n *\n * @param {string}               message    The message to be announced by assistive technologies.\n * @param {'polite'|'assertive'} [ariaLive] The politeness level for aria-live; default: 'polite'.\n *\n * @example\n * ```js\n * import { speak } from '@wordpress/a11y';\n *\n * // For polite messages that shouldn't interrupt what screen readers are currently announcing.\n * speak( 'The message you want to send to the ARIA live region' );\n *\n * // For assertive messages that should interrupt what screen readers are currently announcing.\n * speak( 'The message you want to send to the ARIA live region', 'assertive' );\n * ```\n */\nexport function speak( message, ariaLive ) {\n\t/*\n\t * Clear previous messages to allow repeated strings being read out and hide\n\t * the explanatory text from assistive technologies.\n\t */\n\tclear();\n\n\tmessage = filterMessage( message );\n\n\tconst introText = document.getElementById( 'a11y-speak-intro-text' );\n\tconst containerAssertive = document.getElementById(\n\t\t'a11y-speak-assertive'\n\t);\n\tconst containerPolite = document.getElementById( 'a11y-speak-polite' );\n\n\tif ( containerAssertive && ariaLive === 'assertive' ) {\n\t\tcontainerAssertive.textContent = message;\n\t} else if ( containerPolite ) {\n\t\tcontainerPolite.textContent = message;\n\t}\n\n\t/*\n\t * Make the explanatory text available to assistive technologies by removing\n\t * the 'hidden' HTML attribute.\n\t */\n\tif ( introText ) {\n\t\tintroText.removeAttribute( 'hidden' );\n\t}\n}\n", "/**\n * @typedef {() => void} Callback\n *\n * TODO: Remove this typedef and inline `() => void` type.\n *\n * This typedef is used so that a descriptive type is provided in our\n * automatically generated documentation.\n *\n * An in-line type `() => void` would be preferable, but the generated\n * documentation is `null` in that case.\n *\n * @see https://github.com/WordPress/gutenberg/issues/18045\n */\n\n/**\n * Specify a function to execute when the DOM is fully loaded.\n *\n * @param {Callback} callback A function to execute after the DOM is ready.\n *\n * @example\n * ```js\n * import domReady from '@wordpress/dom-ready';\n *\n * domReady( function() {\n * \t//do something after DOM loads.\n * } );\n * ```\n *\n * @return {void}\n */\nexport default function domReady( callback ) {\n\tif ( typeof document === 'undefined' ) {\n\t\treturn;\n\t}\n\n\tif (\n\t\tdocument.readyState === 'complete' || // DOMContentLoaded + Images/Styles/etc loaded, so we call directly.\n\t\tdocument.readyState === 'interactive' // DOMContentLoaded fires at this point, so we call directly.\n\t) {\n\t\treturn void callback();\n\t}\n\n\t// DOMContentLoaded has not fired yet, delay callback until then.\n\tdocument.addEventListener( 'DOMContentLoaded', callback );\n}\n", "/**\n * Build the live regions markup.\n *\n * @param {'polite'|'assertive'} [ariaLive] Value for the 'aria-live' attribute; default: 'polite'.\n *\n * @return {HTMLDivElement} The ARIA live region HTML element.\n */\nexport default function addContainer( ariaLive = 'polite' ) {\n\tconst container = document.createElement( 'div' );\n\tcontainer.id = `a11y-speak-${ ariaLive }`;\n\tcontainer.className = 'a11y-speak-region';\n\n\tcontainer.setAttribute(\n\t\t'style',\n\t\t'position:absolute;' +\n\t\t\t'margin:-1px;' +\n\t\t\t'padding:0;' +\n\t\t\t'height:1px;' +\n\t\t\t'width:1px;' +\n\t\t\t'overflow:hidden;' +\n\t\t\t'clip-path:inset(50%);' +\n\t\t\t'border:0;' +\n\t\t\t'word-wrap:normal !important;'\n\t);\n\tcontainer.setAttribute( 'aria-live', ariaLive );\n\tcontainer.setAttribute( 'aria-relevant', 'additions text' );\n\tcontainer.setAttribute( 'aria-atomic', 'true' );\n\n\tconst { body } = document;\n\tif ( body ) {\n\t\tbody.appendChild( container );\n\t}\n\n\treturn container;\n}\n", "/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Build the explanatory text to be placed before the aria live regions.\n *\n * This text is initially hidden from assistive technologies by using a `hidden`\n * HTML attribute which is then removed once a message fills the aria-live regions.\n *\n * @return {HTMLParagraphElement} The explanatory text HTML element.\n */\nexport default function addIntroText() {\n\tconst introText = document.createElement( 'p' );\n\n\tintroText.id = 'a11y-speak-intro-text';\n\tintroText.className = 'a11y-speak-intro-text';\n\tintroText.textContent = __( 'Notifications' );\n\n\tintroText.setAttribute(\n\t\t'style',\n\t\t'position:absolute;' +\n\t\t\t'margin:-1px;' +\n\t\t\t'padding:0;' +\n\t\t\t'height:1px;' +\n\t\t\t'width:1px;' +\n\t\t\t'overflow:hidden;' +\n\t\t\t'clip-path:inset(50%);' +\n\t\t\t'border:0;' +\n\t\t\t'word-wrap:normal !important;'\n\t);\n\tintroText.setAttribute( 'hidden', '' );\n\n\tconst { body } = document;\n\tif ( body ) {\n\t\tbody.appendChild( introText );\n\t}\n\n\treturn introText;\n}\n", "/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal dependencies\n */\nimport addContainer from './script/add-container';\nimport addIntroText from './script/add-intro-text';\n\nexport { speak } from './shared/index';\n\n/**\n * Create the live regions.\n */\nexport function setup() {\n\tconst introText = document.getElementById( 'a11y-speak-intro-text' );\n\tconst containerAssertive = document.getElementById(\n\t\t'a11y-speak-assertive'\n\t);\n\tconst containerPolite = document.getElementById( 'a11y-speak-polite' );\n\n\tif ( introText === null ) {\n\t\taddIntroText();\n\t}\n\n\tif ( containerAssertive === null ) {\n\t\taddContainer( 'assertive' );\n\t}\n\n\tif ( containerPolite === null ) {\n\t\taddContainer( 'polite' );\n\t}\n}\n\n/**\n * Run setup on domReady.\n */\ndomReady( setup );\n", "/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range|null} a First range object to test.\n * @param {Range|null} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nexport function isRangeEqual( a, b ) {\n\treturn (\n\t\ta === b ||\n\t\t( a &&\n\t\t\tb &&\n\t\t\ta.startContainer === b.startContainer &&\n\t\t\ta.startOffset === b.startOffset &&\n\t\t\ta.endContainer === b.endContainer &&\n\t\t\ta.endOffset === b.endOffset )\n\t);\n}\n", "/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\nimport { isRangeEqual } from './is-range-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\nfunction append( element, child ) {\n\tif ( child.html !== undefined ) {\n\t\treturn ( element.innerHTML += child.html );\n\t}\n\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tif ( type === '#comment' ) {\n\t\t\tchild = element.ownerDocument.createComment(\n\t\t\t\tattributes[ 'data-rich-text-comment' ]\n\t\t\t);\n\t\t} else {\n\t\t\tchild = element.ownerDocument.createElement( type );\n\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( node ) {\n\treturn node.nodeType === node.TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n\tdoc = document,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\n\t * applied.\n\t *\n\t * Note: The current implementation will return a shared reference, reset on\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\n\t * the value to operate upon asynchronously, as it may have unexpected results.\n\t *\n\t * @return {Object} RichText tree.\n\t */\n\tconst createEmpty = () => createElement( doc, '' );\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`.\n *\n * @param {Object}        $1                       Named arguments.\n * @param {RichTextValue} $1.value                 Value to apply.\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\n * @param {string}        [$1.placeholder]         Placeholder text.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t\tdoc: current.ownerDocument,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst { ownerDocument } = current;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== ownerDocument.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n", "/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * A minimum width of 1px will prevent the rich text container from collapsing\n * to 0 width and hiding the caret. This is useful for inline containers.\n */\nconst minWidth = '1px';\n\nexport function useDefaultStyle() {\n\treturn useCallback( ( element ) => {\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.style.whiteSpace = whiteSpace;\n\t\telement.style.minWidth = minWidth;\n\t}, [] );\n}\n", "/**\n * External dependencies\n */\nimport { colord } from 'colord';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/*\n * Calculates and renders the format boundary style when the active formats\n * change.\n */\nexport function useBoundaryStyle( { record } ) {\n\tconst ref = useRef();\n\tconst { activeFormats = [], replacements, start } = record.current;\n\tconst activeReplacement = replacements[ start ];\n\tuseEffect( () => {\n\t\t// There's no need to recalculate the boundary styles if no formats are\n\t\t// active, because no boundary styles will be visible.\n\t\tif (\n\t\t\t( ! activeFormats || ! activeFormats.length ) &&\n\t\t\t! activeReplacement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = ref.current.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst computedStyle = defaultView.getComputedStyle( element );\n\t\tconst newColor = colord( computedStyle.color )\n\t\t\t.alpha( 0.2 )\n\t\t\t.toRgbString();\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\t\tconst style = `${ selector } {${ rule }}`;\n\t\tconst globalStyleId = 'rich-text-boundary-style';\n\n\t\tlet globalStyle = ownerDocument.getElementById( globalStyleId );\n\n\t\tif ( ! globalStyle ) {\n\t\t\tglobalStyle = ownerDocument.createElement( 'style' );\n\t\t\tglobalStyle.id = globalStyleId;\n\t\t\townerDocument.head.appendChild( globalStyle );\n\t\t}\n\n\t\tif ( globalStyle.innerHTML !== style ) {\n\t\t\tglobalStyle.innerHTML = style;\n\t\t}\n\t}, [ activeFormats, activeReplacement ] );\n\treturn ref;\n}\n", "/**\n * Internal dependencies\n */\nimport { toHTMLString } from '../../to-html-string';\nimport { isCollapsed } from '../../is-collapsed';\nimport { slice } from '../../slice';\nimport { getTextContent } from '../../get-text-content';\n\nexport default ( props ) => ( element ) => {\n\tfunction onCopy( event ) {\n\t\tconst { record } = props.current;\n\t\tconst { ownerDocument } = element;\n\t\tif (\n\t\t\tisCollapsed( record.current ) ||\n\t\t\t! element.contains( ownerDocument.activeElement )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedRecord = slice( record.current );\n\t\tconst plainText = getTextContent( selectedRecord );\n\t\tconst html = toHTMLString( { value: selectedRecord } );\n\t\tevent.clipboardData.setData( 'text/plain', plainText );\n\t\tevent.clipboardData.setData( 'text/html', html );\n\t\tevent.clipboardData.setData( 'rich-text', 'true' );\n\t\tevent.preventDefault();\n\n\t\tif ( event.type === 'cut' ) {\n\t\t\townerDocument.execCommand( 'delete' );\n\t\t}\n\t}\n\n\tconst { defaultView } = element.ownerDocument;\n\n\tdefaultView.addEventListener( 'copy', onCopy );\n\tdefaultView.addEventListener( 'cut', onCopy );\n\treturn () => {\n\t\tdefaultView.removeEventListener( 'copy', onCopy );\n\t\tdefaultView.removeEventListener( 'cut', onCopy );\n\t};\n};\n", "export default () => ( element ) => {\n\tfunction onClick( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif (\n\t\t\ttarget === element ||\n\t\t\t( target.textContent && target.isContentEditable )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = target;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst selection = defaultView.getSelection();\n\n\t\t// If it's already selected, do nothing and let default behavior happen.\n\t\t// This means it's \"click-through\".\n\t\tif ( selection.containsNode( target ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = ownerDocument.createRange();\n\t\t// If the target is within a non editable element, select the non\n\t\t// editable element.\n\t\tconst nodeToSelect = target.isContentEditable\n\t\t\t? target\n\t\t\t: target.closest( '[contenteditable]' );\n\n\t\trange.selectNode( nodeToSelect );\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\n\t\tevent.preventDefault();\n\t}\n\n\tfunction onFocusIn( event ) {\n\t\t// When there is incoming focus from a link, select the object.\n\t\tif (\n\t\t\tevent.relatedTarget &&\n\t\t\t! element.contains( event.relatedTarget ) &&\n\t\t\tevent.relatedTarget.tagName === 'A'\n\t\t) {\n\t\t\tonClick( event );\n\t\t}\n\t}\n\n\telement.addEventListener( 'click', onClick );\n\telement.addEventListener( 'focusin', onFocusIn );\n\treturn () => {\n\t\telement.removeEventListener( 'click', onClick );\n\t\telement.removeEventListener( 'focusin', onFocusIn );\n\t};\n};\n", "/**\n * WordPress dependencies\n */\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport default ( props ) => ( element ) => {\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { record, applyRecord, forceRender } = props.current;\n\t\tconst {\n\t\t\ttext,\n\t\t\tformats,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t} = record.current;\n\t\tconst collapsed = isCollapsed( record.current );\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t( format, index ) => format === destination[ index ]\n\t\t);\n\n\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\tif ( ! isIncreasing ) {\n\t\t\tnewActiveFormatsLength--;\n\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\tnewActiveFormatsLength++;\n\t\t}\n\n\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\trecord.current._newActiveFormats = destination;\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\tconst source = isIncreasing ? destination : origin;\n\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\tconst newValue = {\n\t\t\t...record.current,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue );\n\t\tforceRender();\n\t}\n\n\telement.addEventListener( 'keydown', onKeyDown );\n\treturn () => {\n\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t};\n};\n", "/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n", "/**\n * WordPress dependencies\n */\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { remove } from '../../remove';\n\nexport default ( props ) => ( element ) => {\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\t\tconst { createRecord, handleChange } = props.current;\n\n\t\tif ( event.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, end, text } = currentValue;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\thandleChange( remove( currentValue ) );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\telement.addEventListener( 'keydown', onKeyDown );\n\treturn () => {\n\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t};\n};\n", "/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param {Object}        $1         Named paramentes.\n * @param {RichTextValue} $1.value   Value te update.\n * @param {number}        $1.start   Index to update from.\n * @param {number}        $1.end     Index to update until.\n * @param {Array}         $1.formats Replacement formats.\n *\n * @return {RichTextValue} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\t// Start and end may be switched in case of delete.\n\tconst min = Math.min( start, end );\n\tconst max = Math.max( start, end );\n\tconst formatsBefore = value.formats[ min - 1 ] || [];\n\tconst formatsAfter = value.formats[ max ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n", "/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../../get-active-formats';\nimport { updateFormats } from '../../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nconst PLACEHOLDER_ATTR_NAME = 'data-rich-text-placeholder';\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.hasAttribute( PLACEHOLDER_ATTR_NAME )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport default ( props ) => ( element ) => {\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\n\tlet isComposing = false;\n\n\tfunction onInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed. As of December 2019, Safari doesn't support\n\t\t// nativeEvent.isComposing.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tconst { record, applyRecord, createRecord, handleChange } =\n\t\t\tprops.current;\n\n\t\t// The browser formatted something or tried to insert HTML. Overwrite\n\t\t// it. It will be handled later by the format library if needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tapplyRecord( record.current );\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, activeFormats: oldActiveFormats = [] } = record.current;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue: currentValue,\n\t\t\tstart,\n\t\t\tend: currentValue.start,\n\t\t\tformats: oldActiveFormats,\n\t\t} );\n\n\t\thandleChange( change );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * event.\n\t */\n\tfunction handleSelectionChange() {\n\t\tconst { record, applyRecord, createRecord, onSelectionChange } =\n\t\t\tprops.current;\n\n\t\t// Check if the implementor disabled editing. `contentEditable` does\n\t\t// disable input, but not text selection, so we must ignore selection\n\t\t// changes.\n\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the active element is the rich text element.\n\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t// If it is not, we can stop listening for selection changes. We\n\t\t\t// resume listening when the element is focused.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = createRecord();\n\t\tconst oldRecord = record.current;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== oldRecord.text ) {\n\t\t\tonInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = {\n\t\t\t...oldRecord,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t// give the active formats according to the browser.\n\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t_newActiveFormats: undefined,\n\t\t};\n\n\t\tconst newActiveFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue, { domOnly: true } );\n\t\tonSelectionChange( start, end );\n\t}\n\n\tfunction onCompositionStart() {\n\t\tisComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might destroy internal browser\n\t\t// editing state.\n\t\townerDocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t\t// Remove the placeholder. Since the rich text value doesn't update\n\t\t// during composition, the placeholder doesn't get removed. There's no\n\t\t// need to re-add it, when the value is updated on compositionend it\n\t\t// will be re-added when the value is empty.\n\t\telement.querySelector( `[${ PLACEHOLDER_ATTR_NAME }]` )?.remove();\n\t}\n\n\tfunction onCompositionEnd() {\n\t\tisComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tonInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction onFocus() {\n\t\tconst { record, isSelected, onSelectionChange, applyRecord } =\n\t\t\tprops.current;\n\n\t\t// When the whole editor is editable, let writing flow handle\n\t\t// selection.\n\t\tif ( element.parentElement.closest( '[contenteditable=\"true\"]' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t// event.\n\t\t\tconst index = undefined;\n\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t};\n\t\t} else {\n\t\t\tapplyRecord( record.current, { domOnly: true } );\n\t\t}\n\n\t\tonSelectionChange( record.current.start, record.current.end );\n\n\t\t// There is no selection change event when the element is focused, so\n\t\t// we need to manually trigger it. The selection is also not available\n\t\t// yet in this call stack.\n\t\twindow.queueMicrotask( handleSelectionChange );\n\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\telement.addEventListener( 'input', onInput );\n\telement.addEventListener( 'compositionstart', onCompositionStart );\n\telement.addEventListener( 'compositionend', onCompositionEnd );\n\telement.addEventListener( 'focus', onFocus );\n\n\treturn () => {\n\t\telement.removeEventListener( 'input', onInput );\n\t\telement.removeEventListener( 'compositionstart', onCompositionStart );\n\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\telement.removeEventListener( 'focus', onFocus );\n\t};\n};\n", "/**\n * Internal dependencies\n */\nimport { isRangeEqual } from '../../is-range-equal';\n\n/**\n * Sometimes some browsers are not firing a `selectionchange` event when\n * changing the selection by mouse or keyboard. This hook makes sure that, if we\n * detect no `selectionchange` or `input` event between the up and down events,\n * we fire a `selectionchange` event.\n */\nexport default () => ( element ) => {\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView?.getSelection();\n\n\tlet range;\n\n\tfunction getRange() {\n\t\treturn selection.rangeCount ? selection.getRangeAt( 0 ) : null;\n\t}\n\n\tfunction onDown( event ) {\n\t\tconst type = event.type === 'keydown' ? 'keyup' : 'pointerup';\n\n\t\tfunction onCancel() {\n\t\t\townerDocument.removeEventListener( type, onUp );\n\t\t\townerDocument.removeEventListener( 'selectionchange', onCancel );\n\t\t\townerDocument.removeEventListener( 'input', onCancel );\n\t\t}\n\n\t\tfunction onUp() {\n\t\t\tonCancel();\n\t\t\tif ( isRangeEqual( range, getRange() ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\townerDocument.dispatchEvent( new Event( 'selectionchange' ) );\n\t\t}\n\n\t\townerDocument.addEventListener( type, onUp );\n\t\townerDocument.addEventListener( 'selectionchange', onCancel );\n\t\townerDocument.addEventListener( 'input', onCancel );\n\n\t\trange = getRange();\n\t}\n\n\telement.addEventListener( 'pointerdown', onDown );\n\telement.addEventListener( 'keydown', onDown );\n\treturn () => {\n\t\telement.removeEventListener( 'pointerdown', onDown );\n\t\telement.removeEventListener( 'keydown', onDown );\n\t};\n};\n", "/**\n * Prevents focus from being captured by the element when clicking _outside_\n * around the element. This may happen when the parent element is flex.\n * @see https://github.com/WordPress/gutenberg/pull/65857\n * @see https://github.com/WordPress/gutenberg/pull/66402\n */\nexport function preventFocusCapture() {\n\treturn ( element ) => {\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tlet value = null;\n\n\t\tfunction onPointerDown( event ) {\n\t\t\t// Abort if the event is default prevented, we will not get a pointer up event.\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( event.target === element ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ! event.target.contains( element ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvalue = element.getAttribute( 'contenteditable' );\n\t\t\telement.setAttribute( 'contenteditable', 'false' );\n\t\t\tdefaultView.getSelection().removeAllRanges();\n\t\t}\n\n\t\tfunction onPointerUp() {\n\t\t\tif ( value !== null ) {\n\t\t\t\telement.setAttribute( 'contenteditable', value );\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t}\n\n\t\tdefaultView.addEventListener( 'pointerdown', onPointerDown );\n\t\tdefaultView.addEventListener( 'pointerup', onPointerUp );\n\t\treturn () => {\n\t\t\tdefaultView.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tdefaultView.removeEventListener( 'pointerup', onPointerUp );\n\t\t};\n\t};\n}\n", "/**\n * WordPress dependencies\n */\nimport { useMemo, useRef, useInsertionEffect } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport copyHandler from './copy-handler';\nimport selectObject from './select-object';\nimport formatBoundaries from './format-boundaries';\nimport deleteHandler from './delete';\nimport inputAndSelection from './input-and-selection';\nimport selectionChangeCompat from './selection-change-compat';\nimport { preventFocusCapture } from './prevent-focus-capture';\n\nconst allEventListeners = [\n\tcopyHandler,\n\tselectObject,\n\tformatBoundaries,\n\tdeleteHandler,\n\tinputAndSelection,\n\tselectionChangeCompat,\n\tpreventFocusCapture,\n];\n\nexport function useEventListeners( props ) {\n\tconst propsRef = useRef( props );\n\tuseInsertionEffect( () => {\n\t\tpropsRef.current = props;\n\t} );\n\tconst refEffects = useMemo(\n\t\t() => allEventListeners.map( ( refEffect ) => refEffect( propsRef ) ),\n\t\t[ propsRef ]\n\t);\n\n\treturn useRefEffect(\n\t\t( element ) => {\n\t\t\tconst cleanups = refEffects.map( ( effect ) => effect( element ) );\n\t\t\treturn () => {\n\t\t\t\tcleanups.forEach( ( cleanup ) => cleanup() );\n\t\t\t};\n\t\t},\n\t\t[ refEffects ]\n\t);\n}\n", "/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create, RichTextData } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useEventListeners } from './event-listeners';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tonSelectionChange,\n\tpreserveWhiteSpace,\n\tonChange,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _valueRef = useRef( value );\n\tconst recordRef = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_valueRef.current = value;\n\t\trecordRef.current = value;\n\t\tif ( ! ( value instanceof RichTextData ) ) {\n\t\t\trecordRef.current = value\n\t\t\t\t? RichTextData.fromHTMLString( value, { preserveWhiteSpace } )\n\t\t\t\t: RichTextData.empty();\n\t\t}\n\t\t// To do: make rich text internally work with RichTextData.\n\t\trecordRef.current = {\n\t\t\ttext: recordRef.current.text,\n\t\t\tformats: recordRef.current.formats,\n\t\t\treplacements: recordRef.current.replacements,\n\t\t};\n\t\tif ( disableFormats ) {\n\t\t\trecordRef.current.formats = Array( value.length );\n\t\t\trecordRef.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecordRef.current.formats = __unstableAfterParse(\n\t\t\t\trecordRef.current\n\t\t\t);\n\t\t}\n\t\trecordRef.current.start = selectionStart;\n\t\trecordRef.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdateRef = useRef( false );\n\n\tif ( ! recordRef.current ) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\tsetRecordFromProps();\n\t} else if (\n\t\tselectionStart !== recordRef.current.start ||\n\t\tselectionEnd !== recordRef.current.end\n\t) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\trecordRef.current = {\n\t\t\t...recordRef.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecordRef.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_valueRef.current = newRecord.text;\n\t\t} else {\n\t\t\tconst newFormats = __unstableBeforeSerialize\n\t\t\t\t? __unstableBeforeSerialize( newRecord )\n\t\t\t\t: newRecord.formats;\n\t\t\tnewRecord = { ...newRecord, formats: newFormats };\n\t\t\tif ( typeof value === 'string' ) {\n\t\t\t\t_valueRef.current = toHTMLString( {\n\t\t\t\t\tvalue: newRecord,\n\t\t\t\t\tpreserveWhiteSpace,\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\t_valueRef.current = new RichTextData( newRecord );\n\t\t\t}\n\t\t}\n\n\t\tconst { start, end, formats, text } = recordRef.current;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _valueRef.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( recordRef.current );\n\t}\n\n\tconst didMountRef = useRef( false );\n\n\t// Value updates must happen synchronously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMountRef.current && value !== _valueRef.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchronously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdateRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( recordRef.current );\n\t\thadSelectionUpdateRef.current = false;\n\t}, [ hadSelectionUpdateRef.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record: recordRef } ),\n\t\tuseEventListeners( {\n\t\t\trecord: recordRef,\n\t\t\thandleChange,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t\tforceRender,\n\t\t} ),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMountRef.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: recordRef.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => recordRef.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n", "/**\n * Internal dependencies\n */\nimport { getActiveFormats } from './get-active-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {RichTextValue} value      Value to inspect.\n * @param {string}        formatType Format type to look for.\n *\n * @return {RichTextFormat|undefined} Active format object of the specified\n *                                    type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn getActiveFormats( value ).find(\n\t\t( { type } ) => type === formatType\n\t);\n}\n", "/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {RichTextValue} value Value to inspect.\n *\n * @return {RichTextFormat|void} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n", "/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n", "/**\n * Internal dependencies\n */\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array<RichTextValue>|undefined} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice(\n\t\t\t\tstartIndex,\n\t\t\t\tstartIndex + substring.length\n\t\t\t),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [ before, after ];\n}\n", "/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { useState, useLayoutEffect } from '@wordpress/element';\n\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\n/** @typedef {import('../types').RichTextValue} RichTextValue */\n\n/**\n * Given a range and a format tag name and class name, returns the closest\n * format element.\n *\n * @param {Range}       range                  The Range to check.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format element.\n * @param {string}      className              The class name of the format element.\n *\n * @return {HTMLElement|undefined} The format element, if found.\n */\nfunction getFormatElement( range, editableContentElement, tagName, className ) {\n\tlet element = range.startContainer;\n\n\t// Even if the active format is defined, the actually DOM range's start\n\t// container may be outside of the format's DOM element:\n\t// `a‸<strong>b</strong>` (DOM) while visually it's `a<strong>‸b</strong>`.\n\t// So at a given selection index, start with the deepest format DOM element.\n\tif (\n\t\telement.nodeType === element.TEXT_NODE &&\n\t\trange.startOffset === element.length &&\n\t\telement.nextSibling\n\t) {\n\t\telement = element.nextSibling;\n\n\t\twhile ( element.firstChild ) {\n\t\t\telement = element.firstChild;\n\t\t}\n\t}\n\n\tif ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\telement = element.parentElement;\n\t}\n\n\tif ( ! element ) {\n\t\treturn;\n\t}\n\tif ( element === editableContentElement ) {\n\t\treturn;\n\t}\n\tif ( ! editableContentElement.contains( element ) ) {\n\t\treturn;\n\t}\n\n\tconst selector = tagName + ( className ? '.' + className : '' );\n\n\t// .closest( selector ), but with a boundary. Check if the element matches\n\t// the selector. If it doesn't match, try the parent element if it's not the\n\t// editable wrapper. We don't want to try to match ancestors of the editable\n\t// wrapper, which is what .closest( selector ) would do. When the element is\n\t// the editable wrapper (which is most likely the case because most text is\n\t// unformatted), this never runs.\n\twhile ( element !== editableContentElement ) {\n\t\tif ( element.matches( selector ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n}\n\n/**\n * @typedef {Object} VirtualAnchorElement\n * @property {() => DOMRect} getBoundingClientRect A function returning a DOMRect\n * @property {HTMLElement}   contextElement        The actual DOM element\n */\n\n/**\n * Creates a virtual anchor element for a range.\n *\n * @param {Range}       range                  The range to create a virtual anchor element for.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n *\n * @return {VirtualAnchorElement} The virtual anchor element.\n */\nfunction createVirtualAnchorElement( range, editableContentElement ) {\n\treturn {\n\t\tcontextElement: editableContentElement,\n\t\tgetBoundingClientRect() {\n\t\t\treturn editableContentElement.contains( range.startContainer )\n\t\t\t\t? range.getBoundingClientRect()\n\t\t\t\t: editableContentElement.getBoundingClientRect();\n\t\t},\n\t};\n}\n\n/**\n * Get the anchor: a format element if there is a matching one based on the\n * tagName and className or a range otherwise.\n *\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format\n *                                             element.\n * @param {string}      className              The class name of the format\n *                                             element.\n *\n * @return {HTMLElement|VirtualAnchorElement|undefined} The anchor.\n */\nfunction getAnchor( editableContentElement, tagName, className ) {\n\tif ( ! editableContentElement ) {\n\t\treturn;\n\t}\n\n\tconst { ownerDocument } = editableContentElement;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\n\tif ( ! selection ) {\n\t\treturn;\n\t}\n\tif ( ! selection.rangeCount ) {\n\t\treturn;\n\t}\n\n\tconst range = selection.getRangeAt( 0 );\n\n\tif ( ! range || ! range.startContainer ) {\n\t\treturn;\n\t}\n\n\tconst formatElement = getFormatElement(\n\t\trange,\n\t\teditableContentElement,\n\t\ttagName,\n\t\tclassName\n\t);\n\n\tif ( formatElement ) {\n\t\treturn formatElement;\n\t}\n\n\treturn createVirtualAnchorElement( range, editableContentElement );\n}\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or a virtual element for the selection range if\n * no format is active. The returned value is meant to be used for positioning\n * UI, e.g. by passing it to the `Popover` component via the `anchor` prop.\n *\n * @param {Object}           $1                        Named parameters.\n * @param {HTMLElement|null} $1.editableContentElement The element containing\n *                                                     the editable content.\n * @param {WPFormat=}        $1.settings               The format type's settings.\n * @return {Element|VirtualAnchorElement|undefined|null} The active element or selection range.\n */\nexport function useAnchor( { editableContentElement, settings = {} } ) {\n\tconst { tagName, className, isActive } = settings;\n\tconst [ anchor, setAnchor ] = useState( () =>\n\t\tgetAnchor( editableContentElement, tagName, className )\n\t);\n\tconst wasActive = usePrevious( isActive );\n\n\tuseLayoutEffect( () => {\n\t\tif ( ! editableContentElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction callback() {\n\t\t\tsetAnchor(\n\t\t\t\tgetAnchor( editableContentElement, tagName, className )\n\t\t\t);\n\t\t}\n\n\t\tfunction attach() {\n\t\t\townerDocument.addEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tfunction detach() {\n\t\t\townerDocument.removeEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tconst { ownerDocument } = editableContentElement;\n\n\t\tif (\n\t\t\teditableContentElement === ownerDocument.activeElement ||\n\t\t\t// When a link is created, we need to attach the popover to the newly created anchor.\n\t\t\t( ! wasActive && isActive ) ||\n\t\t\t// Sometimes we're _removing_ an active anchor, such as the inline color popover.\n\t\t\t// When we add the color, it switches from a virtual anchor to a `<mark>` element.\n\t\t\t// When we _remove_ the color, it switches from a `<mark>` element to a virtual anchor.\n\t\t\t( wasActive && ! isActive )\n\t\t) {\n\t\t\tsetAnchor(\n\t\t\t\tgetAnchor( editableContentElement, tagName, className )\n\t\t\t);\n\t\t\tattach();\n\t\t}\n\n\t\teditableContentElement.addEventListener( 'focusin', attach );\n\t\teditableContentElement.addEventListener( 'focusout', detach );\n\n\t\treturn () => {\n\t\t\tdetach();\n\n\t\t\teditableContentElement.removeEventListener( 'focusin', attach );\n\t\t\teditableContentElement.removeEventListener( 'focusout', detach );\n\t\t};\n\t}, [ editableContentElement, tagName, className, isActive, wasActive ] );\n\n\treturn anchor;\n}\n", "/**\n * Object map tracking messages which have been logged, for use in ensuring a\n * message is only logged once.\n */\nexport const logged: Set< string > = new Set();\n", "/**\n * Internal dependencies\n */\nimport { logged } from './utils';\n\nfunction isDev(): boolean {\n\t// eslint-disable-next-line @wordpress/wp-global-usage\n\treturn globalThis.SCRIPT_DEBUG === true;\n}\n\n/**\n * Shows a warning with `message` if environment is not `production`.\n *\n * @param message Message to show in the warning.\n *\n * @example\n * ```js\n * import warning from '@wordpress/warning';\n *\n * function MyComponent( props ) {\n *   if ( ! props.title ) {\n *     warning( '`props.title` was not passed' );\n *   }\n *   ...\n * }\n * ```\n */\nexport default function warning( message: string ): void {\n\tif ( ! isDev() ) {\n\t\treturn;\n\t}\n\n\t// Skip if already logged.\n\tif ( logged.has( message ) ) {\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn( message );\n\n\t// Throwing an error and catching it immediately to improve debugging\n\t// A consumer can use 'pause on caught exceptions'\n\t// https://github.com/facebook/react/issues/4216\n\ttry {\n\t\tthrow Error( message );\n\t} catch ( x ) {\n\t\t// Do nothing.\n\t}\n\tlogged.add( message );\n}\n", "let _decodeTextArea: HTMLTextAreaElement | undefined;\n\n/**\n * Decodes the HTML entities from a given string.\n *\n * @param html String that contain HTML entities.\n *\n * @example\n * ```js\n * import { decodeEntities } from '@wordpress/html-entities';\n *\n * const result = decodeEntities( '&aacute;' );\n * console.log( result ); // result will be \"á\"\n * ```\n *\n * @return The decoded string.\n */\nexport function decodeEntities( html: string ): string {\n\t// Not a string, or no entities to decode.\n\tif ( 'string' !== typeof html || -1 === html.indexOf( '&' ) ) {\n\t\treturn html;\n\t}\n\n\t// Create a textarea for decoding entities, that we can reuse.\n\tif ( undefined === _decodeTextArea ) {\n\t\tif (\n\t\t\tdocument.implementation &&\n\t\t\tdocument.implementation.createHTMLDocument\n\t\t) {\n\t\t\t_decodeTextArea = document.implementation\n\t\t\t\t.createHTMLDocument( '' )\n\t\t\t\t.createElement( 'textarea' );\n\t\t} else {\n\t\t\t_decodeTextArea = document.createElement( 'textarea' );\n\t\t}\n\t}\n\n\t_decodeTextArea.innerHTML = html;\n\tconst decoded = _decodeTextArea.textContent ?? '';\n\t_decodeTextArea.innerHTML = '';\n\n\t/**\n\t * Cast to string, HTMLTextAreaElement should always have `string` textContent.\n\t *\n\t * > The `textContent` property of the `Node` interface represents the text content of the\n\t * > node and its descendants.\n\t * >\n\t * > Value: A string or `null`\n\t * >\n\t * > * If the node is a `document` or a Doctype, `textContent` returns `null`.\n\t * > * If the node is a CDATA section, comment, processing instruction, or text node,\n\t * >   textContent returns the text inside the node, i.e., the `Node.nodeValue`.\n\t * > * For other node types, `textContent returns the concatenation of the textContent of\n\t * >   every child node, excluding comments and processing instructions. (This is an empty\n\t * >   string if the node has no children.)\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n\t */\n\treturn decoded;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,eAAe;AAAA,MAClaAAa,IAAI,OAAO,OAAO,GAAG;AACtC,QAAI,cAAc,IAAI,OAAO,OAAO,EAAE;AAEtC,aAAS,QAAQ,OAAO;AACvB,aAAO,aAAa,KAAK;AAAA,IAC1B;AAEA,QAAI,gBAAgB,SAAS,QAAQ;AACpC,aAAO,OAAO,QAAQ,YAAY,OAAO;AAAA,IAC1C;AAEA,QAAI,aAAa,SAAS,QAAQ;AACjC,aAAO,CAAC,CAAC,OAAO,MAAM,WAAW;AAAA,IAClC;AAEA,WAAO,UAAU;AACjB,WAAO,QAAQ,MAAM;AACrB,WAAO,QAAQ,SAAS;AAAA;AAAA;;;AChexB;AAAA;AAAA;AAQA,WAAO,UAAU,SAAS,MAAMA,IAAGC,IAAG;AACpC,UAAID,OAAMC,GAAG,QAAO;AAEpB,UAAID,MAAKC,MAAK,OAAOD,MAAK,YAAY,OAAOC,MAAK,UAAU;AAC1D,YAAID,GAAE,gBAAgBC,GAAE,YAAa,QAAO;AAE5C,YAAI,QAAQC,IAAG;AACf,YAAI,MAAM,QAAQF,EAAC,GAAG;AACpB,mBAASA,GAAE;AACX,cAAI,UAAUC,GAAE,OAAQ,QAAO;AAC/B,eAAKC,KAAI,QAAQA,SAAQ;AACvB,gBAAI,CAAC,MAAMF,GAAEE,EAAC,GAAGD,GAAEC,EAAC,CAAC,EAAG,QAAO;AACjC,iBAAO;AAAA,QACT;AAGA,YAAKF,cAAa,OAASC,cAAa,KAAM;AAC5C,cAAID,GAAE,SAASC,GAAE,KAAM,QAAO;AAC9B,eAAKC,MAAKF,GAAE,QAAQ;AAClB,gBAAI,CAACC,GAAE,IAAIC,GAAE,CAAC,CAAC,EAAG,QAAO;AAC3B,eAAKA,MAAKF,GAAE,QAAQ;AAClB,gBAAI,CAAC,MAAME,GAAE,CAAC,GAAGD,GAAE,IAAIC,GAAE,CAAC,CAAC,CAAC,EAAG,QAAO;AACxC,iBAAO;AAAA,QACT;AAEA,YAAKF,cAAa,OAASC,cAAa,KAAM;AAC5C,cAAID,GAAE,SAASC,GAAE,KAAM,QAAO;AAC9B,eAAKC,MAAKF,GAAE,QAAQ;AAClB,gBAAI,CAACC,GAAE,IAAIC,GAAE,CAAC,CAAC,EAAG,QAAO;AAC3B,iBAAO;AAAA,QACT;AAEA,YAAI,YAAY,OAAOF,EAAC,KAAK,YAAY,OAAOC,EAAC,GAAG;AAClD,mBAASD,GAAE;AACX,cAAI,UAAUC,GAAE,OAAQ,QAAO;AAC/B,eAAKC,KAAI,QAAQA,SAAQ;AACvB,gBAAIF,GAAEE,EAAC,MAAMD,GAAEC,EAAC,EAAG,QAAO;AAC5B,iBAAO;AAAA,QACT;AAGA,YAAIF,GAAE,gBAAgB,OAAQ,QAAOA,GAAE,WAAWC,GAAE,UAAUD,GAAE,UAAUC,GAAE;AAC5E,YAAID,GAAE,YAAY,OAAO,UAAU,QAAS,QAAOA,GAAE,QAAQ,MAAMC,GAAE,QAAQ;AAC7E,YAAID,GAAE,aAAa,OAAO,UAAU,SAAU,QAAOA,GAAE,SAAS,MAAMC,GAAE,SAAS;AAEjF,eAAO,OAAO,KAAKD,EAAC;AACpB,iBAAS,KAAK;AACd,YAAI,WAAW,OAAO,KAAKC,EAAC,EAAE,OAAQ,QAAO;AAE7C,aAAKC,KAAI,QAAQA,SAAQ;AACvB,cAAI,CAAC,OAAO,UAAU,eAAe,KAAKD,IAAG,KAAKC,EAAC,CAAC,EAAG,QAAO;AAEhE,aAAKA,KAAI,QAAQA,SAAQ,KAAI;AAC3B,cAAI,MAAM,KAAKA,EAAC;AAEhB,cAAI,CAAC,MAAMF,GAAE,GAAG,GAAGC,GAAE,GAAG,CAAC,EAAG,QAAO;AAAA,QACrC;AAEA,eAAO;AAAA,MACT;AAGA,aAAOD,OAAIA,MAAKC,OAAIA;AAAA,IACtB;AAAA;AAAA;;;ACvEA;AAAA;AAEA,KAAC,WAAW;AACR;AAEA,UAAI,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,MAAM;AAAA,MACV;AAEA,eAASE,SAAQ,KAAK;AAElB,eAAO,eAAe,cAAc,GAAG,GAAG,SAAS;AAAA,MACvD;AAEA,eAAS,SAAS,KAAK,MAAM;AACzB,eAAOA,SAAQ,MAAM,MAAM,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC;AAAA,MACvD;AAEA,eAAS,eAAe,YAAY,MAAM;AACtC,YAAI,SAAS,GAAG,cAAc,WAAW,QAAQ,KAAK,SAAS,IAAIC,IAAGC,IAAG,IAAI,KAAK,eAAe,YAAY,aAAa;AAC1H,aAAKD,KAAI,GAAGA,KAAI,aAAaA,MAAK;AAC9B,cAAI,OAAO,WAAWA,EAAC,MAAM,UAAU;AACnC,sBAAU,WAAWA,EAAC;AAAA,UAC1B,WACS,OAAO,WAAWA,EAAC,MAAM,UAAU;AACxC,iBAAK,WAAWA,EAAC;AACjB,gBAAI,GAAG,MAAM;AACT,oBAAM,KAAK,MAAM;AACjB,mBAAKC,KAAI,GAAGA,KAAI,GAAG,KAAK,QAAQA,MAAK;AACjC,oBAAI,OAAO,QAAW;AAClB,wBAAM,IAAI,MAAMF,SAAQ,iEAAiE,GAAG,KAAKE,EAAC,GAAG,GAAG,KAAKA,KAAE,CAAC,CAAC,CAAC;AAAA,gBACtH;AACA,sBAAM,IAAI,GAAG,KAAKA,EAAC,CAAC;AAAA,cACxB;AAAA,YACJ,WACS,GAAG,UAAU;AAClB,oBAAM,KAAK,GAAG,QAAQ;AAAA,YAC1B,OACK;AACD,oBAAM,KAAK,QAAQ;AAAA,YACvB;AAEA,gBAAI,GAAG,SAAS,KAAK,GAAG,IAAI,KAAK,GAAG,cAAc,KAAK,GAAG,IAAI,KAAK,eAAe,UAAU;AACxF,oBAAM,IAAI;AAAA,YACd;AAEA,gBAAI,GAAG,YAAY,KAAK,GAAG,IAAI,MAAM,OAAO,QAAQ,YAAY,MAAM,GAAG,IAAI;AACzE,oBAAM,IAAI,UAAUF,SAAQ,2CAA2C,GAAG,CAAC;AAAA,YAC/E;AAEA,gBAAI,GAAG,OAAO,KAAK,GAAG,IAAI,GAAG;AACzB,4BAAc,OAAO;AAAA,YACzB;AAEA,oBAAQ,GAAG,MAAM;AAAA,cACb,KAAK;AACD,sBAAM,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC;AAClC;AAAA,cACJ,KAAK;AACD,sBAAM,OAAO,aAAa,SAAS,KAAK,EAAE,CAAC;AAC3C;AAAA,cACJ,KAAK;AAAA,cACL,KAAK;AACD,sBAAM,SAAS,KAAK,EAAE;AACtB;AAAA,cACJ,KAAK;AACD,sBAAM,KAAK,UAAU,KAAK,MAAM,GAAG,QAAQ,SAAS,GAAG,KAAK,IAAI,CAAC;AACjE;AAAA,cACJ,KAAK;AACD,sBAAM,GAAG,YAAY,WAAW,GAAG,EAAE,cAAc,GAAG,SAAS,IAAI,WAAW,GAAG,EAAE,cAAc;AACjG;AAAA,cACJ,KAAK;AACD,sBAAM,GAAG,YAAY,WAAW,GAAG,EAAE,QAAQ,GAAG,SAAS,IAAI,WAAW,GAAG;AAC3E;AAAA,cACJ,KAAK;AACD,sBAAM,GAAG,YAAY,OAAO,OAAO,IAAI,YAAY,GAAG,SAAS,CAAC,CAAC,IAAI,WAAW,GAAG;AACnF;AAAA,cACJ,KAAK;AACD,uBAAO,SAAS,KAAK,EAAE,MAAM,GAAG,SAAS,CAAC;AAC1C;AAAA,cACJ,KAAK;AACD,sBAAM,OAAO,GAAG;AAChB,sBAAO,GAAG,YAAY,IAAI,UAAU,GAAG,GAAG,SAAS,IAAI;AACvD;AAAA,cACJ,KAAK;AACD,sBAAM,OAAO,CAAC,CAAC,GAAG;AAClB,sBAAO,GAAG,YAAY,IAAI,UAAU,GAAG,GAAG,SAAS,IAAI;AACvD;AAAA,cACJ,KAAK;AACD,sBAAM,OAAO,UAAU,SAAS,KAAK,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,YAAY;AACnE,sBAAO,GAAG,YAAY,IAAI,UAAU,GAAG,GAAG,SAAS,IAAI;AACvD;AAAA,cACJ,KAAK;AACD,sBAAM,SAAS,KAAK,EAAE,MAAM;AAC5B;AAAA,cACJ,KAAK;AACD,sBAAM,IAAI,QAAQ;AAClB,sBAAO,GAAG,YAAY,IAAI,UAAU,GAAG,GAAG,SAAS,IAAI;AACvD;AAAA,cACJ,KAAK;AACD,uBAAO,SAAS,KAAK,EAAE,MAAM,GAAG,SAAS,EAAE;AAC3C;AAAA,cACJ,KAAK;AACD,uBAAO,SAAS,KAAK,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,YAAY;AACzD;AAAA,YACR;AACA,gBAAI,GAAG,KAAK,KAAK,GAAG,IAAI,GAAG;AACvB,wBAAU;AAAA,YACd,OACK;AACD,kBAAI,GAAG,OAAO,KAAK,GAAG,IAAI,MAAM,CAAC,eAAe,GAAG,OAAO;AACtD,uBAAO,cAAc,MAAM;AAC3B,sBAAM,IAAI,SAAS,EAAE,QAAQ,GAAG,MAAM,EAAE;AAAA,cAC5C,OACK;AACD,uBAAO;AAAA,cACX;AACA,8BAAgB,GAAG,WAAW,GAAG,aAAa,MAAM,MAAM,GAAG,SAAS,OAAO,CAAC,IAAI;AAClF,2BAAa,GAAG,SAAS,OAAO,KAAK;AACrC,oBAAM,GAAG,QAAS,aAAa,IAAI,cAAc,OAAO,UAAU,IAAI,KAAM;AAC5E,wBAAU,GAAG,QAAQ,OAAO,MAAM,MAAO,kBAAkB,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO;AAAA,YACrG;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAEA,UAAI,gBAAgB,uBAAO,OAAO,IAAI;AAEtC,eAAS,cAAc,KAAK;AACxB,YAAI,cAAc,GAAG,GAAG;AACpB,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAEA,YAAI,OAAO,KAAK,OAAO,aAAa,CAAC,GAAG,YAAY;AACpD,eAAO,MAAM;AACT,eAAK,QAAQ,GAAG,KAAK,KAAK,IAAI,OAAO,MAAM;AACvC,uBAAW,KAAK,MAAM,CAAC,CAAC;AAAA,UAC5B,YACU,QAAQ,GAAG,OAAO,KAAK,IAAI,OAAO,MAAM;AAC9C,uBAAW,KAAK,GAAG;AAAA,UACvB,YACU,QAAQ,GAAG,YAAY,KAAK,IAAI,OAAO,MAAM;AACnD,gBAAI,MAAM,CAAC,GAAG;AACV,2BAAa;AACb,kBAAI,aAAa,CAAC,GAAG,oBAAoB,MAAM,CAAC,GAAG,cAAc,CAAC;AAClE,mBAAK,cAAc,GAAG,IAAI,KAAK,iBAAiB,OAAO,MAAM;AACzD,2BAAW,KAAK,YAAY,CAAC,CAAC;AAC9B,wBAAQ,oBAAoB,kBAAkB,UAAU,YAAY,CAAC,EAAE,MAAM,OAAO,IAAI;AACpF,uBAAK,cAAc,GAAG,WAAW,KAAK,iBAAiB,OAAO,MAAM;AAChE,+BAAW,KAAK,YAAY,CAAC,CAAC;AAAA,kBAClC,YACU,cAAc,GAAG,aAAa,KAAK,iBAAiB,OAAO,MAAM;AACvE,+BAAW,KAAK,YAAY,CAAC,CAAC;AAAA,kBAClC,OACK;AACD,0BAAM,IAAI,YAAY,8CAA8C;AAAA,kBACxE;AAAA,gBACJ;AAAA,cACJ,OACK;AACD,sBAAM,IAAI,YAAY,8CAA8C;AAAA,cACxE;AACA,oBAAM,CAAC,IAAI;AAAA,YACf,OACK;AACD,2BAAa;AAAA,YACjB;AACA,gBAAI,cAAc,GAAG;AACjB,oBAAM,IAAI,MAAM,2EAA2E;AAAA,YAC/F;AAEA,uBAAW;AAAA,cACP;AAAA,gBACI,aAAa,MAAM,CAAC;AAAA,gBACpB,UAAa,MAAM,CAAC;AAAA,gBACpB,MAAa,MAAM,CAAC;AAAA,gBACpB,MAAa,MAAM,CAAC;AAAA,gBACpB,UAAa,MAAM,CAAC;AAAA,gBACpB,OAAa,MAAM,CAAC;AAAA,gBACpB,OAAa,MAAM,CAAC;AAAA,gBACpB,WAAa,MAAM,CAAC;AAAA,gBACpB,MAAa,MAAM,CAAC;AAAA,cACxB;AAAA,YACJ;AAAA,UACJ,OACK;AACD,kBAAM,IAAI,YAAY,kCAAkC;AAAA,UAC5D;AACA,iBAAO,KAAK,UAAU,MAAM,CAAC,EAAE,MAAM;AAAA,QACzC;AACA,eAAO,cAAc,GAAG,IAAI;AAAA,MAChC;AAMA,UAAI,OAAO,YAAY,aAAa;AAChC,gBAAQ,SAAS,IAAIA;AACrB,gBAAQ,UAAU,IAAI;AAAA,MAC1B;AACA,UAAI,OAAO,WAAW,aAAa;AAC/B,eAAO,SAAS,IAAIA;AACpB,eAAO,UAAU,IAAI;AAErB,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK,GAAG;AAC/C,iBAAO,WAAW;AACd,mBAAO;AAAA,cACH,WAAWA;AAAA,cACX,YAAY;AAAA,YAChB;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IAEJ,EAAE;AAAA;AAAA;;;AC/LF,SAAS,OAAO,IAAI,SAAS;AAC5B,MAAI,OAAO;AAGX,MAAI;AAGJ,MAAI;AAEJ,YAAU,WAAW,CAAC;AAEtB,WAAS,WAAwB;AAChC,QAAI,OAAO,MACV,MAAM,UAAU,QAChB,MACAG;AAED,gBAAa,QAAO,MAAM;AAQzB,UAAI,KAAK,KAAK,WAAW,UAAU,QAAQ;AAC1C,eAAO,KAAK;AACZ;AAAA,MACD;AAGA,WAAKA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AACzB,YAAI,KAAK,KAAKA,EAAC,MAAM,UAAUA,EAAC,GAAG;AAClC,iBAAO,KAAK;AACZ,mBAAS;AAAA,QACV;AAAA,MACD;AAKA,UAAI,SAAS,MAAM;AAGlB,YAAI,SAAS,MAAM;AAClB,iBAAO,KAAK;AAAA,QACb;AAI+B,QAAC,KAAK,KAAM,OAAO,KAAK;AACvD,YAAI,KAAK,MAAM;AACd,eAAK,KAAK,OAAO,KAAK;AAAA,QACvB;AAEA,aAAK,OAAO;AACZ,aAAK,OAAO;AACmB,QAAC,KAAM,OAAO;AAC7C,eAAO;AAAA,MACR;AAGA,aAAO,KAAK;AAAA,IACb;AAKA,WAAO,IAAI,MAAM,GAAG;AACpB,SAAKA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AACzB,WAAKA,EAAC,IAAI,UAAUA,EAAC;AAAA,IACtB;AAEA,WAAO;AAAA,MACN;AAAA;AAAA,MAGA,KAAK,GAAG,MAAM,MAAM,IAAI;AAAA,IACzB;AAMA,QAAI,MAAM;AACT,WAAK,OAAO;AACZ,WAAK,OAAO;AAAA,IACb,OAAO;AAEN,aAAO;AAAA,IACR;AAGA,QAAI;AAAA,IAAuC,QAAS,SAAS;AAC5D;AAAA,MAAuC,KAAM;AACd,MAAC,KAAM,OAAO;AAAA,IAC9C,OAAO;AACN;AAAA,IACD;AAEA,WAAO;AAEP,WAAO,KAAK;AAAA,EACb;AAEA,WAAS,QAAQ,WAAY;AAC5B,WAAO;AACP,WAAO;AACP,WAAO;AAAA,EACR;AAQA,SAAO;AACR;;;AC7JA,IAAI,IAAE,EAAC,MAAK,KAAG,MAAK,KAAI,KAAI,OAAK,IAAE,KAAK,IAAG;AAA3C,IAA6C,IAAE,SAASC,IAAE;AAAC,SAAM,YAAU,OAAOA,KAAEA,GAAE,SAAO,IAAE,YAAU,OAAOA;AAAC;AAAjH,IAAmH,IAAE,SAASA,IAAEC,IAAEC,IAAE;AAAC,SAAO,WAASD,OAAIA,KAAE,IAAG,WAASC,OAAIA,KAAE,KAAK,IAAI,IAAGD,EAAC,IAAG,KAAK,MAAMC,KAAEF,EAAC,IAAEE,KAAE;AAAC;AAAhN,IAAkN,IAAE,SAASF,IAAEC,IAAEC,IAAE;AAAC,SAAO,WAASD,OAAIA,KAAE,IAAG,WAASC,OAAIA,KAAE,IAAGF,KAAEE,KAAEA,KAAEF,KAAEC,KAAED,KAAEC;AAAC;AAA5R,IAA8R,IAAE,SAASD,IAAE;AAAC,UAAOA,KAAE,SAASA,EAAC,IAAEA,KAAE,MAAI,KAAG,IAAEA,KAAEA,KAAE;AAAG;AAAnV,IAAqV,IAAE,SAASA,IAAE;AAAC,SAAM,EAAC,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,CAAC,EAAC;AAAC;AAAha,IAAka,IAAE,SAASA,IAAE;AAAC,SAAM,EAAC,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,GAAE,CAAC,EAAC;AAAC;AAA7d,IAA+d,IAAE;AAAje,IAAuf,IAAE,SAASA,IAAE;AAAC,MAAIC,KAAED,GAAE,SAAS,EAAE;AAAE,SAAOC,GAAE,SAAO,IAAE,MAAIA,KAAEA;AAAC;AAAnjB,IAAqjB,IAAE,SAASD,IAAE;AAAC,MAAIC,KAAED,GAAE,GAAEE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,GAAEI,KAAEJ,GAAE,GAAEK,KAAE,KAAK,IAAIJ,IAAEC,IAAEC,EAAC,GAAEG,KAAED,KAAE,KAAK,IAAIJ,IAAEC,IAAEC,EAAC,GAAEI,KAAED,KAAED,OAAIJ,MAAGC,KAAEC,MAAGG,KAAED,OAAIH,KAAE,KAAGC,KAAEF,MAAGK,KAAE,KAAGL,KAAEC,MAAGI,KAAE;AAAE,SAAM,EAAC,GAAE,MAAIC,KAAE,IAAEA,KAAE,IAAEA,KAAG,GAAEF,KAAEC,KAAED,KAAE,MAAI,GAAE,GAAEA,KAAE,MAAI,KAAI,GAAED,GAAC;AAAC;AAAzuB,IAA2uB,IAAE,SAASJ,IAAE;AAAC,MAAIC,KAAED,GAAE,GAAEE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,GAAEI,KAAEJ,GAAE;AAAE,EAAAC,KAAEA,KAAE,MAAI,GAAEC,MAAG,KAAIC,MAAG;AAAI,MAAIE,KAAE,KAAK,MAAMJ,EAAC,GAAEK,KAAEH,MAAG,IAAED,KAAGK,KAAEJ,MAAG,KAAGF,KAAEI,MAAGH,KAAGM,KAAEL,MAAG,KAAG,IAAEF,KAAEI,MAAGH,KAAGO,KAAEJ,KAAE;AAAE,SAAM,EAAC,GAAE,MAAI,CAACF,IAAEI,IAAED,IAAEA,IAAEE,IAAEL,EAAC,EAAEM,EAAC,GAAE,GAAE,MAAI,CAACD,IAAEL,IAAEA,IAAEI,IAAED,IAAEA,EAAC,EAAEG,EAAC,GAAE,GAAE,MAAI,CAACH,IAAEA,IAAEE,IAAEL,IAAEA,IAAEI,EAAC,EAAEE,EAAC,GAAE,GAAEL,GAAC;AAAC;AAAn8B,IAAq8B,IAAE,SAASJ,IAAE;AAAC,SAAM,EAAC,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,CAAC,EAAC;AAAC;AAA1gC,IAA4gC,IAAE,SAASA,IAAE;AAAC,SAAM,EAAC,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,GAAE,CAAC,EAAC;AAAC;AAAvkC,IAAykC,IAAE,SAASA,IAAE;AAAC,SAAO,GAAGE,MAAGD,KAAED,IAAG,GAAE,EAAC,GAAEC,GAAE,GAAE,IAAGC,QAAKC,KAAEF,GAAE,KAAG,KAAGE,KAAE,MAAIA,MAAG,OAAK,IAAE,IAAED,MAAGC,KAAED,MAAG,MAAI,GAAE,GAAEC,KAAED,IAAE,GAAED,GAAE,EAAC,EAAE;AAAE,MAAIA,IAAEC,IAAEC;AAAC;AAA5rC,IAA8rC,IAAE,SAASH,IAAE;AAAC,SAAM,EAAC,IAAGC,KAAE,EAAED,EAAC,GAAG,GAAE,IAAGI,MAAG,OAAKF,KAAED,GAAE,OAAKE,KAAEF,GAAE,KAAG,OAAK,KAAGG,KAAE,MAAIF,KAAEC,KAAE,OAAKC,MAAG,MAAIA,KAAE,MAAIA,MAAG,MAAI,GAAE,GAAEA,KAAE,GAAE,GAAEH,GAAE,EAAC;AAAE,MAAIA,IAAEC,IAAEC,IAAEC;AAAC;AAAh0C,IAAk0C,IAAE;AAAp0C,IAA68C,IAAE;AAA/8C,IAAilD,IAAE;AAAnlD,IAAktD,IAAE;AAAptD,IAA40D,IAAE,EAAC,QAAO,CAAC,CAAC,SAASJ,IAAE;AAAC,MAAIC,KAAE,EAAE,KAAKD,EAAC;AAAE,SAAOC,MAAGD,KAAEC,GAAE,CAAC,GAAG,UAAQ,IAAE,EAAC,GAAE,SAASD,GAAE,CAAC,IAAEA,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,SAASA,GAAE,CAAC,IAAEA,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,SAASA,GAAE,CAAC,IAAEA,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,MAAIA,GAAE,SAAO,EAAE,SAASA,GAAE,CAAC,IAAEA,GAAE,CAAC,GAAE,EAAE,IAAE,KAAI,CAAC,IAAE,EAAC,IAAE,MAAIA,GAAE,UAAQ,MAAIA,GAAE,SAAO,EAAC,GAAE,SAASA,GAAE,OAAO,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,SAASA,GAAE,OAAO,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,SAASA,GAAE,OAAO,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,MAAIA,GAAE,SAAO,EAAE,SAASA,GAAE,OAAO,GAAE,CAAC,GAAE,EAAE,IAAE,KAAI,CAAC,IAAE,EAAC,IAAE,OAAK;AAAI,GAAE,KAAK,GAAE,CAAC,SAASA,IAAE;AAAC,MAAIC,KAAE,EAAE,KAAKD,EAAC,KAAG,EAAE,KAAKA,EAAC;AAAE,SAAOC,KAAEA,GAAE,CAAC,MAAIA,GAAE,CAAC,KAAGA,GAAE,CAAC,MAAIA,GAAE,CAAC,IAAE,OAAK,EAAE,EAAC,GAAE,OAAOA,GAAE,CAAC,CAAC,KAAGA,GAAE,CAAC,IAAE,MAAI,MAAI,IAAG,GAAE,OAAOA,GAAE,CAAC,CAAC,KAAGA,GAAE,CAAC,IAAE,MAAI,MAAI,IAAG,GAAE,OAAOA,GAAE,CAAC,CAAC,KAAGA,GAAE,CAAC,IAAE,MAAI,MAAI,IAAG,GAAE,WAASA,GAAE,CAAC,IAAE,IAAE,OAAOA,GAAE,CAAC,CAAC,KAAGA,GAAE,CAAC,IAAE,MAAI,GAAE,CAAC,IAAE;AAAI,GAAE,KAAK,GAAE,CAAC,SAASA,IAAE;AAAC,MAAIC,KAAE,EAAE,KAAKD,EAAC,KAAG,EAAE,KAAKA,EAAC;AAAE,MAAG,CAACC,GAAE,QAAO;AAAK,MAAIC,IAAEC,IAAEC,KAAE,EAAE,EAAC,IAAGF,KAAED,GAAE,CAAC,GAAEE,KAAEF,GAAE,CAAC,GAAE,WAASE,OAAIA,KAAE,QAAO,OAAOD,EAAC,KAAG,EAAEC,EAAC,KAAG,KAAI,GAAE,OAAOF,GAAE,CAAC,CAAC,GAAE,GAAE,OAAOA,GAAE,CAAC,CAAC,GAAE,GAAE,WAASA,GAAE,CAAC,IAAE,IAAE,OAAOA,GAAE,CAAC,CAAC,KAAGA,GAAE,CAAC,IAAE,MAAI,GAAE,CAAC;AAAE,SAAO,EAAEG,EAAC;AAAC,GAAE,KAAK,CAAC,GAAE,QAAO,CAAC,CAAC,SAASL,IAAE;AAAC,MAAIE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,GAAEI,KAAEJ,GAAE,GAAEM,KAAEN,GAAE,GAAEO,KAAE,WAASD,KAAE,IAAEA;AAAE,SAAO,EAAEJ,EAAC,KAAG,EAAEC,EAAC,KAAG,EAAEC,EAAC,IAAE,EAAE,EAAC,GAAE,OAAOF,EAAC,GAAE,GAAE,OAAOC,EAAC,GAAE,GAAE,OAAOC,EAAC,GAAE,GAAE,OAAOG,EAAC,EAAC,CAAC,IAAE;AAAI,GAAE,KAAK,GAAE,CAAC,SAASP,IAAE;AAAC,MAAIE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,GAAEI,KAAEJ,GAAE,GAAEK,KAAEL,GAAE,GAAEM,KAAE,WAASD,KAAE,IAAEA;AAAE,MAAG,CAAC,EAAEH,EAAC,KAAG,CAAC,EAAEC,EAAC,KAAG,CAAC,EAAEC,EAAC,EAAE,QAAO;AAAK,MAAIG,KAAE,EAAE,EAAC,GAAE,OAAOL,EAAC,GAAE,GAAE,OAAOC,EAAC,GAAE,GAAE,OAAOC,EAAC,GAAE,GAAE,OAAOE,EAAC,EAAC,CAAC;AAAE,SAAO,EAAEC,EAAC;AAAC,GAAE,KAAK,GAAE,CAAC,SAASP,IAAE;AAAC,MAAIE,KAAEF,GAAE,GAAEK,KAAEL,GAAE,GAAEM,KAAEN,GAAE,GAAEO,KAAEP,GAAE,GAAEQ,KAAE,WAASD,KAAE,IAAEA;AAAE,MAAG,CAAC,EAAEL,EAAC,KAAG,CAAC,EAAEG,EAAC,KAAG,CAAC,EAAEC,EAAC,EAAE,QAAO;AAAK,MAAIG,KAAE,SAAST,IAAE;AAAC,WAAM,EAAC,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,GAAE,GAAE,GAAG,GAAE,GAAE,EAAEA,GAAE,CAAC,EAAC;AAAA,EAAC,EAAE,EAAC,GAAE,OAAOE,EAAC,GAAE,GAAE,OAAOG,EAAC,GAAE,GAAE,OAAOC,EAAC,GAAE,GAAE,OAAOE,EAAC,EAAC,CAAC;AAAE,SAAO,EAAEC,EAAC;AAAC,GAAE,KAAK,CAAC,EAAC;AAAjtG,IAAmtG,IAAE,SAAST,IAAEC,IAAE;AAAC,WAAQC,KAAE,GAAEA,KAAED,GAAE,QAAOC,MAAI;AAAC,QAAIC,KAAEF,GAAEC,EAAC,EAAE,CAAC,EAAEF,EAAC;AAAE,QAAGG,GAAE,QAAM,CAACA,IAAEF,GAAEC,EAAC,EAAE,CAAC,CAAC;AAAA,EAAC;AAAC,SAAM,CAAC,MAAK,MAAM;AAAC;AAA1zG,IAA4zG,IAAE,SAASF,IAAE;AAAC,SAAM,YAAU,OAAOA,KAAE,EAAEA,GAAE,KAAK,GAAE,EAAE,MAAM,IAAE,YAAU,OAAOA,MAAG,SAAOA,KAAE,EAAEA,IAAE,EAAE,MAAM,IAAE,CAAC,MAAK,MAAM;AAAC;AAAh7G,IAAg9G,IAAE,SAASU,IAAEC,IAAE;AAAC,MAAIC,KAAE,EAAEF,EAAC;AAAE,SAAM,EAAC,GAAEE,GAAE,GAAE,GAAE,EAAEA,GAAE,IAAE,MAAID,IAAE,GAAE,GAAG,GAAE,GAAEC,GAAE,GAAE,GAAEA,GAAE,EAAC;AAAC;AAAzhH,IAA2hH,IAAE,SAASF,IAAE;AAAC,UAAO,MAAIA,GAAE,IAAE,MAAIA,GAAE,IAAE,MAAIA,GAAE,KAAG,MAAI;AAAG;AAAhlH,IAAklH,IAAE,SAASA,IAAEC,IAAE;AAAC,MAAIC,KAAE,EAAEF,EAAC;AAAE,SAAM,EAAC,GAAEE,GAAE,GAAE,GAAEA,GAAE,GAAE,GAAE,EAAEA,GAAE,IAAE,MAAID,IAAE,GAAE,GAAG,GAAE,GAAEC,GAAE,EAAC;AAAC;AAA3pH,IAA6pH,IAAE,WAAU;AAAC,WAASF,GAAEA,IAAE;AAAC,SAAK,SAAO,EAAEA,EAAC,EAAE,CAAC,GAAE,KAAK,OAAK,KAAK,UAAQ,EAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,EAAC;AAAA,EAAC;AAAC,SAAOA,GAAE,UAAU,UAAQ,WAAU;AAAC,WAAO,SAAO,KAAK;AAAA,EAAM,GAAEA,GAAE,UAAU,aAAW,WAAU;AAAC,WAAO,EAAE,EAAE,KAAK,IAAI,GAAE,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,SAAO,WAAU;AAAC,WAAO,EAAE,KAAK,IAAI,IAAE;AAAA,EAAE,GAAEA,GAAE,UAAU,UAAQ,WAAU;AAAC,WAAO,EAAE,KAAK,IAAI,KAAG;AAAA,EAAE,GAAEA,GAAE,UAAU,QAAM,WAAU;AAAC,WAAOA,KAAE,EAAE,KAAK,IAAI,GAAEC,KAAED,GAAE,GAAEG,KAAEH,GAAE,GAAEI,KAAEJ,GAAE,GAAEK,MAAGC,KAAEN,GAAE,KAAG,IAAE,EAAE,EAAE,MAAIM,EAAC,CAAC,IAAE,IAAG,MAAI,EAAEL,EAAC,IAAE,EAAEE,EAAC,IAAE,EAAEC,EAAC,IAAEC;AAAE,QAAIL,IAAEC,IAAEE,IAAEC,IAAEE,IAAED;AAAA,EAAC,GAAEL,GAAE,UAAU,QAAM,WAAU;AAAC,WAAO,EAAE,KAAK,IAAI;AAAA,EAAC,GAAEA,GAAE,UAAU,cAAY,WAAU;AAAC,WAAOA,KAAE,EAAE,KAAK,IAAI,GAAEC,KAAED,GAAE,GAAEE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,IAAGI,KAAEJ,GAAE,KAAG,IAAE,UAAQC,KAAE,OAAKC,KAAE,OAAKC,KAAE,OAAKC,KAAE,MAAI,SAAOH,KAAE,OAAKC,KAAE,OAAKC,KAAE;AAAI,QAAIH,IAAEC,IAAEC,IAAEC,IAAEC;AAAA,EAAC,GAAEJ,GAAE,UAAU,QAAM,WAAU;AAAC,WAAO,EAAE,EAAE,KAAK,IAAI,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,cAAY,WAAU;AAAC,WAAOA,KAAE,EAAE,EAAE,KAAK,IAAI,CAAC,GAAEC,KAAED,GAAE,GAAEE,KAAEF,GAAE,GAAEG,KAAEH,GAAE,IAAGI,KAAEJ,GAAE,KAAG,IAAE,UAAQC,KAAE,OAAKC,KAAE,QAAMC,KAAE,QAAMC,KAAE,MAAI,SAAOH,KAAE,OAAKC,KAAE,QAAMC,KAAE;AAAK,QAAIH,IAAEC,IAAEC,IAAEC,IAAEC;AAAA,EAAC,GAAEJ,GAAE,UAAU,QAAM,WAAU;AAAC,WAAOA,KAAE,EAAE,KAAK,IAAI,GAAE,EAAC,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,CAAC,GAAE,GAAE,EAAEA,GAAE,GAAE,CAAC,EAAC;AAAE,QAAIA;AAAA,EAAC,GAAEA,GAAE,UAAU,SAAO,WAAU;AAAC,WAAO,EAAE,EAAC,GAAE,OAAKA,KAAE,KAAK,MAAM,GAAE,GAAE,MAAIA,GAAE,GAAE,GAAE,MAAIA,GAAE,GAAE,GAAEA,GAAE,EAAC,CAAC;AAAE,QAAIA;AAAA,EAAC,GAAEA,GAAE,UAAU,WAAS,SAASA,IAAE;AAAC,WAAO,WAASA,OAAIA,KAAE,MAAI,EAAE,EAAE,KAAK,MAAKA,EAAC,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,aAAW,SAASA,IAAE;AAAC,WAAO,WAASA,OAAIA,KAAE,MAAI,EAAE,EAAE,KAAK,MAAK,CAACA,EAAC,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,YAAU,WAAU;AAAC,WAAO,EAAE,EAAE,KAAK,MAAK,EAAE,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,UAAQ,SAASA,IAAE;AAAC,WAAO,WAASA,OAAIA,KAAE,MAAI,EAAE,EAAE,KAAK,MAAKA,EAAC,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,SAAO,SAASA,IAAE;AAAC,WAAO,WAASA,OAAIA,KAAE,MAAI,EAAE,EAAE,KAAK,MAAK,CAACA,EAAC,CAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,SAAO,SAASA,IAAE;AAAC,WAAO,WAASA,OAAIA,KAAE,KAAI,KAAK,IAAI,KAAK,IAAI,IAAEA,EAAC;AAAA,EAAC,GAAEA,GAAE,UAAU,QAAM,SAASA,IAAE;AAAC,WAAM,YAAU,OAAOA,KAAE,EAAE,EAAC,IAAGC,KAAE,KAAK,MAAM,GAAE,GAAEA,GAAE,GAAE,GAAEA,GAAE,GAAE,GAAED,GAAC,CAAC,IAAE,EAAE,KAAK,KAAK,GAAE,CAAC;AAAE,QAAIC;AAAA,EAAC,GAAED,GAAE,UAAU,MAAI,SAASA,IAAE;AAAC,QAAIC,KAAE,EAAE,KAAK,IAAI;AAAE,WAAM,YAAU,OAAOD,KAAE,EAAE,EAAC,GAAEA,IAAE,GAAEC,GAAE,GAAE,GAAEA,GAAE,GAAE,GAAEA,GAAE,EAAC,CAAC,IAAE,EAAEA,GAAE,CAAC;AAAA,EAAC,GAAED,GAAE,UAAU,UAAQ,SAASA,IAAE;AAAC,WAAO,KAAK,MAAM,MAAI,EAAEA,EAAC,EAAE,MAAM;AAAA,EAAC,GAAEA;AAAC,EAAE;AAAz8K,IAA28K,IAAE,SAASA,IAAE;AAAC,SAAOA,cAAa,IAAEA,KAAE,IAAI,EAAEA,EAAC;AAAC;AAAz/K,IAA2/K,IAAE,CAAC;AAA9/K,IAAggL,IAAE,SAASA,IAAE;AAAC,EAAAA,GAAE,QAAQ,SAASA,IAAE;AAAC,MAAE,QAAQA,EAAC,IAAE,MAAIA,GAAE,GAAE,CAAC,GAAE,EAAE,KAAKA,EAAC;AAAA,EAAE,CAAC;AAAC;;;ACAzjL,SAAR,cAAiBO,IAAEC,IAAE;AAAC,MAAIC,KAAE,EAAC,OAAM,WAAU,QAAO,WAAU,MAAK,WAAU,WAAU,WAAU,YAAW,WAAU,WAAU,WAAU,OAAM,WAAU,cAAa,WAAU,MAAK,WAAU,OAAM,WAAU,YAAW,WAAU,YAAW,WAAU,MAAK,WAAU,gBAAe,WAAU,OAAM,WAAU,MAAK,WAAU,WAAU,WAAU,WAAU,WAAU,UAAS,WAAU,gBAAe,WAAU,WAAU,WAAU,YAAW,WAAU,OAAM,WAAU,SAAQ,WAAU,MAAK,WAAU,UAAS,WAAU,UAAS,WAAU,eAAc,WAAU,WAAU,WAAU,UAAS,WAAU,WAAU,WAAU,UAAS,WAAU,WAAU,WAAU,aAAY,WAAU,SAAQ,WAAU,YAAW,WAAU,YAAW,WAAU,eAAc,WAAU,MAAK,WAAU,eAAc,WAAU,eAAc,WAAU,UAAS,WAAU,aAAY,WAAU,OAAM,WAAU,WAAU,WAAU,aAAY,WAAU,YAAW,WAAU,YAAW,WAAU,SAAQ,WAAU,OAAM,WAAU,YAAW,WAAU,MAAK,WAAU,UAAS,WAAU,SAAQ,WAAU,YAAW,WAAU,aAAY,WAAU,WAAU,WAAU,WAAU,WAAU,QAAO,WAAU,SAAQ,WAAU,OAAM,WAAU,QAAO,WAAU,YAAW,WAAU,YAAW,WAAU,eAAc,WAAU,WAAU,WAAU,OAAM,WAAU,aAAY,WAAU,aAAY,WAAU,eAAc,WAAU,OAAM,WAAU,kBAAiB,WAAU,cAAa,WAAU,MAAK,WAAU,OAAM,WAAU,gBAAe,WAAU,WAAU,WAAU,mBAAkB,WAAU,cAAa,WAAU,WAAU,WAAU,cAAa,WAAU,WAAU,WAAU,WAAU,WAAU,UAAS,WAAU,WAAU,WAAU,gBAAe,WAAU,gBAAe,WAAU,aAAY,WAAU,MAAK,WAAU,iBAAgB,WAAU,YAAW,WAAU,eAAc,WAAU,SAAQ,WAAU,eAAc,WAAU,iBAAgB,WAAU,cAAa,WAAU,eAAc,WAAU,gBAAe,WAAU,iBAAgB,WAAU,SAAQ,WAAU,KAAI,WAAU,QAAO,WAAU,cAAa,WAAU,QAAO,WAAU,MAAK,WAAU,SAAQ,WAAU,aAAY,WAAU,WAAU,WAAU,KAAI,WAAU,QAAO,WAAU,WAAU,WAAU,eAAc,WAAU,MAAK,WAAU,eAAc,WAAU,QAAO,WAAU,MAAK,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,cAAa,WAAU,gBAAe,WAAU,aAAY,WAAU,UAAS,WAAU,UAAS,WAAU,QAAO,WAAU,QAAO,WAAU,QAAO,WAAU,UAAS,WAAU,YAAW,WAAU,QAAO,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,aAAY,WAAU,QAAO,WAAU,aAAY,WAAU,YAAW,WAAU,WAAU,WAAU,YAAW,WAAU,sBAAqB,WAAU,MAAK,WAAU,WAAU,WAAU,WAAU,WAAU,SAAQ,WAAU,SAAQ,WAAU,WAAU,WAAU,OAAM,UAAS,GAAEC,KAAE,CAAC;AAAE,WAAQC,MAAKF,GAAE,CAAAC,GAAED,GAAEE,EAAC,CAAC,IAAEA;AAAE,MAAIC,KAAE,CAAC;AAAE,EAAAL,GAAE,UAAU,SAAO,SAASC,IAAE;AAAC,QAAG,EAAE,KAAK,KAAK,KAAG,KAAK,KAAK,KAAG,KAAK,KAAK,KAAG,KAAK,KAAK,GAAG,QAAM;AAAc,QAAIG,IAAEE,IAAEC,KAAEJ,GAAE,KAAK,MAAM,CAAC;AAAE,QAAGI,GAAE,QAAOA;AAAE,QAAG,QAAMN,KAAE,SAAOA,GAAE,SAAQ;AAAC,UAAIO,KAAE,KAAK,MAAM,GAAEC,KAAE,IAAE,GAAEC,KAAE;AAAQ,UAAG,CAACL,GAAE,OAAO,UAAQM,MAAKT,GAAE,CAAAG,GAAEM,EAAC,IAAE,IAAIX,GAAEE,GAAES,EAAC,CAAC,EAAE,MAAM;AAAE,eAAQC,MAAKV,IAAE;AAAC,YAAIW,MAAGT,KAAEI,IAAEF,KAAED,GAAEO,EAAC,GAAE,KAAK,IAAIR,GAAE,IAAEE,GAAE,GAAE,CAAC,IAAE,KAAK,IAAIF,GAAE,IAAEE,GAAE,GAAE,CAAC,IAAE,KAAK,IAAIF,GAAE,IAAEE,GAAE,GAAE,CAAC;AAAG,QAAAO,KAAEJ,OAAIA,KAAEI,IAAEH,KAAEE;AAAA,MAAE;AAAC,aAAOF;AAAA,IAAC;AAAA,EAAC;AAAE,EAAAT,GAAE,OAAO,KAAK,CAAC,SAASA,IAAE;AAAC,QAAIE,KAAEF,GAAE,YAAY,GAAEG,KAAE,kBAAgBD,KAAE,UAAQD,GAAEC,EAAC;AAAE,WAAOC,KAAE,IAAIJ,GAAEI,EAAC,EAAE,MAAM,IAAE;AAAA,EAAI,GAAE,MAAM,CAAC;AAAC;;;ACA98G,IAAIU,KAAE,SAASA,IAAE;AAAC,MAAIC,KAAED,KAAE;AAAI,SAAOC,KAAE,UAAOA,KAAE,QAAM,KAAK,KAAKA,KAAE,SAAM,OAAM,GAAG;AAAC;AAAlF,IAAoFA,KAAE,SAASA,IAAE;AAAC,SAAM,SAAMD,GAAEC,GAAE,CAAC,IAAE,SAAMD,GAAEC,GAAE,CAAC,IAAE,SAAMD,GAAEC,GAAE,CAAC;AAAC;AAAiB,SAAR,aAAiBD,IAAE;AAAC,EAAAA,GAAE,UAAU,YAAU,WAAU;AAAC,WAAOA,KAAEC,GAAE,KAAK,IAAI,GAAE,YAAUC,KAAE,OAAKA,KAAE,IAAG,WAASC,OAAIA,KAAE,KAAK,IAAI,IAAGD,EAAC,IAAG,KAAK,MAAMC,KAAEH,EAAC,IAAEG,KAAE;AAAE,QAAIH,IAAEE,IAAEC;AAAA,EAAC,GAAEH,GAAE,UAAU,WAAS,SAASE,IAAE;AAAC,eAASA,OAAIA,KAAE;AAAQ,QAAIC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,KAAER,cAAaF,KAAEE,KAAE,IAAIF,GAAEE,EAAC;AAAE,WAAOI,KAAE,KAAK,MAAKC,KAAEG,GAAE,MAAM,GAAEF,KAAEP,GAAEK,EAAC,GAAEG,KAAER,GAAEM,EAAC,GAAEJ,KAAEK,KAAEC,MAAGD,KAAE,SAAMC,KAAE,SAAMA,KAAE,SAAMD,KAAE,OAAK,YAAUJ,KAAE,OAAKA,KAAE,IAAG,WAASC,OAAIA,KAAE,KAAK,IAAI,IAAGD,EAAC,IAAG,KAAK,MAAMC,KAAEF,EAAC,IAAEE,KAAE;AAAA,EAAC,GAAEL,GAAE,UAAU,aAAW,SAASA,IAAEC,IAAE;AAAC,WAAO,WAASD,OAAIA,KAAE,SAAQ,WAASC,OAAIA,KAAE,CAAC,IAAG,KAAK,SAASD,EAAC,MAAIM,KAAE,YAAUD,MAAGH,KAAED,IAAG,QAAM,WAASI,IAAE,WAASD,KAAE,YAAUD,KAAED,GAAE,SAAO,OAAKC,OAAI,aAAWG,KAAE,IAAE,SAAOF,MAAG,YAAUE,KAAE,IAAE;AAAK,QAAIJ,IAAEC,IAAEC,IAAEC,IAAEC;AAAA,EAAC;AAAC;;;ACGnyB,IAAMK,+BAA+B;AAMrC,IAAMC,SAAS;;;ACMf,SAASC,eAAgB;EAAEC;AAAK,GAAI;AAC1C,SAAOA,KAAKC,QAASC,8BAA8B,EAAG;AACvD;;;ACJO,SAASC,YAAaC,QAAQ,CAAC,GAAGC,QAAS;AACjD,UAASA,OAAOC,MAAI;IACnB,KAAK;AACJ,aAAO;QACN,GAAGF;;QAEH,GAAGC,OAAOF,YAAYI,OACrB,CAAEC,gBAAgBF,UAAY;UAC7B,GAAGE;UACH,CAAEF,KAAKG,IAAI,GAAIH;QAChB,IACA,CAAC,CACF;MACD;IACD,KAAK;AACJ,aAAOI,OAAOC,YACbD,OAAOE,QAASR,KAAM,EAAES,OACvB,CAAE,CAAEC,GAAG,MAAQ,CAAET,OAAOU,MAAMC,SAAUF,GAAI,CAC7C,CACD;EACF;AAEA,SAAOV;AACR;AAEA,IAAA,kBAAea,gBAAiB;EAAEd;AAAY,CAAE;;;ACtChD;;;;;;;AAsCO,IAAMe,iBAAiBC,eAC3BC,WAAWC,OAAOC,OAAQF,MAAMG,WAAY,GAC5CH,WAAW,CAAEA,MAAMG,WAAW,CACjC;AAsCO,SAASC,cAAeJ,OAAOK,MAAO;AAC5C,SAAOL,MAAMG,YAAaE,IAAI;AAC/B;AA8BO,SAASC,4BAA6BN,OAAOO,oBAAqB;AACxE,QAAMJ,eAAcL,eAAgBE,KAAM;AAC1C,SACCG,aAAYK,KAAM,CAAE;IAAEC;IAAWC;EAAQ,MAAO;AAC/C,WAAOD,cAAc,QAAQF,uBAAuBG;EACrD,CAAE,KACFP,aAAYK,KAAM,CAAE;IAAEC;IAAWC;EAAQ,MAAO;AAC/C,WAAOD,cAAc,QAAQ,QAAQC;EACtC,CAAE;AAEJ;AA6BO,SAASC,0BAA2BX,OAAOY,kBAAmB;AACpE,SAAOd,eAAgBE,KAAM,EAAEQ,KAAM,CAAE;IAAEC;EAAU,MAAO;AACzD,QAAKA,cAAc,MAAO;AACzB,aAAO;IACR;AAEA,WAAO,IAAKG,gBAAgB,IAAKC,QAAS,IAAKJ,SAAS,GAAK,KAAK;EACnE,CAAE;AACH;;;AC9JA;;;;;AAWO,SAASK,eAAgBC,cAAc;AAC7C,SAAO;IACNC,MAAM;IACND,aAAaE,MAAMC,QAASH,YAAY,IACrCA,eACA,CAAEA,YAAW;EACjB;AACD;AAaO,SAASI,kBAAmBC,OAAQ;AAC1C,SAAO;IACNJ,MAAM;IACNI,OAAOH,MAAMC,QAASE,KAAM,IAAIA,QAAQ,CAAEA,KAAK;EAChD;AACD;;;ACxBA,IAAMC,aAAa;AASZ,IAAMC,QAAQC,iBAAkBF,YAAY;EAClDG;EACAC;EACAC;AACD,CAAE;AAEFC,SAAUL,KAAM;;;ACfT,SAASM,cAAe;EAAEC;AAAe,GAAGC,MAAO;AAKzD,MAAK,CAAEF,cAAcG,MAAO;AAC3BH,kBAAcG,OAAOF,eAAeG,mBAAoB,EAAG,EAAED;EAC9D;AAEAH,gBAAcG,KAAKE,YAAYH;AAE/B,SAAOF,cAAcG;AACtB;;;ACdO,SAASG,cAAeC,SAASC,SAAU;AAEjD,MAAKD,YAAYC,SAAU;AAC1B,WAAO;EACR;AAGA,MAAK,CAAED,WAAW,CAAEC,SAAU;AAC7B,WAAO;EACR;AAEA,MAAKD,QAAQE,SAASD,QAAQC,MAAO;AACpC,WAAO;EACR;AAEA,QAAMC,cAAcH,QAAQI;AAC5B,QAAMC,cAAcJ,QAAQG;AAG5B,MAAKD,gBAAgBE,aAAc;AAClC,WAAO;EACR;AAGA,MAAK,CAAEF,eAAe,CAAEE,aAAc;AACrC,WAAO;EACR;AAEA,QAAMC,QAAQC,OAAOC,KAAML,WAAY;AACvC,QAAMM,QAAQF,OAAOC,KAAMH,WAAY;AAEvC,MAAKC,MAAMI,WAAWD,MAAMC,QAAS;AACpC,WAAO;EACR;AAEA,QAAMA,SAASJ,MAAMI;AAGrB,WAAUC,KAAI,GAAGA,KAAID,QAAQC,MAAM;AAClC,UAAMC,OAAON,MAAOK,EAAC;AAErB,QAAKR,YAAaS,IAAI,MAAOP,YAAaO,IAAI,GAAK;AAClD,aAAO;IACR;EACD;AAEA,SAAO;AACR;;;ACzCO,SAASC,iBAAkBC,OAAQ;AACzC,QAAMC,aAAaD,MAAME,QAAQC,MAAM;AAEvCF,aAAWG,QAAS,CAAEC,gBAAgBC,UAAW;AAChD,UAAMC,yBAAyBN,WAAYK,QAAQ,CAAC;AAEpD,QAAKC,wBAAyB;AAC7B,YAAMC,oBAAoBH,eAAeF,MAAM;AAE/CK,wBAAkBJ,QAAS,CAAEK,QAAQC,gBAAiB;AACrD,cAAMC,iBAAiBJ,uBAAwBG,WAAW;AAE1D,YAAKE,cAAeH,QAAQE,cAAe,GAAI;AAC9CH,4BAAmBE,WAAW,IAAKC;QACpC;MACD,CAAE;AAEFV,iBAAYK,KAAK,IAAKE;IACvB;EACD,CAAE;AAEF,SAAO;IACN,GAAGR;IACHE,SAASD;EACV;AACD;;;ACvBO,SAASY,UAAWC,IAAGC,IAAI;AACjCD,EAAAA,GAAEE,UAAUF,GAAEE,QAAQC,OAAQF,GAAEC,OAAQ;AACxCF,EAAAA,GAAEI,eAAeJ,GAAEI,aAAaD,OAAQF,GAAEG,YAAa;AACvDJ,EAAAA,GAAEK,QAAQJ,GAAEI;AAEZ,SAAOL;AACR;;;ACPO,SAASM,iBAAkBC,OAAOC,wBAAuB,CAAA,GAAK;AACpE,QAAM;IAAEC;IAASC;IAAOC;IAAKC;EAAc,IAAIL;AAC/C,MAAKG,UAAUG,QAAY;AAC1B,WAAOL;EACR;AAEA,MAAKE,UAAUC,KAAM;AAEpB,QAAKC,eAAgB;AACpB,aAAOA;IACR;AAEA,UAAME,gBAAgBL,QAASC,QAAQ,CAAC,KAAMF;AAC9C,UAAMO,eAAeN,QAASC,KAAK,KAAMF;AAKzC,QAAKM,cAAcE,SAASD,aAAaC,QAAS;AACjD,aAAOF;IACR;AAEA,WAAOC;EACR;AAGA,MAAK,CAAEN,QAASC,KAAK,GAAK;AACzB,WAAOF;EACR;AAEA,QAAMS,kBAAkBR,QAAQS,MAAOR,OAAOC,GAAI;AAGlD,QAAMQ,iBAAiB,CAAE,GAAGF,gBAAiB,CAAC,CAAE;AAChD,MAAIG,KAAIH,gBAAgBD;AAIxB,SAAQI,MAAM;AACb,UAAMC,iBAAiBJ,gBAAiBG,EAAC;AAIzC,QAAK,CAAEC,gBAAiB;AACvB,aAAOb;IACR;AAEA,QAAIc,KAAKH,eAAeH;AAIxB,WAAQM,MAAO;AACd,YAAMC,SAASJ,eAAgBG,EAAE;AAEjC,UACC,CAAED,eAAeG,KAAQC,aACxBC,cAAeH,QAAQE,OAAQ,CAChC,GACC;AACDN,uBAAeQ,OAAQL,IAAI,CAAE;MAC9B;IACD;AAGA,QAAKH,eAAeH,WAAW,GAAI;AAClC,aAAOR;IACR;EACD;AAEA,SAAOW,kBAAkBX;AAC1B;;;ACrEO,SAASoB,eAAeC,MAAO;AACrC,SAAOC,OAAQC,KAAc,EAAEH,cAAeC,IAAK;AACpD;;;ACZA,SAASG,oBAAqBC,YAAYC,gBAAiB;AAC1D,MAAKA,gBAAiB;AACrB,WAAOD;EACR;AAEA,QAAME,gBAAgB,CAAC;AAEvB,aAAYC,OAAOH,YAAa;AAC/B,QAAII,SAASD;AACb,QAAKA,IAAIE,WAAY,yBAA0B,GAAI;AAClDD,eAASD,IAAIG,MAAO,0BAA0BC,MAAO;IACtD;AAEAL,kBAAeE,MAAM,IAAKJ,WAAYG,GAAG;EAC1C;AAEA,SAAOD;AACR;AAoBA,SAASM,WAAY;EACpBC;EACAC;EACAV;EACAW;EACAC;EACAC;EACAZ;AACD,GAAI;AACH,QAAMa,aAAaC,eAAeN,IAAK;AAEvC,MAAIO,oBAAoB,CAAC;AAEzB,MAAKH,iBAAiBZ,gBAAiB;AACtCe,sBAAmB,gCAAgC,IAAK;EACzD;AAEA,MAAK,CAAEF,YAAa;AACnB,QAAKd,YAAa;AACjBgB,0BAAoB;QAAE,GAAGhB;QAAY,GAAGgB;MAAkB;IAC3D;AAEA,WAAO;MACNP;MACAT,YAAYD,oBACXiB,mBACAf,cACD;MACAW;IACD;EACD;AAEAI,sBAAoB;IAAE,GAAGL;IAAwB,GAAGK;EAAkB;AAEtE,aAAYC,QAAQjB,YAAa;AAChC,UAAMG,MAAMW,WAAWd,aACpBc,WAAWd,WAAYiB,IAAI,IAC3B;AAEH,QAAKd,KAAM;AACVa,wBAAmBb,GAAG,IAAKH,WAAYiB,IAAI;IAC5C,OAAO;AACND,wBAAmBC,IAAI,IAAKjB,WAAYiB,IAAI;IAC7C;EACD;AAEA,MAAKH,WAAWI,WAAY;AAC3B,QAAKF,kBAAkBG,OAAQ;AAC9BH,wBAAkBG,QAAQ,GAAIL,WAAWI,SAAS,IAAMF,kBAAkBG,KAAK;IAChF,OAAO;AACNH,wBAAkBG,QAAQL,WAAWI;IACtC;EACD;AAIA,MAAKjB,kBAAkBa,WAAWM,oBAAoB,OAAQ;AAC7DJ,sBAAkBK,kBAAkB;EACrC;AAEA,SAAO;IACNZ,MAAMC,WAAWI,WAAWJ;IAC5BE,QAAQE,WAAWF;IACnBZ,YAAYD,oBAAqBiB,mBAAmBf,cAAe;EACpE;AACD;AASA,SAASqB,aAAcC,IAAGC,IAAGC,OAAQ;AACpC,KAAG;AACF,QAAKF,GAAGE,KAAK,MAAOD,GAAGC,KAAK,GAAK;AAChC,aAAO;IACR;EACD,SAAUA;AAEV,SAAO;AACR;AAEO,SAASC,OAAQ;EACvBC;EACAC;EACAC,aAAAA;EACAC,QAAAA;EACAC,cAAAA;EACAC,WAAAA;EACAC,QAAAA;EACAC,SAAAA;EACAC,QAAAA;EACAC,YAAAA;EACAC;EACAC;EACArC;EACAsC;AACD,GAAI;AACH,QAAM;IAAEC;IAASC;IAAcC;IAAMC;IAAOC;EAAI,IAAIjB;AACpD,QAAMkB,gBAAgBL,QAAQjC,SAAS;AACvC,QAAMuC,OAAOjB,aAAY;AACzB,QAAMkB,gBAAgBC,iBAAkBrB,KAAM;AAC9C,QAAMsB,sBAAsBF,cAAeA,cAAcxC,SAAS,CAAC;AAEnE,MAAI2C;AACJ,MAAIC;AAEJrB,EAAAA,QAAQgB,MAAM,EAAG;AAEjB,WAAUM,KAAI,GAAGA,KAAIP,eAAeO,MAAM;AACzC,UAAMC,YAAYX,KAAKY,OAAQF,EAAE;AACjC,UAAMG,sBACLtD;KAEE,CAAEkD;;IAGHA,kBAAkB;AAEpB,UAAMK,mBAAmBhB,QAASY,EAAC;AACnC,QAAIK,UAAU1B,cAAce,IAAK;AAEjC,QAAKU,kBAAmB;AACvBA,uBAAiBE,QAAS,CAAEC,QAAQC,gBAAiB;AACpD,YACCH,WACAP;QAEA5B,aACCkC,kBACAN,sBACAU,WACD,GACC;AACDH,oBAAU1B,cAAc0B,OAAQ;AAChC;QACD;AAEA,cAAM;UAAEhD;UAAMC;UAASV;UAAYW;QAAuB,IACzDgD;AAED,cAAM9C,gBACLZ,kBAAkB0D,WAAWV;AAE9B,cAAMY,SAAS7B,WAAWyB,OAAQ;AAClC,cAAMK,UAAUhC,QACf+B,QACArD,WAAY;UACXC;UACAC;UACAV;UACAW;UACAE;UACAZ;QACD,CAAE,CACH;AAEA,YAAKgC,QAAQwB,OAAQ,KAAKvB,SAASuB,OAAQ,EAAElD,WAAW,GAAI;AAC3D4B,UAAAA,QAAQsB,OAAQ;QACjB;AAEAA,kBAAU3B,QAAQgC,SAAS,EAAG;MAC/B,CAAE;IACH;AAGA,QAAKV,OAAM,GAAI;AACd,UAAKf,gBAAgBM,UAAU,GAAI;AAClCN,qBAAcS,MAAMW,OAAQ;MAC7B;AAEA,UAAKnB,cAAcM,QAAQ,GAAI;AAC9BN,mBAAYQ,MAAMW,OAAQ;MAC3B;IACD;AAEA,QAAKJ,cAAcU,8BAA+B;AACjD,YAAMC,cAAcvB,aAAcW,EAAC;AACnC,UAAK,CAAEY,aAAc;AACpB;MACD;AACA,YAAM;QAAEvD;QAAMT;QAAYiE;MAAU,IAAID;AACxC,YAAMlD,aAAaC,eAAeN,IAAK;AAEvC,UAAKR,kBAAkBQ,SAAS,YAAa;AAC5CgD,kBAAU3B,QAAQE,WAAWyB,OAAQ,GAAG;UACvChD,MAAM;UACNT,YAAY;YACXqB,iBAAiB;YACjB,0BACCrB,WAAY,wBAAwB;UACtC;QACD,CAAE;AACF8B,QAAAA,QACCA,QAAQ2B,SAAS;UAAEhD,MAAM;QAAO,CAAE,GAClCT,WAAY,wBAAwB,EAAGkE,KAAK,CAC7C;MACD,WAAY,CAAEjE,kBAAkBQ,SAAS,UAAW;AACnDgD,kBAAU3B,QACTE,WAAWyB,OAAQ,GACnBjD,WAAY;UACXC,MAAM;UACNR;QACD,CAAE,CACH;AACA6B,QAAAA,QAAQ2B,SAAS;UAChBU,MAAMC,mBACLpE,WAAY,uBAAuB,CACpC;QACD,CAAE;MACH,YAAYc,yCAAYM,qBAAoB,OAAQ;AAEnDqC,kBAAU3B,QACTE,WAAWyB,OAAQ,GACnBjD,WAAY;UACX,GAAGwD;UACH/D;UACAY,eAAe8B,UAAUS,MAAKR,QAAQQ,KAAI;QAC3C,CAAE,CACH;AAEA,YAAKa,WAAY;AAChBnC,UAAAA,QAAQ2B,SAAS;YAChBU,MAAMF;UACP,CAAE;QACH;MACD,OAAO;AACNR,kBAAU3B,QACTE,WAAWyB,OAAQ,GACnBjD,WAAY;UACX,GAAGwD;UACHpD,QAAQ;UACRX;QACD,CAAE,CACH;MACD;AAEAwD,gBAAU3B,QAAQE,WAAWyB,OAAQ,GAAG,EAAG;IAC5C,WAAY,CAAE7B,sBAAsByB,cAAc,MAAO;AACxDI,gBAAU3B,QAAQE,WAAWyB,OAAQ,GAAG;QACvChD,MAAM;QACNT,YAAYC,iBACT;UACA,6BAA6B;QAC7B,IACAoE;QACHzD,QAAQ;MACT,CAAE;AAEF6C,gBAAU3B,QAAQE,WAAWyB,OAAQ,GAAG,EAAG;IAC5C,WAAY,CAAExB,QAAQwB,OAAQ,GAAI;AACjCA,gBAAU3B,QAAQE,WAAWyB,OAAQ,GAAGJ,SAAU;IACnD,OAAO;AACNjB,MAAAA,YAAYqB,SAASJ,SAAU;IAChC;AAEA,QAAKhB,gBAAgBM,UAAUS,KAAI,GAAI;AACtCf,mBAAcS,MAAMW,OAAQ;IAC7B;AAEA,QAAKnB,cAAcM,QAAQQ,KAAI,GAAI;AAClCd,iBAAYQ,MAAMW,OAAQ;IAC3B;AAEA,QAAKF,uBAAuBH,OAAMV,KAAKnC,QAAS;AAC/CuB,MAAAA,QAAQE,WAAWyB,OAAQ,GAAGa,MAAO;AAIrC,UAAK/B,eAAeG,KAAKnC,WAAW,GAAI;AACvCuB,QAAAA,QAAQE,WAAWyB,OAAQ,GAAG;UAC7BhD,MAAM;UACNT,YAAY;YACX,8BAA8BuC;;;YAG9BgC,OAAO;UACR;QACD,CAAE;MACH;IACD;AAEArB,2BAAuBM;AACvBL,oBAAgBE;EACjB;AAEA,SAAOP;AACR;;;ACnTO,SAAS0B,aAAc;EAAEC;EAAOC;AAAmB,GAAI;AAC7D,QAAMC,OAAOC,OAAQ;IACpBH;IACAC;IACAG;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACD,CAAE;AAEF,SAAOC,mBAAoBV,KAAKW,QAAS;AAC1C;AAEA,SAAST,cAAc;AACtB,SAAO,CAAC;AACT;AAEA,SAASE,aAAc;EAAEO;AAAS,GAAI;AACrC,SAAOA,YAAYA,SAAUA,SAASC,SAAS,CAAC;AACjD;AAEA,SAAST,OAAQU,QAAQC,QAAS;AACjC,MAAK,OAAOA,WAAW,UAAW;AACjCA,aAAS;MAAEC,MAAMD;IAAO;EACzB;AAEAA,SAAOD,SAASA;AAChBA,SAAOF,WAAWE,OAAOF,YAAY,CAAA;AACrCE,SAAOF,SAASK,KAAMF,MAAO;AAC7B,SAAOA;AACR;AAEA,SAASL,WAAYK,QAAQC,MAAO;AACnCD,SAAOC,QAAQA;AAChB;AAEA,SAASV,UAAW;EAAEQ;AAAO,GAAI;AAChC,SAAOA;AACR;AAEA,SAASP,OAAQ;EAAES;AAAK,GAAI;AAC3B,SAAO,OAAOA,SAAS;AACxB;AAEA,SAASR,QAAS;EAAEQ;AAAK,GAAI;AAC5B,SAAOA;AACR;AAEA,SAASP,OAAQM,QAAS;AACzB,QAAMG,QAAQH,OAAOD,OAAOF,SAASO,QAASJ,MAAO;AAErD,MAAKG,UAAU,IAAK;AACnBH,WAAOD,OAAOF,SAASQ,OAAQF,OAAO,CAAE;EACzC;AAEA,SAAOH;AACR;AAEA,SAASM,kBAAmB;EAAEC;EAAMC;EAAYR;EAAQH;AAAS,GAAI;AACpE,MAAKU,SAAS,YAAa;AAM1B,WAAO,OAAQC,WAAY,wBAAwB,CAAE;EACtD;AAEA,MAAIC,kBAAkB;AAEtB,aAAYC,OAAOF,YAAa;AAC/B,QAAK,CAAEG,qBAAsBD,GAAI,GAAI;AACpC;IACD;AAEAD,uBAAmB,IAAKC,GAAG,KAAOE,gBACjCJ,WAAYE,GAAG,CAChB,CAAC;EACF;AAEA,MAAKV,QAAS;AACb,WAAO,IAAKO,IAAI,GAAKE,eAAe;EACrC;AAEA,SAAO,IAAKF,IAAI,GAAKE,eAAe,IAAMb,mBACzCC,QACD,CAAC,KAAOU,IAAI;AACb;AAEA,SAASX,mBAAoBC,WAAW,CAAA,GAAK;AAC5C,SAAOA,SACLgB,IAAOC,WAAW;AAClB,QAAKA,MAAMC,SAASC,QAAY;AAC/B,aAAOF,MAAMC;IACd;AAEA,WAAOD,MAAMb,SAASe,SACnBV,kBAAmBQ,KAAM,IACzBG,mBAAoBH,MAAMb,IAAK;EACnC,CAAE,EACDiB,KAAM,EAAG;AACZ;;;ACnHA,SAASC,mBAAmB;AAC3B,SAAO;IACNC,SAAS,CAAA;IACTC,cAAc,CAAA;IACdC,MAAM;EACP;AACD;AAEA,SAASC,SAAU;EAAEC;EAASC;AAAW,GAAI;AAC5C,MAAIC;AAEJ,MAAKD,cAAcA,WAAWE,OAAQ;AACrCD,iBAAaE,OAAQC,KAAc,EAAEC,0BACpCL,WAAWE,KACZ;AAEA,QAAKD,YAAa;AAEjBD,iBAAWE,QAAQ,IAAKF,WAAWE,KAAK,IACtCI,QAAS,IAAKL,WAAWM,SAAS,KAAM,GAAI,EAC5CC,KAAK;AAEP,UAAK,CAAER,WAAWE,OAAQ;AACzB,eAAOF,WAAWE;MACnB;IACD;EACD;AAEA,MAAK,CAAED,YAAa;AACnBA,iBACCE,OAAQC,KAAc,EAAEK,4BAA6BV,OAAQ;EAC/D;AAEA,MAAK,CAAEE,YAAa;AACnB,WAAOD,aAAa;MAAEU,MAAMX;MAASC;IAAW,IAAI;MAAEU,MAAMX;IAAQ;EACrE;AAEA,MACCE,WAAWU,2CACX,CAAEV,WAAWW,2CACZ;AACD,WAAO;EACR;AAEA,MAAK,CAAEZ,YAAa;AACnB,WAAO;MAAEC;MAAYS,MAAMT,WAAWY;MAAMd;IAAQ;EACrD;AAEA,QAAMe,uBAAuB,CAAC;AAC9B,QAAMC,yBAAyB,CAAC;AAChC,QAAMC,cAAc;IAAE,GAAGhB;EAAW;AAEpC,aAAYiB,OAAOhB,WAAWD,YAAa;AAC1C,UAAMa,OAAOZ,WAAWD,WAAYiB,GAAG;AAEvCH,yBAAsBG,GAAG,IAAKD,YAAaH,IAAI;AAI/C,WAAOG,YAAaH,IAAI;AAExB,QAAK,OAAOC,qBAAsBG,GAAG,MAAO,aAAc;AACzD,aAAOH,qBAAsBG,GAAG;IACjC;EACD;AAEA,aAAYJ,QAAQG,aAAc;AACjCD,2BAAwBF,IAAI,IAAKb,WAAYa,IAAI;EAClD;AAEA,MAAKZ,WAAWiB,oBAAoB,OAAQ;AAC3C,WAAOH,uBAAuBI;EAC/B;AAEA,SAAO;IACNlB;IACAS,MAAMT,WAAWY;IACjBd;IACAC,YAAYc;IACZC;EACD;AACD;AAlGA;AAmHO,IAAMK,gBAAN,MAAMA,cAAa;EA8BzBC,YAAaC,OAAO5B,iBAAiB,GAAI;AA7BzC;AA8BC,uBAAK,QAAS4B;EACf;EA7BA,OAAOC,QAAQ;AACd,WAAO,IAAIH,cAAa;EACzB;EACA,OAAOI,cAAe3B,MAAO;AAC5B,WAAO,IAAIuB,cAAcK,OAAQ;MAAE5B;IAAK,CAAE,CAAE;EAC7C;EACA,OAAO6B,eAAgBC,MAAO;AAC7B,WAAO,IAAIP,cAAcK,OAAQ;MAAEE;IAAK,CAAE,CAAE;EAC7C;;;;;;;;EAQA,OAAOC,gBAAiBC,aAAaC,UAAU,CAAC,GAAI;AACnD,UAAM;MAAEC,qBAAqB;IAAM,IAAID;AACvC,UAAME,UAAUD,qBACbF,cACAI,mBAAoBJ,WAAY;AACnC,UAAMK,eAAe,IAAId,cAAcK,OAAQ;MAAEO;IAAQ,CAAE,CAAE;AAC7DG,WAAOC,eAAgBF,cAAc,gBAAgB;MACpDG,OAAOR,YAAYS;IACpB,CAAE;AACF,WAAOJ;EACR;EAIAK,cAAc;AACb,WAAOC,eAAgB,mBAAK,OAAO;EACpC;;;;;;;;;EASAC,aAAc;IAAEV;EAAmB,IAAI,CAAC,GAAI;AAC3C,WACC,KAAKW,gBACLD,aAAc;MAAEJ,OAAO,mBAAK;MAAQN;IAAmB,CAAE;EAE3D;EACAY,UAAU;AACT,WAAO,KAAKF,aAAa;EAC1B;EACAG,WAAW;AACV,WAAO,KAAKH,aAAa;EAC1B;EACAI,SAAS;AACR,WAAO,KAAKJ,aAAa;EAC1B;EACA,IAAIK,SAAS;AACZ,WAAO,KAAKjD,KAAKiD;EAClB;EACA,IAAInD,UAAU;AACb,WAAO,mBAAK,QAAOA;EACpB;EACA,IAAIC,eAAe;AAClB,WAAO,mBAAK,QAAOA;EACpB;EACA,IAAIC,OAAO;AACV,WAAO,mBAAK,QAAOA;EACpB;AACD;AAtEC;AADM,IAAMuB,eAAN;AAyEP,WAAYP,QAAQsB,OAAOY,oBAAqBC,OAAOC,SAAU,GAAI;AACpE,MAAK7B,aAAa6B,UAAUC,eAAgBrC,IAAK,GAAI;AACpD;EACD;AAEAsB,SAAOC,eAAgBhB,aAAa6B,WAAWpC,MAAM;IACpDwB,SAAUc,MAAO;AAEhB,aAAO,KAAKV,aAAa,EAAG5B,IAAI,EAAI,GAAGsC,IAAK;IAC7C;EACD,CAAE;AACH;AAoCO,SAAS1B,OAAQ;EACvBO;EACAnC;EACA8B;EACAyB;EACAC,0BAA0BC;AAC3B,IAAI,CAAC,GAAI;AACR,MAAK3B,gBAAgBP,cAAe;AACnC,WAAO;MACNvB,MAAM8B,KAAK9B;MACXF,SAASgC,KAAKhC;MACdC,cAAc+B,KAAK/B;IACpB;EACD;AAEA,MAAK,OAAOC,SAAS,YAAYA,KAAKiD,SAAS,GAAI;AAClD,WAAO;MACNnD,SAAS4D,MAAO1D,KAAKiD,MAAO;MAC5BlD,cAAc2D,MAAO1D,KAAKiD,MAAO;MACjCjD;IACD;EACD;AAEA,MAAK,OAAO8B,SAAS,YAAYA,KAAKmB,SAAS,GAAI;AAGlDd,cAAUwB,cAAeC,UAAU9B,IAAK;EACzC;AAEA,MAAK,OAAOK,YAAY,UAAW;AAClC,WAAOtC,iBAAiB;EACzB;AAEA,SAAOgE,kBAAmB;IACzB1B;IACAoB;IACAE;EACD,CAAE;AACH;AAWA,SAASK,oBAAqBC,aAAaC,MAAMT,OAAOf,OAAQ;AAC/D,MAAK,CAAEe,OAAQ;AACd;EACD;AAEA,QAAM;IAAEU;EAAW,IAAID;AACvB,QAAM;IAAEE;IAAgBC;IAAaC;IAAcC;EAAU,IAAId;AACjE,QAAMe,gBAAgBP,YAAY/D,KAAKiD;AAGvC,MAAKT,MAAM+B,UAAUC,QAAY;AAChCT,gBAAYQ,QAAQD,gBAAgB9B,MAAM+B;EAE3C,WAAYP,SAASE,kBAAkBF,KAAKS,aAAaT,KAAKU,WAAY;AACzEX,gBAAYQ,QAAQD,gBAAgBH;EAErC,WACCF,eAAeC,kBACfF,SAASE,eAAeS,WAAYR,WAAW,GAC9C;AACDJ,gBAAYQ,QAAQD;EAErB,WACCL,eAAeC,kBACfF,SAASE,eAAeS,WAAYR,cAAc,CAAC,GAClD;AACDJ,gBAAYQ,QAAQD,gBAAgB9B,MAAMxC,KAAKiD;EAEhD,WAAYe,SAASE,gBAAiB;AACrCH,gBAAYQ,QAAQD;EACrB;AAGA,MAAK9B,MAAMoC,QAAQJ,QAAY;AAC9BT,gBAAYa,MAAMN,gBAAgB9B,MAAMoC;EAEzC,WAAYZ,SAASI,gBAAgBJ,KAAKS,aAAaT,KAAKU,WAAY;AACvEX,gBAAYa,MAAMN,gBAAgBD;EAEnC,WACCJ,eAAeG,gBACfJ,SAASI,aAAaO,WAAYN,YAAY,CAAC,GAC9C;AACDN,gBAAYa,MAAMN,gBAAgB9B,MAAMxC,KAAKiD;EAE9C,WACCgB,eAAeG,gBACfJ,SAASI,aAAaO,WAAYN,SAAS,GAC1C;AACDN,gBAAYa,MAAMN;EAEnB,WAAYN,SAASI,cAAe;AACnCL,gBAAYa,MAAMN,gBAAgBD;EACnC;AACD;AAWA,SAASQ,YAAab,MAAMT,OAAOuB,QAAS;AAC3C,MAAK,CAAEvB,OAAQ;AACd;EACD;AAEA,QAAM;IAAEW;IAAgBE;EAAa,IAAIb;AACzC,MAAI;IAAEY;IAAaE;EAAU,IAAId;AAEjC,MAAKS,SAASE,gBAAiB;AAC9BC,kBAAcW,OAAQd,KAAKe,UAAUC,MAAO,GAAGb,WAAY,CAAE,EAAElB;EAChE;AAEA,MAAKe,SAASI,cAAe;AAC5BC,gBAAYS,OAAQd,KAAKe,UAAUC,MAAO,GAAGX,SAAU,CAAE,EAAEpB;EAC5D;AAEA,SAAO;IAAEiB;IAAgBC;IAAaC;IAAcC;EAAU;AAC/D;AAmBA,SAASjC,mBAAoBD,SAAS8C,SAAS,MAAO;AACrD,QAAMC,QAAQ/C,QAAQgD,UAAW,IAAK;AACtCD,QAAME,UAAU;AAChB1B,QAAM2B,KAAMH,MAAMP,UAAW,EAAEW,QAAS,CAAEtB,MAAMuB,IAAGC,UAAW;AAC7D,QAAKxB,KAAKS,aAAaT,KAAKU,WAAY;AACvC,UAAIe,eAAezB,KAAKe;AAExB,UAAK,aAAaW,KAAMD,YAAa,GAAI;AACxCA,uBAAeA,aAAahF,QAAS,gBAAgB,GAAI;MAC1D;AAEA,UAAKgF,aAAaE,QAAS,IAAK,MAAM,IAAK;AAC1CF,uBAAeA,aAAahF,QAAS,UAAU,GAAI;MACpD;AAEA,UAAK8E,OAAM,KAAKE,aAAaG,WAAY,GAAI,GAAI;AAChDH,uBAAeA,aAAaT,MAAO,CAAE;MACtC,WACCC,UACAM,OAAMC,MAAMvC,SAAS,KACrBwC,aAAaI,SAAU,GAAI,GAC1B;AACDJ,uBAAeA,aAAaT,MAAO,GAAG,EAAG;MAC1C;AAEAhB,WAAKe,YAAYU;IAClB,WAAYzB,KAAKS,aAAaT,KAAK8B,cAAe;AACjD1D,yBAAoB4B,MAAM,KAAM;IACjC;EACD,CAAE;AACF,SAAOkB;AACR;AAOA,IAAMa,kBAAkB;AAQjB,SAASC,yBAA0BC,QAAS;AAGlD,SAAOA,OAAOxF,QACb,IAAIyF,OACH,IAAKC,MAAM,GAAKC,4BAA4B,GAAKL,eAAe,KAChE,IACD,GACA,EACD;AACD;AAYA,SAASlC,kBAAmB;EAAE1B;EAASoB;EAAOE;AAAe,GAAI;AArcjE;AAscC,QAAMM,cAAclE,iBAAiB;AAErC,MAAK,CAAEsC,SAAU;AAChB,WAAO4B;EACR;AAEA,MAAK,CAAE5B,QAAQkE,cAAc,GAAI;AAChCvC,wBAAqBC,aAAa5B,SAASoB,OAAO1D,iBAAiB,CAAE;AACrE,WAAOkE;EACR;AAEA,QAAMd,SAASd,QAAQwC,WAAW1B;AAGlC,WAAUqD,QAAQ,GAAGA,QAAQrD,QAAQqD,SAAU;AAC9C,UAAMtC,OAAO7B,QAAQwC,WAAY2B,KAAK;AACtC,UAAMpG,UAAU8D,KAAKuC,SAASC,YAAY;AAE1C,QAAKxC,KAAKS,aAAaT,KAAKU,WAAY;AACvC,YAAM1E,OAAOgG,yBAA0BhC,KAAKe,SAAU;AACtDxB,cAAQsB,YAAab,MAAMT,OAAOyC,wBAAyB;AAC3DlC,0BAAqBC,aAAaC,MAAMT,OAAO;QAAEvD;MAAK,CAAE;AAGxD+D,kBAAYjE,QAAQmD,UAAUjD,KAAKiD;AACnCc,kBAAYhE,aAAakD,UAAUjD,KAAKiD;AACxCc,kBAAY/D,QAAQA;AACpB;IACD;AAEA,QACCgE,KAAKS,aAAaT,KAAKyC,gBACrBzC,KAAKS,aAAaT,KAAK8B,gBACxB9B,KAAK9D,YAAY,UACjB8D,KAAK0C,aAAc,wBAAyB,GAC5C;AACD,YAAMlE,SAAQ;QACb1C,SAAS,CAAA,CAAA;QACTC,cAAc,CACb;UACCc,MAAM;UACNV,YAAY;YACX,0BACC6D,KAAKS,aAAaT,KAAKyC,eACpBzC,KAAKe,YACLf,KAAK2C,aACL,wBACA;UACL;QACD,CAAC;QAEF3G,MAAMoG;MACP;AACAtC,0BAAqBC,aAAaC,MAAMT,OAAOf,MAAM;AACrDoE,gBAAW7C,aAAavB,MAAM;AAC9B;IACD;AAEA,QAAKwB,KAAKS,aAAaT,KAAK8B,cAAe;AAC1C;IACD;AAEA,QACCrC;IAEAvD,YAAY,QACZ,CAAE8D,KAAK2C,aAAc,2BAA4B,GAChD;AACD7C,0BAAqBC,aAAaC,MAAMT,OAAO1D,iBAAiB,CAAE;AAClE;IACD;AAEA,QAAKK,YAAY,UAAW;AAC3B,YAAMsC,SAAQ;QACb1C,SAAS,CAAA,CAAA;QACTC,cAAc,CACb;UACCc,MAAMX;UACNC,YAAY;YACX,yBACC6D,KAAK2C,aAAc,uBAAwB,KAC3CE,mBAAoB7C,KAAKvB,SAAU;UACrC;QACD,CAAC;QAEFzC,MAAMoG;MACP;AACAtC,0BAAqBC,aAAaC,MAAMT,OAAOf,MAAM;AACrDoE,gBAAW7C,aAAavB,MAAM;AAC9B;IACD;AAEA,QAAKtC,YAAY,MAAO;AACvB4D,0BAAqBC,aAAaC,MAAMT,OAAO1D,iBAAiB,CAAE;AAClE+G,gBAAW7C,aAAanC,OAAQ;QAAE5B,MAAM;MAAK,CAAE,CAAE;AACjD;IACD;AAEA,UAAM8G,SAAS7G,SAAU;MACxBC;MACAC,YAAY4G,cAAe;QAAE5E,SAAS6B;MAAK,CAAE;IAC9C,CAAE;AAIF,UAAK8C,sCAAQ1G,eAAR0G,mBAAoBzF,qBAAoB,OAAQ;AACpD,aAAOyF,OAAO1G;AACd0D,0BAAqBC,aAAaC,MAAMT,OAAO1D,iBAAiB,CAAE;AAClE+G,gBAAW7C,aAAa;QACvBjE,SAAS,CAAA,CAAA;QACTC,cAAc,CACb;UACC,GAAG+G;UACHrE,WAAWuB,KAAKvB;QACjB,CAAC;QAEFzC,MAAMoG;MACP,CAAE;AACF;IACD;AAEA,QAAKU,QAAS;AACb,aAAOA,OAAO1G;IACf;AAEA,UAAMoC,QAAQqB,kBAAmB;MAChC1B,SAAS6B;MACTT;MACAE;IACD,CAAE;AAEFK,wBAAqBC,aAAaC,MAAMT,OAAOf,KAAM;AAIrD,QAAK,CAAEsE,UAAU9C,KAAK2C,aAAc,4BAA6B,GAAI;AACpEC,gBAAW7C,aAAavB,KAAM;IAC/B,WAAYA,MAAMxC,KAAKiD,WAAW,GAAI;AACrC,UAAK6D,OAAO3G,YAAa;AACxByG,kBAAW7C,aAAa;UACvBjE,SAAS,CAAA,CAAA;UACTC,cAAc,CAAE+G,MAAM;UACtB9G,MAAMoG;QACP,CAAE;MACH;IACD,OAAO;AAGN,UAASY,eAAT,SAAuBlH,SAAU;AAChC,YAAKkH,aAAalH,YAAYA,SAAU;AACvC,iBAAOkH,aAAaC;QACrB;AAEA,cAAMA,aAAanH,UAChB,CAAEgH,QAAQ,GAAGhH,OAAO,IACpB,CAAEgH,MAAM;AAEXE,qBAAalH,UAAUA;AACvBkH,qBAAaC,aAAaA;AAE1B,eAAOA;MACR;AAIAD,mBAAaC,aAAa,CAAEH,MAAM;AAElCF,gBAAW7C,aAAa;QACvB,GAAGvB;QACH1C,SAAS4D,MAAM2B,KAAM7C,MAAM1C,SAASkH,YAAa;MAClD,CAAE;IACH;EACD;AAEA,SAAOjD;AACR;AAWA,SAASgD,cAAe;EAAE5E;AAAQ,GAAI;AACrC,MAAK,CAAEA,QAAQ+E,cAAc,GAAI;AAChC;EACD;AAEA,QAAMjE,SAASd,QAAQhC,WAAW8C;AAClC,MAAIc;AAGJ,WAAUwB,KAAI,GAAGA,KAAItC,QAAQsC,MAAM;AAClC,UAAM;MAAEvE;MAAMwB;IAAM,IAAIL,QAAQhC,WAAYoF,EAAC;AAE7C,QAAKvE,KAAK2E,QAAS,iBAAkB,MAAM,GAAI;AAC9C;IACD;AAEA,UAAMwB,WAAW,OAAOzB,KAAM1E,IAAK,IAChC,4BAA4BA,OAC5BA;AAEH+C,kBAAcA,eAAe,CAAC;AAC9BA,gBAAaoD,QAAQ,IAAK3E;EAC3B;AAEA,SAAOuB;AACR;;;ACzoBO,SAASqD,YAAa;EAC5BC;EACAC;AACc,GAAyB;AACvC,MAAKD,UAAUE,UAAaD,QAAQC,QAAY;AAC/C;EACD;AAEA,SAAOF,UAAUC;AAClB;;;ACLO,SAASE,aACfC,OACAC,YACAC,aAAaF,MAAMG,OACnBC,WAAWJ,MAAMK,KAChB;AAzBF;AA0BC,QAAM;IAAEC;IAASC;EAAc,IAAIP;AACnC,QAAMQ,aAAaF,QAAQG,MAAM;AAIjC,MAAKP,eAAeE,UAAW;AAC9B,UAAMM,UAASF,gBAAYN,UAAU,MAAtBM,mBAA0BG,KACxC,CAAE;MAAEC;IAAK,MAAOA,SAASX;AAG1B,QAAKS,QAAS;AACb,cACCF,gBAAYN,UAAU,MAAtBM,mBAA0BG,KACvBE,eAAeA,cAAcH,SAE/B;AACDI,sBAAeN,YAAYN,YAAYD,UAAW;AAClDC;MACD;AAEAE;AAEA,cACCI,gBAAYJ,QAAQ,MAApBI,mBAAwBG,KACrBE,eAAeA,cAAcH,SAE/B;AACDI,sBAAeN,YAAYJ,UAAUH,UAAW;AAChDG;MACD;IACD;EACD,OAAO;AACN,aAAUW,KAAIb,YAAYa,KAAIX,UAAUW,MAAM;AAC7C,UAAKP,WAAYO,EAAC,GAAK;AACtBD,sBAAeN,YAAYO,IAAGd,UAAW;MAC1C;IACD;EACD;AAEA,SAAOe,iBAAkB;IACxB,GAAGhB;IACHM,SAASE;IACTD,gBACCA,+CAAeU,OAAQ,CAAE;MAAEL;IAAK,MAAOA,SAASX,gBAAgB,CAAA;EAClE,CAAE;AACH;AAEA,SAASa,cAAeR,SAASY,OAAOjB,YAAa;AACpD,QAAMO,aAAaF,QAASY,KAAK,EAAGD,OACnC,CAAE;IAAEL;EAAK,MAAOA,SAASX,UAC1B;AAEA,MAAKO,WAAWW,QAAS;AACxBb,YAASY,KAAK,IAAKV;EACpB,OAAO;AACN,WAAOF,QAASY,KAAK;EACtB;AACD;;;AC7DO,SAASE,OACfC,OACAC,eACAC,aAAaF,MAAMG,OACnBC,WAAWJ,MAAMK,KAChB;AACD,QAAM;IAAEC;IAASC;IAAcC;EAAK,IAAIR;AAExC,MAAK,OAAOC,kBAAkB,UAAW;AACxCA,oBAAgBQ,OAAQ;MAAED,MAAMP;IAAc,CAAE;EACjD;AAEA,QAAMS,QAAQR,aAAaD,cAAcO,KAAKG;AAE9C,SAAOC,iBAAkB;IACxBN,SAASA,QACPO,MAAO,GAAGX,UAAW,EACrBY,OAAQb,cAAcK,SAASA,QAAQO,MAAOT,QAAS,CAAE;IAC3DG,cAAcA,aACZM,MAAO,GAAGX,UAAW,EACrBY,OACAb,cAAcM,cACdA,aAAaM,MAAOT,QAAS,CAC9B;IACDI,MACCA,KAAKK,MAAO,GAAGX,UAAW,IAC1BD,cAAcO,OACdA,KAAKK,MAAOT,QAAS;IACtBD,OAAOO;IACPL,KAAKK;EACN,CAAE;AACH;;;ACxCO,SAASK,MAAOC,OAAOC,aAAaD,MAAME,OAAOC,WAAWH,MAAMI,KAAM;AAC9E,QAAM;IAAEC;IAASC;IAAcC;EAAK,IAAIP;AAExC,MAAKC,eAAeO,UAAaL,aAAaK,QAAY;AACzD,WAAO;MAAE,GAAGR;IAAM;EACnB;AAEA,SAAO;IACNK,SAASA,QAAQN,MAAOE,YAAYE,QAAS;IAC7CG,cAAcA,aAAaP,MAAOE,YAAYE,QAAS;IACvDI,MAAMA,KAAKR,MAAOE,YAAYE,QAAS;EACxC;AACD;;;ACtBe,SAAf,QAAgC;AAC/B,QAAMM,UAAUC,SAASC,uBAAwB,mBAAoB;AACrE,QAAMC,YAAYF,SAASG,eAAgB,uBAAwB;AAEnE,WAAUC,KAAI,GAAGA,KAAIL,QAAQM,QAAQD,MAAM;AAC1CL,YAASK,EAAC,EAAGE,cAAc;EAC5B;AAGA,MAAKJ,WAAY;AAChBA,cAAUK,aAAc,UAAU,QAAS;EAC5C;AACD;;;ACfA,IAAIC,kBAAkB;AASP,SAAf,cAAuCC,SAAU;AAQhDA,YAAUA,QAAQC,QAAS,aAAa,GAAI;AAM5C,MAAKF,oBAAoBC,SAAU;AAClCA,eAAW;EACZ;AAEAD,oBAAkBC;AAElB,SAAOA;AACR;;;ACNO,SAASE,MAAOC,SAASC,UAAW;AAK1CC,QAAM;AAENF,YAAUG,cAAeH,OAAQ;AAEjC,QAAMI,YAAYC,SAASC,eAAgB,uBAAwB;AACnE,QAAMC,qBAAqBF,SAASC,eACnC,sBACD;AACA,QAAME,kBAAkBH,SAASC,eAAgB,mBAAoB;AAErE,MAAKC,sBAAsBN,aAAa,aAAc;AACrDM,uBAAmBE,cAAcT;EAClC,WAAYQ,iBAAkB;AAC7BA,oBAAgBC,cAAcT;EAC/B;AAMA,MAAKI,WAAY;AAChBA,cAAUM,gBAAiB,QAAS;EACrC;AACD;;;ACtBe,SAAf,SAAkCC,UAAW;AAC5C,MAAK,OAAOC,aAAa,aAAc;AACtC;EACD;AAEA,MACCA,SAASC,eAAe;EACxBD,SAASC,eAAe,eACvB;AACD,WAAO,KAAKF,SAAS;EACtB;AAGAC,WAASE,iBAAkB,oBAAoBH,QAAS;AACzD;;;ACrCe,SAAf,aAAsCI,WAAW,UAAW;AAC3D,QAAMC,YAAYC,SAASC,cAAe,KAAM;AAChDF,YAAUG,KAAK,cAAeJ,QAAQ;AACtCC,YAAUI,YAAY;AAEtBJ,YAAUK,aACT,SACA,yIASD;AACAL,YAAUK,aAAc,aAAaN,QAAS;AAC9CC,YAAUK,aAAc,iBAAiB,gBAAiB;AAC1DL,YAAUK,aAAc,eAAe,MAAO;AAE9C,QAAM;IAAEC;EAAK,IAAIL;AACjB,MAAKK,MAAO;AACXA,SAAKC,YAAaP,SAAU;EAC7B;AAEA,SAAOA;AACR;;;ACrBe,SAAf,eAAuC;AACtC,QAAMQ,YAAYC,SAASC,cAAe,GAAI;AAE9CF,YAAUG,KAAK;AACfH,YAAUI,YAAY;AACtBJ,YAAUK,cAAcC,GAAI,eAAgB;AAE5CN,YAAUO,aACT,SACA,yIASD;AACAP,YAAUO,aAAc,UAAU,EAAG;AAErC,QAAM;IAAEC;EAAK,IAAIP;AACjB,MAAKO,MAAO;AACXA,SAAKC,YAAaT,SAAU;EAC7B;AAEA,SAAOA;AACR;;;ACxBO,SAASU,QAAQ;AACvB,QAAMC,YAAYC,SAASC,eAAgB,uBAAwB;AACnE,QAAMC,qBAAqBF,SAASC,eACnC,sBACD;AACA,QAAME,kBAAkBH,SAASC,eAAgB,mBAAoB;AAErE,MAAKF,cAAc,MAAO;AACzBK,iBAAa;EACd;AAEA,MAAKF,uBAAuB,MAAO;AAClCG,iBAAc,WAAY;EAC3B;AAEA,MAAKF,oBAAoB,MAAO;AAC/BE,iBAAc,QAAS;EACxB;AACD;AAKAC,SAAUR,KAAM;;;AC7BT,SAASS,aAAcC,IAAGC,IAAI;AACpC,SACCD,OAAMC,MACJD,MACDC,MACAD,GAAEE,mBAAmBD,GAAEC,kBACvBF,GAAEG,gBAAgBF,GAAEE,eACpBH,GAAEI,iBAAiBH,GAAEG,gBACrBJ,GAAEK,cAAcJ,GAAEI;AAErB;;;ACAA,SAASC,iBAAkBC,MAAMC,UAAUC,MAAO;AACjD,QAAMC,aAAaH,KAAKG;AACxB,MAAIC,KAAI;AAER,SAAUJ,OAAOA,KAAKK,iBAAoB;AACzCD,IAAAA;EACD;AAEAF,SAAO,CAAEE,IAAG,GAAGF,IAAI;AAEnB,MAAKC,eAAeF,UAAW;AAC9BC,WAAOH,iBAAkBI,YAAYF,UAAUC,IAAK;EACrD;AAEA,SAAOA;AACR;AAUA,SAASI,cAAeN,MAAME,MAAO;AACpCA,SAAO,CAAE,GAAGA,IAAI;AAEhB,SAAQF,QAAQE,KAAKK,SAAS,GAAI;AACjCP,WAAOA,KAAKQ,WAAYN,KAAKO,MAAM,CAAC;EACrC;AAEA,SAAO;IACNT;IACAU,QAAQR,KAAM,CAAC;EAChB;AACD;AAEA,SAASS,QAAQC,SAASC,OAAQ;AACjC,MAAKA,MAAMC,SAASC,QAAY;AAC/B,WAASH,QAAQI,aAAaH,MAAMC;EACrC;AAEA,MAAK,OAAOD,UAAU,UAAW;AAChCA,YAAQD,QAAQK,cAAcC,eAAgBL,KAAM;EACrD;AAEA,QAAM;IAAEM;IAAMC;EAAW,IAAIP;AAE7B,MAAKM,MAAO;AACX,QAAKA,SAAS,YAAa;AAC1BN,cAAQD,QAAQK,cAAcI,cAC7BD,WAAY,wBAAwB,CACrC;IACD,OAAO;AACNP,cAAQD,QAAQK,cAAcK,cAAeH,IAAK;AAElD,iBAAYI,OAAOH,YAAa;AAC/BP,cAAMW,aAAcD,KAAKH,WAAYG,GAAG,CAAG;MAC5C;IACD;EACD;AAEA,SAAOX,QAAQa,YAAaZ,KAAM;AACnC;AAEA,SAASa,YAAY1B,MAAM2B,MAAO;AACjC3B,OAAK4B,WAAYD,IAAK;AACvB;AAEA,SAASE,cAAc;EAAEC;AAAU,GAAI;AACtC,SAAOA;AACR;AAEA,SAASC,WAAW;EAAE5B;AAAW,GAAI;AACpC,SAAOA;AACR;AAEA,SAAS6B,QAAQhC,MAAO;AACvB,SAAOA,KAAKiC,aAAajC,KAAKkC;AAC/B;AAEA,SAASC,SAAS;EAAEC;AAAU,GAAI;AACjC,SAAOA;AACR;AAEA,SAASC,QAAQrC,MAAO;AACvB,SAAOA,KAAKG,WAAWmC,YAAatC,IAAK;AAC1C;AAEO,SAASuC,MAAO;EACtBC;EACAC;EACAC,iBAAiB;EACjBC;EACAC,MAAMC;AACP,GAAI;AACH,MAAIC,YAAY,CAAA;AAChB,MAAIC,UAAU,CAAA;AAEd,MAAKN,qBAAsB;AAC1BD,YAAQ;MACP,GAAGA;MACHQ,SAASP,oBAAqBD,KAAM;IACrC;EACD;AAYA,QAAMS,eAAcA,MAAM3B,cAAesB,KAAK,EAAG;AAEjD,QAAMM,OAAOC,OAAQ;IACpBX;IACAS,aAAAA;IACAtC,QAAAA;IACAkB,cAAAA;IACAE,WAAAA;IACAC,QAAAA;IACAG,SAAAA;IACAE,QAAAA;IACAX,YAAAA;IACA0B,aAAcC,MAAMC,SAAU;AAC7BR,kBAAY/C,iBAAkBuD,SAASD,MAAM,CAC5CC,QAAQlB,UAAU7B,MAAM,CACvB;IACH;IACAgD,WAAYF,MAAMC,SAAU;AAC3BP,gBAAUhD,iBAAkBuD,SAASD,MAAM,CAC1CC,QAAQlB,UAAU7B,MAAM,CACvB;IACH;IACAmC;IACAC;EACD,CAAE;AAEF,SAAO;IACNU,MAAMH;IACNM,WAAW;MAAEV;MAAWC;IAAQ;EACjC;AACD;AAaO,SAASU,MAAO;EACtBjB;EACAkB;EACAjB;EACAkB;EACAhB;AACD,GAAI;AAEH,QAAM;IAAEU;IAAMG;EAAU,IAAIjB,MAAO;IAClCC;IACAC;IACAE;IACAC,KAAKc,QAAQzC;EACd,CAAE;AAEF2C,aAAYP,MAAMK,OAAQ;AAE1B,MAAKlB,MAAMqB,UAAU9C,UAAa,CAAE4C,mBAAoB;AACvDG,mBAAgBN,WAAWE,OAAQ;EACpC;AACD;AAEO,SAASE,WAAYG,QAAQL,SAAU;AAC7C,MAAItD,KAAI;AACR,MAAI4D;AAEJ,SAAUA,cAAcD,OAAOE,YAAe;AAC7C,UAAMC,eAAeR,QAAQlD,WAAYJ,EAAC;AAE1C,QAAK,CAAE8D,cAAe;AACrBR,cAAQjC,YAAauC,WAAY;IAClC,WAAY,CAAEE,aAAaC,YAAaH,WAAY,GAAI;AACvD,UACCE,aAAaE,aAAaJ,YAAYI,YACpCF,aAAajC,aAAaiC,aAAahC,aACxCgC,aAAaG,SAASL,YAAYK,MAClC;AACDX,gBAAQY,aAAcN,aAAaE,YAAa;MACjD,OAAO;AACN,cAAMK,oBAAoBL,aAAa9C;AACvC,cAAMoD,mBAAmBR,YAAY5C;AAErC,YAAKmD,mBAAoB;AACxB,cAAIE,KAAKF,kBAAkBhE;AAI3B,iBAAQkE,MAAO;AACd,kBAAM;cAAEC;YAAK,IAAIH,kBAAmBE,EAAE;AAEtC,gBAAK,CAAET,YAAYW,aAAcD,IAAK,GAAI;AACzCR,2BAAaU,gBAAiBF,IAAK;YACpC;UACD;QACD;AAEA,YAAKF,kBAAmB;AACvB,mBAAUC,KAAK,GAAGA,KAAKD,iBAAiBjE,QAAQkE,MAAO;AACtD,kBAAM;cAAEC;cAAMlC;YAAM,IAAIgC,iBAAkBC,EAAE;AAE5C,gBAAKP,aAAaS,aAAcD,IAAK,MAAMlC,OAAQ;AAClD0B,2BAAa1C,aAAckD,MAAMlC,KAAM;YACxC;UACD;QACD;AAEAoB,mBAAYI,aAAaE,YAAa;AACtCH,eAAOzB,YAAa0B,WAAY;MACjC;IACD,OAAO;AACND,aAAOzB,YAAa0B,WAAY;IACjC;AAEA5D,IAAAA;EACD;AAEA,SAAQsD,QAAQlD,WAAYJ,EAAC,GAAK;AACjCsD,YAAQpB,YAAaoB,QAAQlD,WAAYJ,EAAC,CAAG;EAC9C;AACD;AAEO,SAAS0D,eAAgB;EAAEhB;EAAWC;AAAQ,GAAGW,SAAU;AACjE,QAAM;IAAE1D,MAAM6E;IAAgBnE,QAAQoE;EAAY,IAAIxE,cACrDoD,SACAZ,SACD;AACA,QAAM;IAAE9C,MAAM+E;IAAcrE,QAAQsE;EAAU,IAAI1E,cACjDoD,SACAX,OACD;AACA,QAAM;IAAE9B;EAAc,IAAIyC;AAC1B,QAAM;IAAEuB;EAAY,IAAIhE;AACxB,QAAMuC,YAAYyB,YAAYC,aAAa;AAC3C,QAAMC,QAAQlE,cAAcmE,YAAY;AAExCD,QAAME,SAAUR,gBAAgBC,WAAY;AAC5CK,QAAMG,OAAQP,cAAcC,SAAU;AAEtC,QAAM;IAAEO;EAAc,IAAItE;AAE1B,MAAKuC,UAAUgC,aAAa,GAAI;AAG/B,QAAKC,aAAcN,OAAO3B,UAAUkC,WAAY,CAAE,CAAE,GAAI;AACvD;IACD;AAEAlC,cAAUmC,gBAAgB;EAC3B;AAEAnC,YAAUoC,SAAUT,KAAM;AAK1B,MAAKI,kBAAkBtE,cAAcsE,eAAgB;AAMpD,QAAKA,yBAAyBN,YAAYY,aAAc;AACvDN,oBAAcO,MAAM;IACrB;EACD;AACD;;;ACxRA,IAAMC,aAAa;AAMnB,IAAMC,WAAW;AAEV,SAASC,kBAAkB;AACjC,aAAOC,0BAAeC,aAAa;AAClC,QAAK,CAAEA,SAAU;AAChB;IACD;AACAA,YAAQC,MAAML,aAAaA;AAC3BI,YAAQC,MAAMJ,WAAWA;EAC1B,GAAG,CAAA,CAAG;AACP;;;AC3BO,SAASK,iBAAkB;EAAEC;AAAO,GAAI;AAC9C,QAAMC,UAAMC,qBAAO;AACnB,QAAM;IAAEC,gBAAgB,CAAA;IAAIC;IAAcC;EAAM,IAAIL,OAAOM;AAC3D,QAAMC,oBAAoBH,aAAcC,KAAK;AAC7CG,8BAAW,MAAM;AAGhB,SACG,CAAEL,iBAAiB,CAAEA,cAAcM,WACrC,CAAEF,mBACD;AACD;IACD;AAEA,UAAMG,mBAAmB;AACzB,UAAMC,UAAUV,IAAIK,QAAQM,cAAeF,gBAAiB;AAE5D,QAAK,CAAEC,SAAU;AAChB;IACD;AAEA,UAAM;MAAEE;IAAc,IAAIF;AAC1B,UAAM;MAAEG;IAAY,IAAID;AACxB,UAAME,gBAAgBD,YAAYE,iBAAkBL,OAAQ;AAC5D,UAAMM,WAAWC,EAAQH,cAAcI,KAAM,EAC3CC,MAAO,GAAI,EACXC,YAAY;AACd,UAAMC,WAAW,oBAAqBZ,gBAAgB;AACtD,UAAMa,OAAO,qBAAsBN,QAAQ;AAC3C,UAAMO,QAAQ,GAAIF,QAAQ,KAAOC,IAAI;AACrC,UAAME,gBAAgB;AAEtB,QAAIC,cAAcb,cAAcc,eAAgBF,aAAc;AAE9D,QAAK,CAAEC,aAAc;AACpBA,oBAAcb,cAAce,cAAe,OAAQ;AACnDF,kBAAYG,KAAKJ;AACjBZ,oBAAciB,KAAKC,YAAaL,WAAY;IAC7C;AAEA,QAAKA,YAAYM,cAAcR,OAAQ;AACtCE,kBAAYM,YAAYR;IACzB;EACD,GAAG,CAAErB,eAAeI,iBAAiB,CAAG;AACxC,SAAON;AACR;;;ACnDA,IAAA,uBAAiBgC,WAAaC,aAAa;AAC1C,WAASC,OAAQC,OAAQ;AACxB,UAAM;MAAEC;IAAO,IAAIJ,MAAMK;AACzB,UAAM;MAAEC;IAAc,IAAIL;AAC1B,QACCM,YAAaH,OAAOC,OAAQ,KAC5B,CAAEJ,QAAQO,SAAUF,cAAcG,aAAc,GAC/C;AACD;IACD;AAEA,UAAMC,iBAAiBC,MAAOP,OAAOC,OAAQ;AAC7C,UAAMO,YAAYC,eAAgBH,cAAe;AACjD,UAAMI,OAAOC,aAAc;MAAEC,OAAON;IAAe,CAAE;AACrDP,UAAMc,cAAcC,QAAS,cAAcN,SAAU;AACrDT,UAAMc,cAAcC,QAAS,aAAaJ,IAAK;AAC/CX,UAAMc,cAAcC,QAAS,aAAa,MAAO;AACjDf,UAAMgB,eAAe;AAErB,QAAKhB,MAAMiB,SAAS,OAAQ;AAC3Bd,oBAAce,YAAa,QAAS;IACrC;EACD;AAEA,QAAM;IAAEC;EAAY,IAAIrB,QAAQK;AAEhCgB,cAAYC,iBAAkB,QAAQrB,MAAO;AAC7CoB,cAAYC,iBAAkB,OAAOrB,MAAO;AAC5C,SAAO,MAAM;AACZoB,gBAAYE,oBAAqB,QAAQtB,MAAO;AAChDoB,gBAAYE,oBAAqB,OAAOtB,MAAO;EAChD;AACD;;;ACxCA,IAAA,wBAAe,MAAQuB,aAAa;AACnC,WAASC,QAASC,OAAQ;AACzB,UAAM;MAAEC;IAAO,IAAID;AAGnB,QACCC,WAAWH,WACTG,OAAOC,eAAeD,OAAOE,mBAC9B;AACD;IACD;AAEA,UAAM;MAAEC;IAAc,IAAIH;AAC1B,UAAM;MAAEI;IAAY,IAAID;AACxB,UAAME,YAAYD,YAAYE,aAAa;AAI3C,QAAKD,UAAUE,aAAcP,MAAO,GAAI;AACvC;IACD;AAEA,UAAMQ,QAAQL,cAAcM,YAAY;AAGxC,UAAMC,eAAeV,OAAOE,oBACzBF,SACAA,OAAOW,QAAS,mBAAoB;AAEvCH,UAAMI,WAAYF,YAAa;AAC/BL,cAAUQ,gBAAgB;AAC1BR,cAAUS,SAAUN,KAAM;AAE1BT,UAAMgB,eAAe;EACtB;AAEA,WAASC,UAAWjB,OAAQ;AAE3B,QACCA,MAAMkB,iBACN,CAAEpB,QAAQqB,SAAUnB,MAAMkB,aAAc,KACxClB,MAAMkB,cAAcE,YAAY,KAC/B;AACDrB,cAASC,KAAM;IAChB;EACD;AAEAF,UAAQuB,iBAAkB,SAAStB,OAAQ;AAC3CD,UAAQuB,iBAAkB,WAAWJ,SAAU;AAC/C,SAAO,MAAM;AACZnB,YAAQwB,oBAAqB,SAASvB,OAAQ;AAC9CD,YAAQwB,oBAAqB,WAAWL,SAAU;EACnD;AACD;;;AC3CA,IAAMM,uBAAuB,CAAA;AAE7B,IAAA,4BAAiBC,WAAaC,aAAa;AAC1C,WAASC,UAAWC,OAAQ;AAC3B,UAAM;MAAEC;MAASC;MAAUC;MAAQC;MAASC;IAAQ,IAAIL;AAExD;;MAECE,YACAC,UACAC,WACAC,WACEJ,YAAYK,QAAQL,YAAYM;MACjC;AACD;IACD;AAEA,UAAM;MAAEC;MAAQC;MAAaC;IAAY,IAAIb,MAAMc;AACnD,UAAM;MACLC;MACAC;MACAC;MACAC;MACAC,eAAeC,uBAAuB,CAAA;IACvC,IAAIT,OAAOG;AACX,UAAMO,YAAYC,YAAaX,OAAOG,OAAQ;AAC9C,UAAM;MAAES;IAAc,IAAItB;AAC1B,UAAM;MAAEuB;IAAY,IAAID;AAExB,UAAM;MAAEE;IAAU,IAAID,YAAYE,iBAAkBzB,OAAQ;AAC5D,UAAM0B,aAAaF,cAAc,QAAQf,QAAQD;AACjD,UAAMmB,YAAYzB,MAAMC,YAAYuB;AAMpC,QAAKN,aAAaD,qBAAqBS,WAAW,GAAI;AACrD,UAAKZ,UAAU,KAAKW,WAAY;AAC/B;MACD;AAEA,UAAKV,QAAQH,KAAKc,UAAU,CAAED,WAAY;AACzC;MACD;IACD;AAKA,QAAK,CAAEP,WAAY;AAClB;IACD;AAEA,UAAMS,gBAAgBd,QAASC,QAAQ,CAAC,KAAMlB;AAC9C,UAAMgC,eAAef,QAASC,KAAK,KAAMlB;AACzC,UAAMiC,cAAcJ,YAAYE,gBAAgBC;AAChD,UAAME,eAAeb,qBAAqBc,MACzC,CAAEC,QAAQC,UAAWD,WAAWH,YAAaI,KAAK,CACnD;AAEA,QAAIC,yBAAyBjB,qBAAqBS;AAElD,QAAK,CAAEI,cAAe;AACrBI;IACD,WAAYA,yBAAyBL,YAAYH,QAAS;AACzDQ;IACD;AAEA,QAAKA,2BAA2BjB,qBAAqBS,QAAS;AAC7DlB,aAAOG,QAAQwB,oBAAoBN;AACnC;IACD;AAEA7B,UAAMoC,eAAe;AAErB,UAAMC,SAASZ,YAAYG,eAAeD;AAC1C,UAAMW,SAASR,eAAeD,cAAcQ;AAC5C,UAAME,mBAAmBD,OAAOE,MAAO,GAAGN,sBAAuB;AACjE,UAAMO,WAAW;MAChB,GAAGjC,OAAOG;MACVK,eAAeuB;IAChB;AACA/B,WAAOG,UAAU8B;AACjBhC,gBAAagC,QAAS;AACtB/B,gBAAY;EACb;AAEAZ,UAAQ4C,iBAAkB,WAAW3C,SAAU;AAC/C,SAAO,MAAM;AACZD,YAAQ6C,oBAAqB,WAAW5C,SAAU;EACnD;AACD;;;ACnFO,SAAS6C,QAAQC,OAAOC,YAAYC,UAAW;AACrD,SAAOC,OAAQH,OAAOI,OAAO,GAAGH,YAAYC,QAAS;AACtD;;;ACXA,IAAA,iBAAiBG,WAAaC,aAAa;AAC1C,WAASC,UAAWC,OAAQ;AAC3B,UAAM;MAAEC;IAAQ,IAAID;AACpB,UAAM;MAAEE;MAAcC;IAAa,IAAIN,MAAMO;AAE7C,QAAKJ,MAAMK,kBAAmB;AAC7B;IACD;AAEA,QAAKJ,YAAYK,UAAUL,YAAYM,WAAY;AAClD;IACD;AAEA,UAAMC,eAAeN,aAAa;AAClC,UAAM;MAAEO;MAAOC;MAAKC;IAAK,IAAIH;AAG7B,QAAKC,UAAU,KAAKC,QAAQ,KAAKA,QAAQC,KAAKC,QAAS;AACtDT,mBAAcU,QAAQL,YAAa,CAAE;AACrCR,YAAMc,eAAe;IACtB;EACD;AAEAhB,UAAQiB,iBAAkB,WAAWhB,SAAU;AAC/C,SAAO,MAAM;AACZD,YAAQkB,oBAAqB,WAAWjB,SAAU;EACnD;AACD;;;ACjBO,SAASkB,cAAe;EAAEC;EAAOC;EAAOC;EAAKC;AAAQ,GAAI;AAE/D,QAAMC,MAAMC,KAAKD,IAAKH,OAAOC,GAAI;AACjC,QAAMI,MAAMD,KAAKC,IAAKL,OAAOC,GAAI;AACjC,QAAMK,gBAAgBP,MAAMG,QAASC,MAAM,CAAC,KAAM,CAAA;AAClD,QAAMI,eAAeR,MAAMG,QAASG,GAAG,KAAM,CAAA;AAI7CN,QAAMS,gBAAgBN,QAAQO,IAAK,CAAEC,QAAQC,UAAW;AACvD,QAAKL,cAAeK,KAAK,GAAK;AAC7B,UAAKC,cAAeF,QAAQJ,cAAeK,KAAK,CAAG,GAAI;AACtD,eAAOL,cAAeK,KAAK;MAC5B;IACD,WAAYJ,aAAcI,KAAK,GAAK;AACnC,UAAKC,cAAeF,QAAQH,aAAcI,KAAK,CAAG,GAAI;AACrD,eAAOJ,aAAcI,KAAK;MAC3B;IACD;AAEA,WAAOD;EACR,CAAE;AAEF,SAAQ,EAAET,OAAOD,OAAQ;AACxB,QAAKD,MAAMS,cAAcK,SAAS,GAAI;AACrCd,YAAMG,QAASD,GAAG,IAAKF,MAAMS;IAC9B,OAAO;AACN,aAAOT,MAAMG,QAASD,GAAG;IAC1B;EACD;AAEA,SAAOF;AACR;;;ACvCA,IAAMe,kCAAkC,oBAAIC,IAAK,CAChD,mBACA,qBACA,uBACA,wBACA,YAAY,CACX;AAEF,IAAMC,wBAAuB,CAAA;AAE7B,IAAMC,wBAAwB;AAQ9B,SAASC,wBAAyBC,aAAc;AAC/C,QAAMC,YAAYD,YAAYE,aAAa;AAC3C,QAAM;IAAEC;IAAYC;EAAa,IAAIH;AAErC,MAAKE,WAAWE,aAAaF,WAAWG,cAAe;AACtD;EACD;AAEA,QAAMC,aAAaJ,WAAWK,WAAYJ,YAAY;AAEtD,MACC,CAAEG,cACFA,WAAWF,aAAaE,WAAWD,gBACnC,CAAEC,WAAWE,aAAcX,qBAAsB,GAChD;AACD;EACD;AAEAG,YAAUS,gBAAgB;AAC3B;AAEA,IAAA,8BAAiBC,WAAaC,aAAa;AAC1C,QAAM;IAAEC;EAAc,IAAID;AAC1B,QAAM;IAAEZ;EAAY,IAAIa;AAExB,MAAIC,cAAc;AAElB,WAASC,QAASC,OAAQ;AAKzB,QAAKF,aAAc;AAClB;IACD;AAEA,QAAIG;AAEJ,QAAKD,OAAQ;AACZC,kBAAYD,MAAMC;IACnB;AAEA,UAAM;MAAEC;MAAQC;MAAaC;MAAcC;IAAa,IACvDV,MAAMW;AAIP,QACCL,cACEA,UAAUM,QAAS,QAAS,MAAM,KACnC5B,gCAAgC6B,IAAKP,SAAU,IAC/C;AACDE,kBAAaD,OAAOI,OAAQ;AAC5B;IACD;AAEA,UAAMG,eAAeL,aAAa;AAClC,UAAM;MAAEM;MAAOC,eAAeC,mBAAmB,CAAA;IAAG,IAAIV,OAAOI;AAG/D,UAAMO,SAASC,cAAe;MAC7BC,OAAON;MACPC;MACAM,KAAKP,aAAaC;MAClBO,SAASL;IACV,CAAE;AAEFP,iBAAcQ,MAAO;EACtB;AAMA,WAASK,wBAAwB;AAChC,UAAM;MAAEhB;MAAQC;MAAaC;MAAce;IAAkB,IAC5DxB,MAAMW;AAKP,QAAKV,QAAQwB,oBAAoB,QAAS;AACzC;IACD;AAGA,QAAKvB,cAAcwB,kBAAkBzB,SAAU;AAG9CC,oBAAcyB,oBACb,mBACAJ,qBACD;AACA;IACD;AAIA,QAAKpB,aAAc;AAClB;IACD;AAEA,UAAM;MAAEY;MAAOM;MAAKO;IAAK,IAAInB,aAAa;AAC1C,UAAMoB,YAAYtB,OAAOI;AAIzB,QAAKiB,SAASC,UAAUD,MAAO;AAC9BxB,cAAQ;AACR;IACD;AAEA,QAAKW,UAAUc,UAAUd,SAASM,QAAQQ,UAAUR,KAAM;AAIzD,UAAKQ,UAAUD,KAAKE,WAAW,KAAKf,UAAU,GAAI;AACjD3B,gCAAyBC,WAAY;MACtC;AAEA;IACD;AAEA,UAAM0C,WAAW;MAChB,GAAGF;MACHd;MACAM;;;;MAIAL,eAAea,UAAUG;MACzBA,mBAAmBC;IACpB;AAEA,UAAMC,mBAAmBC,iBACxBJ,UACA7C,qBACD;AAGA6C,aAASf,gBAAgBkB;AAIzB3B,WAAOI,UAAUoB;AACjBvB,gBAAauB,UAAU;MAAEK,SAAS;IAAK,CAAE;AACzCZ,sBAAmBT,OAAOM,GAAI;EAC/B;AAEA,WAASgB,qBAAqB;AApL/B;AAqLElC,kBAAc;AAIdD,kBAAcyB,oBACb,mBACAJ,qBACD;AAKAtB,kBAAQqC,cAAe,IAAKnD,qBAAqB,GAAK,MAAtDc,mBAAyDsC;EAC1D;AAEA,WAASC,mBAAmB;AAC3BrC,kBAAc;AAGdC,YAAS;MAAEE,WAAW;IAAa,CAAE;AAErCJ,kBAAcuC,iBACb,mBACAlB,qBACD;EACD;AAEA,WAASmB,UAAU;AAClB,UAAM;MAAEnC;MAAQoC;MAAYnB;MAAmBhB;IAAY,IAC1DR,MAAMW;AAIP,QAAKV,QAAQ2C,cAAcC,QAAS,0BAA2B,GAAI;AAClE;IACD;AAEA,QAAK,CAAEF,YAAa;AAInB,YAAMG,QAAQb;AAEd1B,aAAOI,UAAU;QAChB,GAAGJ,OAAOI;QACVI,OAAO+B;QACPzB,KAAKyB;QACL9B,eAAe9B;MAChB;IACD,OAAO;AACNsB,kBAAaD,OAAOI,SAAS;QAAEyB,SAAS;MAAK,CAAE;IAChD;AAEAZ,sBAAmBjB,OAAOI,QAAQI,OAAOR,OAAOI,QAAQU,GAAI;AAK5D0B,WAAOC,eAAgBzB,qBAAsB;AAE7CrB,kBAAcuC,iBACb,mBACAlB,qBACD;EACD;AAEAtB,UAAQwC,iBAAkB,SAASrC,OAAQ;AAC3CH,UAAQwC,iBAAkB,oBAAoBJ,kBAAmB;AACjEpC,UAAQwC,iBAAkB,kBAAkBD,gBAAiB;AAC7DvC,UAAQwC,iBAAkB,SAASC,OAAQ;AAE3C,SAAO,MAAM;AACZzC,YAAQ0B,oBAAqB,SAASvB,OAAQ;AAC9CH,YAAQ0B,oBAAqB,oBAAoBU,kBAAmB;AACpEpC,YAAQ0B,oBAAqB,kBAAkBa,gBAAiB;AAChEvC,YAAQ0B,oBAAqB,SAASe,OAAQ;EAC/C;AACD;;;ACvPA,IAAA,kCAAe,MAAQO,aAAa;AACnC,QAAM;IAAEC;EAAc,IAAID;AAC1B,QAAM;IAAEE;EAAY,IAAID;AACxB,QAAME,YAAYD,2CAAaE;AAE/B,MAAIC;AAEJ,WAASC,WAAW;AACnB,WAAOH,UAAUI,aAAaJ,UAAUK,WAAY,CAAE,IAAI;EAC3D;AAEA,WAASC,OAAQC,OAAQ;AACxB,UAAMC,OAAOD,MAAMC,SAAS,YAAY,UAAU;AAElD,aAASC,WAAW;AACnBX,oBAAcY,oBAAqBF,MAAMG,IAAK;AAC9Cb,oBAAcY,oBAAqB,mBAAmBD,QAAS;AAC/DX,oBAAcY,oBAAqB,SAASD,QAAS;IACtD;AAEA,aAASE,OAAO;AACfF,eAAS;AACT,UAAKG,aAAcV,OAAOC,SAAS,CAAE,GAAI;AACxC;MACD;AACAL,oBAAce,cAAe,IAAIC,MAAO,iBAAkB,CAAE;IAC7D;AAEAhB,kBAAciB,iBAAkBP,MAAMG,IAAK;AAC3Cb,kBAAciB,iBAAkB,mBAAmBN,QAAS;AAC5DX,kBAAciB,iBAAkB,SAASN,QAAS;AAElDP,YAAQC,SAAS;EAClB;AAEAN,UAAQkB,iBAAkB,eAAeT,MAAO;AAChDT,UAAQkB,iBAAkB,WAAWT,MAAO;AAC5C,SAAO,MAAM;AACZT,YAAQa,oBAAqB,eAAeJ,MAAO;AACnDT,YAAQa,oBAAqB,WAAWJ,MAAO;EAChD;AACD;;;AC9CO,SAASU,sBAAsB;AACrC,SAASC,aAAa;AACrB,UAAM;MAAEC;IAAc,IAAID;AAC1B,UAAM;MAAEE;IAAY,IAAID;AAExB,QAAIE,QAAQ;AAEZ,aAASC,cAAeC,OAAQ;AAE/B,UAAKA,MAAMC,kBAAmB;AAC7B;MACD;AACA,UAAKD,MAAME,WAAWP,SAAU;AAC/B;MACD;AACA,UAAK,CAAEK,MAAME,OAAOC,SAAUR,OAAQ,GAAI;AACzC;MACD;AACAG,cAAQH,QAAQS,aAAc,iBAAkB;AAChDT,cAAQU,aAAc,mBAAmB,OAAQ;AACjDR,kBAAYS,aAAa,EAAEC,gBAAgB;IAC5C;AAEA,aAASC,cAAc;AACtB,UAAKV,UAAU,MAAO;AACrBH,gBAAQU,aAAc,mBAAmBP,KAAM;AAC/CA,gBAAQ;MACT;IACD;AAEAD,gBAAYY,iBAAkB,eAAeV,aAAc;AAC3DF,gBAAYY,iBAAkB,aAAaD,WAAY;AACvD,WAAO,MAAM;AACZX,kBAAYa,oBAAqB,eAAeX,aAAc;AAC9DF,kBAAYa,oBAAqB,aAAaF,WAAY;IAC3D;EACD;AACD;;;AC1BA,IAAMG,oBAAoB,CACzBC,sBACAC,uBACAC,2BACAC,gBACAC,6BACAC,iCACAC,mBAAmB;AAGb,SAASC,kBAAmBC,OAAQ;AAC1C,QAAMC,eAAWC,qBAAQF,KAAM;AAC/BG,uCAAoB,MAAM;AACzBF,aAASG,UAAUJ;EACpB,CAAE;AACF,QAAMK,iBAAaC,sBAClB,MAAMf,kBAAkBgB,IAAOC,eAAeA,UAAWP,QAAS,CAAE,GACpE,CAAEA,QAAQ,CACX;AAEA,SAAOQ,aACJC,aAAa;AACd,UAAMC,WAAWN,WAAWE,IAAOK,YAAYA,OAAQF,OAAQ,CAAE;AACjE,WAAO,MAAM;AACZC,eAASE,QAAWC,aAAaA,QAAQ,CAAE;IAC5C;EACD,GACA,CAAET,UAAU,CACb;AACD;;;AC7BO,SAASU,YAAa;EAC5BC,QAAQ;EACRC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC,0BAA0BC;EAC1BC,sBAAsBC;EACtBC,yBAAyB,CAAA;EACzBC;EACAC;EACAC;AACD,GAAI;AACH,QAAMC,WAAWC,YAAY;AAC7B,QAAM,CAAA,EAAIC,WAAW,QAAKC,yBAAY,OAAQ,CAAC,EAAI;AACnD,QAAMC,UAAMC,qBAAO;AAEnB,WAASC,eAAe;AACvB,UAAM;MACLC,eAAe;QAAEC;MAAY;IAC9B,IAAIJ,IAAIK;AACR,UAAMC,YAAYF,YAAYG,aAAa;AAC3C,UAAMC,QACLF,UAAUG,aAAa,IAAIH,UAAUI,WAAY,CAAE,IAAI;AAExD,WAAOC,OAAQ;MACdC,SAASZ,IAAIK;MACbG;MACAK,0BAA0B;IAC3B,CAAE;EACH;AAEA,WAASC,YAAaC,WAAW;IAAEC;EAAQ,IAAI,CAAC,GAAI;AACnDC,UAAO;MACNpC,OAAOkC;MACPV,SAASL,IAAIK;MACba,qBAAqBvB;MACrBwB,mBAAmBH;MACnBhC;IACD,CAAE;EACH;AAGA,QAAMoC,gBAAYnB,qBAAQpB,KAAM;AAChC,QAAMwC,gBAAYpB,qBAAO;AAEzB,WAASqB,qBAAqB;AAC7BF,cAAUf,UAAUxB;AACpBwC,cAAUhB,UAAUxB;AACpB,QAAK,EAAIA,iBAAiB0C,eAAiB;AAC1CF,gBAAUhB,UAAUxB,QACjB0C,aAAaC,eAAgB3C,OAAO;QAAEK;MAAmB,CAAE,IAC3DqC,aAAaE,MAAM;IACvB;AAEAJ,cAAUhB,UAAU;MACnBqB,MAAML,UAAUhB,QAAQqB;MACxBC,SAASN,UAAUhB,QAAQsB;MAC3BC,cAAcP,UAAUhB,QAAQuB;IACjC;AACA,QAAKvC,gBAAiB;AACrBgC,gBAAUhB,QAAQsB,UAAUE,MAAOhD,MAAMiD,MAAO;AAChDT,gBAAUhB,QAAQuB,eAAeC,MAAOhD,MAAMiD,MAAO;IACtD;AACA,QAAKrC,sBAAuB;AAC3B4B,gBAAUhB,QAAQsB,UAAUlC,qBAC3B4B,UAAUhB,OACX;IACD;AACAgB,cAAUhB,QAAQ0B,QAAQjD;AAC1BuC,cAAUhB,QAAQ2B,MAAMjD;EACzB;AAEA,QAAMkD,4BAAwBhC,qBAAQ,KAAM;AAE5C,MAAK,CAAEoB,UAAUhB,SAAU;AAC1B4B,0BAAsB5B,UAAUd;AAChC+B,uBAAmB;EACpB,WACCxC,mBAAmBuC,UAAUhB,QAAQ0B,SACrChD,iBAAiBsC,UAAUhB,QAAQ2B,KAClC;AACDC,0BAAsB5B,UAAUd;AAChC8B,cAAUhB,UAAU;MACnB,GAAGgB,UAAUhB;MACb0B,OAAOjD;MACPkD,KAAKjD;MACLmD,eAAeC;IAChB;EACD;AAQA,WAASC,aAAcrB,WAAY;AAClCM,cAAUhB,UAAUU;AACpBD,gBAAaC,SAAU;AAEvB,QAAK1B,gBAAiB;AACrB+B,gBAAUf,UAAUU,UAAUW;IAC/B,OAAO;AACN,YAAMW,aAAa3C,4BAChBA,0BAA2BqB,SAAU,IACrCA,UAAUY;AACbZ,kBAAY;QAAE,GAAGA;QAAWY,SAASU;MAAW;AAChD,UAAK,OAAOxD,UAAU,UAAW;AAChCuC,kBAAUf,UAAUiC,aAAc;UACjCzD,OAAOkC;UACP7B;QACD,CAAE;MACH,OAAO;AACNkC,kBAAUf,UAAU,IAAIkB,aAAcR,SAAU;MACjD;IACD;AAEA,UAAM;MAAEgB;MAAOC;MAAKL;MAASD;IAAK,IAAIL,UAAUhB;AAKhDT,aAAS2C,MAAO,MAAM;AACrBtD,wBAAmB8C,OAAOC,GAAI;AAC9B7C,eAAUiC,UAAUf,SAAS;QAC5BmC,mBAAmBb;QACnBc,gBAAgBf;MACjB,CAAE;IACH,CAAE;AACF5B,gBAAY;EACb;AAEA,WAAS4C,iBAAiB;AACzBpB,uBAAmB;AACnBR,gBAAaO,UAAUhB,OAAQ;EAChC;AAEA,QAAMsC,kBAAc1C,qBAAQ,KAAM;AAGlC2C,oCAAiB,MAAM;AACtB,QAAKD,YAAYtC,WAAWxB,UAAUuC,UAAUf,SAAU;AACzDqC,qBAAe;AACf5C,kBAAY;IACb;EACD,GAAG,CAAEjB,KAAK,CAAG;AAGb+D,oCAAiB,MAAM;AACtB,QAAK,CAAEX,sBAAsB5B,SAAU;AACtC;IACD;AAEA,QAAKL,IAAIK,QAAQF,cAAc0C,kBAAkB7C,IAAIK,SAAU;AAC9DL,UAAIK,QAAQyC,MAAM;IACnB;AAEAhC,gBAAaO,UAAUhB,OAAQ;AAC/B4B,0BAAsB5B,UAAU;EACjC,GAAG,CAAE4B,sBAAsB5B,OAAO,CAAG;AAErC,QAAM0C,aAAaC,aAAc,CAChChD,KACAiD,gBAAgB,GAChBC,iBAAkB;IAAEC,QAAQ9B;EAAU,CAAE,GACxC+B,kBAAmB;IAClBD,QAAQ9B;IACRe;IACAtB;IACAZ;IACAX;IACAN;IACAa;EACD,CAAE,GACFuD,aAAc,MAAM;AACnBX,mBAAe;AACfC,gBAAYtC,UAAU;EACvB,GAAG,CAAErB,aAAa,GAAGQ,sBAAsB,CAAG,CAAC,CAC9C;AAEF,SAAO;IACNX,OAAOwC,UAAUhB;;;;;;IAMjBiD,UAAUA,MAAMjC,UAAUhB;IAC1BlB,UAAUiD;IACVpC,KAAK+C;EACN;AACD;;;AC/LO,SAASQ,gBAAiBC,OAAOC,YAAa;AACpD,SAAOC,iBAAkBF,KAAM,EAAEG,KAChC,CAAE;IAAEC;EAAK,MAAOA,SAASH,UAC1B;AACD;;;ACRO,SAASI,gBAAiB;EAAEC;EAAOC;EAAKC;EAAcC;AAAK,GAAI;AACrE,MAAKH,QAAQ,MAAMC,OAAOE,KAAMH,KAAK,MAAOI,8BAA+B;AAC1E;EACD;AAEA,SAAOF,aAAcF,KAAK;AAC3B;;;ACZO,SAASK,QAAS;EAAEC;AAAK,GAAI;AACnC,SAAOA,KAAKC,WAAW;AACxB;;;ACIO,SAASC,MAAO;EAAEC;EAASC;EAAcC;EAAMC;EAAOC;AAAI,GAAGC,QAAS;AAC5E,MAAK,OAAOA,WAAW,UAAW;AACjC,WAAOC,iBAAkB,GAAGC,SAAU;EACvC;AAEA,MAAIC,YAAY;AAEhB,SAAON,KAAKH,MAAOM,MAAO,EAAEI,IAAOC,eAAe;AACjD,UAAMC,aAAaH;AACnB,UAAMI,QAAQ;MACbZ,SAASA,QAAQa,MAAOF,YAAYA,aAAaD,UAAUI,MAAO;MAClEb,cAAcA,aAAaY,MAC1BF,YACAA,aAAaD,UAAUI,MACxB;MACAZ,MAAMQ;IACP;AAEAF,iBAAaH,OAAOS,SAASJ,UAAUI;AAEvC,QAAKX,UAAUY,UAAaX,QAAQW,QAAY;AAC/C,UAAKZ,SAASQ,cAAcR,QAAQK,WAAY;AAC/CI,cAAMT,QAAQA,QAAQQ;MACvB,WAAYR,QAAQQ,cAAcP,MAAMO,YAAa;AACpDC,cAAMT,QAAQ;MACf;AAEA,UAAKC,OAAOO,cAAcP,MAAMI,WAAY;AAC3CI,cAAMR,MAAMA,MAAMO;MACnB,WAAYR,QAAQK,aAAaJ,MAAMI,WAAY;AAClDI,cAAMR,MAAMM,UAAUI;MACvB;IACD;AAEA,WAAOF;EACR,CAAE;AACH;AAEA,SAASN,iBACR;EAAEN;EAASC;EAAcC;EAAMC;EAAOC;AAAI,GAC1CO,aAAaR,OACba,WAAWZ,KACV;AACD,MAAKD,UAAUY,UAAaX,QAAQW,QAAY;AAC/C;EACD;AAEA,QAAME,SAAS;IACdjB,SAASA,QAAQa,MAAO,GAAGF,UAAW;IACtCV,cAAcA,aAAaY,MAAO,GAAGF,UAAW;IAChDT,MAAMA,KAAKW,MAAO,GAAGF,UAAW;EACjC;AACA,QAAMO,QAAQ;IACblB,SAASA,QAAQa,MAAOG,QAAS;IACjCf,cAAcA,aAAaY,MAAOG,QAAS;IAC3Cd,MAAMA,KAAKW,MAAOG,QAAS;IAC3Bb,OAAO;IACPC,KAAK;EACN;AAEA,SAAO,CAAEa,QAAQC,KAAK;AACvB;;;ACzDA,SAASC,iBAAkBC,OAAOC,wBAAwBC,SAASC,WAAY;AAC9E,MAAIC,UAAUJ,MAAMK;AAMpB,MACCD,QAAQE,aAAaF,QAAQG,aAC7BP,MAAMQ,gBAAgBJ,QAAQK,UAC9BL,QAAQM,aACP;AACDN,cAAUA,QAAQM;AAElB,WAAQN,QAAQO,YAAa;AAC5BP,gBAAUA,QAAQO;IACnB;EACD;AAEA,MAAKP,QAAQE,aAAaF,QAAQQ,cAAe;AAChDR,cAAUA,QAAQS;EACnB;AAEA,MAAK,CAAET,SAAU;AAChB;EACD;AACA,MAAKA,YAAYH,wBAAyB;AACzC;EACD;AACA,MAAK,CAAEA,uBAAuBa,SAAUV,OAAQ,GAAI;AACnD;EACD;AAEA,QAAMW,WAAWb,WAAYC,YAAY,MAAMA,YAAY;AAQ3D,SAAQC,YAAYH,wBAAyB;AAC5C,QAAKG,QAAQY,QAASD,QAAS,GAAI;AAClC,aAAOX;IACR;AAEAA,cAAUA,QAAQS;EACnB;AACD;AAgBA,SAASI,2BAA4BjB,OAAOC,wBAAyB;AACpE,SAAO;IACNiB,gBAAgBjB;IAChBkB,wBAAwB;AACvB,aAAOlB,uBAAuBa,SAAUd,MAAMK,cAAe,IAC1DL,MAAMmB,sBAAsB,IAC5BlB,uBAAuBkB,sBAAsB;IACjD;EACD;AACD;AAcA,SAASC,UAAWnB,wBAAwBC,SAASC,WAAY;AAChE,MAAK,CAAEF,wBAAyB;AAC/B;EACD;AAEA,QAAM;IAAEoB;EAAc,IAAIpB;AAC1B,QAAM;IAAEqB;EAAY,IAAID;AACxB,QAAME,YAAYD,YAAYE,aAAa;AAE3C,MAAK,CAAED,WAAY;AAClB;EACD;AACA,MAAK,CAAEA,UAAUE,YAAa;AAC7B;EACD;AAEA,QAAMzB,QAAQuB,UAAUG,WAAY,CAAE;AAEtC,MAAK,CAAE1B,SAAS,CAAEA,MAAMK,gBAAiB;AACxC;EACD;AAEA,QAAMsB,gBAAgB5B,iBACrBC,OACAC,wBACAC,SACAC,SACD;AAEA,MAAKwB,eAAgB;AACpB,WAAOA;EACR;AAEA,SAAOV,2BAA4BjB,OAAOC,sBAAuB;AAClE;AAcO,SAAS2B,UAAW;EAAE3B;EAAwB4B,WAAW,CAAC;AAAE,GAAI;AACtE,QAAM;IAAE3B;IAASC;IAAW2B;EAAS,IAAID;AACzC,QAAM,CAAEE,QAAQC,SAAS,QAAKC,uBAAU,MACvCb,UAAWnB,wBAAwBC,SAASC,SAAU,CACvD;AACA,QAAM+B,YAAYC,YAAaL,QAAS;AAExCM,oCAAiB,MAAM;AACtB,QAAK,CAAEnC,wBAAyB;AAC/B;IACD;AAEA,aAASoC,WAAW;AACnBL,gBACCZ,UAAWnB,wBAAwBC,SAASC,SAAU,CACvD;IACD;AAEA,aAASmC,SAAS;AACjBjB,oBAAckB,iBAAkB,mBAAmBF,QAAS;IAC7D;AAEA,aAASG,SAAS;AACjBnB,oBAAcoB,oBAAqB,mBAAmBJ,QAAS;IAChE;AAEA,UAAM;MAAEhB;IAAc,IAAIpB;AAE1B,QACCA,2BAA2BoB,cAAcqB;IAEvC,CAAER,aAAaJ;;;IAIfI,aAAa,CAAEJ,UAChB;AACDE,gBACCZ,UAAWnB,wBAAwBC,SAASC,SAAU,CACvD;AACAmC,aAAO;IACR;AAEArC,2BAAuBsC,iBAAkB,WAAWD,MAAO;AAC3DrC,2BAAuBsC,iBAAkB,YAAYC,MAAO;AAE5D,WAAO,MAAM;AACZA,aAAO;AAEPvC,6BAAuBwC,oBAAqB,WAAWH,MAAO;AAC9DrC,6BAAuBwC,oBAAqB,YAAYD,MAAO;IAChE;EACD,GAAG,CAAEvC,wBAAwBC,SAASC,WAAW2B,UAAUI,SAAS,CAAG;AAEvE,SAAOH;AACR;;;AC9MO,IAAMY,SAAwB,oBAAIC,IAAI;;;ACC7C,SAASC,QAAiB;AAEzB,SAAOC,WAAWC,iBAAiB;AACpC;AAmBe,SAAf,QAAiCC,SAAwB;AACxD,MAAK,CAAEH,MAAM,GAAI;AAChB;EACD;AAGA,MAAKI,OAAOC,IAAKF,OAAQ,GAAI;AAC5B;EACD;AAGAG,UAAQC,KAAMJ,OAAQ;AAKtB,MAAI;AACH,UAAMK,MAAOL,OAAQ;EACtB,SAAUM,IAAI;EACb;AAEDL,SAAOM,IAAKP,OAAQ;AACrB;;;ACjDA,IAAIQ;AAiBG,SAASC,eAAgBC,MAAuB;AAAA,MAAAC;AAEtD,MAAK,aAAa,OAAOD,QAAQ,OAAOA,KAAKE,QAAS,GAAI,GAAI;AAC7D,WAAOF;EACR;AAGA,MAAKG,WAAcL,iBAAkB;AACpC,QACCM,SAASC,kBACTD,SAASC,eAAeC,oBACvB;AACDR,wBAAkBM,SAASC,eACzBC,mBAAoB,EAAG,EACvBC,cAAe,UAAW;IAC7B,OAAO;AACNT,wBAAkBM,SAASG,cAAe,UAAW;IACtD;EACD;AAEAT,kBAAgBU,YAAYR;AAC5B,QAAMS,WAAOR,wBAAGH,gBAAgBY,iBAAW,QAAAT,0BAAA,SAAAA,wBAAI;AAC/CH,kBAAgBU,YAAY;AAmB5B,SAAOC;AACR;",
  "names": ["a", "b", "i", "sprintf", "i", "k", "i", "r", "t", "n", "e", "u", "a", "o", "i", "s", "h", "r", "t", "n", "e", "u", "i", "a", "e", "f", "a", "r", "d", "l", "i", "n", "o", "t", "b", "c", "g", "u", "o", "t", "r", "n", "a", "i", "e", "v", "u", "d", "c", "OBJECT_REPLACEMENT_CHARACTER", "ZWNBSP", "getTextContent", "text", "replace", "OBJECT_REPLACEMENT_CHARACTER", "formatTypes", "state", "action", "type", "reduce", "newFormatTypes", "name", "Object", "fromEntries", "entries", "filter", "key", "names", "includes", "combineReducers", "getFormatTypes", "createSelector", "state", "Object", "values", "formatTypes", "getFormatType", "name", "getFormatTypeForBareElement", "bareElementTagName", "find", "className", "tagName", "getFormatTypeForClassName", "elementClassName", "indexOf", "addFormatTypes", "formatTypes", "type", "Array", "isArray", "removeFormatTypes", "names", "STORE_NAME", "store", "createReduxStore", "reducer", "selectors", "actions", "register", "createElement", "implementation", "html", "body", "createHTMLDocument", "innerHTML", "isFormatEqual", "format1", "format2", "type", "attributes1", "attributes", "attributes2", "keys1", "Object", "keys", "keys2", "length", "i", "name", "normaliseFormats", "value", "newFormats", "formats", "slice", "forEach", "formatsAtIndex", "index", "formatsAtPreviousIndex", "newFormatsAtIndex", "format", "formatIndex", "previousFormat", "isFormatEqual", "mergePair", "a", "b", "formats", "concat", "replacements", "text", "getActiveFormats", "value", "EMPTY_ACTIVE_FORMATS", "formats", "start", "end", "activeFormats", "undefined", "formatsBefore", "formatsAfter", "length", "selectedFormats", "slice", "_activeFormats", "i", "formatsAtIndex", "ii", "format", "find", "_format", "isFormatEqual", "splice", "getFormatType", "name", "select", "richTextStore", "restoreOnAttributes", "attributes", "isEditableTree", "newAttributes", "key", "newKey", "startsWith", "slice", "length", "fromFormat", "type", "tagName", "unregisteredAttributes", "object", "boundaryClass", "formatType", "getFormatType", "elementAttributes", "name", "className", "class", "contentEditable", "contenteditable", "isEqualUntil", "a", "b", "index", "toTree", "value", "preserveWhiteSpace", "createEmpty", "append", "getLastChild", "getParent", "isText", "getText", "remove", "appendText", "onStartIndex", "onEndIndex", "placeholder", "formats", "replacements", "text", "start", "end", "formatsLength", "tree", "activeFormats", "getActiveFormats", "deepestActiveFormat", "lastCharacterFormats", "lastCharacter", "i", "character", "charAt", "shouldInsertPadding", "characterFormats", "pointer", "forEach", "format", "formatIndex", "parent", "newNode", "OBJECT_REPLACEMENT_CHARACTER", "replacement", "innerHTML", "trim", "html", "decodeURIComponent", "undefined", "ZWNBSP", "style", "toHTMLString", "value", "preserveWhiteSpace", "tree", "toTree", "createEmpty", "append", "getLastChild", "getParent", "isText", "getText", "remove", "appendText", "createChildrenHTML", "children", "length", "parent", "object", "text", "push", "index", "indexOf", "splice", "createElementHTML", "type", "attributes", "attributeString", "key", "isValidAttributeName", "escapeAttribute", "map", "child", "html", "undefined", "escapeEditableHTML", "join", "createEmptyValue", "formats", "replacements", "text", "toFormat", "tagName", "attributes", "formatType", "class", "select", "richTextStore", "getFormatTypeForClassName", "replace", "className", "trim", "getFormatTypeForBareElement", "type", "__experimentalCreatePrepareEditableTree", "__experimentalCreateOnChangeEditableValue", "name", "registeredAttributes", "unregisteredAttributes", "_attributes", "key", "contentEditable", "contenteditable", "RichTextData", "constructor", "init", "empty", "fromPlainText", "create", "fromHTMLString", "html", "fromHTMLElement", "htmlElement", "options", "preserveWhiteSpace", "element", "collapseWhiteSpace", "richTextData", "Object", "defineProperty", "value", "innerHTML", "toPlainText", "getTextContent", "toHTMLString", "originalHTML", "valueOf", "toString", "toJSON", "length", "getOwnPropertyNames", "String", "prototype", "hasOwnProperty", "args", "range", "__unstableIsEditableTree", "isEditableTree", "Array", "createElement", "document", "createFromElement", "accumulateSelection", "accumulator", "node", "parentNode", "startContainer", "startOffset", "endContainer", "endOffset", "currentLength", "start", "undefined", "nodeType", "TEXT_NODE", "childNodes", "end", "filterRange", "filter", "nodeValue", "slice", "isRoot", "clone", "cloneNode", "normalize", "from", "forEach", "i", "nodes", "newNodeValue", "test", "indexOf", "startsWith", "endsWith", "ELEMENT_NODE", "CARRIAGE_RETURN", "removeReservedCharacters", "string", "RegExp", "ZWNBSP", "OBJECT_REPLACEMENT_CHARACTER", "hasChildNodes", "index", "nodeName", "toLowerCase", "COMMENT_NODE", "hasAttribute", "getAttribute", "mergePair", "encodeURIComponent", "format", "getAttributes", "mergeFormats", "newFormats", "hasAttributes", "safeName", "isCollapsed", "start", "end", "undefined", "removeFormat", "value", "formatType", "startIndex", "start", "endIndex", "end", "formats", "activeFormats", "newFormats", "slice", "format", "find", "type", "newFormat", "filterFormats", "i", "normaliseFormats", "filter", "index", "length", "insert", "value", "valueToInsert", "startIndex", "start", "endIndex", "end", "formats", "replacements", "text", "create", "index", "length", "normaliseFormats", "slice", "concat", "slice", "value", "startIndex", "start", "endIndex", "end", "formats", "replacements", "text", "undefined", "regions", "document", "getElementsByClassName", "introText", "getElementById", "i", "length", "textContent", "setAttribute", "previousMessage", "message", "replace", "speak", "message", "ariaLive", "clear", "filterMessage", "introText", "document", "getElementById", "containerAssertive", "containerPolite", "textContent", "removeAttribute", "callback", "document", "readyState", "addEventListener", "ariaLive", "container", "document", "createElement", "id", "className", "setAttribute", "body", "appendChild", "introText", "document", "createElement", "id", "className", "textContent", "__", "setAttribute", "body", "appendChild", "setup", "introText", "document", "getElementById", "containerAssertive", "containerPolite", "addIntroText", "addContainer", "domReady", "isRangeEqual", "a", "b", "startContainer", "startOffset", "endContainer", "endOffset", "createPathToNode", "node", "rootNode", "path", "parentNode", "i", "previousSibling", "getNodeByPath", "length", "childNodes", "shift", "offset", "append", "element", "child", "html", "undefined", "innerHTML", "ownerDocument", "createTextNode", "type", "attributes", "createComment", "createElement", "key", "setAttribute", "appendChild", "appendText", "text", "appendData", "getLastChild", "lastChild", "getParent", "isText", "nodeType", "TEXT_NODE", "getText", "nodeValue", "remove", "removeChild", "toDom", "value", "prepareEditableTree", "isEditableTree", "placeholder", "doc", "document", "startPath", "endPath", "formats", "createEmpty", "tree", "toTree", "onStartIndex", "body", "pointer", "onEndIndex", "selection", "apply", "current", "__unstableDomOnly", "applyValue", "start", "applySelection", "future", "futureChild", "firstChild", "currentChild", "isEqualNode", "nodeName", "data", "replaceChild", "currentAttributes", "futureAttributes", "ii", "name", "getAttribute", "removeAttribute", "startContainer", "startOffset", "endContainer", "endOffset", "defaultView", "getSelection", "range", "createRange", "setStart", "setEnd", "activeElement", "rangeCount", "isRangeEqual", "getRangeAt", "removeAllRanges", "addRange", "HTMLElement", "focus", "whiteSpace", "minWidth", "useDefaultStyle", "useCallback", "element", "style", "useBoundaryStyle", "record", "ref", "useRef", "activeFormats", "replacements", "start", "current", "activeReplacement", "useEffect", "length", "boundarySelector", "element", "querySelector", "ownerDocument", "defaultView", "computedStyle", "getComputedStyle", "newColor", "colord", "color", "alpha", "toRgbString", "selector", "rule", "style", "globalStyleId", "globalStyle", "getElementById", "createElement", "id", "head", "appendChild", "innerHTML", "props", "element", "onCopy", "event", "record", "current", "ownerDocument", "isCollapsed", "contains", "activeElement", "selectedRecord", "slice", "plainText", "getTextContent", "html", "toHTMLString", "value", "clipboardData", "setData", "preventDefault", "type", "execCommand", "defaultView", "addEventListener", "removeEventListener", "element", "onClick", "event", "target", "textContent", "isContentEditable", "ownerDocument", "defaultView", "selection", "getSelection", "containsNode", "range", "createRange", "nodeToSelect", "closest", "selectNode", "removeAllRanges", "addRange", "preventDefault", "onFocusIn", "relatedTarget", "contains", "tagName", "addEventListener", "removeEventListener", "EMPTY_ACTIVE_FORMATS", "props", "element", "onKeyDown", "event", "keyCode", "shiftKey", "altKey", "metaKey", "ctrlKey", "LEFT", "RIGHT", "record", "applyRecord", "forceRender", "current", "text", "formats", "start", "end", "activeFormats", "currentActiveFormats", "collapsed", "isCollapsed", "ownerDocument", "defaultView", "direction", "getComputedStyle", "reverseKey", "isReverse", "length", "formatsBefore", "formatsAfter", "destination", "isIncreasing", "every", "format", "index", "newActiveFormatsLength", "_newActiveFormats", "preventDefault", "origin", "source", "newActiveFormats", "slice", "newValue", "addEventListener", "removeEventListener", "remove", "value", "startIndex", "endIndex", "insert", "create", "props", "element", "onKeyDown", "event", "keyCode", "createRecord", "handleChange", "current", "defaultPrevented", "DELETE", "BACKSPACE", "currentValue", "start", "end", "text", "length", "remove", "preventDefault", "addEventListener", "removeEventListener", "updateFormats", "value", "start", "end", "formats", "min", "Math", "max", "formatsBefore", "formatsAfter", "activeFormats", "map", "format", "index", "isFormatEqual", "length", "INSERTION_INPUT_TYPES_TO_IGNORE", "Set", "EMPTY_ACTIVE_FORMATS", "PLACEHOLDER_ATTR_NAME", "fixPlaceholderSelection", "defaultView", "selection", "getSelection", "anchorNode", "anchorOffset", "nodeType", "ELEMENT_NODE", "targetNode", "childNodes", "hasAttribute", "collapseToStart", "props", "element", "ownerDocument", "isComposing", "onInput", "event", "inputType", "record", "applyRecord", "createRecord", "handleChange", "current", "indexOf", "has", "currentValue", "start", "activeFormats", "oldActiveFormats", "change", "updateFormats", "value", "end", "formats", "handleSelectionChange", "onSelectionChange", "contentEditable", "activeElement", "removeEventListener", "text", "oldRecord", "length", "newValue", "_newActiveFormats", "undefined", "newActiveFormats", "getActiveFormats", "domOnly", "onCompositionStart", "querySelector", "remove", "onCompositionEnd", "addEventListener", "onFocus", "isSelected", "parentElement", "closest", "index", "window", "queueMicrotask", "element", "ownerDocument", "defaultView", "selection", "getSelection", "range", "getRange", "rangeCount", "getRangeAt", "onDown", "event", "type", "onCancel", "removeEventListener", "onUp", "isRangeEqual", "dispatchEvent", "Event", "addEventListener", "preventFocusCapture", "element", "ownerDocument", "defaultView", "value", "onPointerDown", "event", "defaultPrevented", "target", "contains", "getAttribute", "setAttribute", "getSelection", "removeAllRanges", "onPointerUp", "addEventListener", "removeEventListener", "allEventListeners", "copyHandler", "selectObject", "formatBoundaries", "deleteHandler", "inputAndSelection", "selectionChangeCompat", "preventFocusCapture", "useEventListeners", "props", "propsRef", "useRef", "useInsertionEffect", "current", "refEffects", "useMemo", "map", "refEffect", "useRefEffect", "element", "cleanups", "effect", "forEach", "cleanup", "useRichText", "value", "selectionStart", "selectionEnd", "placeholder", "onSelectionChange", "preserveWhiteSpace", "onChange", "__unstableDisableFormats", "disableFormats", "__unstableIsSelected", "isSelected", "__unstableDependencies", "__unstableAfterParse", "__unstableBeforeSerialize", "__unstableAddInvisibleFormats", "registry", "useRegistry", "forceRender", "useReducer", "ref", "useRef", "createRecord", "ownerDocument", "defaultView", "current", "selection", "getSelection", "range", "rangeCount", "getRangeAt", "create", "element", "__unstableIsEditableTree", "applyRecord", "newRecord", "domOnly", "apply", "prepareEditableTree", "__unstableDomOnly", "_valueRef", "recordRef", "setRecordFromProps", "RichTextData", "fromHTMLString", "empty", "text", "formats", "replacements", "Array", "length", "start", "end", "hadSelectionUpdateRef", "activeFormats", "undefined", "handleChange", "newFormats", "toHTMLString", "batch", "__unstableFormats", "__unstableText", "applyFromProps", "didMountRef", "useLayoutEffect", "activeElement", "focus", "mergedRefs", "useMergeRefs", "useDefaultStyle", "useBoundaryStyle", "record", "useEventListeners", "useRefEffect", "getValue", "getActiveFormat", "value", "formatType", "getActiveFormats", "find", "type", "getActiveObject", "start", "end", "replacements", "text", "OBJECT_REPLACEMENT_CHARACTER", "isEmpty", "text", "length", "split", "formats", "replacements", "text", "start", "end", "string", "splitAtSelection", "arguments", "nextStart", "map", "substring", "startIndex", "value", "slice", "length", "undefined", "endIndex", "before", "after", "getFormatElement", "range", "editableContentElement", "tagName", "className", "element", "startContainer", "nodeType", "TEXT_NODE", "startOffset", "length", "nextSibling", "firstChild", "ELEMENT_NODE", "parentElement", "contains", "selector", "matches", "createVirtualAnchorElement", "contextElement", "getBoundingClientRect", "getAnchor", "ownerDocument", "defaultView", "selection", "getSelection", "rangeCount", "getRangeAt", "formatElement", "useAnchor", "settings", "isActive", "anchor", "setAnchor", "useState", "wasActive", "usePrevious", "useLayoutEffect", "callback", "attach", "addEventListener", "detach", "removeEventListener", "activeElement", "logged", "Set", "isDev", "globalThis", "SCRIPT_DEBUG", "message", "logged", "has", "console", "warn", "Error", "x", "add", "_decodeTextArea", "decodeEntities", "html", "_decodeTextArea$textC", "indexOf", "undefined", "document", "implementation", "createHTMLDocument", "createElement", "innerHTML", "decoded", "textContent"]
}
