{
  "version": 3,
  "sources": ["../../node_modules/@wordpress/element/build-module/@wordpress/element/src/react.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/create-interpolate-element.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/react-platform.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/utils.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/platform.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/raw-html.js", "../../node_modules/@wordpress/element/build-module/@wordpress/element/src/serialize.js"],
  "sourcesContent": ["/**\n * External dependencies\n */\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport {\n\tChildren,\n\tcloneElement,\n\tComponent,\n\tcreateContext,\n\tcreateElement,\n\tcreateRef,\n\tforwardRef,\n\tFragment,\n\tisValidElement,\n\tmemo,\n\tPureComponent,\n\tStrictMode,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseDeferredValue,\n\tuseEffect,\n\tuseId,\n\tuseMemo,\n\tuseImperativeHandle,\n\tuseInsertionEffect,\n\tuseLayoutEffect,\n\tuseReducer,\n\tuseRef,\n\tuseState,\n\tuseSyncExternalStore,\n\tuseTransition,\n\tstartTransition,\n\tlazy,\n\tSuspense,\n} from 'react';\n\n/**\n * Object containing a React element.\n *\n * @typedef {import('react').ReactElement} Element\n */\n\n/**\n * Object containing a React component.\n *\n * @typedef {import('react').ComponentType} ComponentType\n */\n\n/**\n * Object containing a React synthetic event.\n *\n * @typedef {import('react').SyntheticEvent} SyntheticEvent\n */\n\n/**\n * Object containing a React ref object.\n *\n * @template T\n * @typedef {import('react').RefObject<T>} RefObject<T>\n */\n\n/**\n * Object containing a React ref callback.\n *\n * @template T\n * @typedef {import('react').RefCallback<T>} RefCallback<T>\n */\n\n/**\n * Object containing a React ref.\n *\n * @template T\n * @typedef {import('react').Ref<T>} Ref<T>\n */\n\n/**\n * Object that provides utilities for dealing with React children.\n */\nexport { Children };\n\n/**\n * Creates a copy of an element with extended props.\n *\n * @param {Element} element Element\n * @param {?Object} props   Props to apply to cloned element\n *\n * @return {Element} Cloned element.\n */\nexport { cloneElement };\n\n/**\n * A base class to create WordPress Components (Refs, state and lifecycle hooks)\n */\nexport { Component };\n\n/**\n * Creates a context object containing two components: a provider and consumer.\n *\n * @param {Object} defaultValue A default data stored in the context.\n *\n * @return {Object} Context object.\n */\nexport { createContext };\n\n/**\n * Returns a new element of given type. Type can be either a string tag name or\n * another function which itself returns an element.\n *\n * @param {?(string|Function)} type     Tag name or element creator\n * @param {Object}             props    Element properties, either attribute\n *                                      set to apply to DOM node or values to\n *                                      pass through to element creator\n * @param {...Element}         children Descendant elements\n *\n * @return {Element} Element.\n */\nexport { createElement };\n\n/**\n * Returns an object tracking a reference to a rendered element via its\n * `current` property as either a DOMElement or Element, dependent upon the\n * type of element rendered with the ref attribute.\n *\n * @return {Object} Ref object.\n */\nexport { createRef };\n\n/**\n * Component enhancer used to enable passing a ref to its wrapped component.\n * Pass a function argument which receives `props` and `ref` as its arguments,\n * returning an element using the forwarded ref. The return value is a new\n * component which forwards its ref.\n *\n * @param {Function} forwarder Function passed `props` and `ref`, expected to\n *                             return an element.\n *\n * @return {Component} Enhanced component.\n */\nexport { forwardRef };\n\n/**\n * A component which renders its children without any wrapping element.\n */\nexport { Fragment };\n\n/**\n * Checks if an object is a valid React Element.\n *\n * @param {Object} objectToCheck The object to be checked.\n *\n * @return {boolean} true if objectToTest is a valid React Element and false otherwise.\n */\nexport { isValidElement };\n\n/**\n * @see https://react.dev/reference/react/memo\n */\nexport { memo };\n\n/**\n * Component that activates additional checks and warnings for its descendants.\n */\nexport { StrictMode };\n\n/**\n * @see https://react.dev/reference/react/useCallback\n */\nexport { useCallback };\n\n/**\n * @see https://react.dev/reference/react/useContext\n */\nexport { useContext };\n\n/**\n * @see https://react.dev/reference/react/useDebugValue\n */\nexport { useDebugValue };\n\n/**\n * @see https://react.dev/reference/react/useDeferredValue\n */\nexport { useDeferredValue };\n\n/**\n * @see https://react.dev/reference/react/useEffect\n */\nexport { useEffect };\n\n/**\n * @see https://react.dev/reference/react/useId\n */\nexport { useId };\n\n/**\n * @see https://react.dev/reference/react/useImperativeHandle\n */\nexport { useImperativeHandle };\n\n/**\n * @see https://react.dev/reference/react/useInsertionEffect\n */\nexport { useInsertionEffect };\n\n/**\n * @see https://react.dev/reference/react/useLayoutEffect\n */\nexport { useLayoutEffect };\n\n/**\n * @see https://react.dev/reference/react/useMemo\n */\nexport { useMemo };\n\n/**\n * @see https://react.dev/reference/react/useReducer\n */\nexport { useReducer };\n\n/**\n * @see https://react.dev/reference/react/useRef\n */\nexport { useRef };\n\n/**\n * @see https://react.dev/reference/react/useState\n */\nexport { useState };\n\n/**\n * @see https://react.dev/reference/react/useSyncExternalStore\n */\nexport { useSyncExternalStore };\n\n/**\n * @see https://react.dev/reference/react/useTransition\n */\nexport { useTransition };\n\n/**\n * @see https://react.dev/reference/react/startTransition\n */\nexport { startTransition };\n\n/**\n * @see https://react.dev/reference/react/lazy\n */\nexport { lazy };\n\n/**\n * @see https://react.dev/reference/react/Suspense\n */\nexport { Suspense };\n\n/**\n * @see https://react.dev/reference/react/PureComponent\n */\nexport { PureComponent };\n\n/**\n * Concatenate two or more React children objects.\n *\n * @param {...?Object} childrenArguments Array of children arguments (array of arrays/strings/objects) to concatenate.\n *\n * @return {Array} The concatenated value.\n */\nexport function concatChildren( ...childrenArguments ) {\n\treturn childrenArguments.reduce( ( accumulator, children, i ) => {\n\t\tChildren.forEach( children, ( child, j ) => {\n\t\t\tif ( child && 'string' !== typeof child ) {\n\t\t\t\tchild = cloneElement( child, {\n\t\t\t\t\tkey: [ i, j ].join(),\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\taccumulator.push( child );\n\t\t} );\n\n\t\treturn accumulator;\n\t}, [] );\n}\n\n/**\n * Switches the nodeName of all the elements in the children object.\n *\n * @param {?Object} children Children object.\n * @param {string}  nodeName Node name.\n *\n * @return {?Object} The updated children object.\n */\nexport function switchChildrenNodeName( children, nodeName ) {\n\treturn (\n\t\tchildren &&\n\t\tChildren.map( children, ( elt, index ) => {\n\t\t\tif ( typeof elt?.valueOf() === 'string' ) {\n\t\t\t\treturn createElement( nodeName, { key: index }, elt );\n\t\t\t}\n\t\t\tconst { children: childrenProp, ...props } = elt.props;\n\t\t\treturn createElement(\n\t\t\t\tnodeName,\n\t\t\t\t{ key: index, ...props },\n\t\t\t\tchildrenProp\n\t\t\t);\n\t\t} )\n\t);\n}\n", "/**\n * Internal dependencies\n */\nimport { createElement, cloneElement, Fragment, isValidElement } from './react';\n\n/**\n * Object containing a React element.\n *\n * @typedef {import('react').ReactElement} Element\n */\n\nlet indoc, offset, output, stack;\n\n/**\n * Matches tags in the localized string\n *\n * This is used for extracting the tag pattern groups for parsing the localized\n * string and along with the map converting it to a react element.\n *\n * There are four references extracted using this tokenizer:\n *\n * match: Full match of the tag (i.e. <strong>, </strong>, <br/>)\n * isClosing: The closing slash, if it exists.\n * name: The name portion of the tag (strong, br) (if )\n * isSelfClosed: The slash on a self closing tag, if it exists.\n *\n * @type {RegExp}\n */\nconst tokenizer = /<(\\/)?(\\w+)\\s*(\\/)?>/g;\n\n/**\n * The stack frame tracking parse progress.\n *\n * @typedef Frame\n *\n * @property {Element}   element            A parent element which may still have\n * @property {number}    tokenStart         Offset at which parent element first\n *                                          appears.\n * @property {number}    tokenLength        Length of string marking start of parent\n *                                          element.\n * @property {number}    [prevOffset]       Running offset at which parsing should\n *                                          continue.\n * @property {number}    [leadingTextStart] Offset at which last closing element\n *                                          finished, used for finding text between\n *                                          elements.\n * @property {Element[]} children           Children.\n */\n\n/**\n * Tracks recursive-descent parse state.\n *\n * This is a Stack frame holding parent elements until all children have been\n * parsed.\n *\n * @private\n * @param {Element} element            A parent element which may still have\n *                                     nested children not yet parsed.\n * @param {number}  tokenStart         Offset at which parent element first\n *                                     appears.\n * @param {number}  tokenLength        Length of string marking start of parent\n *                                     element.\n * @param {number}  [prevOffset]       Running offset at which parsing should\n *                                     continue.\n * @param {number}  [leadingTextStart] Offset at which last closing element\n *                                     finished, used for finding text between\n *                                     elements.\n *\n * @return {Frame} The stack frame tracking parse progress.\n */\nfunction createFrame(\n\telement,\n\ttokenStart,\n\ttokenLength,\n\tprevOffset,\n\tleadingTextStart\n) {\n\treturn {\n\t\telement,\n\t\ttokenStart,\n\t\ttokenLength,\n\t\tprevOffset,\n\t\tleadingTextStart,\n\t\tchildren: [],\n\t};\n}\n\n/**\n * This function creates an interpolated element from a passed in string with\n * specific tags matching how the string should be converted to an element via\n * the conversion map value.\n *\n * @example\n * For example, for the given string:\n *\n * \"This is a <span>string</span> with <a>a link</a> and a self-closing\n * <CustomComponentB/> tag\"\n *\n * You would have something like this as the conversionMap value:\n *\n * ```js\n * {\n *     span: <span />,\n *     a: <a href={ 'https://github.com' } />,\n *     CustomComponentB: <CustomComponent />,\n * }\n * ```\n *\n * @param {string}                  interpolatedString The interpolation string to be parsed.\n * @param {Record<string, Element>} conversionMap      The map used to convert the string to\n *                                                     a react element.\n * @throws {TypeError}\n * @return {Element}  A wp element.\n */\nconst createInterpolateElement = ( interpolatedString, conversionMap ) => {\n\tindoc = interpolatedString;\n\toffset = 0;\n\toutput = [];\n\tstack = [];\n\ttokenizer.lastIndex = 0;\n\n\tif ( ! isValidConversionMap( conversionMap ) ) {\n\t\tthrow new TypeError(\n\t\t\t'The conversionMap provided is not valid. It must be an object with values that are React Elements'\n\t\t);\n\t}\n\n\tdo {\n\t\t// twiddle our thumbs\n\t} while ( proceed( conversionMap ) );\n\treturn createElement( Fragment, null, ...output );\n};\n\n/**\n * Validate conversion map.\n *\n * A map is considered valid if it's an object and every value in the object\n * is a React Element\n *\n * @private\n *\n * @param {Object} conversionMap The map being validated.\n *\n * @return {boolean}  True means the map is valid.\n */\nconst isValidConversionMap = ( conversionMap ) => {\n\tconst isObject = typeof conversionMap === 'object';\n\tconst values = isObject && Object.values( conversionMap );\n\treturn (\n\t\tisObject &&\n\t\tvalues.length &&\n\t\tvalues.every( ( element ) => isValidElement( element ) )\n\t);\n};\n\n/**\n * This is the iterator over the matches in the string.\n *\n * @private\n *\n * @param {Object} conversionMap The conversion map for the string.\n *\n * @return {boolean} true for continuing to iterate, false for finished.\n */\nfunction proceed( conversionMap ) {\n\tconst next = nextToken();\n\tconst [ tokenType, name, startOffset, tokenLength ] = next;\n\tconst stackDepth = stack.length;\n\tconst leadingTextStart = startOffset > offset ? offset : null;\n\tif ( ! conversionMap[ name ] ) {\n\t\taddText();\n\t\treturn false;\n\t}\n\tswitch ( tokenType ) {\n\t\tcase 'no-more-tokens':\n\t\t\tif ( stackDepth !== 0 ) {\n\t\t\t\tconst { leadingTextStart: stackLeadingText, tokenStart } =\n\t\t\t\t\tstack.pop();\n\t\t\t\toutput.push( indoc.substr( stackLeadingText, tokenStart ) );\n\t\t\t}\n\t\t\taddText();\n\t\t\treturn false;\n\n\t\tcase 'self-closed':\n\t\t\tif ( 0 === stackDepth ) {\n\t\t\t\tif ( null !== leadingTextStart ) {\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tindoc.substr(\n\t\t\t\t\t\t\tleadingTextStart,\n\t\t\t\t\t\t\tstartOffset - leadingTextStart\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\toutput.push( conversionMap[ name ] );\n\t\t\t\toffset = startOffset + tokenLength;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Otherwise we found an inner element.\n\t\t\taddChild(\n\t\t\t\tcreateFrame( conversionMap[ name ], startOffset, tokenLength )\n\t\t\t);\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tcase 'opener':\n\t\t\tstack.push(\n\t\t\t\tcreateFrame(\n\t\t\t\t\tconversionMap[ name ],\n\t\t\t\t\tstartOffset,\n\t\t\t\t\ttokenLength,\n\t\t\t\t\tstartOffset + tokenLength,\n\t\t\t\t\tleadingTextStart\n\t\t\t\t)\n\t\t\t);\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tcase 'closer':\n\t\t\t// If we're not nesting then this is easy - close the block.\n\t\t\tif ( 1 === stackDepth ) {\n\t\t\t\tcloseOuterElement( startOffset );\n\t\t\t\toffset = startOffset + tokenLength;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Otherwise we're nested and we have to close out the current\n\t\t\t// block and add it as a innerBlock to the parent.\n\t\t\tconst stackTop = stack.pop();\n\t\t\tconst text = indoc.substr(\n\t\t\t\tstackTop.prevOffset,\n\t\t\t\tstartOffset - stackTop.prevOffset\n\t\t\t);\n\t\t\tstackTop.children.push( text );\n\t\t\tstackTop.prevOffset = startOffset + tokenLength;\n\t\t\tconst frame = createFrame(\n\t\t\t\tstackTop.element,\n\t\t\t\tstackTop.tokenStart,\n\t\t\t\tstackTop.tokenLength,\n\t\t\t\tstartOffset + tokenLength\n\t\t\t);\n\t\t\tframe.children = stackTop.children;\n\t\t\taddChild( frame );\n\t\t\toffset = startOffset + tokenLength;\n\t\t\treturn true;\n\n\t\tdefault:\n\t\t\taddText();\n\t\t\treturn false;\n\t}\n}\n\n/**\n * Grabs the next token match in the string and returns it's details.\n *\n * @private\n *\n * @return {Array}  An array of details for the token matched.\n */\nfunction nextToken() {\n\tconst matches = tokenizer.exec( indoc );\n\t// We have no more tokens.\n\tif ( null === matches ) {\n\t\treturn [ 'no-more-tokens' ];\n\t}\n\tconst startedAt = matches.index;\n\tconst [ match, isClosing, name, isSelfClosed ] = matches;\n\tconst length = match.length;\n\tif ( isSelfClosed ) {\n\t\treturn [ 'self-closed', name, startedAt, length ];\n\t}\n\tif ( isClosing ) {\n\t\treturn [ 'closer', name, startedAt, length ];\n\t}\n\treturn [ 'opener', name, startedAt, length ];\n}\n\n/**\n * Pushes text extracted from the indoc string to the output stack given the\n * current rawLength value and offset (if rawLength is provided ) or the\n * indoc.length and offset.\n *\n * @private\n */\nfunction addText() {\n\tconst length = indoc.length - offset;\n\tif ( 0 === length ) {\n\t\treturn;\n\t}\n\toutput.push( indoc.substr( offset, length ) );\n}\n\n/**\n * Pushes a child element to the associated parent element's children for the\n * parent currently active in the stack.\n *\n * @private\n *\n * @param {Frame} frame The Frame containing the child element and it's\n *                      token information.\n */\nfunction addChild( frame ) {\n\tconst { element, tokenStart, tokenLength, prevOffset, children } = frame;\n\tconst parent = stack[ stack.length - 1 ];\n\tconst text = indoc.substr(\n\t\tparent.prevOffset,\n\t\ttokenStart - parent.prevOffset\n\t);\n\n\tif ( text ) {\n\t\tparent.children.push( text );\n\t}\n\n\tparent.children.push( cloneElement( element, null, ...children ) );\n\tparent.prevOffset = prevOffset ? prevOffset : tokenStart + tokenLength;\n}\n\n/**\n * This is called for closing tags. It creates the element currently active in\n * the stack.\n *\n * @private\n *\n * @param {number} endOffset Offset at which the closing tag for the element\n *                           begins in the string. If this is greater than the\n *                           prevOffset attached to the element, then this\n *                           helps capture any remaining nested text nodes in\n *                           the element.\n */\nfunction closeOuterElement( endOffset ) {\n\tconst { element, leadingTextStart, prevOffset, tokenStart, children } =\n\t\tstack.pop();\n\n\tconst text = endOffset\n\t\t? indoc.substr( prevOffset, endOffset - prevOffset )\n\t\t: indoc.substr( prevOffset );\n\n\tif ( text ) {\n\t\tchildren.push( text );\n\t}\n\n\tif ( null !== leadingTextStart ) {\n\t\toutput.push(\n\t\t\tindoc.substr( leadingTextStart, tokenStart - leadingTextStart )\n\t\t);\n\t}\n\n\toutput.push( cloneElement( element, null, ...children ) );\n}\n\nexport default createInterpolateElement;\n", "/**\n * External dependencies\n */\nimport {\n\tcreatePortal,\n\tfindDOMNode,\n\tflushSync,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n} from 'react-dom';\nimport { createRoot, hydrateRoot } from 'react-dom/client';\n\n/**\n * Creates a portal into which a component can be rendered.\n *\n * @see https://github.com/facebook/react/issues/10309#issuecomment-318433235\n *\n * @param {import('react').ReactElement} child     Any renderable child, such as an element,\n *                                                 string, or fragment.\n * @param {HTMLElement}                  container DOM node into which element should be rendered.\n */\nexport { createPortal };\n\n/**\n * Finds the dom node of a React component.\n *\n * @param {import('react').ComponentType} component Component's instance.\n */\nexport { findDOMNode };\n\n/**\n * Forces React to flush any updates inside the provided callback synchronously.\n *\n * @param {Function} callback Callback to run synchronously.\n */\nexport { flushSync };\n\n/**\n * Renders a given element into the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `createRoot` instead.\n * @see https://react.dev/reference/react-dom/render\n */\nexport { render };\n\n/**\n * Hydrates a given element into the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `hydrateRoot` instead.\n * @see https://react.dev/reference/react-dom/hydrate\n */\nexport { hydrate };\n\n/**\n * Creates a new React root for the target DOM node.\n *\n * @since 6.2.0 Introduced in WordPress core.\n * @see https://react.dev/reference/react-dom/client/createRoot\n */\nexport { createRoot };\n\n/**\n * Creates a new React root for the target DOM node and hydrates it with a pre-generated markup.\n *\n * @since 6.2.0 Introduced in WordPress core.\n * @see https://react.dev/reference/react-dom/client/hydrateRoot\n */\nexport { hydrateRoot };\n\n/**\n * Removes any mounted element from the target DOM node.\n *\n * @deprecated since WordPress 6.2.0. Use `root.unmount()` instead.\n * @see https://react.dev/reference/react-dom/unmountComponentAtNode\n */\nexport { unmountComponentAtNode };\n", "/**\n * Checks if the provided WP element is empty.\n *\n * @param {*} element WP element to check.\n * @return {boolean} True when an element is considered empty.\n */\nexport const isEmptyElement = ( element ) => {\n\tif ( typeof element === 'number' ) {\n\t\treturn false;\n\t}\n\n\tif ( typeof element?.valueOf() === 'string' || Array.isArray( element ) ) {\n\t\treturn ! element.length;\n\t}\n\n\treturn ! element;\n};\n", "/**\n * Parts of this source were derived and modified from react-native-web,\n * released under the MIT license.\n *\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n */\nconst Platform = {\n\tOS: 'web',\n\tselect: ( spec ) => ( 'web' in spec ? spec.web : spec.default ),\n\tisWeb: true,\n};\n/**\n * Component used to detect the current Platform being used.\n * Use Platform.OS === 'web' to detect if running on web enviroment.\n *\n * This is the same concept as the React Native implementation.\n *\n * @see https://reactnative.dev/docs/platform-specific-code#platform-module\n *\n * Here is an example of how to use the select method:\n * @example\n * ```js\n * import { Platform } from '@wordpress/element';\n *\n * const placeholderLabel = Platform.select( {\n *   native: __( 'Add media' ),\n *   web: __( 'Drag images, upload new ones or select files from your library.' ),\n * } );\n * ```\n */\nexport default Platform;\n", "/**\n * Internal dependencies\n */\nimport { Children, createElement } from './react';\n\n/** @typedef {{children: string} & import('react').ComponentPropsWithoutRef<'div'>} RawHTMLProps */\n\n/**\n * Component used as equivalent of Fragment with unescaped HTML, in cases where\n * it is desirable to render dangerous HTML without needing a wrapper element.\n * To preserve additional props, a `div` wrapper _will_ be created if any props\n * aside from `children` are passed.\n *\n * @param {RawHTMLProps} props Children should be a string of HTML or an array\n *                             of strings. Other props will be passed through\n *                             to the div wrapper.\n *\n * @return {JSX.Element} Dangerously-rendering component.\n */\nexport default function RawHTML( { children, ...props } ) {\n\tlet rawHtml = '';\n\n\t// Cast children as an array, and concatenate each element if it is a string.\n\tChildren.toArray( children ).forEach( ( child ) => {\n\t\tif ( typeof child === 'string' && child.trim() !== '' ) {\n\t\t\trawHtml += child;\n\t\t}\n\t} );\n\n\t// The `div` wrapper will be stripped by the `renderElement` serializer in\n\t// `./serialize.js` unless there are non-children props present.\n\treturn createElement( 'div', {\n\t\tdangerouslySetInnerHTML: { __html: rawHtml },\n\t\t...props,\n\t} );\n}\n", "/**\n * Parts of this source were derived and modified from fast-react-render,\n * released under the MIT license.\n *\n * https://github.com/alt-j/fast-react-render\n *\n * Copyright (c) 2016 Andrey Morozov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\nimport { paramCase as kebabCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tescapeHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\nimport { createContext, Fragment, StrictMode, forwardRef } from './react';\nimport RawHTML from './raw-html';\n\n/** @typedef {import('react').ReactElement} ReactElement */\n\nconst { Provider, Consumer } = createContext( undefined );\nconst ForwardRef = forwardRef( () => {\n\treturn null;\n} );\n\n/**\n * Valid attribute types.\n *\n * @type {Set<string>}\n */\nconst ATTRIBUTES_TYPES = new Set( [ 'string', 'boolean', 'number' ] );\n\n/**\n * Element tags which can be self-closing.\n *\n * @type {Set<string>}\n */\nconst SELF_CLOSING_TAGS = new Set( [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr',\n] );\n\n/**\n * Boolean attributes are attributes whose presence as being assigned is\n * meaningful, even if only empty.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => tr.lastChild.textContent.indexOf( 'Boolean attribute' ) !== -1 )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * @type {Set<string>}\n */\nconst BOOLEAN_ATTRIBUTES = new Set( [\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'allowusermedia',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'download',\n\t'formnovalidate',\n\t'hidden',\n\t'ismap',\n\t'itemscope',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected',\n\t'typemustmatch',\n] );\n\n/**\n * Enumerated attributes are attributes which must be of a specific value form.\n * Like boolean attributes, these are meaningful if specified, even if not of a\n * valid enumerated value.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#enumerated-attribute\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => /^(\"(.+?)\";?\\s*)+/.test( tr.lastChild.textContent.trim() ) )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * Some notable omissions:\n *\n *  - `alt`: https://blog.whatwg.org/omit-alt\n *\n * @type {Set<string>}\n */\nconst ENUMERATED_ATTRIBUTES = new Set( [\n\t'autocapitalize',\n\t'autocomplete',\n\t'charset',\n\t'contenteditable',\n\t'crossorigin',\n\t'decoding',\n\t'dir',\n\t'draggable',\n\t'enctype',\n\t'formenctype',\n\t'formmethod',\n\t'http-equiv',\n\t'inputmode',\n\t'kind',\n\t'method',\n\t'preload',\n\t'scope',\n\t'shape',\n\t'spellcheck',\n\t'translate',\n\t'type',\n\t'wrap',\n] );\n\n/**\n * Set of CSS style properties which support assignment of unitless numbers.\n * Used in rendering of style properties, where `px` unit is assumed unless\n * property is included in this set or value is zero.\n *\n * Generated via:\n *\n * Object.entries( document.createElement( 'div' ).style )\n *     .filter( ( [ key ] ) => (\n *         ! /^(webkit|ms|moz)/.test( key ) &&\n *         ( e.style[ key ] = 10 ) &&\n *         e.style[ key ] === '10'\n *     ) )\n *     .map( ( [ key ] ) => key )\n *     .sort();\n *\n * @type {Set<string>}\n */\nconst CSS_PROPERTIES_SUPPORTS_UNITLESS = new Set( [\n\t'animation',\n\t'animationIterationCount',\n\t'baselineShift',\n\t'borderImageOutset',\n\t'borderImageSlice',\n\t'borderImageWidth',\n\t'columnCount',\n\t'cx',\n\t'cy',\n\t'fillOpacity',\n\t'flexGrow',\n\t'flexShrink',\n\t'floodOpacity',\n\t'fontWeight',\n\t'gridColumnEnd',\n\t'gridColumnStart',\n\t'gridRowEnd',\n\t'gridRowStart',\n\t'lineHeight',\n\t'opacity',\n\t'order',\n\t'orphans',\n\t'r',\n\t'rx',\n\t'ry',\n\t'shapeImageThreshold',\n\t'stopOpacity',\n\t'strokeDasharray',\n\t'strokeDashoffset',\n\t'strokeMiterlimit',\n\t'strokeOpacity',\n\t'strokeWidth',\n\t'tabSize',\n\t'widows',\n\t'x',\n\t'y',\n\t'zIndex',\n\t'zoom',\n] );\n\n/**\n * Returns true if the specified string is prefixed by one of an array of\n * possible prefixes.\n *\n * @param {string}   string   String to check.\n * @param {string[]} prefixes Possible prefixes.\n *\n * @return {boolean} Whether string has prefix.\n */\nexport function hasPrefix( string, prefixes ) {\n\treturn prefixes.some( ( prefix ) => string.indexOf( prefix ) === 0 );\n}\n\n/**\n * Returns true if the given prop name should be ignored in attributes\n * serialization, or false otherwise.\n *\n * @param {string} attribute Attribute to check.\n *\n * @return {boolean} Whether attribute should be ignored.\n */\nfunction isInternalAttribute( attribute ) {\n\treturn 'key' === attribute || 'children' === attribute;\n}\n\n/**\n * Returns the normal form of the element's attribute value for HTML.\n *\n * @param {string} attribute Attribute name.\n * @param {*}      value     Non-normalized attribute value.\n *\n * @return {*} Normalized attribute value.\n */\nfunction getNormalAttributeValue( attribute, value ) {\n\tswitch ( attribute ) {\n\t\tcase 'style':\n\t\t\treturn renderStyle( value );\n\t}\n\n\treturn value;\n}\n/**\n * This is a map of all SVG attributes that have dashes. Map(lower case prop => dashed lower case attribute).\n * We need this to render e.g strokeWidth as stroke-width.\n *\n * List from: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute.\n */\nconst SVG_ATTRIBUTE_WITH_DASHES_LIST = [\n\t'accentHeight',\n\t'alignmentBaseline',\n\t'arabicForm',\n\t'baselineShift',\n\t'capHeight',\n\t'clipPath',\n\t'clipRule',\n\t'colorInterpolation',\n\t'colorInterpolationFilters',\n\t'colorProfile',\n\t'colorRendering',\n\t'dominantBaseline',\n\t'enableBackground',\n\t'fillOpacity',\n\t'fillRule',\n\t'floodColor',\n\t'floodOpacity',\n\t'fontFamily',\n\t'fontSize',\n\t'fontSizeAdjust',\n\t'fontStretch',\n\t'fontStyle',\n\t'fontVariant',\n\t'fontWeight',\n\t'glyphName',\n\t'glyphOrientationHorizontal',\n\t'glyphOrientationVertical',\n\t'horizAdvX',\n\t'horizOriginX',\n\t'imageRendering',\n\t'letterSpacing',\n\t'lightingColor',\n\t'markerEnd',\n\t'markerMid',\n\t'markerStart',\n\t'overlinePosition',\n\t'overlineThickness',\n\t'paintOrder',\n\t'panose1',\n\t'pointerEvents',\n\t'renderingIntent',\n\t'shapeRendering',\n\t'stopColor',\n\t'stopOpacity',\n\t'strikethroughPosition',\n\t'strikethroughThickness',\n\t'strokeDasharray',\n\t'strokeDashoffset',\n\t'strokeLinecap',\n\t'strokeLinejoin',\n\t'strokeMiterlimit',\n\t'strokeOpacity',\n\t'strokeWidth',\n\t'textAnchor',\n\t'textDecoration',\n\t'textRendering',\n\t'underlinePosition',\n\t'underlineThickness',\n\t'unicodeBidi',\n\t'unicodeRange',\n\t'unitsPerEm',\n\t'vAlphabetic',\n\t'vHanging',\n\t'vIdeographic',\n\t'vMathematical',\n\t'vectorEffect',\n\t'vertAdvY',\n\t'vertOriginX',\n\t'vertOriginY',\n\t'wordSpacing',\n\t'writingMode',\n\t'xmlnsXlink',\n\t'xHeight',\n].reduce( ( map, attribute ) => {\n\t// The keys are lower-cased for more robust lookup.\n\tmap[ attribute.toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * This is a map of all case-sensitive SVG attributes. Map(lowercase key => proper case attribute).\n * The keys are lower-cased for more robust lookup.\n * Note that this list only contains attributes that contain at least one capital letter.\n * Lowercase attributes don't need mapping, since we lowercase all attributes by default.\n */\nconst CASE_SENSITIVE_SVG_ATTRIBUTES = [\n\t'allowReorder',\n\t'attributeName',\n\t'attributeType',\n\t'autoReverse',\n\t'baseFrequency',\n\t'baseProfile',\n\t'calcMode',\n\t'clipPathUnits',\n\t'contentScriptType',\n\t'contentStyleType',\n\t'diffuseConstant',\n\t'edgeMode',\n\t'externalResourcesRequired',\n\t'filterRes',\n\t'filterUnits',\n\t'glyphRef',\n\t'gradientTransform',\n\t'gradientUnits',\n\t'kernelMatrix',\n\t'kernelUnitLength',\n\t'keyPoints',\n\t'keySplines',\n\t'keyTimes',\n\t'lengthAdjust',\n\t'limitingConeAngle',\n\t'markerHeight',\n\t'markerUnits',\n\t'markerWidth',\n\t'maskContentUnits',\n\t'maskUnits',\n\t'numOctaves',\n\t'pathLength',\n\t'patternContentUnits',\n\t'patternTransform',\n\t'patternUnits',\n\t'pointsAtX',\n\t'pointsAtY',\n\t'pointsAtZ',\n\t'preserveAlpha',\n\t'preserveAspectRatio',\n\t'primitiveUnits',\n\t'refX',\n\t'refY',\n\t'repeatCount',\n\t'repeatDur',\n\t'requiredExtensions',\n\t'requiredFeatures',\n\t'specularConstant',\n\t'specularExponent',\n\t'spreadMethod',\n\t'startOffset',\n\t'stdDeviation',\n\t'stitchTiles',\n\t'suppressContentEditableWarning',\n\t'suppressHydrationWarning',\n\t'surfaceScale',\n\t'systemLanguage',\n\t'tableValues',\n\t'targetX',\n\t'targetY',\n\t'textLength',\n\t'viewBox',\n\t'viewTarget',\n\t'xChannelSelector',\n\t'yChannelSelector',\n].reduce( ( map, attribute ) => {\n\t// The keys are lower-cased for more robust lookup.\n\tmap[ attribute.toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * This is a map of all SVG attributes that have colons.\n * Keys are lower-cased and stripped of their colons for more robust lookup.\n */\nconst SVG_ATTRIBUTES_WITH_COLONS = [\n\t'xlink:actuate',\n\t'xlink:arcrole',\n\t'xlink:href',\n\t'xlink:role',\n\t'xlink:show',\n\t'xlink:title',\n\t'xlink:type',\n\t'xml:base',\n\t'xml:lang',\n\t'xml:space',\n\t'xmlns:xlink',\n].reduce( ( map, attribute ) => {\n\tmap[ attribute.replace( ':', '' ).toLowerCase() ] = attribute;\n\treturn map;\n}, {} );\n\n/**\n * Returns the normal form of the element's attribute name for HTML.\n *\n * @param {string} attribute Non-normalized attribute name.\n *\n * @return {string} Normalized attribute name.\n */\nfunction getNormalAttributeName( attribute ) {\n\tswitch ( attribute ) {\n\t\tcase 'htmlFor':\n\t\t\treturn 'for';\n\n\t\tcase 'className':\n\t\t\treturn 'class';\n\t}\n\tconst attributeLowerCase = attribute.toLowerCase();\n\n\tif ( CASE_SENSITIVE_SVG_ATTRIBUTES[ attributeLowerCase ] ) {\n\t\treturn CASE_SENSITIVE_SVG_ATTRIBUTES[ attributeLowerCase ];\n\t} else if ( SVG_ATTRIBUTE_WITH_DASHES_LIST[ attributeLowerCase ] ) {\n\t\treturn kebabCase(\n\t\t\tSVG_ATTRIBUTE_WITH_DASHES_LIST[ attributeLowerCase ]\n\t\t);\n\t} else if ( SVG_ATTRIBUTES_WITH_COLONS[ attributeLowerCase ] ) {\n\t\treturn SVG_ATTRIBUTES_WITH_COLONS[ attributeLowerCase ];\n\t}\n\n\treturn attributeLowerCase;\n}\n\n/**\n * Returns the normal form of the style property name for HTML.\n *\n * - Converts property names to kebab-case, e.g. 'backgroundColor' → 'background-color'\n * - Leaves custom attributes alone, e.g. '--myBackgroundColor' → '--myBackgroundColor'\n * - Converts vendor-prefixed property names to -kebab-case, e.g. 'MozTransform' → '-moz-transform'\n *\n * @param {string} property Property name.\n *\n * @return {string} Normalized property name.\n */\nfunction getNormalStylePropertyName( property ) {\n\tif ( property.startsWith( '--' ) ) {\n\t\treturn property;\n\t}\n\n\tif ( hasPrefix( property, [ 'ms', 'O', 'Moz', 'Webkit' ] ) ) {\n\t\treturn '-' + kebabCase( property );\n\t}\n\n\treturn kebabCase( property );\n}\n\n/**\n * Returns the normal form of the style property value for HTML. Appends a\n * default pixel unit if numeric, not a unitless property, and not zero.\n *\n * @param {string} property Property name.\n * @param {*}      value    Non-normalized property value.\n *\n * @return {*} Normalized property value.\n */\nfunction getNormalStylePropertyValue( property, value ) {\n\tif (\n\t\ttypeof value === 'number' &&\n\t\t0 !== value &&\n\t\t! CSS_PROPERTIES_SUPPORTS_UNITLESS.has( property )\n\t) {\n\t\treturn value + 'px';\n\t}\n\n\treturn value;\n}\n\n/**\n * Serializes a React element to string.\n *\n * @param {import('react').ReactNode} element         Element to serialize.\n * @param {Object}                    [context]       Context object.\n * @param {Object}                    [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderElement( element, context, legacyContext = {} ) {\n\tif ( null === element || undefined === element || false === element ) {\n\t\treturn '';\n\t}\n\n\tif ( Array.isArray( element ) ) {\n\t\treturn renderChildren( element, context, legacyContext );\n\t}\n\n\tswitch ( typeof element ) {\n\t\tcase 'string':\n\t\t\treturn escapeHTML( element );\n\n\t\tcase 'number':\n\t\t\treturn element.toString();\n\t}\n\n\tconst { type, props } = /** @type {{type?: any, props?: any}} */ (\n\t\telement\n\t);\n\n\tswitch ( type ) {\n\t\tcase StrictMode:\n\t\tcase Fragment:\n\t\t\treturn renderChildren( props.children, context, legacyContext );\n\n\t\tcase RawHTML:\n\t\t\tconst { children, ...wrapperProps } = props;\n\n\t\t\treturn renderNativeComponent(\n\t\t\t\t! Object.keys( wrapperProps ).length ? null : 'div',\n\t\t\t\t{\n\t\t\t\t\t...wrapperProps,\n\t\t\t\t\tdangerouslySetInnerHTML: { __html: children },\n\t\t\t\t},\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\tswitch ( typeof type ) {\n\t\tcase 'string':\n\t\t\treturn renderNativeComponent( type, props, context, legacyContext );\n\n\t\tcase 'function':\n\t\t\tif (\n\t\t\t\ttype.prototype &&\n\t\t\t\ttypeof type.prototype.render === 'function'\n\t\t\t) {\n\t\t\t\treturn renderComponent( type, props, context, legacyContext );\n\t\t\t}\n\n\t\t\treturn renderElement(\n\t\t\t\ttype( props, legacyContext ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\tswitch ( type && type.$$typeof ) {\n\t\tcase Provider.$$typeof:\n\t\t\treturn renderChildren( props.children, props.value, legacyContext );\n\n\t\tcase Consumer.$$typeof:\n\t\t\treturn renderElement(\n\t\t\t\tprops.children( context || type._currentValue ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\n\t\tcase ForwardRef.$$typeof:\n\t\t\treturn renderElement(\n\t\t\t\ttype.render( props ),\n\t\t\t\tcontext,\n\t\t\t\tlegacyContext\n\t\t\t);\n\t}\n\n\treturn '';\n}\n\n/**\n * Serializes a native component type to string.\n *\n * @param {?string} type            Native component type to serialize, or null if\n *                                  rendering as fragment of children content.\n * @param {Object}  props           Props object.\n * @param {Object}  [context]       Context object.\n * @param {Object}  [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderNativeComponent(\n\ttype,\n\tprops,\n\tcontext,\n\tlegacyContext = {}\n) {\n\tlet content = '';\n\tif ( type === 'textarea' && props.hasOwnProperty( 'value' ) ) {\n\t\t// Textarea children can be assigned as value prop. If it is, render in\n\t\t// place of children. Ensure to omit so it is not assigned as attribute\n\t\t// as well.\n\t\tcontent = renderChildren( props.value, context, legacyContext );\n\t\tconst { value, ...restProps } = props;\n\t\tprops = restProps;\n\t} else if (\n\t\tprops.dangerouslySetInnerHTML &&\n\t\ttypeof props.dangerouslySetInnerHTML.__html === 'string'\n\t) {\n\t\t// Dangerous content is left unescaped.\n\t\tcontent = props.dangerouslySetInnerHTML.__html;\n\t} else if ( typeof props.children !== 'undefined' ) {\n\t\tcontent = renderChildren( props.children, context, legacyContext );\n\t}\n\n\tif ( ! type ) {\n\t\treturn content;\n\t}\n\n\tconst attributes = renderAttributes( props );\n\n\tif ( SELF_CLOSING_TAGS.has( type ) ) {\n\t\treturn '<' + type + attributes + '/>';\n\t}\n\n\treturn '<' + type + attributes + '>' + content + '</' + type + '>';\n}\n\n/** @typedef {import('react').ComponentType} ComponentType */\n\n/**\n * Serializes a non-native component type to string.\n *\n * @param {ComponentType} Component       Component type to serialize.\n * @param {Object}        props           Props object.\n * @param {Object}        [context]       Context object.\n * @param {Object}        [legacyContext] Legacy context object.\n *\n * @return {string} Serialized element\n */\nexport function renderComponent(\n\tComponent,\n\tprops,\n\tcontext,\n\tlegacyContext = {}\n) {\n\tconst instance = new /** @type {import('react').ComponentClass} */ (\n\t\tComponent\n\t)( props, legacyContext );\n\n\tif (\n\t\ttypeof (\n\t\t\t// Ignore reason: Current prettier reformats parens and mangles type assertion\n\t\t\t// prettier-ignore\n\t\t\t/** @type {{getChildContext?: () => unknown}} */ ( instance ).getChildContext\n\t\t) === 'function'\n\t) {\n\t\tObject.assign(\n\t\t\tlegacyContext,\n\t\t\t/** @type {{getChildContext?: () => unknown}} */ (\n\t\t\t\tinstance\n\t\t\t).getChildContext()\n\t\t);\n\t}\n\n\tconst html = renderElement( instance.render(), context, legacyContext );\n\n\treturn html;\n}\n\n/**\n * Serializes an array of children to string.\n *\n * @param {import('react').ReactNodeArray} children        Children to serialize.\n * @param {Object}                         [context]       Context object.\n * @param {Object}                         [legacyContext] Legacy context object.\n *\n * @return {string} Serialized children.\n */\nfunction renderChildren( children, context, legacyContext = {} ) {\n\tlet result = '';\n\n\tchildren = Array.isArray( children ) ? children : [ children ];\n\n\tfor ( let i = 0; i < children.length; i++ ) {\n\t\tconst child = children[ i ];\n\n\t\tresult += renderElement( child, context, legacyContext );\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a props object as a string of HTML attributes.\n *\n * @param {Object} props Props object.\n *\n * @return {string} Attributes string.\n */\nexport function renderAttributes( props ) {\n\tlet result = '';\n\n\tfor ( const key in props ) {\n\t\tconst attribute = getNormalAttributeName( key );\n\t\tif ( ! isValidAttributeName( attribute ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet value = getNormalAttributeValue( key, props[ key ] );\n\n\t\t// If value is not of serializable type, skip.\n\t\tif ( ! ATTRIBUTES_TYPES.has( typeof value ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Don't render internal attribute names.\n\t\tif ( isInternalAttribute( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isBooleanAttribute = BOOLEAN_ATTRIBUTES.has( attribute );\n\n\t\t// Boolean attribute should be omitted outright if its value is false.\n\t\tif ( isBooleanAttribute && value === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isMeaningfulAttribute =\n\t\t\tisBooleanAttribute ||\n\t\t\thasPrefix( key, [ 'data-', 'aria-' ] ) ||\n\t\t\tENUMERATED_ATTRIBUTES.has( attribute );\n\n\t\t// Only write boolean value as attribute if meaningful.\n\t\tif ( typeof value === 'boolean' && ! isMeaningfulAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult += ' ' + attribute;\n\n\t\t// Boolean attributes should write attribute name, but without value.\n\t\t// Mere presence of attribute name is effective truthiness.\n\t\tif ( isBooleanAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( typeof value === 'string' ) {\n\t\t\tvalue = escapeAttribute( value );\n\t\t}\n\n\t\tresult += '=\"' + value + '\"';\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a style object as a string attribute value.\n *\n * @param {Object} style Style object.\n *\n * @return {string} Style attribute value.\n */\nexport function renderStyle( style ) {\n\t// Only generate from object, e.g. tolerate string value.\n\tif ( ! isPlainObject( style ) ) {\n\t\treturn style;\n\t}\n\n\tlet result;\n\n\tfor ( const property in style ) {\n\t\tconst value = style[ property ];\n\t\tif ( null === value || undefined === value ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult += ';';\n\t\t} else {\n\t\t\tresult = '';\n\t\t}\n\n\t\tconst normalName = getNormalStylePropertyName( property );\n\t\tconst normalValue = getNormalStylePropertyValue( property, value );\n\t\tresult += normalName + ':' + normalValue;\n\t}\n\n\treturn result;\n}\n\nexport default renderElement;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAIA,mBA+BO;AAwOA,SAASA,kBAAmBC,mBAAoB;AACtD,SAAOA,kBAAkBC,OAAQ,CAAEC,aAAaC,UAAUC,MAAO;AAChEC,0BAASC,QAASH,UAAU,CAAEI,OAAOC,MAAO;AAC3C,UAAKD,SAAS,aAAa,OAAOA,OAAQ;AACzCA,oBAAQE,2BAAcF,OAAO;UAC5BG,KAAK,CAAEN,GAAGI,CAAC,EAAGG,KAAK;QACpB,CAAE;MACH;AAEAT,kBAAYU,KAAML,KAAM;IACzB,CAAE;AAEF,WAAOL;EACR,GAAG,CAAA,CAAG;AACP;AAUO,SAASW,uBAAwBV,UAAUW,UAAW;AAC5D,SACCX,YACAE,sBAASU,IAAKZ,UAAU,CAAEa,KAAKC,UAAW;AACzC,QAAK,QAAOD,2BAAKE,eAAc,UAAW;AACzC,iBAAOC,4BAAeL,UAAU;QAAEJ,KAAKO;MAAM,GAAGD,GAAI;IACrD;AACA,UAAM;MAAEb,UAAUiB;MAAc,GAAGC;IAAM,IAAIL,IAAIK;AACjD,eAAOF,4BACNL,UACA;MAAEJ,KAAKO;MAAO,GAAGI;IAAM,GACvBD,YACD;EACD,CAAE;AAEJ;;;ACvSA,IAAIE;AAAJ,IAAWC;AAAX,IAAmBC;AAAnB,IAA2BC;AAiB3B,IAAMC,YAAY;AAyClB,SAASC,YACRC,SACAC,YACAC,aACAC,YACAC,kBACC;AACD,SAAO;IACNJ;IACAC;IACAC;IACAC;IACAC;IACAC,UAAU,CAAA;EACX;AACD;AA6BA,IAAMC,2BAA2BA,CAAEC,oBAAoBC,kBAAmB;AACzEd,UAAQa;AACRZ,WAAS;AACTC,WAAS,CAAA;AACTC,UAAQ,CAAA;AACRC,YAAUW,YAAY;AAEtB,MAAK,CAAEC,qBAAsBF,aAAc,GAAI;AAC9C,UAAM,IAAIG,UACT,mGACD;EACD;AAEA,KAAG;EACF,SACSC,QAASJ,aAAc;AACjC,aAAOK,4BAAeC,uBAAU,MAAM,GAAGlB,MAAO;AACjD;AAcA,IAAMc,uBAAyBF,mBAAmB;AACjD,QAAMO,WAAW,OAAOP,kBAAkB;AAC1C,QAAMQ,SAASD,YAAYE,OAAOD,OAAQR,aAAc;AACxD,SACCO,YACAC,OAAOE,UACPF,OAAOG,MAASnB,iBAAaoB,6BAAgBpB,OAAQ,CAAE;AAEzD;AAWA,SAASY,QAASJ,eAAgB;AACjC,QAAMa,OAAOC,UAAU;AACvB,QAAM,CAAEC,WAAWC,MAAMC,aAAavB,WAAW,IAAKmB;AACtD,QAAMK,aAAa7B,MAAMqB;AACzB,QAAMd,mBAAmBqB,cAAc9B,SAASA,SAAS;AACzD,MAAK,CAAEa,cAAegB,IAAI,GAAK;AAC9BG,YAAQ;AACR,WAAO;EACR;AACA,UAASJ,WAAS;IACjB,KAAK;AACJ,UAAKG,eAAe,GAAI;AACvB,cAAM;UAAEtB,kBAAkBwB;UAAkB3B;QAAW,IACtDJ,MAAMgC,IAAI;AACXjC,eAAOkC,KAAMpC,MAAMqC,OAAQH,kBAAkB3B,UAAW,CAAE;MAC3D;AACA0B,cAAQ;AACR,aAAO;IAER,KAAK;AACJ,UAAK,MAAMD,YAAa;AACvB,YAAK,SAAStB,kBAAmB;AAChCR,iBAAOkC,KACNpC,MAAMqC,OACL3B,kBACAqB,cAAcrB,gBACf,CACD;QACD;AACAR,eAAOkC,KAAMtB,cAAegB,IAAI,CAAG;AACnC7B,iBAAS8B,cAAcvB;AACvB,eAAO;MACR;AAGA8B,eACCjC,YAAaS,cAAegB,IAAI,GAAIC,aAAavB,WAAY,CAC9D;AACAP,eAAS8B,cAAcvB;AACvB,aAAO;IAER,KAAK;AACJL,YAAMiC,KACL/B,YACCS,cAAegB,IAAI,GACnBC,aACAvB,aACAuB,cAAcvB,aACdE,gBACD,CACD;AACAT,eAAS8B,cAAcvB;AACvB,aAAO;IAER,KAAK;AAEJ,UAAK,MAAMwB,YAAa;AACvBO,0BAAmBR,WAAY;AAC/B9B,iBAAS8B,cAAcvB;AACvB,eAAO;MACR;AAIA,YAAMgC,WAAWrC,MAAMgC,IAAI;AAC3B,YAAMM,OAAOzC,MAAMqC,OAClBG,SAAS/B,YACTsB,cAAcS,SAAS/B,UACxB;AACA+B,eAAS7B,SAASyB,KAAMK,IAAK;AAC7BD,eAAS/B,aAAasB,cAAcvB;AACpC,YAAMkC,QAAQrC,YACbmC,SAASlC,SACTkC,SAASjC,YACTiC,SAAShC,aACTuB,cAAcvB,WACf;AACAkC,YAAM/B,WAAW6B,SAAS7B;AAC1B2B,eAAUI,KAAM;AAChBzC,eAAS8B,cAAcvB;AACvB,aAAO;IAER;AACCyB,cAAQ;AACR,aAAO;EACT;AACD;AASA,SAASL,YAAY;AACpB,QAAMe,UAAUvC,UAAUwC,KAAM5C,KAAM;AAEtC,MAAK,SAAS2C,SAAU;AACvB,WAAO,CAAE,gBAAgB;EAC1B;AACA,QAAME,YAAYF,QAAQG;AAC1B,QAAM,CAAEC,OAAOC,WAAWlB,MAAMmB,YAAY,IAAKN;AACjD,QAAMnB,SAASuB,MAAMvB;AACrB,MAAKyB,cAAe;AACnB,WAAO,CAAE,eAAenB,MAAMe,WAAWrB,MAAM;EAChD;AACA,MAAKwB,WAAY;AAChB,WAAO,CAAE,UAAUlB,MAAMe,WAAWrB,MAAM;EAC3C;AACA,SAAO,CAAE,UAAUM,MAAMe,WAAWrB,MAAM;AAC3C;AASA,SAASS,UAAU;AAClB,QAAMT,SAASxB,MAAMwB,SAASvB;AAC9B,MAAK,MAAMuB,QAAS;AACnB;EACD;AACAtB,SAAOkC,KAAMpC,MAAMqC,OAAQpC,QAAQuB,MAAO,CAAE;AAC7C;AAWA,SAASc,SAAUI,OAAQ;AAC1B,QAAM;IAAEpC;IAASC;IAAYC;IAAaC;IAAYE;EAAS,IAAI+B;AACnE,QAAMQ,SAAS/C,MAAOA,MAAMqB,SAAS,CAAC;AACtC,QAAMiB,OAAOzC,MAAMqC,OAClBa,OAAOzC,YACPF,aAAa2C,OAAOzC,UACrB;AAEA,MAAKgC,MAAO;AACXS,WAAOvC,SAASyB,KAAMK,IAAK;EAC5B;AAEAS,SAAOvC,SAASyB,SAAMe,2BAAc7C,SAAS,MAAM,GAAGK,QAAS,CAAE;AACjEuC,SAAOzC,aAAaA,aAAaA,aAAaF,aAAaC;AAC5D;AAcA,SAAS+B,kBAAmBa,WAAY;AACvC,QAAM;IAAE9C;IAASI;IAAkBD;IAAYF;IAAYI;EAAS,IACnER,MAAMgC,IAAI;AAEX,QAAMM,OAAOW,YACVpD,MAAMqC,OAAQ5B,YAAY2C,YAAY3C,UAAW,IACjDT,MAAMqC,OAAQ5B,UAAW;AAE5B,MAAKgC,MAAO;AACX9B,aAASyB,KAAMK,IAAK;EACrB;AAEA,MAAK,SAAS/B,kBAAmB;AAChCR,WAAOkC,KACNpC,MAAMqC,OAAQ3B,kBAAkBH,aAAaG,gBAAiB,CAC/D;EACD;AAEAR,SAAOkC,SAAMe,2BAAc7C,SAAS,MAAM,GAAGK,QAAS,CAAE;AACzD;AAEA,IAAA,qCAAeC;;;AC1Vf,uBAOO;AACP,oBAAwC;;;ACLjC,IAAMyC,iBAAmBC,aAAa;AAC5C,MAAK,OAAOA,YAAY,UAAW;AAClC,WAAO;EACR;AAEA,MAAK,QAAOA,mCAASC,eAAc,YAAYC,MAAMC,QAASH,OAAQ,GAAI;AACzE,WAAO,CAAEA,QAAQI;EAClB;AAEA,SAAO,CAAEJ;AACV;;;ACRA,IAAMK,WAAW;EAChBC,IAAI;EACJC,QAAUC,UAAY,SAASA,OAAOA,KAAKC,MAAMD,KAAKE;EACtDC,OAAO;AACR;AAoBA,IAAA,mBAAeN;;;ACbA,SAAf,QAAiC;EAAEO;EAAU,GAAGC;AAAM,GAAI;AACzD,MAAIC,UAAU;AAGdC,wBAASC,QAASJ,QAAS,EAAEK,QAAWC,WAAW;AAClD,QAAK,OAAOA,UAAU,YAAYA,MAAMC,KAAK,MAAM,IAAK;AACvDL,iBAAWI;IACZ;EACD,CAAE;AAIF,aAAOE,4BAAe,OAAO;IAC5BC,yBAAyB;MAAEC,QAAQR;IAAQ;IAC3C,GAAGD;EACJ,CAAE;AACH;;;ACeA,IAAM;EAAEU;EAAUC;AAAS,QAAIC,4BAAeC,MAAU;AACxD,IAAMC,iBAAaC,yBAAY,MAAM;AACpC,SAAO;AACR,CAAE;AAOF,IAAMC,mBAAmB,oBAAIC,IAAK,CAAE,UAAU,WAAW,QAAQ,CAAG;AAOpE,IAAMC,oBAAoB,oBAAID,IAAK,CAClC,QACA,QACA,MACA,OACA,WACA,SACA,MACA,OACA,SACA,UACA,QACA,QACA,SACA,UACA,SACA,KAAK,CACJ;AAiBF,IAAME,qBAAqB,oBAAIF,IAAK,CACnC,mBACA,uBACA,kBACA,SACA,aACA,YACA,WACA,YACA,WACA,SACA,YACA,YACA,kBACA,UACA,SACA,aACA,QACA,YACA,SACA,YACA,cACA,QACA,eACA,YACA,YACA,YACA,YACA,eAAe,CACd;AAsBF,IAAMG,wBAAwB,oBAAIH,IAAK,CACtC,kBACA,gBACA,WACA,mBACA,eACA,YACA,OACA,aACA,WACA,eACA,cACA,cACA,aACA,QACA,UACA,WACA,SACA,SACA,cACA,aACA,QACA,MAAM,CACL;AAoBF,IAAMI,mCAAmC,oBAAIJ,IAAK,CACjD,aACA,2BACA,iBACA,qBACA,oBACA,oBACA,eACA,MACA,MACA,eACA,YACA,cACA,gBACA,cACA,iBACA,mBACA,cACA,gBACA,cACA,WACA,SACA,WACA,KACA,MACA,MACA,uBACA,eACA,mBACA,oBACA,oBACA,iBACA,eACA,WACA,UACA,KACA,KACA,UACA,MAAM,CACL;AAWK,SAASK,UAAWC,QAAQC,UAAW;AAC7C,SAAOA,SAASC,KAAQC,YAAYH,OAAOI,QAASD,MAAO,MAAM,CAAE;AACpE;AAUA,SAASE,oBAAqBC,WAAY;AACzC,SAAO,UAAUA,aAAa,eAAeA;AAC9C;AAUA,SAASC,wBAAyBD,WAAWE,OAAQ;AACpD,UAASF,WAAS;IACjB,KAAK;AACJ,aAAOG,YAAaD,KAAM;EAC5B;AAEA,SAAOA;AACR;AAOA,IAAME,iCAAiC,CACtC,gBACA,qBACA,cACA,iBACA,aACA,YACA,YACA,sBACA,6BACA,gBACA,kBACA,oBACA,oBACA,eACA,YACA,cACA,gBACA,cACA,YACA,kBACA,eACA,aACA,eACA,cACA,aACA,8BACA,4BACA,aACA,gBACA,kBACA,iBACA,iBACA,aACA,aACA,eACA,oBACA,qBACA,cACA,WACA,iBACA,mBACA,kBACA,aACA,eACA,yBACA,0BACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,eACA,cACA,kBACA,iBACA,qBACA,sBACA,eACA,gBACA,cACA,eACA,YACA,gBACA,iBACA,gBACA,YACA,eACA,eACA,eACA,eACA,cACA,SAAS,EACRC,OAAQ,CAAEC,KAAKN,cAAe;AAE/BM,MAAKN,UAAUO,YAAY,CAAC,IAAKP;AACjC,SAAOM;AACR,GAAG,CAAC,CAAE;AAQN,IAAME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",
  "names": ["concatChildren", "childrenArguments", "reduce", "accumulator", "children", "i", "Children", "forEach", "child", "j", "cloneElement", "key", "join", "push", "switchChildrenNodeName", "nodeName", "map", "elt", "index", "valueOf", "createElement", "childrenProp", "props", "indoc", "offset", "output", "stack", "tokenizer", "createFrame", "element", "tokenStart", "tokenLength", "prevOffset", "leadingTextStart", "children", "createInterpolateElement", "interpolatedString", "conversionMap", "lastIndex", "isValidConversionMap", "TypeError", "proceed", "createElement", "Fragment", "isObject", "values", "Object", "length", "every", "isValidElement", "next", "nextToken", "tokenType", "name", "startOffset", "stackDepth", "addText", "stackLeadingText", "pop", "push", "substr", "addChild", "closeOuterElement", "stackTop", "text", "frame", "matches", "exec", "startedAt", "index", "match", "isClosing", "isSelfClosed", "parent", "cloneElement", "endOffset", "isEmptyElement", "element", "valueOf", "Array", "isArray", "length", "Platform", "OS", "select", "spec", "web", "default", "isWeb", "children", "props", "rawHtml", "Children", "toArray", "forEach", "child", "trim", "createElement", "dangerouslySetInnerHTML", "__html", "Provider", "Consumer", "createContext", "undefined", "ForwardRef", "forwardRef", "ATTRIBUTES_TYPES", "Set", "SELF_CLOSING_TAGS", "BOOLEAN_ATTRIBUTES", "ENUMERATED_ATTRIBUTES", "CSS_PROPERTIES_SUPPORTS_UNITLESS", "hasPrefix", "string", "prefixes", "some", "prefix", "indexOf", "isInternalAttribute", "attribute", "getNormalAttributeValue", "value", "renderStyle", "SVG_ATTRIBUTE_WITH_DASHES_LIST", "reduce", "map", "toLowerCase", "CASE_SENSITIVE_SVG_ATTRIBUTES", "SVG_ATTRIBUTES_WITH_COLONS", "replace", "getNormalAttributeName", "attributeLowerCase", "kebabCase", "getNormalStylePropertyName", "property", "startsWith", "getNormalStylePropertyValue", "has", "renderElement", "element", "context", "legacyContext", "Array", "isArray", "renderChildren", "escapeHTML", "toString", "type", "props", "StrictMode", "Fragment", "children", "RawHTML", "wrapperProps", "renderNativeComponent", "Object", "keys", "length", "dangerouslySetInnerHTML", "__html", "prototype", "render", "renderComponent", "$$typeof", "_currentValue", "content", "hasOwnProperty", "restProps", "attributes", "renderAttributes", "Component", "instance", "getChildContext", "assign", "html", "result", "i", "child", "key", "isValidAttributeName", "isBooleanAttribute", "isMeaningfulAttribute", "escapeAttribute", "style", "isPlainObject", "normalName", "normalValue"]
}
