{"version":3,"file":"RoleManagement-DrlzAjWi.js","sources":["../../src/pages/users/RoleManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Plus, Edit, Trash2, Shield, Users, Settings } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport toast from 'react-hot-toast';\nimport { UserApi } from '@/api/userApi';\n\ninterface Permission {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n}\n\ninterface Role {\n  id: string;\n  name: string;\n  displayName: string;\n  description: string;\n  color: string;\n  permissions: Permission[];\n  userCount: number;\n  isSystem: boolean;\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface RoleFormData {\n  name: string;\n  displayName: string;\n  description: string;\n  color: string;\n  permissions: string[];\n  isActive: boolean;\n}\n\nconst defaultRoleColors = [\n  '#8b5cf6', // purple\n  '#ef4444', // red\n  '#3b82f6', // blue\n  '#10b981', // green\n  '#f59e0b', // amber\n  '#ec4899', // pink\n  '#6366f1', // indigo\n  '#06b6d4', // cyan\n];\n\nexport default function RoleManagement() {\n  const [roles, setRoles] = useState<Role[]>([]);\n  const [permissions, setPermissions] = useState<Permission[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingRole, setEditingRole] = useState<Role | null>(null);\n  const [formData, setFormData] = useState<RoleFormData>({\n    name: '',\n    displayName: '',\n    description: '',\n    color: defaultRoleColors[0],\n    permissions: [],\n    isActive: true,\n  });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [rolesResponse, permissionsResponse] = await Promise.all([\n        UserApi.get('/api/v1/users/roles'),\n        UserApi.get('/api/v1/users/permissions'),\n      ]);\n\n      if (rolesResponse.data.success) {\n        setRoles(rolesResponse.data.data);\n      }\n\n      if (permissionsResponse.data.success) {\n        setPermissions(permissionsResponse.data.data);\n      }\n    } catch (error) {\n      toast.error('Failed to load roles and permissions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      if (editingRole) {\n        await UserApi.put(`/api/v1/users/roles/${editingRole.id}`, formData);\n        toast.success('Role updated successfully');\n      } else {\n        await UserApi.post('/api/v1/users/roles', formData);\n        toast.success('Role created successfully');\n      }\n      \n      setDialogOpen(false);\n      resetForm();\n      fetchData();\n    } catch (error) {\n      toast.error(editingRole ? 'Failed to update role' : 'Failed to create role');\n    }\n  };\n\n  const handleEdit = (role: Role) => {\n    setEditingRole(role);\n    setFormData({\n      name: role.name,\n      displayName: role.displayName,\n      description: role.description,\n      color: role.color,\n      permissions: role.permissions.map(p => p.id),\n      isActive: role.isActive,\n    });\n    setDialogOpen(true);\n  };\n\n  const handleDelete = async (role: Role) => {\n    if (role.isSystem) {\n      toast.error('Cannot delete system roles');\n      return;\n    }\n\n    if (role.userCount > 0) {\n      toast.error('Cannot delete role that is assigned to users');\n      return;\n    }\n\n    if (confirm(`Are you sure you want to delete the role \"${role.displayName}\"?`)) {\n      try {\n        await UserApi.delete(`/api/v1/users/roles/${role.id}`);\n        toast.success('Role deleted successfully');\n        fetchData();\n      } catch (error) {\n        toast.error('Failed to delete role');\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setEditingRole(null);\n    setFormData({\n      name: '',\n      displayName: '',\n      description: '',\n      color: defaultRoleColors[0],\n      permissions: [],\n      isActive: true,\n    });\n  };\n\n  const togglePermission = (permissionId: string) => {\n    setFormData(prev => ({\n      ...prev,\n      permissions: prev.permissions.includes(permissionId)\n        ? prev.permissions.filter(id => id !== permissionId)\n        : [...prev.permissions, permissionId]\n    }));\n  };\n\n  const groupedPermissions = permissions.reduce((acc, permission) => {\n    if (!acc[permission.category]) {\n      acc[permission.category] = [];\n    }\n    acc[permission.category].push(permission);\n    return acc;\n  }, {} as Record<string, Permission[]>);\n\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {[1, 2, 3, 4, 5, 6].map((i) => (\n              <div key={i} className=\"h-48 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">Role Management</h1>\n          <p className=\"text-gray-600\">Manage user roles and permissions</p>\n        </div>\n        <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>\n          <DialogTrigger>\n            <Button onClick={resetForm}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Create Role\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle>\n                {editingRole ? 'Edit Role' : 'Create New Role'}\n              </DialogTitle>\n              <DialogDescription>\n                {editingRole \n                  ? 'Update role information and permissions'\n                  : 'Define a new role with specific permissions'\n                }\n              </DialogDescription>\n            </DialogHeader>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"name\">Role Name (Internal)</Label>\n                  <Input\n                    id=\"name\"\n                    value={formData.name}\n                    onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                    placeholder=\"admin, moderator, etc.\"\n                    disabled={editingRole?.isSystem}\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"displayName\">Display Name</Label>\n                  <Input\n                    id=\"displayName\"\n                    value={formData.displayName}\n                    onChange={(e) => setFormData(prev => ({ ...prev, displayName: e.target.value }))}\n                    placeholder=\"Administrator, Moderator, etc.\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description}\n                  onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                  placeholder=\"Describe what this role is for...\"\n                  rows={3}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"color\">Color</Label>\n                  <Select\n                    value={formData.color}\n                    onValueChange={(color) => setFormData(prev => ({ ...prev, color }))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {defaultRoleColors.map((color) => (\n                        <SelectItem key={color} value={color}>\n                          <div className=\"flex items-center gap-2\">\n                            <div \n                              className=\"w-4 h-4 rounded\"\n                              style={{ backgroundColor: color }}\n                            />\n                            {color}\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"isActive\"\n                    checked={formData.isActive}\n                    onCheckedChange={(checked) => \n                      setFormData(prev => ({ ...prev, isActive: !!checked }))\n                    }\n                  />\n                  <Label htmlFor=\"isActive\">Active Role</Label>\n                </div>\n              </div>\n\n              <div>\n                <Label>Permissions</Label>\n                <div className=\"mt-2 space-y-4 max-h-64 overflow-y-auto border rounded-lg p-4\">\n                  {Object.entries(groupedPermissions).map(([category, categoryPermissions]) => (\n                    <div key={category}>\n                      <h4 className=\"font-medium text-sm text-gray-700 mb-2 capitalize\">\n                        {category.replace('_', ' ')}\n                      </h4>\n                      <div className=\"space-y-2 ml-4\">\n                        {categoryPermissions.map((permission) => (\n                          <div key={permission.id} className=\"flex items-start space-x-2\">\n                            <Checkbox\n                              id={permission.id}\n                              checked={formData.permissions.includes(permission.id)}\n                              onCheckedChange={() => togglePermission(permission.id)}\n                            />\n                            <div className=\"flex-1\">\n                              <Label htmlFor={permission.id} className=\"text-sm font-medium\">\n                                {permission.name}\n                              </Label>\n                              <p className=\"text-xs text-gray-500\">\n                                {permission.description}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 pt-4\">\n                <Button type=\"submit\" className=\"flex-1\">\n                  {editingRole ? 'Update Role' : 'Create Role'}\n                </Button>\n                <Button \n                  type=\"button\" \n                  variant=\"outline\" \n                  onClick={() => setDialogOpen(false)}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {roles.map((role) => (\n          <Card key={role.id} className=\"relative\">\n            {role.isSystem && (\n              <div className=\"absolute top-2 right-2\">\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  System\n                </Badge>\n              </div>\n            )}\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center gap-3\">\n                <div \n                  className=\"w-6 h-6 rounded flex items-center justify-center\"\n                  style={{ backgroundColor: role.color }}\n                >\n                  <Shield className=\"h-3 w-3 text-white\" />\n                </div>\n                <div className=\"flex-1\">\n                  <CardTitle className=\"text-lg\">{role.displayName}</CardTitle>\n                  <p className=\"text-sm text-gray-600\">{role.name}</p>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-sm text-gray-600\">\n                {role.description || 'No description provided'}\n              </p>\n              \n              <div className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2 text-gray-600\">\n                  <Users className=\"h-4 w-4\" />\n                  <span>{role.userCount} users</span>\n                </div>\n                <Badge variant={role.isActive ? \"default\" : \"secondary\"}>\n                  {role.isActive ? 'Active' : 'Inactive'}\n                </Badge>\n              </div>\n\n              <div>\n                <p className=\"text-sm font-medium text-gray-700 mb-2\">\n                  Permissions ({role.permissions.length})\n                </p>\n                <div className=\"flex flex-wrap gap-1\">\n                  {role.permissions.slice(0, 3).map((permission) => (\n                    <Badge key={permission.id} variant=\"outline\" className=\"text-xs\">\n                      {permission.name}\n                    </Badge>\n                  ))}\n                  {role.permissions.length > 3 && (\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      +{role.permissions.length - 3} more\n                    </Badge>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex gap-2 pt-2\">\n                <Button \n                  size=\"sm\" \n                  variant=\"outline\" \n                  className=\"flex-1\"\n                  onClick={() => handleEdit(role)}\n                >\n                  <Edit className=\"h-3 w-3 mr-1\" />\n                  Edit\n                </Button>\n                {!role.isSystem && role.userCount === 0 && (\n                  <Button \n                    size=\"sm\" \n                    variant=\"destructive\" \n                    onClick={() => handleDelete(role)}\n                  >\n                    <Trash2 className=\"h-3 w-3\" />\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {roles.length === 0 && !loading && (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No roles found</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Create your first role to start managing user permissions\n            </p>\n            <Button onClick={() => setDialogOpen(true)}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Create First Role\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":["defaultRoleColors","RoleManagement","roles","setRoles","useState","permissions","setPermissions","loading","setLoading","dialogOpen","setDialogOpen","editingRole","setEditingRole","formData","setFormData","useEffect","fetchData","rolesResponse","permissionsResponse","UserApi","toast","handleSubmit","e","resetForm","handleEdit","role","p","handleDelete","togglePermission","permissionId","prev","id","groupedPermissions","acc","permission","jsxs","jsx","i","Dialog","DialogTrigger","Button","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","Textarea","Select","color","SelectTrigger","SelectValue","SelectContent","SelectItem","Checkbox","checked","category","categoryPermissions","Card","Badge","CardHeader","Shield","CardTitle","CardContent","Users","Edit","Trash2"],"mappings":"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"}