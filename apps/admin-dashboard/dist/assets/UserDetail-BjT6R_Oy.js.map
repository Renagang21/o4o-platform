{"version":3,"file":"UserDetail-BjT6R_Oy.js","sources":["../../src/pages/users/components/UserActivityLog.tsx","../../src/pages/users/UserDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Clock, CheckCircle, XCircle, AlertCircle, User, Settings } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { UserApi } from '@/api/userApi';\nimport toast from 'react-hot-toast';\n\ninterface ActivityLog {\n  id: string;\n  userId: string;\n  action: string;\n  actionType: 'login' | 'logout' | 'role_change' | 'status_change' | 'profile_update' | 'approval' | 'rejection';\n  details: Record<string, any>;\n  ipAddress?: string;\n  userAgent?: string;\n  timestamp: string;\n  performedBy?: {\n    id: string;\n    name: string;\n    role: string;\n  };\n}\n\ninterface UserActivityLogProps {\n  userId: string;\n}\n\nconst getActivityIcon = (actionType: string) => {\n  switch (actionType) {\n    case 'login':\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n    case 'logout':\n      return <XCircle className=\"h-4 w-4 text-gray-500\" />;\n    case 'role_change':\n      return <Settings className=\"h-4 w-4 text-blue-500\" />;\n    case 'status_change':\n      return <AlertCircle className=\"h-4 w-4 text-yellow-500\" />;\n    case 'profile_update':\n      return <User className=\"h-4 w-4 text-purple-500\" />;\n    case 'approval':\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n    case 'rejection':\n      return <XCircle className=\"h-4 w-4 text-red-500\" />;\n    default:\n      return <Clock className=\"h-4 w-4 text-gray-500\" />;\n  }\n};\n\nconst getActivityBadgeColor = (actionType: string) => {\n  switch (actionType) {\n    case 'login':\n    case 'approval':\n      return 'bg-green-100 text-green-800';\n    case 'logout':\n      return 'bg-gray-100 text-gray-800';\n    case 'role_change':\n      return 'bg-blue-100 text-blue-800';\n    case 'status_change':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'profile_update':\n      return 'bg-purple-100 text-purple-800';\n    case 'rejection':\n      return 'bg-red-100 text-red-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nexport default function UserActivityLog({ userId }: UserActivityLogProps) {\n  const [activities, setActivities] = useState<ActivityLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n\n  useEffect(() => {\n    fetchActivities();\n  }, [userId, page]);\n\n  const fetchActivities = async () => {\n    try {\n      setLoading(true);\n      const response = await UserApi.get(`/api/v1/users/${userId}/activity-log?page=${page}&limit=20`);\n      \n      if (response.data.success) {\n        if (page === 1) {\n          setActivities(response.data.data.activities);\n        } else {\n          setActivities(prev => [...prev, ...response.data.data.activities]);\n        }\n        setHasMore(response.data.data.pagination.hasMore);\n      }\n    } catch (error) {\n      toast.error('Failed to load activity log');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const formatActivityDescription = (activity: ActivityLog) => {\n    switch (activity.actionType) {\n      case 'login':\n        return 'User logged in';\n      case 'logout':\n        return 'User logged out';\n      case 'role_change':\n        return `Role changed from ${activity.details.oldRole} to ${activity.details.newRole}`;\n      case 'status_change':\n        return `Status changed from ${activity.details.oldStatus} to ${activity.details.newStatus}`;\n      case 'profile_update':\n        return `Profile updated: ${Object.keys(activity.details.changes || {}).join(', ')}`;\n      case 'approval':\n        return `User approved${activity.details.notes ? `: ${activity.details.notes}` : ''}`;\n      case 'rejection':\n        return `User rejected${activity.details.notes ? `: ${activity.details.notes}` : ''}`;\n      default:\n        return activity.action;\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Activity Log</CardTitle>\n        <CardDescription>\n          Recent user activities and administrative actions\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        {loading && activities.length === 0 ? (\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"text-gray-500\">Loading activities...</div>\n          </div>\n        ) : activities.length === 0 ? (\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"text-gray-500\">No activities recorded yet</div>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {activities.map((activity) => (\n              <div\n                key={activity.id}\n                className=\"flex items-start gap-3 p-3 border rounded-lg hover:bg-gray-50\"\n              >\n                <div className=\"mt-0.5\">\n                  {getActivityIcon(activity.actionType)}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <span className=\"font-medium text-sm\">\n                      {formatActivityDescription(activity)}\n                    </span>\n                    <Badge className={`text-xs ${getActivityBadgeColor(activity.actionType)}`}>\n                      {activity.actionType.replace('_', ' ')}\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"text-xs text-gray-500 space-y-1\">\n                    <div>\n                      {new Date(activity.timestamp).toLocaleString()}\n                    </div>\n                    \n                    {activity.performedBy && (\n                      <div>\n                        By: {activity.performedBy.name} ({activity.performedBy.role})\n                      </div>\n                    )}\n                    \n                    {activity.ipAddress && (\n                      <div>\n                        IP: {activity.ipAddress}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {hasMore && (\n              <div className=\"flex justify-center pt-4\">\n                <button\n                  onClick={loadMore}\n                  disabled={loading}\n                  className=\"px-4 py-2 text-sm text-blue-600 hover:text-blue-800 disabled:text-gray-400\"\n                >\n                  {loading ? 'Loading...' : 'Load More'}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import { roleDisplayNames } from \"@/types/user\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ArrowLeft, Edit, UserCheck, UserX, Clock, Shield, Mail, Calendar, Activity } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport UserActivityLog from './components/UserActivityLog';\nimport BusinessInfoSection from './components/BusinessInfoSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport toast from 'react-hot-toast';\nimport { UserApi } from '@/api/userApi';\n// import { formatDistanceToNow, format } from 'date-fns';\nimport type { User } from '@/types/user';\n\n// interface ApprovalLogItem {\n//   id: string;\n//   user_id: string;\n//   admin_id: string;\n//   admin?: {\n//     id: string;\n//     email: string;\n//     fullName: string;\n//   };\n//   action: 'approved' | 'rejected' | 'status_changed';\n//   previous_status: string;\n//   new_status: string;\n//   notes?: string;\n//   created_at: string;\n// }\n\nexport default function UserDetail() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [user, setUser] = useState<User | null>(null);\n  const [approvalHistory, setApprovalHistory] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (id) {\n      fetchUserData();\n    }\n  }, [id]);\n\n  const fetchUserData = async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch user details\n      const userResponse = await UserApi.getUser(id!);\n      if (userResponse) {\n        setUser(userResponse.data || userResponse);\n      }\n\n      // Fetch approval history\n      const historyResponse = await UserApi.getUserActivity(id!);\n      if (historyResponse.data.success) {\n        setApprovalHistory(historyResponse.data.data);\n      }\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      toast.error('Failed to load user details');\n      navigate('/users');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApprove = async () => {\n    try {\n      await UserApi.approveUser(id!, 'Approved via admin dashboard');\n      \n      toast.success('User approved successfully');\n\n      fetchUserData();\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      toast.error('Failed to approve user');\n    }\n  };\n\n  const handleReject = async () => {\n    try {\n      await UserApi.rejectUser(id!, 'Rejected via admin dashboard');\n      \n      toast.success('User rejected successfully');\n\n      fetchUserData();\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      toast.error('Failed to reject user');\n    }\n  };\n\n  const getRoleBadgeColor = (role: string) => {\n    const colors: Record<string, string> = {\n      super_admin: 'bg-purple-500',\n      admin: 'bg-red-500',\n      vendor: 'bg-blue-500',\n      seller: 'bg-green-500',\n      customer: 'bg-gray-500',\n      business: 'bg-yellow-500',\n      moderator: 'bg-indigo-500',\n      partner: 'bg-pink-500',\n    };\n    return colors[role as keyof typeof roleDisplayNames] || 'bg-gray-500';\n  };\n\n  const getStatusBadgeColor = (status: string) => {\n    const colors: Record<string, string> = {\n      active: 'bg-green-500',\n      approved: 'bg-green-500',\n      pending: 'bg-yellow-500',\n      rejected: 'bg-red-500',\n    };\n    return colors[status] || 'bg-gray-500';\n  };\n\n  const getActionIcon = (action: string) => {\n    switch (action) {\n      case 'approved':\n        return <UserCheck className=\"h-4 w-4 text-green-500\" />;\n      case 'rejected':\n        return <UserX className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Activity className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\n          <div className=\"h-64 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-500\">User not found</p>\n          <Button onClick={() => navigate('/users')} className=\"mt-4\">\n            Back to Users\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Button variant={\"ghost\" as const} onClick={() => navigate('/users')}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Users\n          </Button>\n          <h1 className=\"text-2xl font-bold\">{user?.name || 'Unknown User'}</h1>\n        </div>\n        <div className=\"flex gap-2\">\n          {user?.status === 'pending' && (\n            <>\n              <Button onClick={handleApprove}>\n                <UserCheck className=\"mr-2 h-4 w-4\" />\n                Approve\n              </Button>\n              <Button variant=\"destructive\" onClick={handleReject}>\n                <UserX className=\"mr-2 h-4 w-4\" />\n                Reject\n              </Button>\n            </>\n          )}\n          <Button variant={\"outline\" as const} onClick={() => navigate(`/users/${id}/edit`)}>\n            <Edit className=\"mr-2 h-4 w-4\" />\n            Edit\n          </Button>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"overview\" className=\"w-full\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"history\">Approval History</TabsTrigger>\n          <TabsTrigger value=\"activity\">Activity</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Business Information (for business users) */}\n          <BusinessInfoSection \n            userId={id!} \n            userRole={user?.role}\n          />\n          \n          {/* User Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>User Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"flex items-center gap-3\">\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Email</p>\n                    <p className=\"font-medium\">{user?.email}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <Shield className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Status</p>\n                    <Badge className={`${getStatusBadgeColor(user?.status || 'pending')} text-white`}>\n                      {user?.status}\n                    </Badge>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <Calendar className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Joined</p>\n                    <p className=\"font-medium\">\n                      {user ? '/* date removed */' : ''}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <Clock className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Last Login</p>\n                    <p className=\"font-medium\">\n                      {user?.lastLoginAt\n                        ? '/* date removed */'\n                        : 'Never'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Roles and Permissions */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Roles & Permissions</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-2\">Assigned Roles</p>\n                  <div className=\"flex gap-2 flex-wrap\">\n                    {user?.role ? [user.role] : [].map((role: string) => (\n                      <Badge\n                        key={role}\n                        className={`${getRoleBadgeColor(role)} text-white`}\n                      >\n                        {role.replace('_', ' ')}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n                {(user as any)?.permissions && (user as any)?.permissions.length > 0 && (\n                  <div>\n                    <p className=\"text-sm text-gray-600 mb-2\">Special Permissions</p>\n                    <div className=\"flex gap-2 flex-wrap\">\n                      {(user as any)?.permissions.map((permission: string) => (\n                        <Badge key={permission} variant={\"outline\" as const}>\n                          {permission}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Account Status */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Account Status</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 border rounded-lg\">\n                  <p className=\"text-sm text-gray-600\">Email Verified</p>\n                  <p className=\"text-2xl font-bold\">\n                    {(user as any)?.isEmailVerified ? '✓' : '✗'}\n                  </p>\n                </div>\n                <div className=\"text-center p-4 border rounded-lg\">\n                  <p className=\"text-sm text-gray-600\">Account Active</p>\n                  <p className=\"text-2xl font-bold\">\n                    {(user as any)?.isActive ? '✓' : '✗'}\n                  </p>\n                </div>\n                <div className=\"text-center p-4 border rounded-lg\">\n                  <p className=\"text-sm text-gray-600\">Login Attempts</p>\n                  <p className=\"text-2xl font-bold\">\n                    {(user as any)?.loginAttempts || 0}\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"history\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Approval History</CardTitle>\n              <CardDescription>\n                Timeline of all approval actions for this user\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {approvalHistory.length === 0 ? (\n                <p className=\"text-center text-gray-500 py-8\">\n                  No approval history found\n                </p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {approvalHistory.map((log: any) => (\n                    <div key={log.id} className=\"flex items-start gap-4 p-4 border rounded-lg\">\n                      <div className=\"mt-1\">{getActionIcon(log.action)}</div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <p className=\"font-medium\">\n                            {log.action === 'approved' && 'Approved'}\n                            {log.action === 'rejected' && 'Rejected'}\n                            {log.action === 'status_changed' && 'Status Changed'}\n                          </p>\n                          <span className=\"text-sm text-gray-500\">\n                            by {log.admin?.fullName || log.admin?.email || 'System'}\n                          </span>\n                        </div>\n                        {log.notes && (\n                          <p className=\"text-sm text-gray-600 mb-2\">{log.notes}</p>\n                        )}\n                        <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                          <span>\n                            {log.previous_status} → {log.new_status}\n                          </span>\n                          <span>\n                            {'/* date removed */'}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"activity\">\n          <UserActivityLog userId={id!} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":["getActivityIcon","actionType","jsx","CheckCircle","XCircle","Settings","AlertCircle","User","Clock","getActivityBadgeColor","UserActivityLog","userId","activities","setActivities","useState","loading","setLoading","page","setPage","hasMore","setHasMore","useEffect","fetchActivities","response","UserApi","prev","toast","loadMore","formatActivityDescription","activity","Card","jsxs","CardHeader","CardTitle","CardDescription","CardContent","Badge","UserDetail","id","useParams","navigate","useNavigate","user","setUser","approvalHistory","setApprovalHistory","fetchUserData","userResponse","historyResponse","handleApprove","handleReject","getRoleBadgeColor","role","getStatusBadgeColor","status","getActionIcon","action","UserCheck","UserX","Activity","Button","ArrowLeft","Fragment","Edit","Tabs","TabsList","TabsTrigger","TabsContent","BusinessInfoSection","Mail","Shield","Calendar","permission","log"],"mappings":"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"}