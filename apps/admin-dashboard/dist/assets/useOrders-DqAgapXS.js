import{a as i,u as a,b as n,k as y}from"./vendor-query-GrNIwsDq.js";import{E as o}from"./ecommerceApi-CL3T3TAM.js";import{a as d}from"./vendor-utils-DQ8F5vJI.js";const t={success:s=>{},error:s=>{}},q=(s=1,e=20,r={})=>i({queryKey:["orders",s,e,r],queryFn:()=>o.getOrders(s,e,r),placeholderData:y,staleTime:120*1e3}),f=(s,e=!0)=>i({queryKey:["order",s],queryFn:()=>o.getOrder(s),enabled:!!s&&e,staleTime:120*1e3}),O=()=>{const s=a();return n({mutationFn:({orderId:e,status:r,note:u})=>o.updateOrderStatus(e,r,u),onSuccess:(e,r)=>{s.invalidateQueries({queryKey:["orders"]}),s.invalidateQueries({queryKey:["order",r.orderId]}),t.success(`주문 상태가 '${r.status}'로 변경되었습니다.`)},onError:e=>{d.isAxiosError(e)&&t.error(e.response?.data?.message||"주문 상태 변경에 실패했습니다.")}})},g=()=>{const s=a();return n({mutationFn:({orderId:e,amount:r,reason:u,items:c})=>o.refundOrder(e,r,u,c),onSuccess:(e,r)=>{s.invalidateQueries({queryKey:["orders"]}),s.invalidateQueries({queryKey:["order",r.orderId]})},onError:e=>{d.isAxiosError(e)&&t.error(e.response?.data?.message||"주문 환불 처리에 실패했습니다.")}})},E=()=>{const s=a();return n({mutationFn:e=>o.bulkOrderAction(e),onSuccess:(e,r)=>{s.invalidateQueries({queryKey:["orders"]}),r.action==="update_status"?t.success(`${r.orderIds.length}개 주문의 상태가 변경되었습니다.`):r.action==="delete"?t.success(`${r.orderIds.length}개 주문이 삭제되었습니다.`):r.action},onError:e=>{d.isAxiosError(e)&&t.error(e.response?.data?.message||"대량 작업 처리에 실패했습니다.")}})};export{E as a,O as b,f as c,g as d,q as u};
