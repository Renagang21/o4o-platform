{"version":3,"file":"ImageBlockSettings-BRLuyuSF.js","sources":["../../src/components/editor/ImageBlockSettings.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { \n  AlignLeft, \n  AlignCenter, \n  AlignRight, \n  Maximize, \n  RectangleHorizontal,\n  Link2,\n  Type\n} from 'lucide-react';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { clsx } from 'clsx';\n\ninterface ImageBlockSettingsProps {\n  settings: {\n    alignment?: 'left' | 'center' | 'right' | 'wide' | 'full';\n    size?: 'thumbnail' | 'medium' | 'large' | 'full';\n    width?: number;\n    height?: number;\n    alt?: string;\n    caption?: string;\n    link?: string;\n    linkTarget?: '_self' | '_blank';\n  };\n  onChange: (settings: any) => void;\n}\n\nconst ImageBlockSettings: FC<ImageBlockSettingsProps> = ({ settings, onChange }) => {\n  const alignmentOptions = [\n    { value: 'left', icon: AlignLeft, label: '왼쪽' },\n    { value: 'center', icon: AlignCenter, label: '가운데' },\n    { value: 'right', icon: AlignRight, label: '오른쪽' },\n    { value: 'wide', icon: RectangleHorizontal, label: '넓게' },\n    { value: 'full', icon: Maximize, label: '전체 너비' }\n  ];\n\n  const sizeOptions = [\n    { value: 'thumbnail', label: '썸네일 (150x150)' },\n    { value: 'medium', label: '중간 (300x300)' },\n    { value: 'large', label: '크게 (1024x1024)' },\n    { value: 'full', label: '원본 크기' }\n  ];\n\n  return (\n    <div className=\"space-y-4 p-4 bg-gray-50 rounded-lg\">\n      {/* 정렬 */}\n      <div>\n        <Label className=\"text-sm font-medium mb-2 block\">정렬</Label>\n        <div className=\"flex gap-1\">\n          {alignmentOptions.map((option: any) => {\n            const Icon = option.icon;\n            return (\n              <button\n                key={option.value}\n                onClick={() => onChange({ ...settings as any, alignment: option.value })}\n                className={clsx(\n                  'p-2 rounded transition-colors',\n                  settings.alignment === option.value\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-white text-gray-600 hover:bg-gray-100'\n                )}\n                title={option.label}\n              >\n                <Icon className=\"w-4 h-4\" />\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* 크기 */}\n      <div>\n        <Label className=\"text-sm font-medium mb-2 block\">이미지 크기</Label>\n        <select\n          value={settings.size || 'large'}\n          onChange={(e: any) => onChange({ ...settings as any, size: e.target.value })}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          {sizeOptions.map((option: any) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* 커스텀 크기 */}\n      {settings.size === 'full' && (\n        <div className=\"grid grid-cols-2 gap-2\">\n          <div>\n            <Label htmlFor=\"width\" className=\"text-sm\">너비</Label>\n            <Input\n              id=\"width\"\n              type=\"number\"\n              value={settings.width || ''}\n              onChange={(e: any) => onChange({ ...settings as any, width: parseInt(e.target.value) || undefined })}\n              placeholder=\"px\"\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"height\" className=\"text-sm\">높이</Label>\n            <Input\n              id=\"height\"\n              type=\"number\"\n              value={settings.height || ''}\n              onChange={(e: any) => onChange({ ...settings as any, height: parseInt(e.target.value) || undefined })}\n              placeholder=\"px\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* 대체 텍스트 */}\n      <div>\n        <Label htmlFor=\"alt\" className=\"text-sm font-medium mb-1 block\">\n          <Type className=\"w-3 h-3 inline mr-1\" />\n          대체 텍스트\n        </Label>\n        <Input\n          id=\"alt\"\n          value={settings.alt || ''}\n          onChange={(e: any) => onChange({ ...settings as any, alt: e.target.value })}\n          placeholder=\"이미지 설명\"\n        />\n        <p className=\"text-xs text-gray-500 mt-1\">접근성을 위해 이미지를 설명하세요</p>\n      </div>\n\n      {/* 캡션 */}\n      <div>\n        <Label htmlFor=\"caption\" className=\"text-sm font-medium mb-1 block\">캡션</Label>\n        <Textarea\n          id=\"caption\"\n          value={settings.caption || ''}\n          onChange={(e: any) => onChange({ ...settings as any, caption: e.target.value })}\n          placeholder=\"이미지 캡션 (선택사항)\"\n          rows={2}\n        />\n      </div>\n\n      {/* 링크 */}\n      <div>\n        <Label htmlFor=\"link\" className=\"text-sm font-medium mb-1 block\">\n          <Link2 className=\"w-3 h-3 inline mr-1\" />\n          링크 URL\n        </Label>\n        <Input\n          id=\"link\"\n          type=\"url\"\n          value={settings.link || ''}\n          onChange={(e: any) => onChange({ ...settings as any, link: e.target.value })}\n          placeholder=\"https://example.com\"\n        />\n        {settings.link && (\n          <div className=\"mt-2\">\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={settings.linkTarget === '_blank'}\n                onChange={(e: any) => onChange({ \n                  ...settings as any, \n                  linkTarget: e.target.checked ? '_blank' : '_self' \n                })}\n                className=\"rounded\"\n              />\n              <span className=\"text-sm\">새 탭에서 열기</span>\n            </label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageBlockSettings;"],"names":["ImageBlockSettings","settings","onChange","alignmentOptions","AlignLeft","AlignCenter","AlignRight","RectangleHorizontal","Maximize","sizeOptions","jsxs","jsx","Label","option","Icon","clsx","e","Input","Type","Textarea","Link2"],"mappings":"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"}