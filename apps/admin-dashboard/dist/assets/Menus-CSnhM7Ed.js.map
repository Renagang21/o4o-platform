{"version":3,"file":"Menus-CSnhM7Ed.js","sources":["../../src/pages/menus/WordPressMenuList.tsx","../../src/api/menuApi.ts","../../src/pages/menus/WordPressMenuEditor.tsx","../../src/pages/menus/Menus.tsx"],"sourcesContent":["import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Menu,\n  Plus,\n  Edit2,\n  Trash2,\n  Copy,\n  MapPin,\n  Settings,\n  ChevronRight,\n  Search,\n  Filter,\n  Check,\n  X,\n  Smartphone,\n  Monitor,\n  Users\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\ninterface MenuData {\n  id: string;\n  name: string;\n  slug: string;\n  location?: string;\n  itemCount: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst WordPressMenuList: FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMenus, setSelectedMenus] = useState<string[]>([]);\n  const [editingSlug, setEditingSlug] = useState<string | null>(null);\n  \n  // Mock data\n  const [menus] = useState<MenuData[]>([\n    {\n      id: '1',\n      name: '주 메뉴',\n      slug: 'primary-menu',\n      location: 'primary',\n      itemCount: 7,\n      createdAt: '2024-01-15',\n      updatedAt: '2024-01-20'\n    },\n    {\n      id: '2',\n      name: '푸터 메뉴',\n      slug: 'footer-menu',\n      location: 'footer',\n      itemCount: 5,\n      createdAt: '2024-01-16',\n      updatedAt: '2024-01-19'\n    },\n    {\n      id: '3',\n      name: '모바일 메뉴',\n      slug: 'mobile-menu',\n      location: 'mobile',\n      itemCount: 6,\n      createdAt: '2024-01-17',\n      updatedAt: '2024-01-18'\n    },\n    {\n      id: '4',\n      name: '소셜 링크',\n      slug: 'social-links',\n      location: 'social',\n      itemCount: 4,\n      createdAt: '2024-01-18',\n      updatedAt: '2024-01-18'\n    }\n  ]);\n  \n  const menuLocations: Record<string, { name: string; icon: any; color: 'blue' | 'gray' | 'green' | 'purple' }> = {\n    primary: { name: '주 메뉴', icon: Monitor, color: 'blue' },\n    footer: { name: '푸터 메뉴', icon: MapPin, color: 'gray' },\n    mobile: { name: '모바일 메뉴', icon: Smartphone, color: 'green' },\n    social: { name: '소셜 링크', icon: Users, color: 'purple' }\n  };\n  \n  // Filter menus based on search\n  const filteredMenus = menus.filter(menu =>\n    menu.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    menu.slug.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  \n  // Delete menu\n  const deleteMenu = (_menuId: string) => {\n    if (confirm('이 메뉴를 삭제하시겠습니까?')) {\n      toast.success('메뉴가 삭제되었습니다');\n    }\n  };\n  \n  // Duplicate menu\n  const duplicateMenu = (menu: MenuData) => {\n    toast.success(`\"${menu.name}\" 메뉴가 복제되었습니다`);\n  };\n  \n  // Bulk delete\n  const bulkDelete = () => {\n    if (selectedMenus.length === 0) {\n      toast.error('삭제할 메뉴를 선택하세요');\n      return;\n    }\n    \n    if (confirm(`선택한 ${selectedMenus.length}개 메뉴를 삭제하시겠습니까?`)) {\n      toast.success(`${selectedMenus.length}개 메뉴가 삭제되었습니다`);\n      setSelectedMenus([]);\n    }\n  };\n  \n  // Select all\n  const selectAll = () => {\n    if (selectedMenus.length === filteredMenus.length) {\n      setSelectedMenus([]);\n    } else {\n      setSelectedMenus(filteredMenus.map(m => m.id));\n    }\n  };\n  \n  // Get location icon and color\n  const getLocationStyle = (location?: string) => {\n    if (!location || !menuLocations[location]) return null;\n    const loc = menuLocations[location];\n    const colors: Record<'blue' | 'gray' | 'green' | 'purple', string> = {\n      blue: 'bg-blue-100 text-blue-700 border-blue-200',\n      gray: 'bg-gray-100 text-gray-700 border-gray-200',\n      green: 'bg-green-100 text-green-700 border-green-200',\n      purple: 'bg-purple-100 text-purple-700 border-purple-200'\n    };\n    \n    return {\n      icon: loc.icon,\n      className: colors[loc.color],\n      name: loc.name\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b px-8 py-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\n              <Menu className=\"w-8 h-8 text-gray-700\" />\n              메뉴\n            </h1>\n            <p className=\"text-gray-600 mt-2\">사이트의 내비게이션 메뉴를 관리합니다</p>\n          </div>\n          <Link\n            to=\"/appearance/menus/new\"\n            className=\"px-5 py-2.5 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 shadow-sm transition-all duration-200 transform hover:scale-105\"\n          >\n            <Plus className=\"w-5 h-5\" />\n            <span className=\"font-medium\">새 메뉴 만들기</span>\n          </Link>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"px-8 py-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {Object.entries(menuLocations).map(([key, location]) => {\n            const menuCount = menus.filter(m => m.location === key).length;\n            const LocationIcon = location.icon;\n            const style = getLocationStyle(key);\n            \n            return (\n              <div key={key} className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{location.name}</p>\n                    <p className=\"text-2xl font-bold text-gray-900 mt-1\">{menuCount}</p>\n                  </div>\n                  <div className={`p-3 rounded-lg ${style?.className}`}>\n                    <LocationIcon className=\"w-6 h-6\" />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Filters and Actions */}\n      <div className=\"px-8 pb-4\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4 flex-1\">\n              <div className=\"relative flex-1 max-w-md\">\n                <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  placeholder=\"메뉴 검색...\"\n                  className=\"w-full pl-9 pr-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n              \n              {selectedMenus.length > 0 && (\n                <div className=\"flex items-center gap-3 px-4 py-2 bg-blue-50 rounded-lg\">\n                  <span className=\"text-sm text-blue-700\">\n                    {selectedMenus.length}개 선택됨\n                  </span>\n                  <button\n                    onClick={bulkDelete}\n                    className=\"text-sm text-red-600 hover:text-red-700 font-medium\"\n                  >\n                    삭제\n                  </button>\n                  <button\n                    onClick={() => setSelectedMenus([])}\n                    className=\"text-sm text-gray-600 hover:text-gray-700\"\n                  >\n                    선택 해제\n                  </button>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <button className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg\">\n                <Filter className=\"w-5 h-5\" />\n              </button>\n              <button className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg\">\n                <Settings className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Menu List */}\n      <div className=\"px-8 pb-8\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          {filteredMenus.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <Menu className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">메뉴가 없습니다</h3>\n              <p className=\"text-gray-500 mb-6\">첫 번째 메뉴를 만들어보세요</p>\n              <Link\n                to=\"/appearance/menus/new\"\n                className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                새 메뉴 만들기\n              </Link>\n            </div>\n          ) : (\n            <table className=\"w-full\">\n              <thead className=\"bg-gradient-to-r from-gray-50 to-gray-100 border-b border-gray-200\">\n                <tr>\n                  <th className=\"w-12 px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedMenus.length === filteredMenus.length && filteredMenus.length > 0}\n                      onChange={selectAll}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </th>\n                  <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                    메뉴 이름\n                  </th>\n                  <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                    위치\n                  </th>\n                  <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                    항목 수\n                  </th>\n                  <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                    마지막 수정\n                  </th>\n                  <th className=\"px-6 py-4 text-right text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                    작업\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-100\">\n                {filteredMenus.map((menu) => {\n                  const locationStyle = getLocationStyle(menu.location);\n                  const LocationIcon = locationStyle?.icon;\n                  \n                  return (\n                    <tr key={menu.id} className=\"hover:bg-blue-50/30 transition-colors\">\n                      <td className=\"px-6 py-5\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedMenus.includes(menu.id)}\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              setSelectedMenus([...selectedMenus, menu.id]);\n                            } else {\n                              setSelectedMenus(selectedMenus.filter(id => id !== menu.id));\n                            }\n                          }}\n                          className=\"rounded border-gray-300\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-5\">\n                        <div>\n                          <Link\n                            to={`/appearance/menus/${menu.id}/edit`}\n                            className=\"text-base font-semibold text-gray-900 hover:text-blue-600 transition-colors\"\n                          >\n                            {menu.name}\n                          </Link>\n                          <div className=\"flex items-center gap-3 mt-2\">\n                            {editingSlug === menu.id ? (\n                              <div className=\"flex items-center gap-2\">\n                                <input\n                                  type=\"text\"\n                                  defaultValue={menu.slug}\n                                  className=\"px-2 py-0.5 text-xs border rounded\"\n                                  onKeyDown={(e) => {\n                                    if (e.key === 'Enter') {\n                                      setEditingSlug(null);\n                                      toast.success('슬러그가 업데이트되었습니다');\n                                    }\n                                    if (e.key === 'Escape') {\n                                      setEditingSlug(null);\n                                    }\n                                  }}\n                                  autoFocus\n                                />\n                                <button\n                                  onClick={() => {\n                                    setEditingSlug(null);\n                                    toast.success('슬러그가 업데이트되었습니다');\n                                  }}\n                                  className=\"text-green-600 hover:text-green-700\"\n                                >\n                                  <Check className=\"w-3 h-3\" />\n                                </button>\n                                <button\n                                  onClick={() => setEditingSlug(null)}\n                                  className=\"text-gray-600 hover:text-gray-700\"\n                                >\n                                  <X className=\"w-3 h-3\" />\n                                </button>\n                              </div>\n                            ) : (\n                              <div className=\"flex items-center gap-3\">\n                                <span className=\"text-xs text-gray-500\">\n                                  슬러그: <code className=\"bg-gray-100 px-1 py-0.5 rounded\">{menu.slug}</code>\n                                </span>\n                                <button\n                                  onClick={() => setEditingSlug(menu.id)}\n                                  className=\"text-xs text-blue-600 hover:text-blue-700\"\n                                >\n                                  편집\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-5\">\n                        {locationStyle && LocationIcon && (\n                          <div className={`inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-xs font-medium border ${locationStyle.className}`}>\n                            <LocationIcon className=\"w-3 h-3\" />\n                            {locationStyle.name}\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-6 py-5\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm font-medium text-gray-700\">{menu.itemCount}</span>\n                          <span className=\"text-xs text-gray-500\">항목</span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-5\">\n                        <div className=\"text-sm text-gray-600\">\n                          {new Date(menu.updatedAt).toLocaleDateString('ko-KR')}\n                        </div>\n                        <div className=\"text-xs text-gray-400 mt-1\">\n                          생성: {new Date(menu.createdAt).toLocaleDateString('ko-KR')}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-5\">\n                        <div className=\"flex items-center justify-end gap-1\">\n                          <Link\n                            to={`/appearance/menus/${menu.id}/edit`}\n                            className=\"p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-all\"\n                            title=\"편집\"\n                          >\n                            <Edit2 className=\"w-4 h-4\" />\n                          </Link>\n                          <button\n                            onClick={() => duplicateMenu(menu)}\n                            className=\"p-2 text-gray-600 hover:text-green-600 hover:bg-green-50 rounded-lg transition-all\"\n                            title=\"복제\"\n                          >\n                            <Copy className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={() => deleteMenu(menu.id)}\n                            className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all\"\n                            title=\"삭제\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n\n      {/* Help Section */}\n      <div className=\"px-8 pb-8\">\n        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-3\">메뉴 사용 가이드</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800\">\n            <div>\n              <h4 className=\"font-medium mb-2\">메뉴 만들기</h4>\n              <ul className=\"space-y-1\">\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>\"새 메뉴 만들기\" 버튼을 클릭합니다</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>페이지, 글, 카테고리 등을 메뉴에 추가합니다</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>드래그 앤 드롭으로 순서를 조정합니다</span>\n                </li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium mb-2\">메뉴 위치</h4>\n              <ul className=\"space-y-1\">\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>주 메뉴: 사이트 상단 내비게이션</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>푸터 메뉴: 사이트 하단 링크</span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <ChevronRight className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <span>모바일 메뉴: 모바일 전용 내비게이션</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WordPressMenuList;","import { unifiedApi } from './unified-client';\n\nexport interface MenuLocation {\n  id: string;\n  key: string;\n  name: string;\n  description?: string;\n  is_active: boolean;\n  order_num: number;\n  metadata?: Record<string, any>;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface MenuItem {\n  id: string;\n  menu_id: string;\n  parent?: MenuItem | null;\n  title: string;\n  url?: string;\n  target?: '_self' | '_blank' | '_parent' | '_top';\n  type: 'custom' | 'page' | 'post' | 'category' | 'tag' | 'archive';\n  object_id?: string;\n  object_type?: string;\n  description?: string;\n  css_classes?: string;\n  xfn?: string;\n  order_num: number;\n  is_active: boolean;\n  metadata?: Record<string, any>;\n  children?: MenuItem[];\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface Menu {\n  id: string;\n  name: string;\n  slug: string;\n  description?: string;\n  location?: string;\n  is_active: boolean;\n  metadata?: Record<string, any>;\n  items?: MenuItem[];\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateMenuDto {\n  name: string;\n  slug?: string;\n  description?: string;\n  location?: string;\n  is_active?: boolean;\n  metadata?: Record<string, any>;\n}\n\nexport interface UpdateMenuDto extends Partial<CreateMenuDto> {}\n\nexport interface CreateMenuItemDto {\n  menu_id: string;\n  parent_id?: string;\n  title: string;\n  url?: string;\n  target?: '_self' | '_blank' | '_parent' | '_top';\n  type?: 'custom' | 'page' | 'post' | 'category' | 'tag' | 'archive';\n  object_id?: string;\n  object_type?: string;\n  description?: string;\n  css_classes?: string;\n  xfn?: string;\n  order_num?: number;\n  is_active?: boolean;\n  metadata?: Record<string, any>;\n}\n\nexport interface UpdateMenuItemDto extends Partial<CreateMenuItemDto> {}\n\nexport interface ReorderMenuItem {\n  id: string;\n  parent_id?: string;\n  order_num: number;\n}\n\nexport class MenuApi {\n  // Menu operations\n  static async getMenus(params?: { location?: string; is_active?: boolean }) {\n    const response = await unifiedApi.raw.get('/api/v1/menus', { params });\n    return response.data;\n  }\n\n  static async getMenu(id: string) {\n    const response = await unifiedApi.raw.get(`/api/v1/menus/${id}`);\n    return response.data;\n  }\n\n  static async getMenuByLocation(location: string) {\n    const response = await unifiedApi.raw.get(`/api/v1/menus/location/${location}`);\n    return response.data;\n  }\n\n  static async createMenu(data: CreateMenuDto) {\n    const response = await unifiedApi.raw.post('/api/v1/menus', data);\n    return response.data;\n  }\n\n  static async updateMenu(id: string, data: UpdateMenuDto) {\n    const response = await unifiedApi.raw.put(`/api/v1/menus/${id}`, data);\n    return response.data;\n  }\n\n  static async deleteMenu(id: string) {\n    const response = await unifiedApi.raw.delete(`/api/v1/menus/${id}`);\n    return response.data;\n  }\n\n  static async duplicateMenu(id: string, name: string, slug?: string) {\n    const response = await unifiedApi.raw.post(`/api/v1/menus/${id}/duplicate`, { name, slug });\n    return response.data;\n  }\n\n  static async reorderMenuItems(menuId: string, items: ReorderMenuItem[]) {\n    const response = await unifiedApi.raw.put(`/api/v1/menus/${menuId}/reorder`, items);\n    return response.data;\n  }\n\n  // Menu item operations\n  static async createMenuItem(data: CreateMenuItemDto) {\n    const response = await unifiedApi.raw.post('/api/v1/menu-items', data);\n    return response.data;\n  }\n\n  static async updateMenuItem(id: string, data: UpdateMenuItemDto) {\n    const response = await unifiedApi.raw.put(`/api/v1/menu-items/${id}`, data);\n    return response.data;\n  }\n\n  static async deleteMenuItem(id: string) {\n    const response = await unifiedApi.raw.delete(`/api/v1/menu-items/${id}`);\n    return response.data;\n  }\n\n  // Menu location operations\n  static async getMenuLocations() {\n    const response = await unifiedApi.raw.get('/api/v1/menus/locations');\n    return response.data;\n  }\n\n  // Phase 2 APIs (to be implemented)\n  \n  // Conditional display\n  static async createMenuItemConditions(itemId: string, conditions: any) {\n    const response = await unifiedApi.raw.post(`/api/v1/menu-items/${itemId}/conditions`, conditions);\n    return response.data;\n  }\n\n  static async getMenuItemConditions(itemId: string) {\n    const response = await unifiedApi.raw.get(`/api/v1/menu-items/${itemId}/conditions`);\n    return response.data;\n  }\n\n  static async deleteMenuItemConditions(itemId: string) {\n    const response = await unifiedApi.raw.delete(`/api/v1/menu-items/${itemId}/conditions`);\n    return response.data;\n  }\n\n  // Menu styles\n  static async createMenuStyles(menuId: string, styles: any) {\n    const response = await unifiedApi.raw.post(`/api/v1/menus/${menuId}/styles`, styles);\n    return response.data;\n  }\n\n  static async getMenuStyles(menuId: string) {\n    const response = await unifiedApi.raw.get(`/api/v1/menus/${menuId}/styles`);\n    return response.data;\n  }\n\n  static async updateMenuStyles(menuId: string, styles: any) {\n    const response = await unifiedApi.raw.put(`/api/v1/menus/${menuId}/styles`, styles);\n    return response.data;\n  }\n\n  // Mega menu\n  static async createMegaMenu(menuId: string, config: any) {\n    const response = await unifiedApi.raw.post(`/api/v1/menus/${menuId}/mega-menu`, config);\n    return response.data;\n  }\n\n  static async getMegaMenu(menuId: string) {\n    const response = await unifiedApi.raw.get(`/api/v1/menus/${menuId}/mega-menu`);\n    return response.data;\n  }\n\n  static async updateMegaMenu(menuId: string, config: any) {\n    const response = await unifiedApi.raw.put(`/api/v1/menus/${menuId}/mega-menu`, config);\n    return response.data;\n  }\n\n  // Helper methods\n  static buildMenuTree(items: MenuItem[]): MenuItem[] {\n    const itemMap = new Map<string, MenuItem>();\n    const rootItems: MenuItem[] = [];\n\n    // First pass: create map\n    items.forEach(item => {\n      itemMap.set(item.id, { ...item, children: [] });\n    });\n\n    // Second pass: build tree\n    items.forEach(item => {\n      const mappedItem = itemMap.get(item.id)!;\n      if (item.parent?.id) {\n        const parent = itemMap.get(item.parent.id);\n        if (parent) {\n          parent.children = parent.children || [];\n          parent.children.push(mappedItem);\n        }\n      } else {\n        rootItems.push(mappedItem);\n      }\n    });\n\n    // Sort by order_num\n    const sortItems = (items: MenuItem[]) => {\n      items.sort((a, b) => a.order_num - b.order_num);\n      items.forEach(item => {\n        if (item.children && item.children.length > 0) {\n          sortItems(item.children);\n        }\n      });\n    };\n\n    sortItems(rootItems);\n    return rootItems;\n  }\n\n  static flattenMenuTree(items: MenuItem[], parentId?: string): ReorderMenuItem[] {\n    const result: ReorderMenuItem[] = [];\n    let orderNum = 0;\n\n    const processItems = (items: MenuItem[], parentId?: string) => {\n      items.forEach(item => {\n        result.push({\n          id: item.id,\n          parent_id: parentId,\n          order_num: orderNum++\n        });\n\n        if (item.children && item.children.length > 0) {\n          processItems(item.children, item.id);\n        }\n      });\n    };\n\n    processItems(items, parentId);\n    return result;\n  }\n}\n\nexport default MenuApi;","import { FC, useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  Menu,\n  Plus,\n  Trash2,\n  Save,\n  ChevronDown,\n  ChevronRight,\n  Link2,\n  FileText,\n  Folder,\n  Tag,\n  Move,\n  Edit2,\n  X,\n  Search,\n  ExternalLink,\n  Type,\n  AlertCircle,\n  Check\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport MenuApi, { MenuItem as MenuItemType, MenuLocation as MenuLocationType } from '../../api/menuApi';\nimport { unifiedApi } from '../../api/unified-client';\n\n// Types\ninterface MenuItem {\n  id: string;\n  title: string;\n  url?: string;\n  type: 'page' | 'post' | 'custom' | 'category' | 'tag';\n  target?: '_blank' | '_self';\n  cssClass?: string;\n  description?: string;\n  children?: MenuItem[];\n  isOpen?: boolean;\n  originalId?: string; // For pages/posts/categories\n  menu_id?: string;\n  parent_id?: string;\n  order_num?: number;\n}\n\ninterface MenuLocation {\n  id: string;\n  key?: string;\n  name: string;\n  description: string;\n}\n\ninterface AvailableItem {\n  id: string;\n  title: string;\n  type: 'page' | 'post' | 'category' | 'tag';\n  url?: string;\n}\n\nconst WordPressMenuEditor: FC = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const dragItem = useRef<MenuItem | null>(null);\n  const dragOverItem = useRef<MenuItem | null>(null);\n  \n  // Menu data\n  const [menuName, setMenuName] = useState('');\n  const [menuSlug, setMenuSlug] = useState('');\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [selectedLocation, setSelectedLocation] = useState<string>('');\n  \n  // UI state\n  const [activeTab, setActiveTab] = useState<'pages' | 'posts' | 'links' | 'categories' | 'tags'>('pages');\n  const [showAddCustomLink, setShowAddCustomLink] = useState(false);\n  const [customLinkTitle, setCustomLinkTitle] = useState('');\n  const [customLinkUrl, setCustomLinkUrl] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n  const [editingItem, setEditingItem] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [currentMenuId, setCurrentMenuId] = useState<string | null>(null);\n  \n  // Available items - will be loaded from API\n  const [pages, setPages] = useState<AvailableItem[]>([]);\n  const [posts, setPosts] = useState<AvailableItem[]>([]);\n  const [categories, setCategories] = useState<AvailableItem[]>([]);\n  const [tags, setTags] = useState<AvailableItem[]>([]);\n  const [menuLocations, setMenuLocations] = useState<MenuLocation[]>([]);\n\n  // Load available items and menu locations\n  useEffect(() => {\n    loadAvailableItems();\n    loadMenuLocations();\n  }, []);\n\n  // Load menu data if editing\n  useEffect(() => {\n    if (id) {\n      loadMenu(id);\n    }\n  }, [id]);\n\n  const loadAvailableItems = async () => {\n    try {\n      // Load pages\n      const pagesResponse = await (unifiedApi as any).raw.get('/api/pages?limit=100');\n      if (pagesResponse.data?.success && pagesResponse.data?.data) {\n        setPages(pagesResponse.data.data.map((page: any) => ({\n          id: page.id,\n          title: page.title,\n          type: 'page' as const,\n          url: `/${page.slug}`\n        })));\n      }\n\n      // Load posts\n      const postsResponse = await (unifiedApi as any).raw.get('/api/posts?limit=100');\n      if (postsResponse.data?.success && postsResponse.data?.data) {\n        setPosts(postsResponse.data.data.map((post: any) => ({\n          id: post.id,\n          title: post.title,\n          type: 'post' as const,\n          url: `/blog/${post.slug}`\n        })));\n      }\n\n      // Load categories\n      const categoriesResponse = await (unifiedApi as any).raw.get('/api/categories?limit=100');\n      if (categoriesResponse.data?.success && categoriesResponse.data?.data) {\n        setCategories(categoriesResponse.data.data.map((cat: any) => ({\n          id: cat.id,\n          title: cat.name,\n          type: 'category' as const,\n          url: `/category/${cat.slug}`\n        })));\n      }\n\n      // Load tags\n      const tagsResponse = await (unifiedApi as any).raw.get('/api/tags?limit=100');\n      if (tagsResponse.data?.success && tagsResponse.data?.data) {\n        setTags(tagsResponse.data.data.map((tag: any) => ({\n          id: tag.id,\n          title: tag.name,\n          type: 'tag' as const,\n          url: `/tag/${tag.slug}`\n        })));\n      }\n    } catch (error) {\n      // Error log removed\n    }\n  };\n\n  const loadMenuLocations = async () => {\n    try {\n      const response = await MenuApi.getMenuLocations();\n      if (response.success && response.data) {\n        setMenuLocations(response.data.map((loc: MenuLocationType) => ({\n          id: loc.key || loc.id,\n          key: loc.key,\n          name: loc.name,\n          description: loc.description || ''\n        })));\n      }\n    } catch (error) {\n      // Error log removed\n      // Use default locations as fallback\n      setMenuLocations([\n        { id: 'primary', key: 'primary', name: '주 메뉴', description: '사이트 상단에 표시되는 메인 메뉴' },\n        { id: 'footer', key: 'footer', name: '푸터 메뉴', description: '사이트 하단에 표시되는 메뉴' },\n        { id: 'mobile', key: 'mobile', name: '모바일 메뉴', description: '모바일 기기에서 표시되는 메뉴' },\n        { id: 'social', key: 'social', name: '소셜 링크', description: '소셜 미디어 링크 메뉴' }\n      ]);\n    }\n  };\n\n  const loadMenu = async (menuId: string) => {\n    setIsLoading(true);\n    try {\n      const response = await MenuApi.getMenu(menuId);\n      if (response.success && response.data) {\n        const menu = response.data;\n        setCurrentMenuId(menu.id);\n        setMenuName(menu.name);\n        setMenuSlug(menu.slug);\n        setSelectedLocation(menu.location || '');\n        \n        // Convert API menu items to component format\n        if (menu.items && menu.items.length > 0) {\n          const convertedItems = convertApiItemsToMenuItems(menu.items);\n          setMenuItems(convertedItems);\n        }\n      }\n    } catch (error) {\n      // Error log removed\n      toast.error('메뉴를 불러오는데 실패했습니다');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const convertApiItemsToMenuItems = (apiItems: MenuItemType[]): MenuItem[] => {\n    return apiItems.map(item => ({\n      id: item.id,\n      title: item.title,\n      url: item.url,\n      type: (item.type || 'custom') as any,\n      target: item.target as any,\n      cssClass: item.css_classes,\n      description: item.description,\n      originalId: item.object_id,\n      children: item.children ? convertApiItemsToMenuItems(item.children) : [],\n      menu_id: item.menu_id,\n      order_num: item.order_num\n    }));\n  };\n\n  const convertMenuItemsToApiFormat = (items: MenuItem[], menuId: string, parentId?: string): any[] => {\n    return items.map((item, index) => ({\n      id: item.id.startsWith('new-') ? undefined : item.id,\n      menu_id: menuId,\n      parent_id: parentId,\n      title: item.title,\n      url: item.url,\n      type: item.type,\n      target: item.target || '_self',\n      object_id: item.originalId,\n      css_classes: item.cssClass,\n      description: item.description,\n      order_num: index,\n      is_active: true,\n      children: item.children ? convertMenuItemsToApiFormat(item.children, menuId, item.id) : []\n    }));\n  };\n\n  // Generate slug from menu name\n  useEffect(() => {\n    if (menuName && !id) {\n      const slug = menuName\n        .toLowerCase()\n        .replace(/[^a-z0-9가-힣ㄱ-ㅎㅏ-ㅣ\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n      setMenuSlug(slug);\n    }\n  }, [menuName, id]);\n\n  // Get available items based on active tab\n  const getAvailableItems = () => {\n    let items: AvailableItem[] = [];\n    switch (activeTab) {\n      case 'pages':\n        items = pages;\n        break;\n      case 'posts':\n        items = posts;\n        break;\n      case 'categories':\n        items = categories;\n        break;\n      case 'tags':\n        items = tags;\n        break;\n      default:\n        items = [];\n    }\n    \n    if (searchTerm) {\n      return items.filter(item => \n        item.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    return items;\n  };\n\n  // Add items to menu\n  const addItemsToMenu = () => {\n    if (selectedItems.length === 0) {\n      toast.error('항목을 선택해주세요');\n      return;\n    }\n    \n    const availableItems = getAvailableItems();\n    const newItems: MenuItem[] = selectedItems.map(itemId => {\n      const item = availableItems.find(i => i.id === itemId);\n      if (item) {\n        return {\n          id: Date.now().toString() + Math.random(),\n          title: item.title,\n          url: item.url,\n          type: item.type,\n          originalId: item.id\n        };\n      }\n      return null;\n    }).filter(Boolean) as MenuItem[];\n    \n    setMenuItems([...menuItems, ...newItems]);\n    setSelectedItems([]);\n    toast.success(`${newItems.length}개 항목이 추가되었습니다`);\n  };\n\n  // Add custom link\n  const addCustomLink = () => {\n    if (!customLinkTitle || !customLinkUrl) {\n      toast.error('제목과 URL을 입력해주세요');\n      return;\n    }\n    \n    const newItem: MenuItem = {\n      id: Date.now().toString(),\n      title: customLinkTitle,\n      url: customLinkUrl,\n      type: 'custom'\n    };\n    \n    setMenuItems([...menuItems, newItem]);\n    setCustomLinkTitle('');\n    setCustomLinkUrl('');\n    setShowAddCustomLink(false);\n    toast.success('사용자 정의 링크가 추가되었습니다');\n  };\n\n  // Remove menu item\n  const removeMenuItem = (itemId: string) => {\n    const removeItemRecursive = (items: MenuItem[]): MenuItem[] => {\n      return items.filter(item => {\n        if (item.id === itemId) {\n          return false;\n        }\n        if (item.children) {\n          item.children = removeItemRecursive(item.children);\n        }\n        return true;\n      });\n    };\n    \n    setMenuItems(removeItemRecursive(menuItems));\n    toast.success('메뉴 항목이 삭제되었습니다');\n  };\n\n  // Update menu item\n  const updateMenuItem = (itemId: string, updates: Partial<MenuItem>) => {\n    const updateItemRecursive = (items: MenuItem[]): MenuItem[] => {\n      return items.map(item => {\n        if (item.id === itemId) {\n          return { ...item, ...updates };\n        }\n        if (item.children) {\n          return { ...item, children: updateItemRecursive(item.children) };\n        }\n        return item;\n      });\n    };\n    \n    setMenuItems(updateItemRecursive(menuItems));\n  };\n\n  // Toggle item expansion\n  const toggleItemExpansion = (itemId: string) => {\n    const toggleRecursive = (items: MenuItem[]): MenuItem[] => {\n      return items.map(item => {\n        if (item.id === itemId) {\n          return { ...item, isOpen: !item.isOpen };\n        }\n        if (item.children) {\n          return { ...item, children: toggleRecursive(item.children) };\n        }\n        return item;\n      });\n    };\n    \n    setMenuItems(toggleRecursive(menuItems));\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (e: React.DragEvent, item: MenuItem) => {\n    dragItem.current = item;\n    setIsDragging(true);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragEnter = (_e: React.DragEvent, item: MenuItem) => {\n    dragOverItem.current = item;\n  };\n\n  const handleDragEnd = () => {\n    if (dragItem.current && dragOverItem.current && dragItem.current.id !== dragOverItem.current.id) {\n      // Reorder logic here\n      const draggedItem = dragItem.current;\n      const targetItem = dragOverItem.current;\n      \n      // Remove dragged item from its position\n      const removeItem = (items: MenuItem[]): { items: MenuItem[], removed?: MenuItem } => {\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].id === draggedItem.id) {\n            const removed = items.splice(i, 1)[0];\n            return { items, removed };\n          }\n          if (items[i].children) {\n            const result = removeItem(items[i].children!);\n            if (result.removed) {\n              return { items, removed: result.removed };\n            }\n          }\n        }\n        return { items };\n      };\n      \n      // Insert item at new position\n      const insertItem = (items: MenuItem[], itemToInsert: MenuItem, targetId: string): MenuItem[] => {\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].id === targetId) {\n            // Insert after target\n            items.splice(i + 1, 0, itemToInsert);\n            return items;\n          }\n          if (items[i].children) {\n            items[i].children = insertItem(items[i].children!, itemToInsert, targetId);\n          }\n        }\n        return items;\n      };\n      \n      let newItems = [...menuItems];\n      const { items: itemsAfterRemove, removed } = removeItem(newItems);\n      if (removed) {\n        newItems = insertItem(itemsAfterRemove, removed, targetItem.id);\n        setMenuItems(newItems);\n      }\n    }\n    \n    dragItem.current = null;\n    dragOverItem.current = null;\n    setIsDragging(false);\n  };\n\n\n  // Save menu\n  const saveMenu = async () => {\n    if (!menuName) {\n      toast.error('메뉴 이름을 입력해주세요');\n      return;\n    }\n    \n    setIsSaving(true);\n    try {\n      const menuData = {\n        name: menuName,\n        slug: menuSlug || menuName.toLowerCase().replace(/\\s+/g, '-'),\n        location: selectedLocation,\n        description: '',\n        is_active: true\n      };\n\n      let savedMenu;\n      if (currentMenuId || id) {\n        // Update existing menu\n        const response = await MenuApi.updateMenu(currentMenuId || id!, menuData);\n        savedMenu = response.data;\n      } else {\n        // Create new menu\n        const response = await MenuApi.createMenu(menuData);\n        savedMenu = response.data;\n        setCurrentMenuId(savedMenu.id);\n      }\n\n      // Save menu items\n      if (savedMenu && menuItems.length > 0) {\n        // First, delete all existing items for this menu\n        if (currentMenuId || id) {\n          // Note: We might need a bulk delete API endpoint\n          // For now, we'll recreate all items\n        }\n\n        // Convert and save menu items\n        const apiItems = convertMenuItemsToApiFormat(menuItems, savedMenu.id);\n        \n        // Create all menu items\n        for (const item of apiItems) {\n          await saveMenuItem(item, savedMenu.id);\n        }\n      }\n\n      toast.success('메뉴가 저장되었습니다!');\n      \n      if (!id && !currentMenuId) {\n        navigate('/menus');\n      }\n    } catch (error) {\n      // Error log removed\n      toast.error('메뉴 저장 중 오류가 발생했습니다');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Helper function to save menu item recursively\n  const saveMenuItem = async (item: any, menuId: string, parentId?: string): Promise<string> => {\n    const itemData = {\n      menu_id: menuId,\n      parent_id: parentId,\n      title: item.title,\n      url: item.url,\n      type: item.type,\n      target: item.target,\n      object_id: item.object_id,\n      css_classes: item.css_classes,\n      description: item.description,\n      order_num: item.order_num,\n      is_active: true\n    };\n\n    let savedItemId = item.id;\n    \n    if (!item.id || item.id.startsWith('new-')) {\n      // Create new item\n      const response = await MenuApi.createMenuItem(itemData);\n      savedItemId = response.data.id;\n    } else {\n      // Update existing item\n      await MenuApi.updateMenuItem(item.id, itemData);\n    }\n\n    // Save children recursively\n    if (item.children && item.children.length > 0) {\n      for (const child of item.children) {\n        await saveMenuItem(child, menuId, savedItemId);\n      }\n    }\n\n    return savedItemId;\n  };\n\n  // Render menu item\n  const renderMenuItem = (item: MenuItem, depth = 0) => {\n    const isEditing = editingItem === item.id;\n    \n    return (\n      <div key={item.id} className={`${depth > 0 ? 'ml-8' : ''}`}>\n        <div\n          className={`group bg-white border rounded-lg mb-2 ${\n            isDragging ? 'cursor-move' : ''\n          } hover:border-blue-300 transition-colors`}\n          draggable\n          onDragStart={(e) => handleDragStart(e, item)}\n          onDragEnter={(e) => handleDragEnter(e, item)}\n          onDragEnd={handleDragEnd}\n        >\n          <div className=\"p-3\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center flex-1\">\n                {item.children && item.children.length > 0 && (\n                  <button\n                    onClick={() => toggleItemExpansion(item.id)}\n                    className=\"mr-2 text-gray-500 hover:text-gray-700\"\n                  >\n                    {item.isOpen ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\n                  </button>\n                )}\n                \n                <div className=\"flex-1\">\n                  {isEditing ? (\n                    <div className=\"space-y-2\">\n                      <input\n                        type=\"text\"\n                        value={item.title}\n                        onChange={(e) => updateMenuItem(item.id, { title: e.target.value })}\n                        className=\"w-full px-2 py-1 border rounded text-sm\"\n                        placeholder=\"메뉴 제목\"\n                      />\n                      {item.type === 'custom' && (\n                        <input\n                          type=\"text\"\n                          value={item.url || ''}\n                          onChange={(e) => updateMenuItem(item.id, { url: e.target.value })}\n                          className=\"w-full px-2 py-1 border rounded text-sm\"\n                          placeholder=\"URL\"\n                        />\n                      )}\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={item.cssClass || ''}\n                          onChange={(e) => updateMenuItem(item.id, { cssClass: e.target.value })}\n                          className=\"flex-1 px-2 py-1 border rounded text-sm\"\n                          placeholder=\"CSS 클래스\"\n                        />\n                        <select\n                          value={item.target || '_self'}\n                          onChange={(e) => updateMenuItem(item.id, { target: e.target.value as '_blank' | '_self' })}\n                          className=\"px-2 py-1 border rounded text-sm\"\n                        >\n                          <option value=\"_self\">같은 탭</option>\n                          <option value=\"_blank\">새 탭</option>\n                        </select>\n                      </div>\n                      <input\n                        type=\"text\"\n                        value={item.description || ''}\n                        onChange={(e) => updateMenuItem(item.id, { description: e.target.value })}\n                        className=\"w-full px-2 py-1 border rounded text-sm\"\n                        placeholder=\"설명 (선택사항)\"\n                      />\n                    </div>\n                  ) : (\n                    <div>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium text-gray-900\">{item.title}</span>\n                        {item.type === 'page' && <FileText className=\"w-3 h-3 text-blue-500\" />}\n                        {item.type === 'post' && <Type className=\"w-3 h-3 text-green-500\" />}\n                        {item.type === 'category' && <Folder className=\"w-3 h-3 text-orange-500\" />}\n                        {item.type === 'tag' && <Tag className=\"w-3 h-3 text-purple-500\" />}\n                        {item.type === 'custom' && <Link2 className=\"w-3 h-3 text-gray-500\" />}\n                        {item.target === '_blank' && <ExternalLink className=\"w-3 h-3 text-gray-400\" />}\n                      </div>\n                      {item.url && (\n                        <div className=\"text-xs text-gray-500 mt-1\">{item.url}</div>\n                      )}\n                      {item.description && (\n                        <div className=\"text-xs text-gray-600 italic mt-1\">{item.description}</div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                {isEditing ? (\n                  <>\n                    <button\n                      onClick={() => setEditingItem(null)}\n                      className=\"p-1 text-green-600 hover:bg-green-50 rounded\"\n                    >\n                      <Check className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => setEditingItem(null)}\n                      className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\n                    >\n                      <X className=\"w-4 h-4\" />\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      onClick={() => setEditingItem(item.id)}\n                      className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\n                      title=\"편집\"\n                    >\n                      <Edit2 className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      className=\"p-1 text-gray-600 hover:bg-gray-100 rounded cursor-move\"\n                      title=\"드래그하여 이동\"\n                    >\n                      <Move className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => removeMenuItem(item.id)}\n                      className=\"p-1 text-red-600 hover:bg-red-50 rounded\"\n                      title=\"삭제\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {item.children && item.isOpen && (\n          <div className=\"mt-1\">\n            {item.children.map(child => renderMenuItem(child, depth + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b px-8 py-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">메뉴 편집</h1>\n            <p className=\"text-gray-600 mt-2\">사이트 메뉴를 만들고 관리합니다</p>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={() => navigate('/menus')}\n              className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n            >\n              취소\n            </button>\n            <button\n              onClick={saveMenu}\n              className=\"px-5 py-2.5 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 shadow-sm\"\n            >\n              <Save className=\"w-4 h-4\" />\n              메뉴 저장\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"px-8 py-6\">\n        <div className=\"flex gap-6\">\n          {/* Left Panel - Available Items */}\n          <div className=\"w-96\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"p-4 border-b\">\n                <h3 className=\"font-semibold text-gray-900\">메뉴에 추가</h3>\n              </div>\n              \n              {/* Tabs */}\n              <div className=\"flex border-b\">\n                <button\n                  onClick={() => setActiveTab('pages')}\n                  className={`flex-1 px-4 py-2 text-sm font-medium ${\n                    activeTab === 'pages'\n                      ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <FileText className=\"w-4 h-4 inline mr-1\" />\n                  페이지\n                </button>\n                <button\n                  onClick={() => setActiveTab('posts')}\n                  className={`flex-1 px-4 py-2 text-sm font-medium ${\n                    activeTab === 'posts'\n                      ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Type className=\"w-4 h-4 inline mr-1\" />\n                  글\n                </button>\n                <button\n                  onClick={() => setActiveTab('links')}\n                  className={`flex-1 px-4 py-2 text-sm font-medium ${\n                    activeTab === 'links'\n                      ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Link2 className=\"w-4 h-4 inline mr-1\" />\n                  링크\n                </button>\n              </div>\n              \n              <div className=\"flex border-b\">\n                <button\n                  onClick={() => setActiveTab('categories')}\n                  className={`flex-1 px-4 py-2 text-sm font-medium ${\n                    activeTab === 'categories'\n                      ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Folder className=\"w-4 h-4 inline mr-1\" />\n                  카테고리\n                </button>\n                <button\n                  onClick={() => setActiveTab('tags')}\n                  className={`flex-1 px-4 py-2 text-sm font-medium ${\n                    activeTab === 'tags'\n                      ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Tag className=\"w-4 h-4 inline mr-1\" />\n                  태그\n                </button>\n              </div>\n              \n              {/* Content */}\n              <div className=\"p-4\">\n                {activeTab === 'links' ? (\n                  <div className=\"space-y-3\">\n                    {!showAddCustomLink ? (\n                      <button\n                        onClick={() => setShowAddCustomLink(true)}\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 text-sm\"\n                      >\n                        <Plus className=\"w-4 h-4 inline mr-2\" />\n                        사용자 정의 링크 추가\n                      </button>\n                    ) : (\n                      <div className=\"space-y-3\">\n                        <input\n                          type=\"text\"\n                          value={customLinkUrl}\n                          onChange={(e) => setCustomLinkUrl(e.target.value)}\n                          placeholder=\"https://example.com\"\n                          className=\"w-full px-3 py-2 border rounded-lg text-sm\"\n                        />\n                        <input\n                          type=\"text\"\n                          value={customLinkTitle}\n                          onChange={(e) => setCustomLinkTitle(e.target.value)}\n                          placeholder=\"링크 텍스트\"\n                          className=\"w-full px-3 py-2 border rounded-lg text-sm\"\n                        />\n                        <div className=\"flex gap-2\">\n                          <button\n                            onClick={addCustomLink}\n                            className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\n                          >\n                            추가\n                          </button>\n                          <button\n                            onClick={() => {\n                              setShowAddCustomLink(false);\n                              setCustomLinkTitle('');\n                              setCustomLinkUrl('');\n                            }}\n                            className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 text-sm\"\n                          >\n                            취소\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <>\n                    {/* Search */}\n                    <div className=\"relative mb-3\">\n                      <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                      <input\n                        type=\"text\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        placeholder=\"검색...\"\n                        className=\"w-full pl-9 pr-3 py-2 border rounded-lg text-sm\"\n                      />\n                    </div>\n                    \n                    {/* Items list */}\n                    <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                      {getAvailableItems().map(item => (\n                        <label\n                          key={item.id}\n                          className=\"flex items-center gap-2 p-2 hover:bg-gray-50 rounded cursor-pointer\"\n                        >\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedItems.includes(item.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setSelectedItems([...selectedItems, item.id]);\n                              } else {\n                                setSelectedItems(selectedItems.filter(id => id !== item.id));\n                              }\n                            }}\n                            className=\"rounded border-gray-300\"\n                          />\n                          <span className=\"text-sm text-gray-700\">{item.title}</span>\n                        </label>\n                      ))}\n                    </div>\n                    \n                    {/* Add button */}\n                    <button\n                      onClick={addItemsToMenu}\n                      disabled={selectedItems.length === 0}\n                      className=\"w-full mt-3 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-sm\"\n                    >\n                      메뉴에 추가\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n            \n            {/* Menu Settings */}\n            <div className=\"mt-6 bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"p-4 border-b\">\n                <h3 className=\"font-semibold text-gray-900\">메뉴 설정</h3>\n              </div>\n              <div className=\"p-4 space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    메뉴 이름\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={menuName}\n                    onChange={(e) => setMenuName(e.target.value)}\n                    placeholder=\"메뉴 이름을 입력하세요\"\n                    className=\"w-full px-3 py-2 border rounded-lg text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    슬러그\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={menuSlug}\n                    onChange={(e) => setMenuSlug(e.target.value)}\n                    placeholder=\"menu-slug\"\n                    className=\"w-full px-3 py-2 border rounded-lg text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    메뉴 위치\n                  </label>\n                  <div className=\"space-y-2\">\n                    {menuLocations.map(location => (\n                      <label\n                        key={location.id}\n                        className=\"flex items-start gap-2 p-2 hover:bg-gray-50 rounded cursor-pointer\"\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"location\"\n                          value={location.id}\n                          checked={selectedLocation === location.id}\n                          onChange={(e) => setSelectedLocation(e.target.value)}\n                          className=\"mt-0.5\"\n                        />\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">{location.name}</div>\n                          <div className=\"text-xs text-gray-500\">{location.description}</div>\n                        </div>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Panel - Menu Structure */}\n          <div className=\"flex-1\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"p-4 border-b flex items-center justify-between\">\n                <h3 className=\"font-semibold text-gray-900\">메뉴 구조</h3>\n                <div className=\"text-sm text-gray-500\">\n                  드래그하여 순서 변경\n                </div>\n              </div>\n              \n              <div className=\"p-4\">\n                {menuItems.length === 0 ? (\n                  <div className=\"text-center py-12\">\n                    <Menu className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                    <p className=\"text-gray-500\">메뉴 항목을 추가하세요</p>\n                    <p className=\"text-sm text-gray-400 mt-2\">\n                      왼쪽 패널에서 페이지, 글, 카테고리 등을 선택하여 메뉴에 추가할 수 있습니다\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    {menuItems.map(item => renderMenuItem(item))}\n                  </div>\n                )}\n              </div>\n              \n              {menuItems.length > 0 && (\n                <div className=\"p-4 border-t bg-gray-50\">\n                  <div className=\"flex items-center gap-4 text-xs text-gray-600\">\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 bg-blue-500 rounded-sm\"></div>\n                      <span>페이지</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-sm\"></div>\n                      <span>글</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 bg-orange-500 rounded-sm\"></div>\n                      <span>카테고리</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 bg-purple-500 rounded-sm\"></div>\n                      <span>태그</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <div className=\"w-3 h-3 bg-gray-500 rounded-sm\"></div>\n                      <span>사용자 정의</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Tips */}\n            <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h4 className=\"font-semibold text-blue-900 mb-2 flex items-center gap-2\">\n                <AlertCircle className=\"w-4 h-4\" />\n                사용 팁\n              </h4>\n              <ul className=\"text-sm text-blue-800 space-y-1\">\n                <li>• 메뉴 항목을 드래그하여 순서를 변경할 수 있습니다</li>\n                <li>• 항목을 다른 항목 아래로 드래그하면 하위 메뉴가 됩니다</li>\n                <li>• 각 항목의 편집 버튼을 클릭하여 세부 설정을 변경할 수 있습니다</li>\n                <li>• CSS 클래스를 추가하여 스타일을 커스터마이징할 수 있습니다</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WordPressMenuEditor;\n","import { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom'\nimport WordPressMenuList from './WordPressMenuList'\nimport WordPressMenuEditor from './WordPressMenuEditor'\n\nconst Menus: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WordPressMenuList />} />\n      <Route path=\"/new\" element={<WordPressMenuEditor />} />\n      <Route path=\"/:id/edit\" element={<WordPressMenuEditor />} />\n    </Routes>\n  )\n}\n\nexport default Menus"],"names":["WordPressMenuList","searchTerm","setSearchTerm","useState","selectedMenus","setSelectedMenus","editingSlug","setEditingSlug","menus","menuLocations","Monitor","MapPin","Smartphone","Users","filteredMenus","menu","deleteMenu","_menuId","toast","duplicateMenu","bulkDelete","selectAll","m","getLocationStyle","location","loc","colors","jsxs","jsx","Menu","Link","Plus","key","menuCount","LocationIcon","style","Search","e","Filter","Settings","locationStyle","id","Check","X","Edit2","Copy","Trash2","ChevronRight","MenuApi","params","unifiedApi","data","name","slug","menuId","items","itemId","conditions","styles","config","itemMap","rootItems","item","mappedItem","parent","sortItems","a","b","parentId","result","orderNum","processItems","WordPressMenuEditor","navigate","useNavigate","useParams","dragItem","useRef","dragOverItem","menuName","setMenuName","menuSlug","setMenuSlug","menuItems","setMenuItems","selectedLocation","setSelectedLocation","activeTab","setActiveTab","showAddCustomLink","setShowAddCustomLink","customLinkTitle","setCustomLinkTitle","customLinkUrl","setCustomLinkUrl","selectedItems","setSelectedItems","editingItem","setEditingItem","isDragging","setIsDragging","setIsLoading","isSaving","setIsSaving","currentMenuId","setCurrentMenuId","pages","setPages","posts","setPosts","categories","setCategories","tags","setTags","setMenuLocations","useEffect","loadAvailableItems","loadMenuLocations","loadMenu","pagesResponse","page","postsResponse","post","categoriesResponse","cat","tagsResponse","tag","response","convertedItems","convertApiItemsToMenuItems","apiItems","convertMenuItemsToApiFormat","index","getAvailableItems","addItemsToMenu","availableItems","newItems","addCustomLink","newItem","removeMenuItem","removeItemRecursive","updateMenuItem","updates","updateItemRecursive","toggleItemExpansion","toggleRecursive","handleDragStart","handleDragEnter","_e","handleDragEnd","draggedItem","targetItem","removeItem","i","removed","insertItem","itemToInsert","targetId","itemsAfterRemove","saveMenu","menuData","savedMenu","saveMenuItem","itemData","savedItemId","child","renderMenuItem","depth","isEditing","ChevronDown","FileText","Type","Folder","Tag","Link2","ExternalLink","Fragment","Move","Save","AlertCircle","Menus","Routes","Route"],"mappings":"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"}