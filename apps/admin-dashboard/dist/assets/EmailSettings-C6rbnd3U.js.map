{"version":3,"file":"EmailSettings-C6rbnd3U.js","sources":["../../src/api/settings.ts","../../src/hooks/use-toast.ts","../../src/pages/settings/EmailSettings.tsx"],"sourcesContent":["import { unifiedApi } from './unified-client';\nimport { apiEndpoints } from '@/config/apps.config';\n\nexport interface GeneralSettings {\n  siteName: string;\n  siteDescription: string;\n  siteUrl: string;\n  adminEmail: string;\n  timezone: string;\n  dateFormat: string;\n  timeFormat: string;\n  language: string;\n  maintenanceMode: boolean;\n  maintenanceMessage?: string;\n}\n\nexport interface AppearanceSettings {\n  theme: 'light' | 'dark' | 'system';\n  primaryColor: string;\n  secondaryColor: string;\n  fontFamily: string;\n  logoUrl?: string;\n  faviconUrl?: string;\n  customCss?: string;\n}\n\nexport interface EmailSettings {\n  provider: 'smtp' | 'sendgrid' | 'ses' | 'mailgun';\n  smtpHost?: string;\n  smtpPort?: number;\n  smtpUser?: string;\n  smtpPass?: string;\n  smtpSecure?: boolean;\n  apiKey?: string;\n  fromEmail: string;\n  fromName: string;\n  replyToEmail?: string;\n  templates: {\n    [key: string]: {\n      subject: string;\n      body: string;\n      variables: string[];\n    };\n  };\n}\n\nexport interface IntegrationSettings {\n  apps: {\n    forum: {\n      enabled: boolean;\n      apiKey?: string;\n      webhookUrl?: string;\n      autoSync: boolean;\n      syncInterval?: number;\n    };\n    signage: {\n      enabled: boolean;\n      apiKey?: string;\n      defaultPlaylist?: string;\n      autoApprove: boolean;\n    };\n    crowdfunding: {\n      enabled: boolean;\n      apiKey?: string;\n      paymentGateway: string;\n      feePercentage: number;\n      minCampaignAmount: number;\n    };\n  };\n  payment: {\n    stripe?: {\n      enabled: boolean;\n      publicKey?: string;\n      secretKey?: string;\n      webhookSecret?: string;\n    };\n    paypal?: {\n      enabled: boolean;\n      clientId?: string;\n      clientSecret?: string;\n      sandbox: boolean;\n    };\n  };\n  analytics: {\n    googleAnalytics?: {\n      enabled: boolean;\n      trackingId?: string;\n    };\n    mixpanel?: {\n      enabled: boolean;\n      projectToken?: string;\n    };\n  };\n  storage: {\n    provider: 'local' | 's3' | 'gcs' | 'azure';\n    s3?: {\n      bucket: string;\n      region: string;\n      accessKeyId?: string;\n      secretAccessKey?: string;\n    };\n  };\n}\n\nexport interface SecuritySettings {\n  passwordPolicy: {\n    minLength: number;\n    requireUppercase: boolean;\n    requireLowercase: boolean;\n    requireNumbers: boolean;\n    requireSpecialChars: boolean;\n    expiryDays?: number;\n  };\n  twoFactorAuth: {\n    enabled: boolean;\n    required: boolean;\n    methods: ('totp' | 'sms' | 'email')[];\n  };\n  sessionTimeout: number;\n  ipWhitelist?: string[];\n  ipBlacklist?: string[];\n  maxLoginAttempts: number;\n  lockoutDuration: number;\n  cors: {\n    enabled: boolean;\n    origins: string[];\n  };\n}\n\nexport interface AllSettings {\n  general: GeneralSettings;\n  appearance: AppearanceSettings;\n  email: EmailSettings;\n  integrations: IntegrationSettings;\n  security: SecuritySettings;\n}\n\nclass SettingsService {\n  // General Settings\n  async getGeneralSettings(): Promise<GeneralSettings> {\n    const response = await unifiedApi.raw.get<GeneralSettings>((apiEndpoints.settings as any).general);\n    return response.data;\n  }\n\n  async updateGeneralSettings(settings: Partial<GeneralSettings>): Promise<GeneralSettings> {\n    const response = await unifiedApi.raw.put<GeneralSettings>((apiEndpoints.settings as any).general, settings);\n    return response.data;\n  }\n\n  // Appearance Settings\n  async getAppearanceSettings(): Promise<AppearanceSettings> {\n    const response = await unifiedApi.raw.get<AppearanceSettings>((apiEndpoints.settings as any).appearance);\n    return response.data;\n  }\n\n  async updateAppearanceSettings(settings: Partial<AppearanceSettings>): Promise<AppearanceSettings> {\n    const response = await unifiedApi.raw.put<AppearanceSettings>((apiEndpoints.settings as any).appearance, settings);\n    return response.data;\n  }\n\n  async uploadLogo(file: File): Promise<{ url: string }> {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', 'logo');\n\n    const response = await unifiedApi.raw.post<{ url: string }>(`${(apiEndpoints.settings as any).appearance}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  // Email Settings\n  async getEmailSettings(): Promise<EmailSettings> {\n    const response = await unifiedApi.raw.get<EmailSettings>((apiEndpoints.settings as any).email);\n    return response.data;\n  }\n\n  async updateEmailSettings(settings: Partial<EmailSettings>): Promise<EmailSettings> {\n    const response = await unifiedApi.raw.put<EmailSettings>((apiEndpoints.settings as any).email, settings);\n    return response.data;\n  }\n\n  async testEmailSettings(testEmail: string): Promise<{ success: boolean; message: string }> {\n    const response = await unifiedApi.raw.post<{ success: boolean; message: string }>(\n      `${(apiEndpoints.settings as any).email}/test`,\n      { testEmail }\n    );\n    return response.data;\n  }\n\n  // Integration Settings\n  async getIntegrationSettings(): Promise<IntegrationSettings> {\n    const response = await unifiedApi.raw.get<IntegrationSettings>((apiEndpoints.settings as any).integrations);\n    return response.data;\n  }\n\n  async updateIntegrationSettings(settings: Partial<IntegrationSettings>): Promise<IntegrationSettings> {\n    const response = await unifiedApi.raw.put<IntegrationSettings>((apiEndpoints.settings as any).integrations, settings);\n    return response.data;\n  }\n\n  async testIntegration(integration: string): Promise<{ success: boolean; message: string }> {\n    const response = await unifiedApi.raw.post<{ success: boolean; message: string }>(\n      `${(apiEndpoints.settings as any).integrations}/test/${integration}`\n    );\n    return response.data;\n  }\n\n  // Security Settings\n  async getSecuritySettings(): Promise<SecuritySettings> {\n    const response = await unifiedApi.platform.settings.get();\n    return response.data as any;\n  }\n\n  async updateSecuritySettings(settings: Partial<SecuritySettings>): Promise<SecuritySettings> {\n    const response = await unifiedApi.platform.settings.update(settings);\n    return response.data as any;\n  }\n\n  // All Settings (bulk operations)\n  async getAllSettings(): Promise<AllSettings> {\n    const [general, appearance, email, integrations, security] = await Promise.all([\n      this.getGeneralSettings(),\n      this.getAppearanceSettings(),\n      this.getEmailSettings(),\n      this.getIntegrationSettings(),\n      this.getSecuritySettings(),\n    ]);\n\n    return {\n      general,\n      appearance,\n      email,\n      integrations,\n      security,\n    };\n  }\n\n  async exportSettings(): Promise<Blob> {\n    const response = await unifiedApi.raw.get('/v1/settings/export', {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n\n  async importSettings(file: File): Promise<{ success: boolean; message: string }> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await unifiedApi.raw.post<{ success: boolean; message: string }>(\n      '/v1/settings/import',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n    return response.data;\n  }\n\n  // Reset settings\n  async resetSettings(section?: 'general' | 'appearance' | 'email' | 'integrations' | 'security'): Promise<void> {\n    const endpoint = section ? `/v1/settings/${section}/reset` : '/v1/settings/reset';\n    await unifiedApi.raw.post(endpoint);\n  }\n\n  // Cache management\n  async clearCache(type?: 'all' | 'settings' | 'content' | 'users'): Promise<void> {\n    await unifiedApi.raw.post('/v1/settings/cache/clear', { type: type || 'all' });\n  }\n}\n\nexport const settingsService = new SettingsService();","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n  open?: boolean\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open: boolean) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }","import { FC, useState, useEffect } from 'react';\nimport { Mail, Send, Eye, EyeOff, AlertCircle } from 'lucide-react';\nimport { settingsService, EmailSettings as EmailSettingsType } from '@/api/settings';\nimport { useToast } from '@/hooks/use-toast';\n\nconst EmailSettings: FC = () => {\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(false);\n  const [testing, setTesting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [testEmail, setTestEmail] = useState('');\n  const [settings, setSettings] = useState<Partial<EmailSettingsType>>({\n    provider: 'smtp',\n    smtpHost: '',\n    smtpPort: 587,\n    smtpUser: '',\n    smtpSecure: false,\n    fromEmail: '',\n    fromName: '',\n  });\n\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  const loadSettings = async () => {\n    try {\n      setLoading(true);\n      const data = await settingsService.getEmailSettings();\n      setSettings(data);\n      // 테스트 이메일 기본값 설정\n      if (data.fromEmail) {\n        setTestEmail(data.fromEmail);\n      }\n    } catch (error) {\n      // Error log removed\n      // 에러 시 기본값 유지\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // 필수 필드 검증\n    if (!settings.smtpHost || !settings.smtpPort || !settings.smtpUser || !settings.fromEmail) {\n      toast({\n        title: '오류',\n        description: '모든 필수 항목을 입력해주세요.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await settingsService.updateEmailSettings(settings);\n      toast({\n        title: '성공',\n        description: 'SMTP 설정이 저장되었습니다.',\n      });\n    } catch (error) {\n      toast({\n        title: '오류',\n        description: 'SMTP 설정 저장에 실패했습니다.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTestEmail = async () => {\n    if (!testEmail) {\n      toast({\n        title: '오류',\n        description: '테스트 이메일 주소를 입력해주세요.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      setTesting(true);\n      const result = await settingsService.testEmailSettings(testEmail);\n      \n      if (result.success) {\n        toast({\n          title: '성공',\n          description: `테스트 이메일이 ${testEmail}로 발송되었습니다.`,\n        });\n      } else {\n        toast({\n          title: '실패',\n          description: result.message || '테스트 이메일 발송에 실패했습니다.',\n          variant: 'destructive',\n        });\n      }\n    } catch (error: any) {\n      toast({\n        title: '오류',\n        description: error.response?.data?.message || '테스트 이메일 발송 중 오류가 발생했습니다.',\n        variant: 'destructive',\n      });\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof EmailSettingsType, value: any) => {\n    setSettings(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"wp-card\">\n        <div className=\"wp-card-body\">\n          <div className=\"flex items-center gap-3\">\n            <Mail className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-wp-text-primary\">이메일 설정</h2>\n              <p className=\"text-sm text-wp-text-secondary mt-1\">\n                WordPress에서 이메일을 발송하기 위한 SMTP 설정을 구성합니다.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* SMTP Settings Form */}\n      <form onSubmit={handleSubmit} className=\"wp-card\">\n        <div className=\"wp-card-header\">\n          <h3 className=\"wp-card-title\">SMTP 서버 설정</h3>\n        </div>\n        <div className=\"wp-card-body space-y-6\">\n          {/* SMTP Host */}\n          <div>\n            <label className=\"wp-label\">\n              SMTP 호스트 <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={settings.smtpHost || ''}\n              onChange={(e) => handleInputChange('smtpHost', e.target.value)}\n              className=\"wp-input\"\n              placeholder=\"예: smtp.gmail.com\"\n              required\n            />\n            <p className=\"mt-1 text-sm text-wp-text-secondary\">\n              이메일 서비스 제공자의 SMTP 서버 주소\n            </p>\n          </div>\n\n          {/* SMTP Port & Secure */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"wp-label\">\n                SMTP 포트 <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                value={settings.smtpPort || 587}\n                onChange={(e) => handleInputChange('smtpPort', parseInt(e.target.value))}\n                className=\"wp-input\"\n                placeholder=\"587\"\n                required\n              />\n              <p className=\"mt-1 text-sm text-wp-text-secondary\">\n                일반적으로 587 (TLS) 또는 465 (SSL)\n              </p>\n            </div>\n            <div>\n              <label className=\"wp-label\">암호화</label>\n              <select\n                value={settings.smtpSecure ? 'ssl' : 'tls'}\n                onChange={(e) => handleInputChange('smtpSecure', e.target.value === 'ssl')}\n                className=\"wp-input\"\n              >\n                <option value=\"tls\">TLS (권장)</option>\n                <option value=\"ssl\">SSL</option>\n              </select>\n              <p className=\"mt-1 text-sm text-wp-text-secondary\">\n                포트 587은 TLS, 포트 465는 SSL 사용\n              </p>\n            </div>\n          </div>\n\n          {/* SMTP Authentication */}\n          <div>\n            <label className=\"wp-label\">\n              SMTP 사용자명 <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={settings.smtpUser || ''}\n              onChange={(e) => handleInputChange('smtpUser', e.target.value)}\n              className=\"wp-input\"\n              placeholder=\"예: your-email@gmail.com\"\n              required\n            />\n            <p className=\"mt-1 text-sm text-wp-text-secondary\">\n              일반적으로 이메일 주소와 동일\n            </p>\n          </div>\n\n          <div>\n            <label className=\"wp-label\">\n              SMTP 비밀번호 <span className=\"text-red-500\">*</span>\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showPassword ? 'text' : 'password'}\n                value={settings.smtpPass || ''}\n                onChange={(e) => handleInputChange('smtpPass', e.target.value)}\n                className=\"wp-input pr-10\"\n                placeholder=\"••••••••\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-2 top-1/2 -translate-y-1/2 p-1 text-wp-text-secondary hover:text-wp-text-primary\"\n              >\n                {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n              </button>\n            </div>\n            <p className=\"mt-1 text-sm text-wp-text-secondary\">\n              Gmail의 경우 앱 비밀번호를 사용하세요\n            </p>\n          </div>\n\n          {/* From Email Settings */}\n          <div className=\"border-t pt-6\">\n            <h4 className=\"font-medium text-wp-text-primary mb-4\">발신자 정보</h4>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"wp-label\">\n                  발신자 이메일 <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"email\"\n                  value={settings.fromEmail || ''}\n                  onChange={(e) => handleInputChange('fromEmail', e.target.value)}\n                  className=\"wp-input\"\n                  placeholder=\"예: noreply@yourdomain.com\"\n                  required\n                />\n                <p className=\"mt-1 text-sm text-wp-text-secondary\">\n                  받는 사람에게 표시될 발신자 이메일 주소\n                </p>\n              </div>\n\n              <div>\n                <label className=\"wp-label\">발신자 이름</label>\n                <input\n                  type=\"text\"\n                  value={settings.fromName || ''}\n                  onChange={(e) => handleInputChange('fromName', e.target.value)}\n                  className=\"wp-input\"\n                  placeholder=\"예: WordPress Site\"\n                />\n                <p className=\"mt-1 text-sm text-wp-text-secondary\">\n                  받는 사람에게 표시될 발신자 이름 (선택사항)\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Save Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"wp-button-primary\"\n            >\n              {loading ? '저장 중...' : '설정 저장'}\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {/* Test Email Section */}\n      <div className=\"wp-card\">\n        <div className=\"wp-card-header\">\n          <h3 className=\"wp-card-title\">테스트 이메일 발송</h3>\n        </div>\n        <div className=\"wp-card-body\">\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n            <div className=\"flex items-start gap-2\">\n              <AlertCircle className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n              <div className=\"text-sm text-blue-900\">\n                <p className=\"font-medium\">테스트 전 확인사항:</p>\n                <ul className=\"mt-1 space-y-1 list-disc list-inside\">\n                  <li>SMTP 설정을 먼저 저장해주세요</li>\n                  <li>Gmail 사용 시 앱 비밀번호를 생성하여 사용하세요</li>\n                  <li>방화벽이 SMTP 포트를 차단하지 않는지 확인하세요</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex gap-3\">\n            <input\n              type=\"email\"\n              value={testEmail}\n              onChange={(e) => setTestEmail(e.target.value)}\n              className=\"wp-input flex-1\"\n              placeholder=\"테스트 이메일을 받을 주소 입력\"\n              disabled={testing}\n            />\n            <button\n              type=\"button\"\n              onClick={handleTestEmail}\n              disabled={testing || !testEmail}\n              className=\"wp-button-primary flex items-center gap-2\"\n            >\n              {testing ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                  발송 중...\n                </>\n              ) : (\n                <>\n                  <Send className=\"w-4 h-4\" />\n                  테스트 발송\n                </>\n              )}\n            </button>\n          </div>\n\n          <p className=\"mt-2 text-sm text-wp-text-secondary\">\n            설정이 올바른지 확인하기 위해 테스트 이메일을 발송합니다.\n          </p>\n        </div>\n      </div>\n\n      {/* Common SMTP Settings Help */}\n      <div className=\"wp-card\">\n        <div className=\"wp-card-header\">\n          <h3 className=\"wp-card-title\">주요 이메일 서비스 SMTP 설정</h3>\n        </div>\n        <div className=\"wp-card-body\">\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"border rounded-lg p-4\">\n                <h4 className=\"font-medium mb-2\">Gmail</h4>\n                <dl className=\"text-sm space-y-1\">\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">호스트:</dt>\n                    <dd>smtp.gmail.com</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">포트:</dt>\n                    <dd>587 (TLS) / 465 (SSL)</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">비밀번호:</dt>\n                    <dd>앱 비밀번호 사용 필요</dd>\n                  </div>\n                </dl>\n              </div>\n\n              <div className=\"border rounded-lg p-4\">\n                <h4 className=\"font-medium mb-2\">Naver</h4>\n                <dl className=\"text-sm space-y-1\">\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">호스트:</dt>\n                    <dd>smtp.naver.com</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">포트:</dt>\n                    <dd>587 (TLS)</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">사용자명:</dt>\n                    <dd>네이버 아이디</dd>\n                  </div>\n                </dl>\n              </div>\n\n              <div className=\"border rounded-lg p-4\">\n                <h4 className=\"font-medium mb-2\">Outlook/Office 365</h4>\n                <dl className=\"text-sm space-y-1\">\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">호스트:</dt>\n                    <dd>smtp.office365.com</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">포트:</dt>\n                    <dd>587 (TLS)</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">사용자명:</dt>\n                    <dd>전체 이메일 주소</dd>\n                  </div>\n                </dl>\n              </div>\n\n              <div className=\"border rounded-lg p-4\">\n                <h4 className=\"font-medium mb-2\">SendGrid</h4>\n                <dl className=\"text-sm space-y-1\">\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">호스트:</dt>\n                    <dd>smtp.sendgrid.net</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">포트:</dt>\n                    <dd>587 (TLS) / 465 (SSL)</dd>\n                  </div>\n                  <div className=\"flex\">\n                    <dt className=\"text-wp-text-secondary w-20\">사용자명:</dt>\n                    <dd>apikey</dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmailSettings;"],"names":["SettingsService","unifiedApi","apiEndpoints","settings","file","formData","testEmail","integration","general","appearance","email","integrations","security","section","endpoint","type","settingsService","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","EmailSettings","loading","setLoading","useState","testing","setTesting","showPassword","setShowPassword","setTestEmail","setSettings","useEffect","loadSettings","data","handleSubmit","e","handleTestEmail","result","error","handleInputChange","field","value","prev","jsxs","jsx","Mail","EyeOff","Eye","AlertCircle","Fragment","Send"],"mappings":"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"}