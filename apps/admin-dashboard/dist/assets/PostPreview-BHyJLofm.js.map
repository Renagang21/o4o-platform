{"version":3,"file":"PostPreview-BHyJLofm.js","sources":["../../src/pages/preview/PostPreview.tsx"],"sourcesContent":["/**\n * PostPreview Component\n * Renders a preview of the post content from the Gutenberg editor\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Block } from '@/types/post.types';\nimport { ArrowLeft, ExternalLink, Eye, Monitor, Tablet, Smartphone } from 'lucide-react';\nimport { postApi } from '@/services/api/postApi';\nimport './preview-styles.css';\n\ninterface PreviewContent {\n  title: string;\n  blocks: Block[];\n  postId?: string;\n  status?: string;\n}\n\ntype DeviceType = 'desktop' | 'tablet' | 'mobile';\n\nconst PostPreview: React.FC = () => {\n  const [content, setContent] = useState<PreviewContent | null>(null);\n  const [deviceType, setDeviceType] = useState<DeviceType>('desktop');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  useEffect(() => {\n    const loadContent = async () => {\n      try {\n        if (id) {\n          // Load content from API using URL parameter\n          const response = await postApi.get(id);\n          \n          // Check if response is successful\n          if (!response.success) {\n            setContent({\n              title: 'Error Loading Content',\n              blocks: [],\n              postId: id\n            });\n            return;\n          }\n          \n          const post = response.data as any;\n          if (!post) {\n            setContent({ title: 'Not Found', blocks: [], postId: id });\n            return;\n          }\n          let blocks: Block[] = [];\n          \n          if (post.content) {\n            try {\n              const parsed = JSON.parse(post.content);\n              \n              // Handle different possible formats\n              if (Array.isArray(parsed)) {\n                blocks = parsed;\n              } else if (parsed && typeof parsed === 'object' && 'blocks' in parsed) {\n                blocks = parsed.blocks || [];\n              } else if (parsed && typeof parsed === 'object') {\n                blocks = [parsed];\n              }\n              \n              // Ensure all blocks have required properties\n              blocks = blocks.filter(block => block && typeof block === 'object' && block.type);\n              \n            } catch (error) {\n              blocks = [];\n            }\n          }\n          \n          setContent({\n            title: post.title || 'Untitled Post',\n            blocks: blocks,\n            postId: post.id,\n            status: post.status\n          });\n        } else {\n          // Fallback to sessionStorage for editor preview\n          const storedContent = sessionStorage.getItem('previewContent');\n          if (storedContent) {\n            try {\n              const parsed = JSON.parse(storedContent);\n              setContent(parsed);\n            } catch (error) {\n              // Silent failure for preview content parsing\n            }\n          }\n        }\n      } catch (error) {\n        // Silent failure for post loading\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadContent();\n  }, [id]);\n\n  const renderBlock = (block: Block) => {\n    const { type, content, attributes } = block;\n    const blockContent = typeof content === 'string' ? content : content?.text || '';\n\n    switch (type) {\n      case 'core/paragraph':\n      case 'paragraph':\n        return (\n          <p \n            key={block.id} \n            className=\"mb-4 text-gray-700 leading-relaxed\"\n            style={{\n              textAlign: attributes?.align || 'left',\n              fontSize: attributes?.fontSize || '16px',\n              color: attributes?.textColor || '#374151',\n            }}\n          >\n            {blockContent}\n          </p>\n        );\n\n      case 'core/heading':\n      case 'heading':\n        const HeadingTag = `h${content?.level || 2}` as 'h1'|'h2'|'h3'|'h4'|'h5'|'h6';\n        const headingClasses = {\n          h1: 'text-4xl font-bold mb-6 text-gray-900',\n          h2: 'text-3xl font-semibold mb-5 text-gray-800',\n          h3: 'text-2xl font-semibold mb-4 text-gray-800',\n          h4: 'text-xl font-medium mb-3 text-gray-700',\n          h5: 'text-lg font-medium mb-2 text-gray-700',\n          h6: 'text-base font-medium mb-2 text-gray-600',\n        };\n        return (\n          <HeadingTag \n            key={block.id} \n            className={headingClasses[HeadingTag]}\n            style={{\n              textAlign: attributes?.align || 'left',\n              color: attributes?.textColor,\n            }}\n          >\n            {blockContent}\n          </HeadingTag>\n        );\n\n      case 'core/list':\n      case 'list':\n        const ListTag = attributes?.ordered ? 'ol' : 'ul';\n        const listItems = content?.items || [blockContent];\n        return (\n          <ListTag \n            key={block.id} \n            className={`mb-4 ${attributes?.ordered ? 'list-decimal' : 'list-disc'} list-inside text-gray-700`}\n          >\n            {listItems.map((item: string, index: number) => (\n              <li key={index} className=\"mb-1\">{item}</li>\n            ))}\n          </ListTag>\n        );\n\n      case 'core/quote':\n      case 'quote':\n        return (\n          <blockquote \n            key={block.id} \n            className=\"border-l-4 border-gray-300 pl-4 py-2 mb-4 italic text-gray-600\"\n          >\n            <p>{blockContent}</p>\n            {content?.citation && (\n              <cite className=\"block mt-2 text-sm text-gray-500 not-italic\">\n                â€” {content.citation}\n              </cite>\n            )}\n          </blockquote>\n        );\n\n      case 'core/code':\n      case 'code':\n        return (\n          <pre \n            key={block.id} \n            className=\"bg-gray-900 text-gray-100 p-4 rounded-lg mb-4 overflow-x-auto\"\n          >\n            <code className=\"text-sm font-mono\">{blockContent}</code>\n          </pre>\n        );\n\n      case 'core/image':\n      case 'image':\n        return (\n          <figure key={block.id} className=\"mb-6\">\n            <img \n              src={content?.url || attributes?.url || ''} \n              alt={content?.alt || attributes?.alt || ''}\n              className=\"w-full h-auto rounded-lg\"\n              style={{\n                maxWidth: attributes?.width || '100%',\n                height: attributes?.height || 'auto',\n              }}\n            />\n            {(content?.caption || attributes?.caption) && (\n              <figcaption className=\"mt-2 text-sm text-gray-600 text-center\">\n                {content?.caption || attributes?.caption}\n              </figcaption>\n            )}\n          </figure>\n        );\n\n      case 'core/button':\n      case 'button':\n        return (\n          <div key={block.id} className=\"mb-4\">\n            <button \n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              style={{\n                backgroundColor: attributes?.backgroundColor || '#2563eb',\n                color: attributes?.textColor || '#ffffff',\n                borderRadius: attributes?.borderRadius || '8px',\n              }}\n            >\n              {blockContent || 'Click here'}\n            </button>\n          </div>\n        );\n\n      case 'core/separator':\n      case 'separator':\n        return (\n          <hr key={block.id} className=\"my-8 border-t border-gray-300\" />\n        );\n\n      case 'core/spacer':\n      case 'spacer':\n        return (\n          <div \n            key={block.id} \n            style={{ height: attributes?.height || '50px' }}\n          />\n        );\n\n      case 'core/columns':\n      case 'columns':\n        return (\n          <div key={block.id} className=\"grid grid-cols-2 gap-4 mb-4\">\n            {content?.columns?.map((column: any, index: number) => (\n              <div key={index} className=\"p-4\">\n                {column.blocks?.map((innerBlock: Block) => renderBlock(innerBlock))}\n              </div>\n            ))}\n          </div>\n        );\n\n      default:\n        return (\n          <div key={block.id} className=\"p-4 mb-4 bg-gray-100 rounded\">\n            <p className=\"text-sm text-gray-500\">\n              Unsupported block type: {type}\n            </p>\n          </div>\n        );\n    }\n  };\n\n  const getDeviceClasses = () => {\n    switch (deviceType) {\n      case 'tablet':\n        return 'max-w-3xl';\n      case 'mobile':\n        return 'max-w-sm';\n      default:\n        return 'max-w-5xl';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading preview...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!content) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <Eye className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-700 mb-2\">No Preview Available</h2>\n          <p className=\"text-gray-500 mb-4\">No content to preview. Please go back to the editor.</p>\n          <button\n            onClick={() => window.close()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Close Preview\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Preview Header */}\n      <div className=\"sticky top-0 z-50 bg-white border-b border-gray-200 shadow-sm\">\n        <div className=\"px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            {/* Left Section */}\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => window.close()}\n                className=\"flex items-center gap-2 px-3 py-1.5 text-gray-600 hover:text-gray-900 transition-colors\"\n                title=\"Close preview\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                <span className=\"text-sm font-medium\">Back to Editor</span>\n              </button>\n              \n              <div className=\"h-6 w-px bg-gray-300\" />\n              \n              <div className=\"flex items-center gap-2\">\n                <Eye className=\"h-4 w-4 text-gray-500\" />\n                <span className=\"text-sm font-medium text-gray-700\">Preview Mode</span>\n                {content.status && (\n                  <span className=\"px-2 py-0.5 text-xs font-medium bg-yellow-100 text-yellow-800 rounded\">\n                    {content.status}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Center Section - Device Selector */}\n            <div className=\"flex items-center gap-2 bg-gray-100 rounded-lg p-1\">\n              <button\n                onClick={() => setDeviceType('desktop')}\n                className={`p-2 rounded ${deviceType === 'desktop' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}\n                title=\"Desktop view\"\n              >\n                <Monitor className=\"h-4 w-4\" />\n              </button>\n              <button\n                onClick={() => setDeviceType('tablet')}\n                className={`p-2 rounded ${deviceType === 'tablet' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}\n                title=\"Tablet view\"\n              >\n                <Tablet className=\"h-4 w-4\" />\n              </button>\n              <button\n                onClick={() => setDeviceType('mobile')}\n                className={`p-2 rounded ${deviceType === 'mobile' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}\n                title=\"Mobile view\"\n              >\n                <Smartphone className=\"h-4 w-4\" />\n              </button>\n            </div>\n\n            {/* Right Section */}\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={() => window.open(window.location.href, '_blank')}\n                className=\"flex items-center gap-2 px-3 py-1.5 text-gray-600 hover:text-gray-900 transition-colors\"\n                title=\"Open in new tab\"\n              >\n                <ExternalLink className=\"h-4 w-4\" />\n                <span className=\"text-sm\">New Tab</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Content */}\n      <div className=\"flex justify-center px-4 py-8\">\n        <div className={`w-full ${getDeviceClasses()} transition-all duration-300`}>\n          <article className=\"bg-white rounded-lg shadow-lg p-8 md:p-12\">\n            {/* Post Title */}\n            <header className=\"mb-8 pb-6 border-b border-gray-200\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 leading-tight\">\n                {content.title || 'Untitled Post'}\n              </h1>\n            </header>\n\n            {/* Post Content */}\n            <div className=\"prose prose-lg max-w-none\">\n              {content.blocks.map((block) => renderBlock(block))}\n            </div>\n\n            {/* Empty State */}\n            {content.blocks.length === 0 && (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-500\">No content blocks to display</p>\n              </div>\n            )}\n          </article>\n        </div>\n      </div>\n\n      {/* Device Frame Overlay for mobile/tablet */}\n      {deviceType !== 'desktop' && (\n        <div className=\"fixed inset-0 pointer-events-none z-40\">\n          <div className=\"flex items-center justify-center h-full\">\n            <div \n              className={`border-8 border-gray-800 rounded-3xl ${\n                deviceType === 'tablet' ? 'w-3/4 h-3/4' : 'w-96 h-[680px]'\n              }`}\n              style={{ pointerEvents: 'none' }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostPreview;\n"],"names":["PostPreview","content","setContent","useState","deviceType","setDeviceType","isLoading","setIsLoading","useNavigate","id","useParams","useEffect","response","postApi","post","blocks","parsed","block","storedContent","renderBlock","type","attributes","blockContent","jsx","HeadingTag","headingClasses","ListTag","listItems","item","index","jsxs","column","innerBlock","getDeviceClasses","ArrowLeft","Eye","Monitor","Tablet","Smartphone","ExternalLink"],"mappings":"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"}