{"version":3,"mappings":"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","names":["dashboardApi","forumStats","signageStats","crowdfundingStats","usersResponse","unifiedApi","__vitePreload","toast","ecommerceStats","chartSalesData","orderStatusData","item","notifications","urgent","n","approval","data","today","i","date","useDashboardData","manualRefreshTrigger","setManualRefreshTrigger","useState","stats","statsLoading","statsError","refetchStats","useQuery","chartData","chartLoading","chartError","refetchCharts","notificationsData","notificationsLoading","refetchNotifications","activities","activitiesLoading","refetchActivities","systemHealth","healthLoading","refetchHealth","isLoading","error","refreshAllData","useCallback","timestamp","refreshPromises","refreshStats","refreshCharts","refreshNotifications","ScreenOptions","title","options","onOptionsChange","columnsPerPage","onColumnsChange","itemsPerPage","onItemsPerPageChange","isOpen","setIsOpen","handleOptionChange","optionId","checked","updatedOptions","opt","jsxs","clsx","jsx","Settings","ChevronDown","option","e","num","value","useHelpTabsStore","create","set","state","tabId","tabs","sidebar","useHelpTabs","store","location","useLocation","useEffect","useRegisterHelp","setTabs","setSidebar","tabsKey","sidebarKey","HelpTab","activeTab","toggleHelp","closeHelp","setActiveTab","Fragment","cn","HelpCircle","tab","X","ScreenMeta","props","screenOptions","col","handleOptionsChange","newOptions","DashboardHelp","DashboardSimple","recentActivity","FileText","MessageSquare","Users","Link","Button","Plus","Package","Eye","TrendingUp","Icon","Edit3"],"ignoreList":[],"sources":["../../src/api/dashboard.ts","../../src/pages/dashboard/hooks/useDashboardData.ts","../../src/components/common/ScreenOptions.tsx","../../src/hooks/useHelpTabs.ts","../../src/components/common/HelpTab.tsx","../../src/components/common/ScreenMeta.tsx","../../src/components/help/DashboardHelp.tsx","../../src/pages/dashboard/DashboardSimple.tsx"],"sourcesContent":["/**\n * Dashboard API Client\n * 대시보드용 API 클라이언트 - 44개 기존 엔드포인트 활용\n */\n\nimport { unifiedApi } from './unified-client';\n// import { EcommerceApi } from './ecommerceApi'; // Removed - ecommerce system deleted\nimport { SalesDataItem, Notification, Activity, OrderStatusData, UserChartData, SystemHealthStatus } from '../types/dashboard';\n// Note: App services would be imported if available\n// import { forumService, signageService, crowdfundingService } from './apps';\n\n// Dashboard Stats type\ninterface DashboardStats {\n  users: {\n    total: number;\n    pending: number;\n    today: number;\n    activeRate: number;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  sales: {\n    today: number;\n    changePercent: number;\n    monthlyTotal: number;\n    monthlyTarget: number;\n    trend: 'up' | 'down';\n  };\n  products: {\n    active: number;\n    lowStock: number;\n    newThisWeek: number;\n    bestsellers: Array<{\n      id: string;\n      name: string;\n      sales: number;\n    }>;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  content: {\n    publishedPages: number;\n    draftContent: number;\n    totalMedia: number;\n    todayViews: number;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  partners: {\n    active: number;\n    pending: number;\n    totalCommission: number;\n    topPartners: Array<{\n      id: string;\n      name: string;\n      commission: number;\n    }>;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  apps: {\n    forum: {\n      posts: number;\n      activeUsers: number;\n      pendingModeration: number;\n    };\n    signage: {\n      displays: number;\n      activeDisplays: number;\n      content: number;\n    };\n    crowdfunding: {\n      campaigns: number;\n      totalRaised: number;\n      backers: number;\n    };\n  };\n}\n\n// Dashboard API endpoints\nexport const dashboardApi = {\n  // 통계 데이터 조회\n  async getStats(): Promise<DashboardStats> {\n    let forumStats: any = null;\n    let signageStats: any = null;\n    let crowdfundingStats: any = null;\n    \n    try {\n      // Ecommerce removed - using default values\n      const [usersResponse] = await Promise.all([\n        unifiedApi.raw.get('/api/users/stats').catch(() => {\n          // API 오류 시 기본값 반환하고 토스트 메시지 표시\n          import('react-hot-toast').then(({ default: toast }) => {\n            toast.error('사용자 통계를 불러올 수 없습니다');\n          });\n          return { data: { total: 0, pending: 0, todayCount: 0, activeRate: 0 } };\n        })\n        // Note: App services would be called here if available\n        // forumService.getStats().catch(() => null),\n        // signageService.getStats().catch(() => null),\n        // crowdfundingService.getStats().catch(() => null)\n      ]);\n      \n      // Set default values for app stats since services are not available\n      forumStats = null;\n      signageStats = null;\n      crowdfundingStats = null;\n\n      const ecommerceStats = { totalCustomers: 0, todaySales: 0 }; // Default values after ecommerce removal\n\n      // 응답 데이터 정규화\n      return {\n        users: {\n          total: ecommerceStats?.totalCustomers || usersResponse.data.total || 0,\n          pending: usersResponse.data.pending || 0,\n          today: usersResponse.data.todayCount || 0,\n          activeRate: usersResponse.data.activeRate || 85,\n          change: usersResponse.data.monthlyChange || 12,\n          trend: usersResponse.data.monthlyChange >= 0 ? 'up' : 'down'\n        },\n        sales: {\n          today: ecommerceStats?.todaySales || 0,\n          changePercent: 15.3,\n          monthlyTotal: ecommerceStats?.todaySales ? ecommerceStats.todaySales * 30 : 0,\n          monthlyTarget: 50000000,\n          trend: 'up' as const\n        },\n        products: {\n          active: (ecommerceStats as any)?.totalProducts || 0,\n          lowStock: (ecommerceStats as any)?.lowStockProducts || 0,\n          newThisWeek: 5,\n          bestsellers: [],\n          change: 8.2,\n          trend: 'up' as const\n        },\n        content: {\n          publishedPages: 45,\n          draftContent: 12,\n          totalMedia: 234,\n          todayViews: 1567,\n          change: 23.4,\n          trend: 'up' as const\n        },\n        partners: {\n          active: 0,\n          pending: 0,\n          totalCommission: 0,\n          topPartners: [],\n          change: 0,\n          trend: 'up' as const\n        },\n        apps: {\n          forum: forumStats ? {\n            posts: forumStats.totalPosts,\n            activeUsers: forumStats.activeUsers,\n            pendingModeration: forumStats.pendingModeration\n          } : { posts: 0, activeUsers: 0, pendingModeration: 0 },\n          signage: signageStats ? {\n            displays: signageStats.totalDisplays,\n            activeDisplays: signageStats.activeDisplays,\n            content: signageStats.totalContent\n          } : { displays: 0, activeDisplays: 0, content: 0 },\n          crowdfunding: crowdfundingStats ? {\n            campaigns: crowdfundingStats.totalCampaigns,\n            totalRaised: crowdfundingStats.totalRaised,\n            backers: crowdfundingStats.totalBackers\n          } : { campaigns: 0, totalRaised: 0, backers: 0 }\n        }\n      };\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      // Return default data on error\n      return {\n        users: {\n          total: 0,\n          pending: 0,\n          today: 0,\n          activeRate: 0,\n          change: 0,\n          trend: 'up' as const\n        },\n        sales: {\n          today: 0,\n          changePercent: 0,\n          monthlyTotal: 0,\n          monthlyTarget: 50000000,\n          trend: 'up' as const\n        },\n        products: {\n          active: 0,\n          lowStock: 0,\n          newThisWeek: 0,\n          bestsellers: [],\n          change: 0,\n          trend: 'up' as const\n        },\n        content: {\n          publishedPages: 0,\n          draftContent: 0,\n          totalMedia: 0,\n          todayViews: 0,\n          change: 0,\n          trend: 'up' as const\n        },\n        partners: {\n          active: 0,\n          pending: 0,\n          totalCommission: 0,\n          topPartners: [],\n          change: 0,\n          trend: 'up' as const\n        },\n        apps: {\n          forum: forumStats ? {\n            posts: forumStats.totalPosts,\n            activeUsers: forumStats.activeUsers,\n            pendingModeration: forumStats.pendingModeration\n          } : { posts: 0, activeUsers: 0, pendingModeration: 0 },\n          signage: signageStats ? {\n            displays: signageStats.totalDisplays,\n            activeDisplays: signageStats.activeDisplays,\n            content: signageStats.totalContent\n          } : { displays: 0, activeDisplays: 0, content: 0 },\n          crowdfunding: crowdfundingStats ? {\n            campaigns: crowdfundingStats.totalCampaigns,\n            totalRaised: crowdfundingStats.totalRaised,\n            backers: crowdfundingStats.totalBackers\n          } : { campaigns: 0, totalRaised: 0, backers: 0 }\n        }\n      };\n    }\n  },\n\n  // 차트 데이터 조회\n  async getChartData() {\n    try {\n      // Ecommerce removed - returning default chart data\n      const chartSalesData: any[] = [];\n      const orderStatusData: OrderStatusData[] = [\n        { status: '대기중', count: 0, color: '#f59e0b' },\n        { status: '처리중', count: 0, color: '#3b82f6' },\n        { status: '배송중', count: 0, color: '#8b5cf6' },\n        { status: '완료', count: 0, color: '#10b981' },\n        { status: '취소', count: 0, color: '#ef4444' },\n        { status: '환불', count: 0, color: '#f97316' }\n      ].filter((item: any) => item.count > 0);\n\n      return {\n        sales: chartSalesData.length > 0 ? chartSalesData : this.getDefaultSalesData(),\n        orders: orderStatusData.length > 0 ? orderStatusData : this.getDefaultOrdersData(),\n        users: this.getDefaultUsersData()\n      };\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      // 에러 시 기본 차트 데이터 반환\n      return {\n        sales: this.getDefaultSalesData(),\n        orders: this.getDefaultOrdersData(),\n        users: this.getDefaultUsersData()\n      };\n    }\n  },\n\n  // 알림 데이터 조회\n  async getNotifications() {\n    try {\n      const response = await unifiedApi.raw.get('/api/admin/notifications?limit=20');\n      const notifications = response.data.notifications || [];\n\n      // 알림 타입별 카운트\n      const urgent = notifications.filter((n: { type: string }) => n.type === 'urgent').length;\n      const approval = notifications.filter((n: { type: string }) => n.type === 'approval').length;\n\n      return {\n        items: notifications,\n        total: notifications.length,\n        urgent,\n        approval\n      };\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      return {\n        items: this.getDefaultNotifications(),\n        total: 4,\n        urgent: 2,\n        approval: 1\n      };\n    }\n  },\n\n  // 최근 활동 조회\n  async getRecentActivities() {\n    try {\n      const response = await unifiedApi.raw.get('/api/admin/activities?limit=15');\n      return response.data.activities || this.getDefaultActivities();\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      return this.getDefaultActivities();\n    }\n  },\n\n  // 시스템 상태 조회\n  async getSystemHealth() {\n    try {\n      const response = await unifiedApi.raw.get('/api/system/health');\n      return response.data;\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      return this.getDefaultSystemHealth();\n    }\n  },\n\n  // Default data generators (fallback)\n  getDefaultSalesData(): SalesDataItem[] {\n    const data: SalesDataItem[] = [];\n    const today = new Date();\n    \n    for (let i = 29; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      \n      data.push({\n        date: date.toISOString().split('T')[0],\n        amount: Math.floor(Math.random() * 500000) + 100000,\n        orders: Math.floor(Math.random() * 50) + 10\n      });\n    }\n    \n    return data;\n  },\n\n  getDefaultOrdersData(): OrderStatusData[] {\n    return [\n      { status: '처리중', count: 45, color: '#3b82f6' },\n      { status: '배송중', count: 23, color: '#f59e0b' },\n      { status: '완료', count: 67, color: '#10b981' },\n      { status: '취소', count: 5, color: '#ef4444' }\n    ];\n  },\n\n  getDefaultUsersData(): UserChartData[] {\n    const data: UserChartData[] = [];\n    const today = new Date();\n    \n    for (let i = 6; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      \n      data.push({\n        date: date.toISOString().split('T')[0],\n        newUsers: Math.floor(Math.random() * 20) + 5,\n        activeUsers: Math.floor(Math.random() * 100) + 50\n      });\n    }\n    \n    return data;\n  },\n\n  getDefaultNotifications(): Notification[] {\n    return [\n      {\n        id: '1',\n        type: 'urgent' as const,\n        title: '재고 부족 경고',\n        message: '오메가3 제품의 재고가 5개 미만입니다.',\n        time: '2분 전',\n        read: false,\n        actionUrl: '/products/low-stock'\n      },\n      {\n        id: '2',\n        type: 'approval' as const,\n        title: '사업자 승인 대기',\n        message: '김사업자님의 사업자 등록 승인이 대기 중입니다.',\n        time: '15분 전',\n        read: false,\n        actionUrl: '/users/pending'\n      },\n      {\n        id: '3',\n        type: 'success' as const,\n        title: '매출 목표 달성',\n        message: '이번 주 매출 목표를 달성했습니다!',\n        time: '1시간 전',\n        read: true\n      },\n      {\n        id: '4',\n        type: 'info' as const,\n        title: '새로운 리뷰',\n        message: '프리미엄 비타민 상품에 새 리뷰가 등록되었습니다.',\n        time: '2시간 전',\n        read: true\n      }\n    ];\n  },\n\n  getDefaultActivities(): Activity[] {\n    return [\n      {\n        id: '1',\n        type: 'user' as const,\n        message: '새로운 사업자 회원이 가입했습니다',\n        time: '2분 전',\n        user: '김사업자',\n        icon: '👤'\n      },\n      {\n        id: '2',\n        type: 'order' as const,\n        message: '새 주문이 접수되었습니다 (#ORD-2025-001)',\n        time: '15분 전',\n        user: '이고객',\n        icon: '🛒'\n      },\n      {\n        id: '3',\n        type: 'product' as const,\n        message: '오메가3 상품의 재고가 부족합니다',\n        time: '1시간 전',\n        icon: '📦'\n      },\n      {\n        id: '4',\n        type: 'content' as const,\n        message: '건강 가이드 페이지가 발행되었습니다',\n        time: '2시간 전',\n        user: '관리자',\n        icon: '📄'\n      },\n      {\n        id: '5',\n        type: 'order' as const,\n        message: '주문 #ORD-2024-156이 배송 완료되었습니다',\n        time: '3시간 전',\n        icon: '✅'\n      }\n    ];\n  },\n\n  getDefaultSystemHealth(): SystemHealthStatus {\n    return {\n      api: {\n        status: 'healthy' as const,\n        responseTime: 120,\n        lastCheck: new Date().toISOString()\n      },\n      database: {\n        status: 'healthy' as const,\n        connections: 8,\n        lastCheck: new Date().toISOString()\n      },\n      storage: {\n        status: 'healthy' as const,\n        usage: 2.4,\n        total: 10\n      },\n      memory: {\n        status: 'warning' as const,\n        usage: 1.2,\n        total: 2\n      }\n    };\n  }\n};","/**\n * Dashboard Data Management Hook\n * 대시보드 데이터 관리 훅 - 수동 새로고침 방식\n */\n\nimport { useState, useCallback } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { dashboardApi } from '../../../api/dashboard';\n\n// Types\ninterface DashboardStats {\n  // Basic WordPress stats\n  posts?: number;\n  pages?: number;\n  comments?: {\n    total: number;\n    pending: number;\n  };\n  views?: number;\n  \n  // User stats\n  users: number | {\n    total: number;\n    pending: number;\n    today: number;\n    activeRate: number;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  \n  // Ecommerce stats (optional)\n  sales?: {\n    today: number;\n    changePercent: number;\n    monthlyTotal: number;\n    monthlyTarget: number;\n    trend: 'up' | 'down';\n  };\n  products?: number | {\n    active: number;\n    lowStock: number;\n    newThisWeek: number;\n    bestsellers: Array<{\n      id: string;\n      name: string;\n      sales: number;\n    }>;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  content?: {\n    publishedPages: number;\n    draftContent: number;\n    totalMedia: number;\n    todayViews: number;\n    change: number;\n    trend: 'up' | 'down';\n  };\n  partners?: {\n    active: number;\n    pending: number;\n    totalCommission: number;\n    topPartners: Array<{\n      id: string;\n      name: string;\n      commission: number;\n    }>;\n    change: number;\n    trend: 'up' | 'down';\n  };\n}\n\ninterface ChartData {\n  sales: Array<{\n    date: string;\n    amount: number;\n    orders: number;\n  }>;\n  orders: Array<{\n    status: string;\n    count: number;\n    color: string;\n  }>;\n  users: Array<{\n    date: string;\n    newUsers: number;\n    activeUsers: number;\n  }>;\n}\n\ninterface NotificationItem {\n  id: string;\n  type: 'urgent' | 'approval' | 'success' | 'info';\n  title: string;\n  message: string;\n  time: string;\n  read: boolean;\n  actionUrl?: string;\n}\n\ninterface ActivityItem {\n  id: string;\n  type: 'user' | 'order' | 'product' | 'content';\n  message: string;\n  time: string;\n  user?: string;\n  icon: string;\n}\n\ninterface SystemHealth {\n  api: {\n    status: 'healthy' | 'warning' | 'error';\n    responseTime: number;\n    lastCheck: string;\n  };\n  database: {\n    status: 'healthy' | 'warning' | 'error';\n    connections: number;\n    lastCheck: string;\n  };\n  storage: {\n    status: 'healthy' | 'warning' | 'error';\n    usage: number;\n    total: number;\n  };\n  memory: {\n    status: 'healthy' | 'warning' | 'error';\n    usage: number;\n    total: number;\n  };\n}\n\nexport const useDashboardData = () => {\n  const [manualRefreshTrigger, setManualRefreshTrigger] = useState(0);\n\n  // Stats data query\n  const {\n    data: stats,\n    isLoading: statsLoading,\n    error: statsError,\n    refetch: refetchStats\n  } = useQuery<DashboardStats>({\n    queryKey: ['dashboard', 'stats', manualRefreshTrigger],\n    queryFn: () => dashboardApi.getStats(),\n    enabled: true, // 자동 로딩 활성화\n    staleTime: 5 * 60 * 1000, // 5분간 fresh\n    gcTime: 10 * 60 * 1000, // 10분간 캐시 유지\n    retry: 2\n  });\n\n  // Chart data query\n  const {\n    data: chartData,\n    isLoading: chartLoading,\n    error: chartError,\n    refetch: refetchCharts\n  } = useQuery({\n    queryKey: ['dashboard', 'charts', manualRefreshTrigger],\n    queryFn: async (): Promise<ChartData> => {\n      const data = await dashboardApi.getChartData();\n      return {\n        sales: data.sales as Array<{ date: string; amount: number; orders: number; }>,\n        orders: data.orders,\n        users: data.users\n      };\n    },\n    enabled: true,\n    staleTime: 5 * 60 * 1000,\n    gcTime: 10 * 60 * 1000,\n    retry: 2\n  });\n\n  // Notifications query\n  const {\n    data: notificationsData,\n    isLoading: notificationsLoading,\n    refetch: refetchNotifications\n  } = useQuery<{\n    items: NotificationItem[];\n    total: number;\n    urgent: number;\n    approval: number;\n  }>({\n    queryKey: ['dashboard', 'notifications', manualRefreshTrigger],\n    queryFn: () => dashboardApi.getNotifications(),\n    enabled: true,\n    staleTime: 2 * 60 * 1000, // 알림은 2분간만 fresh\n    retry: 2\n  });\n\n  // Activities query\n  const {\n    data: activities,\n    isLoading: activitiesLoading,\n    refetch: refetchActivities\n  } = useQuery<ActivityItem[]>({\n    queryKey: ['dashboard', 'activities', manualRefreshTrigger],\n    queryFn: () => dashboardApi.getRecentActivities(),\n    enabled: true,\n    staleTime: 3 * 60 * 1000, // 3분간 fresh\n    retry: 2\n  });\n\n  // System health query\n  const {\n    data: systemHealth,\n    isLoading: healthLoading,\n    refetch: refetchHealth\n  } = useQuery<SystemHealth>({\n    queryKey: ['dashboard', 'health', manualRefreshTrigger],\n    queryFn: () => dashboardApi.getSystemHealth(),\n    enabled: true,\n    staleTime: 30 * 1000, // 30초간만 fresh (시스템 상태는 자주 확인)\n    retry: 1\n  });\n\n  // 전체 로딩 상태\n  const isLoading = statsLoading || chartLoading || notificationsLoading || \n                   activitiesLoading || healthLoading;\n\n  // 전체 에러 상태\n  const error = statsError || chartError;\n\n  // 수동 새로고침 함수\n  const refreshAllData = useCallback(async () => {\n    const timestamp = Date.now();\n    setManualRefreshTrigger(timestamp);\n\n    // 모든 쿼리를 병렬로 실행\n    const refreshPromises = [\n      refetchStats(),\n      refetchCharts(),\n      refetchNotifications(),\n      refetchActivities(),\n      refetchHealth()\n    ];\n\n    await Promise.allSettled(refreshPromises);\n  }, [refetchStats, refetchCharts, refetchNotifications, refetchActivities, refetchHealth]);\n\n  // 초기 데이터 로드 제거 - enabled: true로 자동 로드됨\n  // useEffect(() => {\n  //   refreshAllData();\n  // }, []);\n\n  // 개별 섹션 새로고침 함수들\n  const refreshStats = useCallback(() => refetchStats(), [refetchStats]);\n  const refreshCharts = useCallback(() => refetchCharts(), [refetchCharts]);\n  const refreshNotifications = useCallback(() => refetchNotifications(), [refetchNotifications]);\n\n  return {\n    // Data\n    stats,\n    chartData,\n    notifications: notificationsData,\n    activities,\n    systemHealth,\n\n    // Loading states\n    isLoading,\n    error,\n\n    // Refresh functions\n    refreshAllData,\n    refreshStats,\n    refreshCharts,\n    refreshNotifications,\n\n    // Individual loading states (for granular control)\n    loadingStates: {\n      stats: statsLoading,\n      charts: chartLoading,\n      notifications: notificationsLoading,\n      activities: activitiesLoading,\n      health: healthLoading\n    }\n  };\n};","import { useState, FC } from 'react';\nimport { ChevronDown, Settings } from 'lucide-react';\nimport { clsx } from 'clsx';\n\nexport interface ScreenOption {\n  id: string;\n  label: string;\n  checked: boolean;\n  type: 'checkbox' | 'number';\n  value?: number;\n  min?: number;\n  max?: number;\n  description?: string;\n}\n\ninterface ScreenOptionsProps {\n  title?: string;\n  options: ScreenOption[];\n  onOptionsChange: (options: ScreenOption[]) => void;\n  columnsPerPage?: number;\n  onColumnsChange?: (columns: number) => void;\n  itemsPerPage?: number;\n  onItemsPerPageChange?: (items: number) => void;\n}\n\nconst ScreenOptions: FC<ScreenOptionsProps> = ({\n  title = 'Screen Options',\n  options,\n  onOptionsChange,\n  columnsPerPage,\n  onColumnsChange,\n  itemsPerPage = 20,\n  onItemsPerPageChange\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOptionChange = (optionId: string, checked: boolean) => {\n    const updatedOptions = options.map((opt: any) => \n      opt.id === optionId ? { ...opt, checked } : opt\n    );\n    onOptionsChange(updatedOptions);\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* Screen Options Tab */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={clsx(\n          'absolute -top-1 right-0 px-3 py-1 text-sm',\n          'bg-modern-bg-card border border-modern-border-primary rounded-t',\n          'hover:bg-modern-bg-hover transition-colors',\n          'flex items-center gap-1',\n          isOpen && 'bg-modern-bg-hover'\n        )}\n      >\n        <Settings className=\"w-4 h-4\" />\n        <span>{title}</span>\n        <ChevronDown className={clsx(\n          'w-4 h-4 transition-transform',\n          isOpen && 'rotate-180'\n        )} />\n      </button>\n\n      {/* Screen Options Panel */}\n      {isOpen && (\n        <div className=\"absolute top-8 right-0 w-96 bg-modern-bg-card border border-modern-border-primary rounded-lg shadow-modern-shadow-lg z-50\">\n          <div className=\"p-4\">\n            {/* Boxes Section */}\n            {options.length > 0 && (\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-semibold text-modern-text-primary mb-2\">Boxes</h3>\n                <div className=\"space-y-2\">\n                  {options.map((option: any) => (\n                    <label \n                      key={option.id}\n                      className=\"flex items-start gap-2 text-sm text-modern-text-secondary hover:text-modern-text-primary cursor-pointer\"\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={option.checked}\n                        onChange={(e: any) => handleOptionChange(option.id, e.target.checked)}\n                        className=\"mt-0.5 rounded border-modern-border-primary text-modern-primary focus:ring-modern-primary\"\n                      />\n                      <div>\n                        <span>{option.label}</span>\n                        {option.description && (\n                          <p className=\"text-xs text-modern-text-tertiary mt-0.5\">\n                            {option.description}\n                          </p>\n                        )}\n                      </div>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Layout Section */}\n            {columnsPerPage !== undefined && onColumnsChange && (\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-semibold text-modern-text-primary mb-2\">Layout</h3>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-modern-text-secondary\">Number of Columns:</span>\n                  <div className=\"flex gap-2\">\n                    {[1, 2, 3, 4].map((num: any) => (\n                      <button\n                        key={num}\n                        onClick={() => onColumnsChange(num)}\n                        className={clsx(\n                          'w-8 h-8 text-sm rounded border transition-colors',\n                          columnsPerPage === num\n                            ? 'bg-modern-primary text-white border-modern-primary'\n                            : 'bg-white border-modern-border-primary text-modern-text-primary hover:border-modern-primary'\n                        )}\n                      >\n                        {num}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Pagination Section */}\n            {onItemsPerPageChange && (\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-semibold text-modern-text-primary mb-2\">Pagination</h3>\n                <div className=\"flex items-center gap-2\">\n                  <label htmlFor=\"items-per-page\" className=\"text-sm text-modern-text-secondary\">\n                    Number of items per page:\n                  </label>\n                  <input\n                    id=\"items-per-page\"\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"999\"\n                    value={itemsPerPage}\n                    onChange={(e: any) => {\n                      const value = parseInt(e.target.value);\n                      if (value > 0) onItemsPerPageChange(value);\n                    }}\n                    className=\"w-16 px-2 py-1 text-sm border border-modern-border-primary rounded focus:outline-none focus:ring-2 focus:ring-modern-primary\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Apply Button */}\n            <div className=\"flex justify-end pt-2 border-t border-modern-border-primary\">\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"px-4 py-1.5 text-sm bg-modern-primary text-white rounded hover:bg-modern-primary-hover transition-colors\"\n              >\n                Apply\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScreenOptions;","import { create } from 'zustand';\nimport { useLocation } from 'react-router-dom';\nimport { ReactNode, useEffect } from 'react';\n\nexport interface HelpTab {\n  id: string;\n  title: string;\n  content: string | ReactNode;\n}\n\nexport interface HelpSidebar {\n  title: string;\n  content: string | ReactNode;\n}\n\ninterface HelpTabsStore {\n  _isOpen: boolean;\n  activeTab: string | null;\n  tabs: HelpTab[];\n  sidebar: HelpSidebar | null;\n  \n  // Actions\n  toggleHelp: () => void;\n  openHelp: () => void;\n  closeHelp: () => void;\n  setActiveTab: (tabId: string) => void;\n  setTabs: (tabs: HelpTab[]) => void;\n  setSidebar: (sidebar: HelpSidebar | null) => void;\n  reset: () => void;\n}\n\n/**\n * Zustand store for WordPress-style Help Tabs\n */\nconst useHelpTabsStore = create<HelpTabsStore>((set) => ({\n  _isOpen: false,\n  activeTab: null,\n  tabs: [],\n  sidebar: null,\n  \n  toggleHelp: () => set((state) => ({ \n    _isOpen: !state._isOpen,\n    activeTab: state._isOpen ? null : (state.tabs[0]?.id || null)\n  })),\n  \n  openHelp: () => set((state) => ({ \n    _isOpen: true,\n    activeTab: state.tabs[0]?.id || null\n  })),\n  \n  closeHelp: () => set({ _isOpen: false, activeTab: null }),\n  \n  setActiveTab: (tabId) => set({ activeTab: tabId }),\n  \n  setTabs: (tabs) => set((state) => ({ \n    tabs,\n    activeTab: state._isOpen ? (tabs[0]?.id || null) : state.activeTab\n  })),\n  \n  setSidebar: (sidebar) => set({ sidebar }),\n  \n  reset: () => set({ \n    _isOpen: false, \n    activeTab: null, \n    tabs: [], \n    sidebar: null \n  })\n}));\n\n/**\n * Hook for managing WordPress-style help tabs\n */\nexport function useHelpTabs() {\n  const store = useHelpTabsStore();\n  const location = useLocation();\n  \n  // Reset help tabs when route changes\n  useEffect(() => {\n    store.reset();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]); // Intentionally omitting store to avoid re-render loop\n  \n  return store;\n}\n\n/**\n * Hook for registering help content for current page\n */\nexport function useRegisterHelp(tabs: HelpTab[], sidebar?: HelpSidebar | null) {\n  const setTabs = useHelpTabsStore((state) => state.setTabs);\n  const setSidebar = useHelpTabsStore((state) => state.setSidebar);\n  \n  // Create stable reference for tabs\n  const tabsKey = JSON.stringify(tabs);\n  const sidebarKey = JSON.stringify(sidebar);\n  \n  useEffect(() => {\n    setTabs(tabs);\n    setSidebar(sidebar || null);\n    \n    return () => {\n      // Cleanup when component unmounts\n      setTabs([]);\n      setSidebar(null);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabsKey, sidebarKey]); // Using stable keys to avoid infinite re-renders\n}","import { FC } from 'react';\nimport { HelpCircle, X } from 'lucide-react';\nimport { useHelpTabs } from '@/hooks/useHelpTabs';\nimport { cn } from '@/lib/utils';\n\n/**\n * WordPress-style Help Tab component\n */\nexport const HelpTab: FC = () => {\n  const { \n    _isOpen: isOpen, \n    activeTab, \n    tabs, \n    sidebar,\n    toggleHelp, \n    closeHelp, \n    setActiveTab \n  } = useHelpTabs();\n\n  // Don't render if no tabs registered\n  if (tabs.length === 0) {\n    return null;\n  }\n\n  // const currentTab = tabs.find((tab: any) => tab.id === activeTab); // Reserved for future use\n\n  return (\n    <>\n      {/* Help Tab Button */}\n      <div id=\"contextual-help-link-wrap\" className=\"hide-if-no-js screen-meta-toggle\">\n        <button\n          type=\"button\"\n          id=\"contextual-help-link\"\n          className={cn(\"button show-settings\", isOpen && \"screen-meta-active\")}\n          aria-controls=\"contextual-help-wrap\"\n          aria-expanded={isOpen}\n          onClick={toggleHelp}\n        >\n          <HelpCircle className=\"w-4 h-4 inline mr-1\" />\n          Help\n        </button>\n      </div>\n\n      {/* Help Content Panel */}\n      <div\n        id=\"contextual-help-wrap\"\n        className={cn(\n          \"contextual-help-wrap hidden\",\n          isOpen && \"contextual-help-open\"\n        )}\n        aria-label=\"Contextual Help Tab\"\n      >\n        <div id=\"contextual-help-back\" className={isOpen ? 'contextual-help-open' : ''}></div>\n        <div id=\"contextual-help-columns\">\n          <div className=\"contextual-help-tabs\">\n            <ul>\n              {tabs.map((tab: any) => (\n                <li\n                  key={tab.id}\n                  id={`tab-link-${tab.id}`}\n                  className={activeTab === tab.id ? 'active' : ''}\n                >\n                  <a\n                    href={`#tab-panel-${tab.id}`}\n                    onClick={(e: any) => {\n                      e.preventDefault();\n                      setActiveTab(tab.id);\n                    }}\n                    aria-controls={`tab-panel-${tab.id}`}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {sidebar && (\n            <div className=\"contextual-help-sidebar\">\n              <h3>{sidebar.title}</h3>\n              {typeof sidebar.content === 'string' ? (\n                <div dangerouslySetInnerHTML={{ __html: sidebar.content }} />\n              ) : (\n                sidebar.content\n              )}\n            </div>\n          )}\n\n          <div className=\"contextual-help-tabs-wrap\">\n            {tabs.map((tab: any) => (\n              <div\n                key={tab.id}\n                id={`tab-panel-${tab.id}`}\n                className={cn(\n                  \"help-tab-content\",\n                  activeTab === tab.id ? \"active\" : \"\"\n                )}\n              >\n                {typeof tab.content === 'string' ? (\n                  <div dangerouslySetInnerHTML={{ __html: tab.content }} />\n                ) : (\n                  tab.content\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <button\n          type=\"button\"\n          className=\"contextual-help-close\"\n          onClick={closeHelp}\n          aria-label=\"Close Help\"\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n      </div>\n    </>\n  );\n};","import { FC, ReactNode } from 'react';\nimport ScreenOptions from './ScreenOptions';\nimport { HelpTab } from './HelpTab';\n\ninterface ScreenMetaProps {\n  // Screen Options props\n  columns?: {\n    id: string;\n    label: string;\n    checked: boolean;\n  }[];\n  itemsPerPage?: number;\n  onColumnChange?: (columnId: string, checked: boolean) => void;\n  onItemsPerPageChange?: (value: number) => void;\n  additionalOptions?: ReactNode;\n}\n\n/**\n * WordPress-style Screen Meta component that combines Screen Options and Help Tab\n */\nexport const ScreenMeta: FC<ScreenMetaProps> = (props) => {\n  // Convert props to ScreenOptions format\n  const screenOptions = props.columns?.map((col: any) => ({\n    id: col.id,\n    label: col.label,\n    checked: col.checked,\n    type: 'checkbox' as const\n  })) || [];\n\n  const handleOptionsChange = (newOptions: any[]) => {\n    newOptions.forEach((opt: any) => {\n      if (props.onColumnChange) {\n        props.onColumnChange(opt.id, opt.checked);\n      }\n    });\n  };\n\n  return (\n    <div id=\"screen-meta\" className=\"metabox-prefs\">\n      <div id=\"screen-meta-links\">\n        <div className=\"screen-options-and-help-container\">\n          <HelpTab />\n          <ScreenOptions \n            options={screenOptions}\n            onOptionsChange={handleOptionsChange}\n            itemsPerPage={props.itemsPerPage}\n            onItemsPerPageChange={props.onItemsPerPageChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};","import { FC } from 'react';\nimport { useRegisterHelp } from '@/hooks/useHelpTabs';\n\n/**\n * Help content for Dashboard page\n */\nexport const DashboardHelp: FC = () => {\n  const helpTabs = [\n    {\n      id: 'overview',\n      title: 'Overview',\n      content: `\n        <p>Welcome to your WordPress Dashboard! This is the main hub of your site where you can access all administrative functions.</p>\n        <p>The Dashboard provides a quick overview of your site's content and activity. You can see at a glance:</p>\n        <ul>\n          <li>Site statistics including posts, pages, and comments</li>\n          <li>Recent activity on your site</li>\n          <li>Quick actions to create new content</li>\n          <li>Links to commonly used features</li>\n        </ul>\n        <p>The Dashboard is customizable. You can rearrange widgets, add or remove them, and adjust the layout to suit your workflow.</p>\n      `\n    },\n    {\n      id: 'navigation',\n      title: 'Navigation',\n      content: `\n        <p>The left-hand navigation menu is your primary way to move around the WordPress admin area.</p>\n        <p><strong>Main sections include:</strong></p>\n        <ul>\n          <li><strong>Posts</strong> - Create and manage blog posts</li>\n          <li><strong>Media</strong> - Upload and manage images, videos, and documents</li>\n          <li><strong>Pages</strong> - Create static pages like About or Contact</li>\n          <li><strong>Comments</strong> - Moderate user comments</li>\n          <li><strong>Appearance</strong> - Customize your site's look</li>\n          <li><strong>Plugins</strong> - Add functionality to your site</li>\n          <li><strong>Users</strong> - Manage user accounts and permissions</li>\n          <li><strong>Tools</strong> - Import/export and other utilities</li>\n          <li><strong>Settings</strong> - Configure site options</li>\n        </ul>\n      `\n    },\n    {\n      id: 'quick-actions',\n      title: 'Quick Actions',\n      content: `\n        <p>The Dashboard provides several quick action buttons at the top:</p>\n        <ul>\n          <li><strong>New Post</strong> - Start writing a new blog post</li>\n          <li><strong>New Page</strong> - Create a new static page</li>\n          <li><strong>Upload Media</strong> - Add images or files to your media library</li>\n        </ul>\n        <p>You can also access these actions from the admin bar at the top of every page when you hover over the \"+ New\" menu.</p>\n      `\n    }\n  ];\n\n  const helpSidebar = {\n    title: 'For more information:',\n    content: `\n      <p><a href=\"https://wordpress.org/support/article/dashboard-screen/\" target=\"_blank\">Documentation on Dashboard</a></p>\n      <p><a href=\"https://wordpress.org/support/\" target=\"_blank\">Support Forums</a></p>\n      <p><a href=\"https://wordpress.org/support/article/wordpress-video-tutorials/\" target=\"_blank\">Video Tutorials</a></p>\n    `\n  };\n\n  useRegisterHelp(helpTabs, helpSidebar);\n\n  return null;\n};","import { FC } from 'react';\nimport { \n  FileText, \n  MessageSquare, \n  Users, \n  Package, \n  Plus, \n  Eye,\n  TrendingUp,\n  Edit3,\n  Settings\n} from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport { useDashboardData } from './hooks/useDashboardData';\n// import { formatDistanceToNow } from 'date-fns';\nimport { ScreenMeta } from '@/components/common/ScreenMeta';\nimport { DashboardHelp } from '@/components/help/DashboardHelp';\n\n/**\n * Simple, mobile-friendly dashboard without complex widget system\n */\nconst DashboardSimple: FC = () => {\n  const { stats, isLoading } = useDashboardData();\n\n  // Mock recent activity - replace with real API\n  const recentActivity = [\n    {\n      id: '1',\n      type: 'post',\n      title: 'Welcome to WordPress!',\n      author: 'admin',\n      date: new Date(Date.now() - 1000 * 60 * 30),\n      icon: FileText\n    },\n    {\n      id: '2',\n      type: 'comment',\n      title: 'Great article on React development',\n      author: 'John Doe',\n      date: new Date(Date.now() - 1000 * 60 * 60 * 2),\n      icon: MessageSquare\n    },\n    {\n      id: '3',\n      type: 'user',\n      title: 'New user registration',\n      author: 'jane.smith@example.com',\n      date: new Date(Date.now() - 1000 * 60 * 60 * 5),\n      icon: Users\n    }\n  ];\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"wrap\">\n      <DashboardHelp />\n      <ScreenMeta />\n      \n      <h1 className=\"wp-heading-inline\">Dashboard</h1>\n      \n      {/* Quick Actions */}\n      <div className=\"quick-actions-bar\">\n        <Link to=\"/posts/new\">\n          <Button className=\"button button-primary\">\n            <Plus className=\"w-4 h-4 mr-1\" />\n            New Post\n          </Button>\n        </Link>\n        <Link to=\"/pages/new\">\n          <Button variant=\"secondary\">\n            <Plus className=\"w-4 h-4 mr-1\" />\n            New Page\n          </Button>\n        </Link>\n        <Link to=\"/media/upload\">\n          <Button variant=\"secondary\">\n            <Plus className=\"w-4 h-4 mr-1\" />\n            Upload Media\n          </Button>\n        </Link>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"dashboard-stats-grid\">\n        <div className=\"stat-card\">\n          <Link to=\"/posts\" className=\"stat-card-link\">\n            <div className=\"stat-icon\">\n              <FileText className=\"w-8 h-8\" />\n            </div>\n            <div className=\"stat-content\">\n              <div className=\"stat-number\">{stats?.posts || 0}</div>\n              <div className=\"stat-label\">Posts</div>\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"stat-card\">\n          <Link to=\"/pages\" className=\"stat-card-link\">\n            <div className=\"stat-icon\">\n              <FileText className=\"w-8 h-8\" />\n            </div>\n            <div className=\"stat-content\">\n              <div className=\"stat-number\">{stats?.pages || 0}</div>\n              <div className=\"stat-label\">Pages</div>\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"stat-card\">\n          <Link to=\"/comments\" className=\"stat-card-link\">\n            <div className=\"stat-icon\">\n              <MessageSquare className=\"w-8 h-8\" />\n            </div>\n            <div className=\"stat-content\">\n              <div className=\"stat-number\">{stats?.comments?.total || 0}</div>\n              <div className=\"stat-label\">Comments</div>\n              {stats?.comments && stats.comments.pending > 0 && (\n                <div className=\"stat-badge\">{stats.comments.pending} pending</div>\n              )}\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"stat-card\">\n          <Link to=\"/users\" className=\"stat-card-link\">\n            <div className=\"stat-icon\">\n              <Users className=\"w-8 h-8\" />\n            </div>\n            <div className=\"stat-content\">\n              <div className=\"stat-number\">{typeof stats?.users === 'number' ? stats.users : stats?.users?.total || 0}</div>\n              <div className=\"stat-label\">Users</div>\n            </div>\n          </Link>\n        </div>\n\n        {stats?.products !== undefined && (\n          <div className=\"stat-card\">\n            <Link to=\"/ecommerce/products\" className=\"stat-card-link\">\n              <div className=\"stat-icon\">\n                <Package className=\"w-8 h-8\" />\n              </div>\n              <div className=\"stat-content\">\n                <div className=\"stat-number\">{typeof stats.products === 'number' ? stats.products : stats.products?.active || 0}</div>\n                <div className=\"stat-label\">Products</div>\n              </div>\n            </Link>\n          </div>\n        )}\n\n        {stats?.views !== undefined && (\n          <div className=\"stat-card\">\n            <div className=\"stat-card-link\">\n              <div className=\"stat-icon\">\n                <Eye className=\"w-8 h-8\" />\n              </div>\n              <div className=\"stat-content\">\n                <div className=\"stat-number\">{stats.views?.toLocaleString() || 0}</div>\n                <div className=\"stat-label\">Views Today</div>\n                <TrendingUp className=\"w-4 h-4 text-green-600 inline ml-1\" />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"dashboard-activity-section\">\n        <h2 className=\"section-title\">Recent Activity</h2>\n        <div className=\"activity-list\">\n          {recentActivity.map((item: any) => {\n            const Icon = item.icon;\n            return (\n              <div key={item.id} className=\"activity-item\">\n                <div className=\"activity-icon\">\n                  <Icon className=\"w-5 h-5\" />\n                </div>\n                <div className=\"activity-content\">\n                  <div className=\"activity-title\">\n                    {item.type === 'post' && (\n                      <Link to={`/posts/${item.id}/edit`}>{item.title}</Link>\n                    )}\n                    {item.type === 'comment' && (\n                      <>Comment from <strong>{item.author}</strong> on <Link to={`/comments/${item.id}`}>{item.title}</Link></>\n                    )}\n                    {item.type === 'user' && (\n                      <>{item.title}: <strong>{item.author}</strong></>\n                    )}\n                  </div>\n                  <div className=\"activity-time\">\n                    {'/* date removed */'}\n                  </div>\n                </div>\n                <div className=\"activity-actions\">\n                  {item.type === 'post' && (\n                    <Link to={`/posts/${item.id}/edit`} className=\"activity-action\">\n                      <Edit3 className=\"w-4 h-4\" />\n                    </Link>\n                  )}\n                  {item.type === 'comment' && (\n                    <Link to={`/comments/${item.id}`} className=\"activity-action\">\n                      <MessageSquare className=\"w-4 h-4\" />\n                    </Link>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"activity-footer\">\n          <Link to=\"/activity\" className=\"view-all-link\">View All Activity →</Link>\n        </div>\n      </div>\n\n      {/* Quick Links */}\n      <div className=\"dashboard-quick-links\">\n        <h2 className=\"section-title\">Quick Links</h2>\n        <div className=\"quick-links-grid\">\n          <Link to=\"/themes/customize\" className=\"quick-link\">\n            <Settings className=\"w-5 h-5 mr-2\" />\n            Customize Your Site\n          </Link>\n          <Link to=\"/appearance/menus\" className=\"quick-link\">\n            Manage Menus\n          </Link>\n          <Link to=\"/themes/widgets\" className=\"quick-link\">\n            Manage Widgets\n          </Link>\n          <Link to=\"/settings/general\" className=\"quick-link\">\n            General Settings\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardSimple;"],"file":"assets/DashboardSimple-CPpTnndL.js"}