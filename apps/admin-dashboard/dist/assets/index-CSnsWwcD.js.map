{"version":3,"file":"index-CSnsWwcD.js","sources":["../../src/api/dropshipping-cpt.ts","../../src/pages/dropshipping/ProductEditor.tsx","../../src/pages/dropshipping/Products.tsx","../../src/pages/dropshipping/Orders.tsx","../../src/pages/dropshipping/Settlements.tsx","../../src/pages/dropshipping/SellersList.tsx","../../src/pages/dropshipping/PartnersList.tsx","../../src/pages/dropshipping/SuppliersList.tsx","../../src/pages/dropshipping/Approvals.tsx","../../src/pages/dropshipping/Commissions.tsx","../../src/pages/dropshipping/SystemSetup.tsx","../../src/pages/dropshipping/index.tsx"],"sourcesContent":["import api from './client';\n\n// Product API\nexport const dropshippingAPI = {\n  // Get all products\n  getProducts: async () => {\n    const response = await api.get('/api/v1/dropshipping/products');\n    return response.data;\n  },\n\n  // Create product\n  createProduct: async (data: {\n    title: string;\n    content?: string;\n    excerpt?: string;\n    acf?: {\n      cost_price?: number;\n      selling_price?: number;\n      can_modify_price?: boolean;\n      supplier?: string;\n      supplier_sku?: string;\n      shipping_days_min?: number;\n      shipping_days_max?: number;\n      shipping_fee?: number;\n    };\n  }) => {\n    const response = await api.post('/api/v1/dropshipping/products', data);\n    return response.data;\n  },\n\n  // Update product\n  updateProduct: async (id: string, data: {\n    title?: string;\n    content?: string;\n    excerpt?: string;\n    acf?: {\n      cost_price?: number;\n      selling_price?: number;\n      can_modify_price?: boolean;\n      supplier?: string;\n      supplier_sku?: string;\n      shipping_days_min?: number;\n      shipping_days_max?: number;\n      shipping_fee?: number;\n    };\n  }) => {\n    const response = await api.put(`/api/v1/dropshipping/products/${id}`, data);\n    return response.data;\n  },\n\n  // Delete product\n  deleteProduct: async (id: string) => {\n    const response = await api.delete(`/api/v1/dropshipping/products/${id}`);\n    return response.data;\n  },\n\n  // Calculate margin\n  calculateMargin: async (cost_price: number, selling_price: number) => {\n    const response = await api.post('/api/v1/dropshipping/calculate-margin', {\n      cost_price,\n      selling_price\n    });\n    return response.data;\n  },\n\n  // Initialize CPTs and ACF\n  initializeCPTs: async () => {\n    const response = await api.post('/api/v1/dropshipping/initialize');\n    return response.data;\n  },\n\n  // Partner API\n  getPartners: async () => {\n    const response = await api.get('/api/v1/dropshipping/partners');\n    return response.data;\n  },\n\n  createPartner: async (data: {\n    title: string;\n    content?: string;\n    acf?: {\n      partner_type?: 'individual' | 'business';\n      partner_grade?: 'bronze' | 'silver' | 'gold' | 'platinum';\n      partner_commission_rate?: number;\n    };\n  }) => {\n    const response = await api.post('/api/v1/dropshipping/partners', data);\n    return response.data;\n  },\n\n  updatePartner: async (id: string, data: {\n    title?: string;\n    content?: string;\n    acf?: {\n      partner_type?: 'individual' | 'business';\n      partner_grade?: 'bronze' | 'silver' | 'gold' | 'platinum';\n      partner_commission_rate?: number;\n    };\n  }) => {\n    const response = await api.put(`/api/v1/dropshipping/partners/${id}`, data);\n    return response.data;\n  },\n\n  deletePartner: async (id: string) => {\n    const response = await api.delete(`/api/v1/dropshipping/partners/${id}`);\n    return response.data;\n  },\n\n  // Supplier API\n  getSuppliers: async () => {\n    const response = await api.get('/api/v1/dropshipping/suppliers');\n    return response.data;\n  },\n\n  createSupplier: async (data: {\n    title: string;\n    content?: string;\n    acf?: {\n      supplier_email?: string;\n      supplier_phone?: string;\n      supplier_business_number?: string;\n      supplier_api_key?: string;\n      supplier_api_endpoint?: string;\n    };\n  }) => {\n    const response = await api.post('/api/v1/dropshipping/suppliers', data);\n    return response.data;\n  },\n\n  updateSupplier: async (id: string, data: {\n    title?: string;\n    content?: string;\n    acf?: {\n      supplier_email?: string;\n      supplier_phone?: string;\n      supplier_business_number?: string;\n      supplier_api_key?: string;\n      supplier_api_endpoint?: string;\n    };\n  }) => {\n    const response = await api.put(`/api/v1/dropshipping/suppliers/${id}`, data);\n    return response.data;\n  },\n\n  deleteSupplier: async (id: string) => {\n    const response = await api.delete(`/api/v1/dropshipping/suppliers/${id}`);\n    return response.data;\n  },\n\n  // Order API\n  getOrders: async (status?: string) => {\n    const params = status ? `?status=${status}` : '';\n    const response = await api.get(`/api/v1/dropshipping/orders${params}`);\n    return response.data;\n  },\n\n  getOrder: async (id: string) => {\n    const response = await api.get(`/api/v1/dropshipping/orders/${id}`);\n    return response.data;\n  },\n\n  createOrder: async (data: {\n    customer_id: string;\n    customer_name: string;\n    customer_email: string;\n    items: Array<{\n      product_id: string;\n      product_name: string;\n      quantity: number;\n      price: number;\n      seller_id: string;\n      seller_name: string;\n    }>;\n    shipping_fee: number;\n    payment_method: string;\n    shipping_address?: {\n      street: string;\n      city: string;\n      state: string;\n      zip: string;\n      country: string;\n    };\n  }) => {\n    const response = await api.post('/api/v1/dropshipping/orders', data);\n    return response.data;\n  },\n\n  updateOrderStatus: async (id: string, status: string) => {\n    const response = await api.patch(`/api/v1/dropshipping/orders/${id}/status`, { status });\n    return response.data;\n  },\n\n  deleteOrder: async (id: string) => {\n    const response = await api.delete(`/api/v1/dropshipping/orders/${id}`);\n    return response.data;\n  },\n\n  // Settlement API\n  getSettlements: async (status?: string, type?: string) => {\n    const params = new URLSearchParams();\n    if (status) params.append('status', status);\n    if (type) params.append('type', type);\n    const queryString = params.toString();\n    const response = await api.get(`/api/v1/dropshipping/settlements${queryString ? `?${queryString}` : ''}`);\n    return response.data;\n  },\n\n  getSettlement: async (id: string) => {\n    const response = await api.get(`/api/v1/dropshipping/settlements/${id}`);\n    return response.data;\n  },\n\n  updateSettlementStatus: async (id: string, status: string) => {\n    const response = await api.patch(`/api/v1/dropshipping/settlements/${id}/status`, { status });\n    return response.data;\n  },\n\n  processSettlement: async (id: string) => {\n    const response = await api.post(`/api/v1/dropshipping/settlements/${id}/process`);\n    return response.data;\n  },\n\n  createSettlement: async (data: {\n    order_id?: string;\n    seller_id?: string;\n    partner_id?: string;\n    amount: number;\n    commission_rate: number;\n    bank_name: string;\n    account_number: string;\n    account_holder: string;\n  }) => {\n    const response = await api.post('/api/v1/dropshipping/settlements', data);\n    return response.data;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { X, Save, Calculator, Package, Truck, DollarSign } from 'lucide-react';\nimport { dropshippingAPI } from '../../api/dropshipping-cpt';\nimport { toast } from 'react-hot-toast';\n\ninterface ProductEditorProps {\n  product?: any;\n  onClose: () => void;\n}\n\nconst ProductEditor: React.FC<ProductEditorProps> = ({ product, onClose }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    content: '',\n    excerpt: '',\n    acf: {\n      cost_price: 0,\n      selling_price: 0,\n      margin_rate: '0',\n      can_modify_price: true,\n      supplier: '',\n      supplier_sku: '',\n      shipping_days_min: 3,\n      shipping_days_max: 7,\n      shipping_fee: 0\n    }\n  });\n\n  const [saving, setSaving] = useState(false);\n\n  useEffect(() => {\n    if (product) {\n      setFormData({\n        title: product.title || '',\n        content: product.content || '',\n        excerpt: product.excerpt || '',\n        acf: {\n          cost_price: product.acf?.cost_price || 0,\n          selling_price: product.acf?.selling_price || 0,\n          margin_rate: product.acf?.margin_rate || '0',\n          can_modify_price: product.acf?.can_modify_price ?? true,\n          supplier: product.acf?.supplier || '',\n          supplier_sku: product.acf?.supplier_sku || '',\n          shipping_days_min: product.acf?.shipping_days_min || 3,\n          shipping_days_max: product.acf?.shipping_days_max || 7,\n          shipping_fee: product.acf?.shipping_fee || 0\n        }\n      });\n    }\n  }, [product]);\n\n  // Auto-calculate margin when prices change\n  useEffect(() => {\n    calculateMargin();\n  }, [formData.acf.cost_price, formData.acf.selling_price]);\n\n  const calculateMargin = () => {\n    const costPrice = Number(formData.acf.cost_price) || 0;\n    const sellingPrice = Number(formData.acf.selling_price) || 0;\n    \n    let marginRate = '0';\n    if (sellingPrice > 0) {\n      marginRate = ((sellingPrice - costPrice) / sellingPrice * 100).toFixed(2);\n    }\n    \n    setFormData(prev => ({\n      ...prev,\n      acf: {\n        ...prev.acf,\n        margin_rate: marginRate\n      }\n    }));\n  };\n\n  const handleSave = async () => {\n    if (!formData.title.trim()) {\n      toast.error('상품명을 입력해주세요');\n      return;\n    }\n\n    setSaving(true);\n    try {\n      let response;\n      if (product) {\n        response = await dropshippingAPI.updateProduct(product.id, formData);\n      } else {\n        response = await dropshippingAPI.createProduct(formData);\n      }\n\n      if (response.success) {\n        toast.success(product ? '상품이 수정되었습니다' : '상품이 등록되었습니다');\n        onClose();\n      }\n    } catch (error) {\n      console.error('Failed to save product:', error);\n      toast.error('상품 저장에 실패했습니다');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const getMarginColor = () => {\n    const rate = parseFloat(formData.acf.margin_rate);\n    if (rate < 10) return 'bg-red-50 border-red-200 text-red-900';\n    if (rate < 20) return 'bg-yellow-50 border-yellow-200 text-yellow-900';\n    return 'bg-green-50 border-green-200 text-green-900';\n  };\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('ko-KR').format(value);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-50 z-50 overflow-y-auto\">\n      <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            {product ? '상품 편집' : '새 상품 추가'}\n          </h1>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Basic Info */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold mb-4\">기본 정보</h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    상품명\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.title}\n                    onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"상품명을 입력하세요\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    간단 설명\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.excerpt}\n                    onChange={(e) => setFormData({ ...formData, excerpt: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"간단한 상품 설명\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    상세 설명\n                  </label>\n                  <textarea\n                    value={formData.content}\n                    onChange={(e) => setFormData({ ...formData, content: e.target.value })}\n                    rows={8}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"상품 상세 설명을 입력하세요\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Supplier Info */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Package className=\"h-5 w-5 mr-2\" />\n                공급자 정보\n              </h2>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    공급자\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.acf.supplier}\n                    onChange={(e) => setFormData({\n                      ...formData,\n                      acf: { ...formData.acf, supplier: e.target.value }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"공급자명\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    공급자 상품코드\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.acf.supplier_sku}\n                    onChange={(e) => setFormData({\n                      ...formData,\n                      acf: { ...formData.acf, supplier_sku: e.target.value }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"SUP-12345\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Shipping Info */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Truck className=\"h-5 w-5 mr-2\" />\n                배송 정보\n              </h2>\n              \n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    최소 배송일\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"number\"\n                      value={formData.acf.shipping_days_min}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        acf: { ...formData.acf, shipping_days_min: parseInt(e.target.value) || 0 }\n                      })}\n                      className=\"w-full px-3 py-2 pr-8 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                      min=\"1\"\n                      max=\"30\"\n                    />\n                    <span className=\"absolute right-3 top-2.5 text-gray-500\">일</span>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    최대 배송일\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"number\"\n                      value={formData.acf.shipping_days_max}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        acf: { ...formData.acf, shipping_days_max: parseInt(e.target.value) || 0 }\n                      })}\n                      className=\"w-full px-3 py-2 pr-8 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                      min=\"1\"\n                      max=\"30\"\n                    />\n                    <span className=\"absolute right-3 top-2.5 text-gray-500\">일</span>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    배송비\n                  </label>\n                  <div className=\"relative\">\n                    <span className=\"absolute left-3 top-2.5 text-gray-500\">₩</span>\n                    <input\n                      type=\"number\"\n                      value={formData.acf.shipping_fee}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        acf: { ...formData.acf, shipping_fee: parseInt(e.target.value) || 0 }\n                      })}\n                      className=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                      min=\"0\"\n                      step=\"500\"\n                    />\n                  </div>\n                  {formData.acf.shipping_fee === 0 && (\n                    <p className=\"text-sm text-green-600 mt-1\">무료배송</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Sidebar - Pricing */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Price & Margin Calculator */}\n            <div className=\"bg-white rounded-lg shadow p-6 sticky top-6\">\n              <h2 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Calculator className=\"h-5 w-5 mr-2\" />\n                가격 정보\n              </h2>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    공급가\n                  </label>\n                  <div className=\"relative\">\n                    <span className=\"absolute left-3 top-2.5 text-gray-500\">₩</span>\n                    <input\n                      type=\"number\"\n                      value={formData.acf.cost_price}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        acf: { ...formData.acf, cost_price: parseInt(e.target.value) || 0 }\n                      })}\n                      className=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                      min=\"0\"\n                      step=\"1000\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    판매가\n                  </label>\n                  <div className=\"relative\">\n                    <span className=\"absolute left-3 top-2.5 text-gray-500\">₩</span>\n                    <input\n                      type=\"number\"\n                      value={formData.acf.selling_price}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        acf: { ...formData.acf, selling_price: parseInt(e.target.value) || 0 }\n                      })}\n                      className=\"w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                      min=\"0\"\n                      step=\"1000\"\n                    />\n                  </div>\n                </div>\n\n                {/* Margin Display */}\n                <div className={`p-4 rounded-lg border ${getMarginColor()}`}>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"font-medium\">마진율</span>\n                    <span className=\"text-2xl font-bold\">{formData.acf.margin_rate}%</span>\n                  </div>\n                  <div className=\"text-sm space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span>수익금:</span>\n                      <span className=\"font-medium\">\n                        ₩{formatCurrency(formData.acf.selling_price - formData.acf.cost_price)}\n                      </span>\n                    </div>\n                    <div className=\"text-xs opacity-75\">\n                      계산식: (판매가 - 공급가) / 판매가 × 100\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"can_modify_price\"\n                    checked={formData.acf.can_modify_price}\n                    onChange={(e) => setFormData({\n                      ...formData,\n                      acf: { ...formData.acf, can_modify_price: e.target.checked }\n                    })}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"can_modify_price\" className=\"text-sm text-gray-700\">\n                    파트너가 판매가를 수정할 수 있음\n                  </label>\n                </div>\n              </div>\n\n              {/* Save Button */}\n              <div className=\"mt-6 pt-6 border-t\">\n                <button\n                  onClick={handleSave}\n                  disabled={saving}\n                  className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition disabled:opacity-50\"\n                >\n                  <Save className=\"h-5 w-5 mr-2\" />\n                  {saving ? '저장 중...' : (product ? '수정하기' : '등록하기')}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductEditor;","import React, { useState, useEffect } from 'react';\nimport { Plus, Edit2, Trash2, DollarSign, TrendingUp, Package, BarChart } from 'lucide-react';\nimport { dropshippingAPI } from '../../api/dropshipping-cpt';\nimport { toast } from 'react-hot-toast';\nimport ProductEditor from './ProductEditor';\n\ninterface Product {\n  id: string;\n  title: string;\n  content: string;\n  excerpt: string;\n  status: string;\n  createdAt: string;\n  updatedAt: string;\n  acf: {\n    cost_price?: number;\n    selling_price?: number;\n    margin_rate?: string;\n    can_modify_price?: boolean;\n    supplier?: string;\n    supplier_sku?: string;\n    shipping_days_min?: number;\n    shipping_days_max?: number;\n    shipping_fee?: number;\n  };\n}\n\nconst Products: React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [showEditor, setShowEditor] = useState(false);\n  const [bulkSelection, setBulkSelection] = useState<string[]>([]);\n  const [filterSupplier, setFilterSupplier] = useState('');\n  const [filterMargin, setFilterMargin] = useState('');\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    setLoading(true);\n    try {\n      const response = await dropshippingAPI.getProducts();\n      if (response.success) {\n        setProducts(response.data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch products:', error);\n      toast.error('상품 목록을 불러오는데 실패했습니다');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    if (!confirm('정말 삭제하시겠습니까?')) return;\n\n    try {\n      const response = await dropshippingAPI.deleteProduct(id);\n      if (response.success) {\n        toast.success('상품이 삭제되었습니다');\n        fetchProducts();\n      }\n    } catch (error) {\n      console.error('Failed to delete product:', error);\n      toast.error('상품 삭제에 실패했습니다');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (bulkSelection.length === 0) {\n      toast.error('삭제할 항목을 선택해주세요');\n      return;\n    }\n\n    if (!confirm(`${bulkSelection.length}개 상품을 삭제하시겠습니까?`)) return;\n\n    try {\n      await Promise.all(bulkSelection.map(id => dropshippingAPI.deleteProduct(id)));\n      toast.success('선택한 상품이 삭제되었습니다');\n      setBulkSelection([]);\n      fetchProducts();\n    } catch (error) {\n      console.error('Failed to bulk delete:', error);\n      toast.error('일괄 삭제에 실패했습니다');\n    }\n  };\n\n  const toggleBulkSelect = (id: string) => {\n    setBulkSelection(prev => \n      prev.includes(id) \n        ? prev.filter(item => item !== id)\n        : [...prev, id]\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (bulkSelection.length === products.length) {\n      setBulkSelection([]);\n    } else {\n      setBulkSelection(products.map(p => p.id));\n    }\n  };\n\n  const handleEdit = (product: Product) => {\n    setSelectedProduct(product);\n    setShowEditor(true);\n  };\n\n  const handleCreate = () => {\n    setSelectedProduct(null);\n    setShowEditor(true);\n  };\n\n  const handleEditorClose = () => {\n    setShowEditor(false);\n    setSelectedProduct(null);\n    fetchProducts();\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR', {\n      style: 'currency',\n      currency: 'KRW'\n    }).format(amount);\n  };\n\n  const getMarginColor = (marginRate: string) => {\n    const rate = parseFloat(marginRate);\n    if (rate < 10) return 'text-red-600';\n    if (rate < 20) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n\n  if (showEditor) {\n    return (\n      <ProductEditor \n        product={selectedProduct} \n        onClose={handleEditorClose}\n      />\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* WordPress Admin Style Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-normal text-gray-900\">상품</h1>\n        <button\n          onClick={handleCreate}\n          className=\"px-3 py-1 bg-wordpress-blue text-white text-sm rounded hover:bg-wordpress-blue-hover transition\"\n        >\n          새로 추가\n        </button>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">전체 상품</p>\n              <p className=\"text-2xl font-bold\">{products.length}</p>\n            </div>\n            <Package className=\"h-8 w-8 text-gray-400\" />\n          </div>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">평균 마진율</p>\n              <p className=\"text-2xl font-bold\">\n                {products.length > 0\n                  ? (products.reduce((sum, p) => sum + parseFloat(p.acf.margin_rate || '0'), 0) / products.length).toFixed(1)\n                  : 0}%\n              </p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-green-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">최고 마진 상품</p>\n              <p className=\"text-lg font-bold\">\n                {products.length > 0\n                  ? Math.max(...products.map(p => parseFloat(p.acf.margin_rate || '0'))).toFixed(1)\n                  : 0}%\n              </p>\n            </div>\n            <BarChart className=\"h-8 w-8 text-purple-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">최저 마진 상품</p>\n              <p className=\"text-lg font-bold\">\n                {products.length > 0\n                  ? Math.min(...products.map(p => parseFloat(p.acf.margin_rate || '0'))).toFixed(1)\n                  : 0}%\n              </p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-yellow-400\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"bg-white border border-gray-300 rounded-t-lg p-3 flex justify-between items-center\">\n        <div className=\"flex gap-2\">\n          <select className=\"px-3 py-1 border border-gray-300 rounded text-sm\">\n            <option value=\"\">일괄 작업</option>\n            <option value=\"delete\">삭제</option>\n          </select>\n          <button \n            onClick={handleBulkDelete}\n            className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\"\n          >\n            적용\n          </button>\n        </div>\n        \n        <div className=\"flex gap-2 items-center\">\n          <select \n            className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            value={filterSupplier}\n            onChange={(e) => setFilterSupplier(e.target.value)}\n          >\n            <option value=\"\">모든 공급자</option>\n          </select>\n          <select \n            className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            value={filterMargin}\n            onChange={(e) => setFilterMargin(e.target.value)}\n          >\n            <option value=\"\">모든 마진율</option>\n            <option value=\"low\">낮은 마진 (&lt; 10%)</option>\n            <option value=\"medium\">보통 마진 (10-20%)</option>\n            <option value=\"high\">높은 마진 (&gt; 20%)</option>\n          </select>\n          <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n            필터\n          </button>\n        </div>\n      </div>\n\n      {/* WordPress Style Table */}\n      <div className=\"bg-white border-x border-b border-gray-300 rounded-b-lg\">\n        <table className=\"w-full wp-list-table widefat fixed striped\">\n          <thead>\n            <tr>\n              <td className=\"manage-column check-column\">\n                <input \n                  type=\"checkbox\" \n                  onChange={toggleSelectAll}\n                  checked={bulkSelection.length === products.length && products.length !== 0}\n                />\n              </td>\n              <th className=\"manage-column column-title column-primary\">\n                <span>상품명</span>\n              </th>\n              <th className=\"manage-column\">공급가</th>\n              <th className=\"manage-column\">판매가</th>\n              <th className=\"manage-column\">마진율</th>\n              <th className=\"manage-column\">공급자 SKU</th>\n              <th className=\"manage-column\">배송</th>\n              <th className=\"manage-column\">날짜</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loading ? (\n                <tr>\n                  <td colSpan={8} className=\"text-center py-4\">\n                    로딩중...\n                  </td>\n                </tr>\n              ) : products.length === 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"text-center py-4\">\n                    상품이 없습니다\n                  </td>\n                </tr>\n              ) : (\n                products.map((product) => (\n                  <tr key={product.id}>\n                    <th scope=\"row\" className=\"check-column\">\n                      <input \n                        type=\"checkbox\"\n                        checked={bulkSelection.includes(product.id)}\n                        onChange={() => toggleBulkSelect(product.id)}\n                      />\n                    </th>\n                    <td className=\"title column-title column-primary page-title\">\n                      <strong>\n                        <a \n                          href=\"#\" \n                          onClick={(e) => { e.preventDefault(); handleEdit(product); }}\n                          className=\"row-title\"\n                        >\n                          {product.title}\n                        </a>\n                      </strong>\n                      {product.excerpt && (\n                        <p className=\"text-sm text-gray-500 mt-1\">\n                          {product.excerpt.substring(0, 50)}...\n                        </p>\n                      )}\n                      <div className=\"row-actions\">\n                        <span className=\"edit\">\n                          <a href=\"#\" onClick={(e) => { e.preventDefault(); handleEdit(product); }}>\n                            편집\n                          </a>\n                        </span>\n                        {' | '}\n                        <span className=\"trash\">\n                          <a \n                            href=\"#\" \n                            onClick={(e) => { e.preventDefault(); handleDelete(product.id); }}\n                            className=\"submitdelete\"\n                          >\n                            휴지통\n                          </a>\n                        </span>\n                        {' | '}\n                        <span className=\"view\">\n                          <a href=\"#\">보기</a>\n                        </span>\n                      </div>\n                    </td>\n                    <td>\n                      {formatCurrency(product.acf.cost_price || 0)}\n                    </td>\n                    <td>\n                      {formatCurrency(product.acf.selling_price || 0)}\n                    </td>\n                    <td>\n                      <span className={`text-sm font-medium ${getMarginColor(product.acf.margin_rate || '0')}`}>\n                        {product.acf.margin_rate || '0'}%\n                      </span>\n                    </td>\n                    <td>\n                      <code className=\"text-sm\">{product.acf.supplier_sku || '-'}</code>\n                    </td>\n                    <td>\n                      <span className=\"text-sm\">\n                        {product.acf.shipping_days_min || 3}-{product.acf.shipping_days_max || 7}일\n                        {product.acf.shipping_fee === 0 && (\n                          <span className=\"text-green-600\"> 무료</span>\n                        )}\n                      </span>\n                    </td>\n                    <td className=\"date column-date\">\n                      <abbr title={new Date(product.createdAt).toLocaleString('ko-KR')}>\n                        {new Date(product.createdAt).toLocaleDateString('ko-KR')}\n                      </abbr>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n  );\n};\n\nexport default Products;","import React, { useState, useEffect } from 'react';\nimport { Package, Truck, CheckCircle, Clock, DollarSign, ShoppingCart } from 'lucide-react';\nimport { dropshippingAPI } from '../../api/dropshipping-cpt';\nimport { toast } from 'react-hot-toast';\n\ninterface OrderItem {\n  product_id: string;\n  product_name: string;\n  quantity: number;\n  price: number;\n  seller_id: string;\n  seller_name: string;\n}\n\ninterface Order {\n  id: string;\n  title: string;\n  content: string;\n  status: string;\n  createdAt: string;\n  updatedAt: string;\n  meta_data: {\n    customer_id: string;\n    customer_name: string;\n    customer_email: string;\n    items: OrderItem[];\n    subtotal: number;\n    shipping_fee: number;\n    total: number;\n    status: 'pending' | 'processing' | 'shipped' | 'completed' | 'cancelled';\n    payment_method: string;\n    payment_status?: 'paid' | 'unpaid';\n    payment_date?: string;\n    payment_amount?: number;\n    transaction_id?: string;\n    card_last_four?: string;\n    card_type?: string;\n    cash_receipt_number?: string;\n    shipping_address?: {\n      street: string;\n      city: string;\n      state: string;\n      zip: string;\n      country: string;\n    };\n    tracking_number?: string;\n  };\n}\n\nconst Orders: React.FC = () => {\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n  const [showDetails, setShowDetails] = useState(false);\n\n  useEffect(() => {\n    fetchOrders();\n  }, [filterStatus]);\n\n  const fetchOrders = async () => {\n    setLoading(true);\n    try {\n      const response = await dropshippingAPI.getOrders(filterStatus);\n      if (response.success) {\n        setOrders(response.data);\n      }\n    } catch (error) {\n      toast.error('주문 목록을 불러오는데 실패했습니다');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateOrderStatus = async (orderId: string, newStatus: string) => {\n    try {\n      const response = await dropshippingAPI.updateOrderStatus(orderId, newStatus);\n      if (response.success) {\n        toast.success('주문 상태가 업데이트되었습니다');\n        fetchOrders();\n      }\n    } catch (error) {\n      toast.error('주문 상태 업데이트에 실패했습니다');\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR', {\n      style: 'currency',\n      currency: 'KRW'\n    }).format(amount);\n  };\n\n  const getPaymentBadge = (status: string) => {\n    if (status === 'paid') {\n      return (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n          <CheckCircle className=\"w-3 h-3 mr-1\" />\n          결제완료\n        </span>\n      );\n    }\n    return (\n      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n        <Clock className=\"w-3 h-3 mr-1\" />\n        미결제\n      </span>\n    );\n  };\n\n  const getPaymentMethodBadge = (method: string) => {\n    const methodConfig = {\n      card: { color: 'bg-blue-100 text-blue-800', text: '카드' },\n      cash: { color: 'bg-gray-100 text-gray-800', text: '현금' },\n      bank_transfer: { color: 'bg-purple-100 text-purple-800', text: '계좌이체' },\n      mobile_payment: { color: 'bg-yellow-100 text-yellow-800', text: '간편결제' },\n      credit_card: { color: 'bg-indigo-100 text-indigo-800', text: '신용카드' }\n    };\n    const config = methodConfig[method as keyof typeof methodConfig] || { color: 'bg-gray-100 text-gray-800', text: method };\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>\n        {config.text}\n      </span>\n    );\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      pending: { color: 'bg-yellow-100 text-yellow-800', icon: Clock, text: '대기중' },\n      processing: { color: 'bg-blue-100 text-blue-800', icon: Package, text: '처리중' },\n      shipped: { color: 'bg-purple-100 text-purple-800', icon: Truck, text: '배송중' },\n      completed: { color: 'bg-green-100 text-green-800', icon: CheckCircle, text: '완료' },\n      cancelled: { color: 'bg-red-100 text-red-800', icon: Clock, text: '취소됨' }\n    };\n\n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.pending;\n    const Icon = config.icon;\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>\n        <Icon className=\"w-3 h-3 mr-1\" />\n        {config.text}\n      </span>\n    );\n  };\n\n  const viewOrderDetails = (order: Order) => {\n    setSelectedOrder(order);\n    setShowDetails(true);\n  };\n\n  if (showDetails && selectedOrder) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"mb-6 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-normal text-gray-900\">주문 상세 #{selectedOrder.id}</h1>\n          <button\n            onClick={() => {\n              setShowDetails(false);\n              setSelectedOrder(null);\n            }}\n            className=\"px-4 py-2 border border-gray-300 rounded text-sm hover:bg-gray-50\"\n          >\n            목록으로\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2\">\n            {/* Order Items */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6 mb-6\">\n              <h2 className=\"text-lg font-medium mb-4\">주문 상품</h2>\n              <table className=\"w-full\">\n                <thead className=\"border-b\">\n                  <tr>\n                    <th className=\"text-left pb-2\">상품명</th>\n                    <th className=\"text-center pb-2\">판매자</th>\n                    <th className=\"text-center pb-2\">수량</th>\n                    <th className=\"text-right pb-2\">가격</th>\n                    <th className=\"text-right pb-2\">소계</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {selectedOrder.meta_data.items?.map((item, index) => (\n                    <tr key={index} className=\"border-b\">\n                      <td className=\"py-3\">{item.product_name}</td>\n                      <td className=\"text-center py-3 text-sm text-gray-600\">{item.seller_name}</td>\n                      <td className=\"text-center py-3\">{item.quantity}</td>\n                      <td className=\"text-right py-3\">{formatCurrency(item.price)}</td>\n                      <td className=\"text-right py-3 font-medium\">\n                        {formatCurrency(item.price * item.quantity)}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan={4} className=\"text-right py-2\">상품 합계:</td>\n                    <td className=\"text-right py-2 font-medium\">\n                      {formatCurrency(selectedOrder.meta_data.subtotal)}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td colSpan={4} className=\"text-right py-2\">배송비:</td>\n                    <td className=\"text-right py-2\">\n                      {formatCurrency(selectedOrder.meta_data.shipping_fee)}\n                    </td>\n                  </tr>\n                  <tr className=\"text-lg font-bold\">\n                    <td colSpan={4} className=\"text-right py-2\">총 금액:</td>\n                    <td className=\"text-right py-2 text-blue-600\">\n                      {formatCurrency(selectedOrder.meta_data.total)}\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n            </div>\n\n            {/* Shipping Address */}\n            {selectedOrder.meta_data.shipping_address && (\n              <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n                <h2 className=\"text-lg font-medium mb-4\">배송 정보</h2>\n                <div className=\"space-y-2 text-sm\">\n                  <p>{selectedOrder.meta_data.shipping_address.street}</p>\n                  <p>{selectedOrder.meta_data.shipping_address.city}, {selectedOrder.meta_data.shipping_address.state}</p>\n                  <p>{selectedOrder.meta_data.shipping_address.zip}, {selectedOrder.meta_data.shipping_address.country}</p>\n                  {selectedOrder.meta_data.tracking_number && (\n                    <div className=\"mt-4 p-3 bg-blue-50 rounded\">\n                      <p className=\"font-medium\">운송장 번호: {selectedOrder.meta_data.tracking_number}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div>\n            {/* Order Info */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6 mb-6\">\n              <h2 className=\"text-lg font-medium mb-4\">주문 정보</h2>\n              <dl className=\"space-y-3 text-sm\">\n                <div>\n                  <dt className=\"text-gray-600\">주문 상태</dt>\n                  <dd className=\"mt-1\">{getStatusBadge(selectedOrder.meta_data.status)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">결제 상태</dt>\n                  <dd className=\"mt-1\">{getPaymentBadge(selectedOrder.meta_data.payment_status || 'unpaid')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">주문일</dt>\n                  <dd>{new Date(selectedOrder.createdAt).toLocaleString('ko-KR')}</dd>\n                </div>\n                {selectedOrder.meta_data.payment_date && (\n                  <div>\n                    <dt className=\"text-gray-600\">결제일</dt>\n                    <dd>{new Date(selectedOrder.meta_data.payment_date).toLocaleString('ko-KR')}</dd>\n                  </div>\n                )}\n              </dl>\n            </div>\n\n            {/* Payment Info */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6 mb-6\">\n              <h2 className=\"text-lg font-medium mb-4\">결제 정보</h2>\n              <dl className=\"space-y-3 text-sm\">\n                <div>\n                  <dt className=\"text-gray-600\">결제 방법</dt>\n                  <dd className=\"mt-1\">{getPaymentMethodBadge(selectedOrder.meta_data.payment_method)}</dd>\n                </div>\n                {selectedOrder.meta_data.transaction_id && (\n                  <div>\n                    <dt className=\"text-gray-600\">거래번호</dt>\n                    <dd className=\"font-mono text-xs\">{selectedOrder.meta_data.transaction_id}</dd>\n                  </div>\n                )}\n                {selectedOrder.meta_data.card_last_four && (\n                  <div>\n                    <dt className=\"text-gray-600\">카드정보</dt>\n                    <dd>{selectedOrder.meta_data.card_type} ****{selectedOrder.meta_data.card_last_four}</dd>\n                  </div>\n                )}\n                {selectedOrder.meta_data.cash_receipt_number && (\n                  <div>\n                    <dt className=\"text-gray-600\">현금영수증</dt>\n                    <dd className=\"font-mono text-xs\">{selectedOrder.meta_data.cash_receipt_number}</dd>\n                  </div>\n                )}\n              </dl>\n            </div>\n\n            {/* Customer Info */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n              <h2 className=\"text-lg font-medium mb-4\">고객 정보</h2>\n              <dl className=\"space-y-3 text-sm\">\n                <div>\n                  <dt className=\"text-gray-600\">이름</dt>\n                  <dd className=\"font-medium\">{selectedOrder.meta_data.customer_name}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">이메일</dt>\n                  <dd>{selectedOrder.meta_data.customer_email}</dd>\n                </div>\n              </dl>\n            </div>\n\n            {/* Status Actions */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6 mt-6\">\n              <h2 className=\"text-lg font-medium mb-4\">상태 변경</h2>\n              <select\n                value={selectedOrder.meta_data.status}\n                onChange={(e) => updateOrderStatus(selectedOrder.id, e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              >\n                <option value=\"pending\">대기중</option>\n                <option value=\"processing\">처리중</option>\n                <option value=\"shipped\">배송중</option>\n                <option value=\"completed\">완료</option>\n                <option value=\"cancelled\">취소됨</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-normal text-gray-900\">주문 관리</h1>\n        <button\n          onClick={fetchOrders}\n          className=\"px-3 py-1 bg-wordpress-blue text-white text-sm rounded hover:bg-wordpress-blue-hover transition\"\n        >\n          새로고침\n        </button>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">전체 주문</p>\n              <p className=\"text-2xl font-bold\">{orders.length}</p>\n            </div>\n            <ShoppingCart className=\"h-8 w-8 text-gray-400\" />\n          </div>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">결제완료</p>\n              <p className=\"text-2xl font-bold text-green-600\">\n                {orders.filter(o => o.meta_data.payment_status === 'paid').length}\n              </p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-green-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">미결제</p>\n              <p className=\"text-2xl font-bold text-red-600\">\n                {orders.filter(o => o.meta_data.payment_status !== 'paid').length}\n              </p>\n            </div>\n            <Clock className=\"h-8 w-8 text-red-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">배송중</p>\n              <p className=\"text-2xl font-bold\">\n                {orders.filter(o => o.meta_data.status === 'shipped').length}\n              </p>\n            </div>\n            <Truck className=\"h-8 w-8 text-purple-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">완료됨</p>\n              <p className=\"text-2xl font-bold\">\n                {orders.filter(o => o.meta_data.status === 'completed').length}\n              </p>\n            </div>\n            <CheckCircle className=\"h-8 w-8 text-green-400\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"bg-white border border-gray-300 rounded-t-lg p-3 flex justify-between items-center\">\n        <div className=\"flex gap-2\">\n          <select\n            className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n          >\n            <option value=\"\">모든 상태</option>\n            <option value=\"pending\">대기중</option>\n            <option value=\"processing\">처리중</option>\n            <option value=\"shipped\">배송중</option>\n            <option value=\"completed\">완료</option>\n            <option value=\"cancelled\">취소됨</option>\n          </select>\n        </div>\n        \n        <div className=\"text-sm text-gray-600\">\n          총 {orders.length}개 주문\n        </div>\n      </div>\n\n      {/* Orders Table */}\n      <div className=\"bg-white border-x border-b border-gray-300 rounded-b-lg\">\n        <table className=\"w-full wp-list-table widefat fixed striped\">\n          <thead>\n            <tr>\n              <th className=\"manage-column column-title column-primary\">주문번호</th>\n              <th className=\"manage-column\">고객</th>\n              <th className=\"manage-column\">상품수</th>\n              <th className=\"manage-column\">금액</th>\n              <th className=\"manage-column\">결제상태</th>\n              <th className=\"manage-column\">결제방법</th>\n              <th className=\"manage-column\">배송상태</th>\n              <th className=\"manage-column\">주문일</th>\n            </tr>\n          </thead>\n          <tbody>\n            {loading ? (\n              <tr>\n                <td colSpan={8} className=\"text-center py-4\">\n                  로딩중...\n                </td>\n              </tr>\n            ) : orders.length === 0 ? (\n              <tr>\n                <td colSpan={8} className=\"text-center py-4\">\n                  주문이 없습니다\n                </td>\n              </tr>\n            ) : (\n              orders?.map((order) => (\n                <tr key={order.id}>\n                  <td className=\"title column-title column-primary page-title\">\n                    <strong>\n                      <a \n                        href=\"#\" \n                        onClick={(e) => { e.preventDefault(); viewOrderDetails(order); }}\n                        className=\"row-title\"\n                      >\n                        #{order.id}\n                      </a>\n                    </strong>\n                    <div className=\"row-actions\">\n                      <span className=\"view\">\n                        <a href=\"#\" onClick={(e) => { e.preventDefault(); viewOrderDetails(order); }}>\n                          상세보기\n                        </a>\n                      </span>\n                    </div>\n                  </td>\n                  <td>{order.meta_data.customer_name}</td>\n                  <td className=\"text-center\">{order.meta_data.items.length}</td>\n                  <td>{formatCurrency(order.meta_data.total)}</td>\n                  <td>{getPaymentBadge(order.meta_data.payment_status || 'unpaid')}</td>\n                  <td>{getPaymentMethodBadge(order.meta_data.payment_method)}</td>\n                  <td>{getStatusBadge(order.meta_data.status)}</td>\n                  <td className=\"date column-date\">\n                    <abbr title={new Date(order.createdAt).toLocaleString('ko-KR')}>\n                      {new Date(order.createdAt).toLocaleDateString('ko-KR')}\n                    </abbr>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Orders;","import React, { useState, useEffect } from 'react';\nimport { DollarSign, TrendingUp, Clock, CheckCircle, CreditCard, Building } from 'lucide-react';\nimport { dropshippingAPI } from '../../api/dropshipping-cpt';\nimport { toast } from 'react-hot-toast';\n\ninterface Settlement {\n  id: string;\n  title: string;\n  content: string;\n  status: string;\n  createdAt: string;\n  updatedAt: string;\n  meta_data: {\n    settlement_type?: 'seller' | 'partner';\n    order_id?: string;\n    seller_id?: string;\n    seller_name?: string;\n    partner_id?: string;\n    partner_name?: string;\n    order_amount?: number;\n    total_sales?: number;\n    shipping_fee?: number;\n    total_amount?: number;\n    commission_rate: number;\n    commission_amount: number;\n    settlement_amount: number;\n    settlement_status: 'pending' | 'settled' | 'hold';\n    settlement_date?: string;\n    payment_method?: string;\n    payment_status?: string;\n    bank_name: string;\n    account_number: string;\n    account_holder: string;\n  };\n}\n\nconst Settlements: React.FC = () => {\n  const [settlements, setSettlements] = useState<Settlement[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [selectedSettlement, setSelectedSettlement] = useState<Settlement | null>(null);\n  const [showDetails, setShowDetails] = useState(false);\n\n  useEffect(() => {\n    fetchSettlements();\n  }, [filterStatus, filterType]);\n\n  const fetchSettlements = async () => {\n    setLoading(true);\n    try {\n      const response = await dropshippingAPI.getSettlements(filterStatus, filterType);\n      if (response.success) {\n        setSettlements(response.data);\n      }\n    } catch (error) {\n      toast.error('정산 목록을 불러오는데 실패했습니다');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateSettlementStatus = async (settlementId: string, newStatus: string) => {\n    try {\n      const response = await dropshippingAPI.updateSettlementStatus(settlementId, newStatus);\n      if (response.success) {\n        toast.success('정산 상태가 업데이트되었습니다');\n        fetchSettlements();\n      }\n    } catch (error) {\n      toast.error('정산 상태 업데이트에 실패했습니다');\n    }\n  };\n\n  const processSettlement = async (settlementId: string) => {\n    if (!confirm('정산을 처리하시겠습니까?')) return;\n    \n    try {\n      const response = await dropshippingAPI.processSettlement(settlementId);\n      if (response.success) {\n        toast.success('정산이 처리되었습니다');\n        fetchSettlements();\n      }\n    } catch (error) {\n      toast.error('정산 처리에 실패했습니다');\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR', {\n      style: 'currency',\n      currency: 'KRW'\n    }).format(amount);\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      pending: { color: 'bg-yellow-100 text-yellow-800', icon: Clock, text: '대기중' },\n      settled: { color: 'bg-green-100 text-green-800', icon: CheckCircle, text: '정산완료' },\n      hold: { color: 'bg-red-100 text-red-800', icon: Clock, text: '보류' }\n    };\n\n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.pending;\n    const Icon = config.icon;\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>\n        <Icon className=\"w-3 h-3 mr-1\" />\n        {config.text}\n      </span>\n    );\n  };\n\n  const getTypeBadge = (type: string) => {\n    if (type === 'partner') {\n      return (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n          파트너\n        </span>\n      );\n    }\n    return (\n      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n        판매자\n      </span>\n    );\n  };\n\n  const viewSettlementDetails = (settlement: Settlement) => {\n    setSelectedSettlement(settlement);\n    setShowDetails(true);\n  };\n\n  // 통계 계산\n  const stats = {\n    total: settlements.length,\n    totalAmount: settlements.reduce((sum, s) => sum + (s.meta_data.settlement_amount || 0), 0),\n    totalCommission: settlements.reduce((sum, s) => sum + (s.meta_data.commission_amount || 0), 0),\n    pending: settlements.filter(s => s.meta_data.settlement_status === 'pending').length,\n    settled: settlements.filter(s => s.meta_data.settlement_status === 'settled').length,\n    hold: settlements.filter(s => s.meta_data.settlement_status === 'hold').length\n  };\n\n  if (showDetails && selectedSettlement) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"mb-6 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-normal text-gray-900\">정산 상세 - {selectedSettlement.title}</h1>\n          <button\n            onClick={() => {\n              setShowDetails(false);\n              setSelectedSettlement(null);\n            }}\n            className=\"px-4 py-2 border border-gray-300 rounded text-sm hover:bg-gray-50\"\n          >\n            목록으로\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2\">\n            {/* Settlement Details */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n              <h2 className=\"text-lg font-medium mb-4\">정산 정보</h2>\n              <dl className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <dt className=\"text-gray-600\">정산 유형</dt>\n                  <dd className=\"mt-1\">{getTypeBadge(selectedSettlement.meta_data.settlement_type || 'seller')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">정산 상태</dt>\n                  <dd className=\"mt-1\">{getStatusBadge(selectedSettlement.meta_data.settlement_status)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">{selectedSettlement.meta_data.settlement_type === 'partner' ? '파트너명' : '판매자명'}</dt>\n                  <dd className=\"font-medium\">{selectedSettlement.meta_data.seller_name || selectedSettlement.meta_data.partner_name}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">수수료율</dt>\n                  <dd>{selectedSettlement.meta_data.commission_rate}%</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">주문 금액</dt>\n                  <dd className=\"font-medium\">{formatCurrency(selectedSettlement.meta_data.order_amount || selectedSettlement.meta_data.total_sales || 0)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">수수료</dt>\n                  <dd className=\"text-red-600\">{formatCurrency(selectedSettlement.meta_data.commission_amount)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">정산 금액</dt>\n                  <dd className=\"text-lg font-bold text-blue-600\">{formatCurrency(selectedSettlement.meta_data.settlement_amount)}</dd>\n                </div>\n                {selectedSettlement.meta_data.settlement_date && (\n                  <div>\n                    <dt className=\"text-gray-600\">정산일</dt>\n                    <dd>{new Date(selectedSettlement.meta_data.settlement_date).toLocaleDateString('ko-KR')}</dd>\n                  </div>\n                )}\n              </dl>\n            </div>\n          </div>\n\n          <div>\n            {/* Bank Info */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6 mb-6\">\n              <h2 className=\"text-lg font-medium mb-4\">계좌 정보</h2>\n              <dl className=\"space-y-3 text-sm\">\n                <div>\n                  <dt className=\"text-gray-600\">은행명</dt>\n                  <dd className=\"font-medium\">{selectedSettlement.meta_data.bank_name}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">계좌번호</dt>\n                  <dd className=\"font-mono\">{selectedSettlement.meta_data.account_number}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-gray-600\">예금주</dt>\n                  <dd>{selectedSettlement.meta_data.account_holder}</dd>\n                </div>\n              </dl>\n            </div>\n\n            {/* Actions */}\n            <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n              <h2 className=\"text-lg font-medium mb-4\">정산 처리</h2>\n              {selectedSettlement.meta_data.settlement_status === 'pending' && (\n                <button\n                  onClick={() => processSettlement(selectedSettlement.id)}\n                  className=\"w-full px-4 py-2 bg-wordpress-blue text-white rounded hover:bg-wordpress-blue-hover\"\n                >\n                  정산 처리하기\n                </button>\n              )}\n              {selectedSettlement.meta_data.settlement_status === 'settled' && (\n                <div className=\"text-center text-green-600\">\n                  <CheckCircle className=\"w-12 h-12 mx-auto mb-2\" />\n                  <p>정산 완료됨</p>\n                </div>\n              )}\n              {selectedSettlement.meta_data.settlement_status === 'hold' && (\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-red-600 mb-3\">보류 상태입니다</p>\n                  <button\n                    onClick={() => updateSettlementStatus(selectedSettlement.id, 'pending')}\n                    className=\"w-full px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\n                  >\n                    보류 해제\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-normal text-gray-900\">정산 관리</h1>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={fetchSettlements}\n            className=\"px-3 py-1 bg-wordpress-blue text-white text-sm rounded hover:bg-wordpress-blue-hover transition\"\n          >\n            새로고침\n          </button>\n          <button className=\"px-3 py-1 bg-green-600 text-white text-sm rounded hover:bg-green-700 transition\">\n            일괄 정산\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">전체 정산</p>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-gray-400\" />\n          </div>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">정산 금액</p>\n              <p className=\"text-xl font-bold\">{formatCurrency(stats.totalAmount)}</p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-blue-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">대기중</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\n            </div>\n            <Clock className=\"h-8 w-8 text-yellow-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">정산완료</p>\n              <p className=\"text-2xl font-bold text-green-600\">{stats.settled}</p>\n            </div>\n            <CheckCircle className=\"h-8 w-8 text-green-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">총 수수료</p>\n              <p className=\"text-xl font-bold\">{formatCurrency(stats.totalCommission)}</p>\n            </div>\n            <CreditCard className=\"h-8 w-8 text-purple-400\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"bg-white border border-gray-300 rounded-t-lg p-3 flex justify-between items-center\">\n        <div className=\"flex gap-2\">\n          <select\n            className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            value={filterType}\n            onChange={(e) => setFilterType(e.target.value)}\n          >\n            <option value=\"\">모든 유형</option>\n            <option value=\"seller\">판매자</option>\n            <option value=\"partner\">파트너</option>\n          </select>\n          <select\n            className=\"px-3 py-1 border border-gray-300 rounded text-sm\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n          >\n            <option value=\"\">모든 상태</option>\n            <option value=\"pending\">대기중</option>\n            <option value=\"settled\">정산완료</option>\n            <option value=\"hold\">보류</option>\n          </select>\n        </div>\n        \n        <div className=\"text-sm text-gray-600\">\n          총 {stats.total}개 정산\n        </div>\n      </div>\n\n      {/* Settlements Table */}\n      <div className=\"bg-white border-x border-b border-gray-300 rounded-b-lg\">\n        <table className=\"w-full wp-list-table widefat fixed striped\">\n          <thead>\n            <tr>\n              <th className=\"manage-column column-title column-primary\">정산번호</th>\n              <th className=\"manage-column\">유형</th>\n              <th className=\"manage-column\">판매자/파트너</th>\n              <th className=\"manage-column\">주문금액</th>\n              <th className=\"manage-column\">수수료율</th>\n              <th className=\"manage-column\">수수료</th>\n              <th className=\"manage-column\">정산금액</th>\n              <th className=\"manage-column\">은행</th>\n              <th className=\"manage-column\">상태</th>\n              <th className=\"manage-column\">정산일</th>\n            </tr>\n          </thead>\n          <tbody>\n            {loading ? (\n              <tr>\n                <td colSpan={10} className=\"text-center py-4\">\n                  로딩중...\n                </td>\n              </tr>\n            ) : settlements.length === 0 ? (\n              <tr>\n                <td colSpan={10} className=\"text-center py-4\">\n                  정산 내역이 없습니다\n                </td>\n              </tr>\n            ) : (\n              settlements?.map((settlement) => (\n                <tr key={settlement.id}>\n                  <td className=\"title column-title column-primary page-title\">\n                    <strong>\n                      <a \n                        href=\"#\" \n                        onClick={(e) => { e.preventDefault(); viewSettlementDetails(settlement); }}\n                        className=\"row-title\"\n                      >\n                        {settlement.title}\n                      </a>\n                    </strong>\n                    <div className=\"row-actions\">\n                      <span className=\"view\">\n                        <a href=\"#\" onClick={(e) => { e.preventDefault(); viewSettlementDetails(settlement); }}>\n                          상세보기\n                        </a>\n                      </span>\n                      {settlement.meta_data.settlement_status === 'pending' && (\n                        <>\n                          {' | '}\n                          <span className=\"edit\">\n                            <a href=\"#\" onClick={(e) => { e.preventDefault(); processSettlement(settlement.id); }}>\n                              정산처리\n                            </a>\n                          </span>\n                        </>\n                      )}\n                    </div>\n                  </td>\n                  <td>{getTypeBadge(settlement.meta_data.settlement_type || 'seller')}</td>\n                  <td>{settlement.meta_data.seller_name || settlement.meta_data.partner_name}</td>\n                  <td>{formatCurrency(settlement.meta_data.order_amount || settlement.meta_data.total_sales || 0)}</td>\n                  <td className=\"text-center\">{settlement.meta_data.commission_rate}%</td>\n                  <td className=\"text-red-600\">{formatCurrency(settlement.meta_data.commission_amount)}</td>\n                  <td className=\"font-medium\">{formatCurrency(settlement.meta_data.settlement_amount)}</td>\n                  <td className=\"text-sm\">{settlement.meta_data.bank_name}</td>\n                  <td>{getStatusBadge(settlement.meta_data.settlement_status)}</td>\n                  <td className=\"date column-date\">\n                    {settlement.meta_data.settlement_date ? (\n                      <abbr title={new Date(settlement.meta_data.settlement_date).toLocaleString('ko-KR')}>\n                        {new Date(settlement.meta_data.settlement_date).toLocaleDateString('ko-KR')}\n                      </abbr>\n                    ) : (\n                      '-'\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Settlements;","import React, { useState, useEffect } from 'react';\nimport { Plus, Edit2, Trash2, Store, Package, TrendingUp, DollarSign, UserPlus, Mail, Phone, Calendar, ShoppingBag } from 'lucide-react';\nimport { UserApi } from '../../api/userApi';\nimport { User } from '../../types/user';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate } from '@/lib/utils';\n\ninterface SellerStats {\n  total: number;\n  active: number;\n  pending: number;\n  totalSales: number;\n}\n\nconst SellersList: React.FC = () => {\n  const navigate = useNavigate();\n  const [sellers, setSellers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [stats, setStats] = useState<SellerStats>({\n    total: 0,\n    active: 0,\n    pending: 0,\n    totalSales: 0\n  });\n  const [selectedSellers, setSelectedSellers] = useState<Set<string>>(new Set());\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'pending'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    fetchSellers();\n  }, [page, filterStatus, searchQuery]);\n\n  const fetchSellers = async () => {\n    setLoading(true);\n    try {\n      const filters: any = { role: 'seller' };\n      if (filterStatus !== 'all') {\n        filters.status = filterStatus;\n      }\n      if (searchQuery) {\n        filters.q = searchQuery;\n      }\n\n      const response = await UserApi.getUsers(page, 20, filters);\n      \n      // Handle PaginatedResponse structure and ensure data is an array\n      const sellerData = Array.isArray(response?.data) ? response.data : [];\n      \n      setSellers(sellerData);\n      setTotalPages(Math.ceil((response?.total || 0) / 20));\n      \n      // Calculate stats with safe array operations\n      setStats({\n        total: response?.total || 0,\n        active: Array.isArray(sellerData) ? sellerData.filter((s: User) => s.status === 'active').length : 0,\n        pending: Array.isArray(sellerData) ? sellerData.filter((s: User) => s.status === 'pending').length : 0,\n        totalSales: 0 // This would come from a separate API\n      });\n    } catch (error) {\n      console.error('Failed to fetch sellers:', error);\n      toast.error('판매자 목록을 불러오는데 실패했습니다');\n      // Set empty data on error\n      setSellers([]);\n      setStats({\n        total: 0,\n        active: 0,\n        pending: 0,\n        totalSales: 0\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (userId: string) => {\n    if (!confirm('정말 이 판매자를 삭제하시겠습니까?')) return;\n\n    try {\n      await UserApi.deleteUser(userId);\n      toast.success('판매자가 삭제되었습니다');\n      fetchSellers();\n    } catch (error) {\n      console.error('Failed to delete seller:', error);\n      toast.error('판매자 삭제에 실패했습니다');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedSellers.size === 0) {\n      toast.error('삭제할 판매자를 선택해주세요');\n      return;\n    }\n\n    if (!confirm(`선택한 ${selectedSellers.size}명의 판매자를 삭제하시겠습니까?`)) return;\n\n    try {\n      await Promise.all(Array.from(selectedSellers).map(id => UserApi.deleteUser(id)));\n      toast.success('선택한 판매자가 삭제되었습니다');\n      setSelectedSellers(new Set());\n      fetchSellers();\n    } catch (error) {\n      console.error('Failed to bulk delete:', error);\n      toast.error('일괄 삭제에 실패했습니다');\n    }\n  };\n\n  const handleApprove = async (userId: string) => {\n    try {\n      await UserApi.approveUser(userId, '판매자 승인');\n      toast.success('판매자가 승인되었습니다');\n      fetchSellers();\n    } catch (error) {\n      console.error('Failed to approve seller:', error);\n      toast.error('판매자 승인에 실패했습니다');\n    }\n  };\n\n  const toggleSelection = (userId: string) => {\n    const newSelection = new Set(selectedSellers);\n    if (newSelection.has(userId)) {\n      newSelection.delete(userId);\n    } else {\n      newSelection.add(userId);\n    }\n    setSelectedSellers(newSelection);\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedSellers.size === sellers.length) {\n      setSelectedSellers(new Set());\n    } else {\n      setSelectedSellers(new Set(sellers.map(s => s.id)));\n    }\n  };\n\n  const getSellerBadge = (user: User) => {\n    // This would be based on actual seller performance data\n    const levels = ['beginner', 'intermediate', 'expert', 'master'];\n    const level = levels[Math.floor(Math.random() * levels.length)];\n    \n    const levelColors = {\n      beginner: 'bg-green-100 text-green-800',\n      intermediate: 'bg-blue-100 text-blue-800',\n      expert: 'bg-purple-100 text-purple-800',\n      master: 'bg-red-100 text-red-800'\n    };\n\n    const levelLabels = {\n      beginner: '초급',\n      intermediate: '중급',\n      expert: '전문가',\n      master: '마스터'\n    };\n\n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${levelColors[level as keyof typeof levelColors]}`}>\n        {levelLabels[level as keyof typeof levelLabels]}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-2xl font-bold mb-2\">판매자 관리</h1>\n            <p className=\"text-gray-600\">드롭쉬핑 판매자 목록 및 관리</p>\n          </div>\n          <button\n            onClick={() => navigate('/users/new?role=seller')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            <UserPlus className=\"w-4 h-4\" />\n            새 판매자 추가\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">전체 판매자</p>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n            </div>\n            <ShoppingBag className=\"w-8 h-8 text-blue-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">활성 판매자</p>\n              <p className=\"text-2xl font-bold text-green-600\">{stats.active}</p>\n            </div>\n            <TrendingUp className=\"w-8 h-8 text-green-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">승인 대기</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\n            </div>\n            <Store className=\"w-8 h-8 text-yellow-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">이번 달 매출</p>\n              <p className=\"text-2xl font-bold\">₩{stats.totalSales.toLocaleString()}</p>\n            </div>\n            <DollarSign className=\"w-8 h-8 text-purple-600 opacity-50\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-6\">\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <input\n            type=\"text\"\n            placeholder=\"판매자 검색...\"\n            className=\"flex-1 min-w-[200px] px-4 py-2 border rounded-lg\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <select\n            className=\"px-4 py-2 border rounded-lg\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value as any)}\n          >\n            <option value=\"all\">전체 상태</option>\n            <option value=\"active\">활성</option>\n            <option value=\"pending\">승인 대기</option>\n          </select>\n          {selectedSellers.size > 0 && (\n            <button\n              onClick={handleBulkDelete}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n            >\n              선택 삭제 ({selectedSellers.size})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedSellers.size === sellers.length && sellers.length > 0}\n                  onChange={toggleSelectAll}\n                  className=\"rounded\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                판매자 정보\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                등급\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                연락처\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                가입일\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {loading ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  </div>\n                </td>\n              </tr>\n            ) : sellers.length === 0 ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                  판매자가 없습니다\n                </td>\n              </tr>\n            ) : (\n              sellers.map((seller) => (\n                <tr key={seller.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedSellers.has(seller.id)}\n                      onChange={() => toggleSelection(seller.id)}\n                      className=\"rounded\"\n                    />\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">{seller.name}</div>\n                      <div className=\"text-sm text-gray-500\">{seller.email}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    {getSellerBadge(seller)}\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      seller.status === 'active' \n                        ? 'bg-green-100 text-green-800' \n                        : seller.status === 'pending'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {seller.status === 'active' ? '활성' : seller.status === 'pending' ? '승인 대기' : seller.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-4\">\n                      {seller.phone && (\n                        <span className=\"flex items-center gap-1\">\n                          <Phone className=\"w-3 h-3\" />\n                          {seller.phone}\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"w-3 h-3\" />\n                      {formatDate(seller.createdAt)}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm\">\n                    <div className=\"flex gap-2\">\n                      {seller.status === 'pending' ? (\n                        <button\n                          onClick={() => handleApprove(seller.id)}\n                          className=\"text-green-600 hover:text-green-900\"\n                        >\n                          승인\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => navigate(`/users/${seller.id}`)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Edit2 className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => handleDelete(seller.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"mt-4 flex justify-center gap-2\">\n          <button\n            onClick={() => setPage(Math.max(1, page - 1))}\n            disabled={page === 1}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            이전\n          </button>\n          <span className=\"px-4 py-2\">\n            {page} / {totalPages}\n          </span>\n          <button\n            onClick={() => setPage(Math.min(totalPages, page + 1))}\n            disabled={page === totalPages}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            다음\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SellersList;","import React, { useState, useEffect } from 'react';\nimport { Plus, Edit2, Trash2, Users, Award, TrendingUp, DollarSign, UserPlus, Mail, Phone, Calendar } from 'lucide-react';\nimport { UserApi } from '../../api/userApi';\nimport { User, UserRole } from '../../types/user';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate } from '@/lib/utils';\n\ninterface PartnerStats {\n  total: number;\n  active: number;\n  pending: number;\n  totalCommission: number;\n}\n\nconst PartnersList: React.FC = () => {\n  const navigate = useNavigate();\n  const [partners, setPartners] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [stats, setStats] = useState<PartnerStats>({\n    total: 0,\n    active: 0,\n    pending: 0,\n    totalCommission: 0\n  });\n  const [selectedPartners, setSelectedPartners] = useState<Set<string>>(new Set());\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'pending'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    fetchPartners();\n  }, [page, filterStatus, searchQuery]);\n\n  const fetchPartners = async () => {\n    setLoading(true);\n    try {\n      const filters: any = { role: 'partner' };\n      if (filterStatus !== 'all') {\n        filters.status = filterStatus;\n      }\n      if (searchQuery) {\n        filters.q = searchQuery;\n      }\n\n      const response = await UserApi.getUsers(page, 20, filters);\n      \n      // Handle PaginatedResponse structure and ensure data is an array\n      const partnerData = Array.isArray(response?.data) ? response.data : [];\n      \n      setPartners(partnerData);\n      setTotalPages(Math.ceil((response?.total || 0) / 20));\n      \n      // Calculate stats with safe array operations\n      setStats({\n        total: response?.total || 0,\n        active: Array.isArray(partnerData) ? partnerData.filter((p: User) => p.status === 'active').length : 0,\n        pending: Array.isArray(partnerData) ? partnerData.filter((p: User) => p.status === 'pending').length : 0,\n        totalCommission: 0 // This would come from a separate API\n      });\n    } catch (error) {\n      console.error('Failed to fetch partners:', error);\n      toast.error('파트너 목록을 불러오는데 실패했습니다');\n      // Set empty data on error\n      setPartners([]);\n      setStats({\n        total: 0,\n        active: 0,\n        pending: 0,\n        totalCommission: 0\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (userId: string) => {\n    if (!confirm('정말 이 파트너를 삭제하시겠습니까?')) return;\n\n    try {\n      await UserApi.deleteUser(userId);\n      toast.success('파트너가 삭제되었습니다');\n      fetchPartners();\n    } catch (error) {\n      console.error('Failed to delete partner:', error);\n      toast.error('파트너 삭제에 실패했습니다');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedPartners.size === 0) {\n      toast.error('삭제할 파트너를 선택해주세요');\n      return;\n    }\n\n    if (!confirm(`선택한 ${selectedPartners.size}명의 파트너를 삭제하시겠습니까?`)) return;\n\n    try {\n      await Promise.all(Array.from(selectedPartners).map(id => UserApi.deleteUser(id)));\n      toast.success('선택한 파트너가 삭제되었습니다');\n      setSelectedPartners(new Set());\n      fetchPartners();\n    } catch (error) {\n      console.error('Failed to bulk delete:', error);\n      toast.error('일괄 삭제에 실패했습니다');\n    }\n  };\n\n  const handleApprove = async (userId: string) => {\n    try {\n      await UserApi.approveUser(userId, '파트너 승인');\n      toast.success('파트너가 승인되었습니다');\n      fetchPartners();\n    } catch (error) {\n      console.error('Failed to approve partner:', error);\n      toast.error('파트너 승인에 실패했습니다');\n    }\n  };\n\n  const toggleSelection = (userId: string) => {\n    const newSelection = new Set(selectedPartners);\n    if (newSelection.has(userId)) {\n      newSelection.delete(userId);\n    } else {\n      newSelection.add(userId);\n    }\n    setSelectedPartners(newSelection);\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedPartners.size === partners.length) {\n      setSelectedPartners(new Set());\n    } else {\n      setSelectedPartners(new Set(partners.map(p => p.id)));\n    }\n  };\n\n  const getGradeBadge = (user: User) => {\n    // This would be based on actual partner data\n    const grades = ['bronze', 'silver', 'gold', 'platinum'];\n    const grade = grades[Math.floor(Math.random() * grades.length)];\n    \n    const gradeColors = {\n      bronze: 'bg-orange-100 text-orange-800',\n      silver: 'bg-gray-100 text-gray-800',\n      gold: 'bg-yellow-100 text-yellow-800',\n      platinum: 'bg-purple-100 text-purple-800'\n    };\n\n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${gradeColors[grade as keyof typeof gradeColors]}`}>\n        {grade.toUpperCase()}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-2xl font-bold mb-2\">파트너 관리</h1>\n            <p className=\"text-gray-600\">드롭쉬핑 파트너 목록 및 관리</p>\n          </div>\n          <button\n            onClick={() => navigate('/users/new?role=partner')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            <UserPlus className=\"w-4 h-4\" />\n            새 파트너 추가\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">전체 파트너</p>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n            </div>\n            <Users className=\"w-8 h-8 text-blue-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">활성 파트너</p>\n              <p className=\"text-2xl font-bold text-green-600\">{stats.active}</p>\n            </div>\n            <Award className=\"w-8 h-8 text-green-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">승인 대기</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\n            </div>\n            <TrendingUp className=\"w-8 h-8 text-yellow-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">이번 달 수수료</p>\n              <p className=\"text-2xl font-bold\">₩{stats.totalCommission.toLocaleString()}</p>\n            </div>\n            <DollarSign className=\"w-8 h-8 text-purple-600 opacity-50\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-6\">\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <input\n            type=\"text\"\n            placeholder=\"파트너 검색...\"\n            className=\"flex-1 min-w-[200px] px-4 py-2 border rounded-lg\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <select\n            className=\"px-4 py-2 border rounded-lg\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value as any)}\n          >\n            <option value=\"all\">전체 상태</option>\n            <option value=\"active\">활성</option>\n            <option value=\"pending\">승인 대기</option>\n          </select>\n          {selectedPartners.size > 0 && (\n            <button\n              onClick={handleBulkDelete}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n            >\n              선택 삭제 ({selectedPartners.size})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedPartners.size === partners.length && partners.length > 0}\n                  onChange={toggleSelectAll}\n                  className=\"rounded\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                파트너 정보\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                등급\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                연락처\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                가입일\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {loading ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  </div>\n                </td>\n              </tr>\n            ) : partners.length === 0 ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                  파트너가 없습니다\n                </td>\n              </tr>\n            ) : (\n              partners.map((partner) => (\n                <tr key={partner.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedPartners.has(partner.id)}\n                      onChange={() => toggleSelection(partner.id)}\n                      className=\"rounded\"\n                    />\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">{partner.name}</div>\n                      <div className=\"text-sm text-gray-500\">{partner.email}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    {getGradeBadge(partner)}\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      partner.status === 'active' \n                        ? 'bg-green-100 text-green-800' \n                        : partner.status === 'pending'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {partner.status === 'active' ? '활성' : partner.status === 'pending' ? '승인 대기' : partner.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-4\">\n                      {partner.phone && (\n                        <span className=\"flex items-center gap-1\">\n                          <Phone className=\"w-3 h-3\" />\n                          {partner.phone}\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"w-3 h-3\" />\n                      {formatDate(partner.createdAt)}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm\">\n                    <div className=\"flex gap-2\">\n                      {partner.status === 'pending' ? (\n                        <button\n                          onClick={() => handleApprove(partner.id)}\n                          className=\"text-green-600 hover:text-green-900\"\n                        >\n                          승인\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => navigate(`/users/${partner.id}`)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Edit2 className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => handleDelete(partner.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"mt-4 flex justify-center gap-2\">\n          <button\n            onClick={() => setPage(Math.max(1, page - 1))}\n            disabled={page === 1}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            이전\n          </button>\n          <span className=\"px-4 py-2\">\n            {page} / {totalPages}\n          </span>\n          <button\n            onClick={() => setPage(Math.min(totalPages, page + 1))}\n            disabled={page === totalPages}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            다음\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PartnersList;","import React, { useState, useEffect } from 'react';\nimport { Plus, Edit2, Trash2, Store, Package, TrendingUp, DollarSign, UserPlus, Mail, Phone, Calendar, Building } from 'lucide-react';\nimport { UserApi } from '../../api/userApi';\nimport { User } from '../../types/user';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate } from '@/lib/utils';\n\ninterface SupplierStats {\n  total: number;\n  active: number;\n  pending: number;\n  totalProducts: number;\n}\n\nconst SuppliersList: React.FC = () => {\n  const navigate = useNavigate();\n  const [suppliers, setSuppliers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [stats, setStats] = useState<SupplierStats>({\n    total: 0,\n    active: 0,\n    pending: 0,\n    totalProducts: 0\n  });\n  const [selectedSuppliers, setSelectedSuppliers] = useState<Set<string>>(new Set());\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'pending'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    fetchSuppliers();\n  }, [page, filterStatus, searchQuery]);\n\n  const fetchSuppliers = async () => {\n    setLoading(true);\n    try {\n      const filters: any = { role: 'supplier' };\n      if (filterStatus !== 'all') {\n        filters.status = filterStatus;\n      }\n      if (searchQuery) {\n        filters.q = searchQuery;\n      }\n\n      const response = await UserApi.getUsers(page, 20, filters);\n      \n      // Handle PaginatedResponse structure and ensure data is an array\n      const supplierData = Array.isArray(response?.data) ? response.data : \n                          Array.isArray(response?.users) ? response.users : \n                          Array.isArray(response) ? response : [];\n      \n      setSuppliers(supplierData);\n      setTotalPages(Math.ceil((response?.total || 0) / 20));\n      \n      // Calculate stats with safe array operations\n      setStats({\n        total: response?.total || 0,\n        active: Array.isArray(supplierData) ? supplierData.filter((s: User) => s.status === 'active').length : 0,\n        pending: Array.isArray(supplierData) ? supplierData.filter((s: User) => s.status === 'pending').length : 0,\n        totalProducts: 0 // This would come from a separate API\n      });\n    } catch (error) {\n      console.error('Failed to fetch suppliers:', error);\n      toast.error('공급자 목록을 불러오는데 실패했습니다');\n      // Set empty data on error\n      setSuppliers([]);\n      setStats({\n        total: 0,\n        active: 0,\n        pending: 0,\n        totalProducts: 0\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (userId: string) => {\n    if (!confirm('정말 이 공급자를 삭제하시겠습니까?')) return;\n\n    try {\n      await UserApi.deleteUser(userId);\n      toast.success('공급자가 삭제되었습니다');\n      fetchSuppliers();\n    } catch (error) {\n      console.error('Failed to delete supplier:', error);\n      toast.error('공급자 삭제에 실패했습니다');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedSuppliers.size === 0) {\n      toast.error('삭제할 공급자를 선택해주세요');\n      return;\n    }\n\n    if (!confirm(`선택한 ${selectedSuppliers.size}명의 공급자를 삭제하시겠습니까?`)) return;\n\n    try {\n      await Promise.all(Array.from(selectedSuppliers).map(id => UserApi.deleteUser(id)));\n      toast.success('선택한 공급자가 삭제되었습니다');\n      setSelectedSuppliers(new Set());\n      fetchSuppliers();\n    } catch (error) {\n      console.error('Failed to bulk delete:', error);\n      toast.error('일괄 삭제에 실패했습니다');\n    }\n  };\n\n  const handleApprove = async (userId: string) => {\n    try {\n      await UserApi.approveUser(userId, '공급자 승인');\n      toast.success('공급자가 승인되었습니다');\n      fetchSuppliers();\n    } catch (error) {\n      console.error('Failed to approve supplier:', error);\n      toast.error('공급자 승인에 실패했습니다');\n    }\n  };\n\n  const toggleSelection = (userId: string) => {\n    const newSelection = new Set(selectedSuppliers);\n    if (newSelection.has(userId)) {\n      newSelection.delete(userId);\n    } else {\n      newSelection.add(userId);\n    }\n    setSelectedSuppliers(newSelection);\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedSuppliers.size === suppliers.length) {\n      setSelectedSuppliers(new Set());\n    } else {\n      setSelectedSuppliers(new Set(suppliers.map(s => s.id)));\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-2xl font-bold mb-2\">공급자 관리</h1>\n            <p className=\"text-gray-600\">드롭쉬핑 상품 공급자 목록 및 관리</p>\n          </div>\n          <button\n            onClick={() => navigate('/users/new?role=supplier')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            <UserPlus className=\"w-4 h-4\" />\n            새 공급자 추가\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">전체 공급자</p>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n            </div>\n            <Store className=\"w-8 h-8 text-blue-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">활성 공급자</p>\n              <p className=\"text-2xl font-bold text-green-600\">{stats.active}</p>\n            </div>\n            <TrendingUp className=\"w-8 h-8 text-green-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">승인 대기</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\n            </div>\n            <Building className=\"w-8 h-8 text-yellow-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">등록 상품</p>\n              <p className=\"text-2xl font-bold\">{stats.totalProducts}</p>\n            </div>\n            <Package className=\"w-8 h-8 text-purple-600 opacity-50\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-6\">\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <input\n            type=\"text\"\n            placeholder=\"공급자 검색...\"\n            className=\"flex-1 min-w-[200px] px-4 py-2 border rounded-lg\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <select\n            className=\"px-4 py-2 border rounded-lg\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value as any)}\n          >\n            <option value=\"all\">전체 상태</option>\n            <option value=\"active\">활성</option>\n            <option value=\"pending\">승인 대기</option>\n          </select>\n          {selectedSuppliers.size > 0 && (\n            <button\n              onClick={handleBulkDelete}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n            >\n              선택 삭제 ({selectedSuppliers.size})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedSuppliers.size === suppliers.length && suppliers.length > 0}\n                  onChange={toggleSelectAll}\n                  className=\"rounded\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                공급자 정보\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                사업자 정보\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                연락처\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                가입일\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {loading ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  </div>\n                </td>\n              </tr>\n            ) : suppliers.length === 0 ? (\n              <tr>\n                <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                  공급자가 없습니다\n                </td>\n              </tr>\n            ) : (\n              suppliers.map((supplier) => (\n                <tr key={supplier.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedSuppliers.has(supplier.id)}\n                      onChange={() => toggleSelection(supplier.id)}\n                      className=\"rounded\"\n                    />\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">{supplier.name}</div>\n                      <div className=\"text-sm text-gray-500\">{supplier.email}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm\">\n                      {supplier.businessInfo?.businessName ? (\n                        <>\n                          <div className=\"font-medium\">{supplier.businessInfo.businessName}</div>\n                          <div className=\"text-gray-500\">{supplier.businessInfo.businessNumber}</div>\n                        </>\n                      ) : (\n                        <span className=\"text-gray-400\">미등록</span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      supplier.status === 'active' \n                        ? 'bg-green-100 text-green-800' \n                        : supplier.status === 'pending'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {supplier.status === 'active' ? '활성' : supplier.status === 'pending' ? '승인 대기' : supplier.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex flex-col gap-1\">\n                      {supplier.phone && (\n                        <span className=\"flex items-center gap-1\">\n                          <Phone className=\"w-3 h-3\" />\n                          {supplier.phone}\n                        </span>\n                      )}\n                      {supplier.businessInfo?.businessPhone && (\n                        <span className=\"flex items-center gap-1\">\n                          <Building className=\"w-3 h-3\" />\n                          {supplier.businessInfo.businessPhone}\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"w-3 h-3\" />\n                      {formatDate(supplier.createdAt)}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm\">\n                    <div className=\"flex gap-2\">\n                      {supplier.status === 'pending' ? (\n                        <button\n                          onClick={() => handleApprove(supplier.id)}\n                          className=\"text-green-600 hover:text-green-900\"\n                        >\n                          승인\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => navigate(`/users/${supplier.id}`)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Edit2 className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => handleDelete(supplier.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"mt-4 flex justify-center gap-2\">\n          <button\n            onClick={() => setPage(Math.max(1, page - 1))}\n            disabled={page === 1}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            이전\n          </button>\n          <span className=\"px-4 py-2\">\n            {page} / {totalPages}\n          </span>\n          <button\n            onClick={() => setPage(Math.min(totalPages, page + 1))}\n            disabled={page === totalPages}\n            className=\"px-4 py-2 border rounded-lg disabled:opacity-50\"\n          >\n            다음\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SuppliersList;","import React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, Clock, AlertCircle, Filter, Search } from 'lucide-react';\nimport { dropshippingAPI } from '../../api/dropshipping-cpt';\nimport { toast } from 'react-hot-toast';\n\ninterface ApprovalLog {\n  id: string;\n  title: string;\n  type: 'price_change' | 'product_add' | 'partner_application' | 'ad_material';\n  status: 'pending' | 'approved' | 'rejected';\n  requestedBy: string;\n  requestedAt: string;\n  reviewedBy?: string;\n  reviewedAt?: string;\n  details: {\n    before?: any;\n    after?: any;\n    reason?: string;\n    notes?: string;\n  };\n}\n\nconst Approvals: React.FC = () => {\n  const [approvals, setApprovals] = useState<ApprovalLog[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterType, setFilterType] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchApprovals();\n  }, []);\n\n  const fetchApprovals = async () => {\n    setLoading(true);\n    try {\n      // Mock data for now - replace with actual API call\n      const mockData: ApprovalLog[] = [\n        {\n          id: '1',\n          title: '상품 가격 변경 요청',\n          type: 'price_change',\n          status: 'pending',\n          requestedBy: '공급자 A',\n          requestedAt: '2024-01-27 10:00:00',\n          details: {\n            before: { price: 50000 },\n            after: { price: 45000 },\n            reason: '프로모션 진행'\n          }\n        },\n        {\n          id: '2',\n          title: '신규 파트너 신청',\n          type: 'partner_application',\n          status: 'approved',\n          requestedBy: '홍길동',\n          requestedAt: '2024-01-26 14:00:00',\n          reviewedBy: '관리자',\n          reviewedAt: '2024-01-26 16:00:00',\n          details: {\n            notes: '자격 요건 충족'\n          }\n        },\n        {\n          id: '3',\n          title: '광고 소재 승인 요청',\n          type: 'ad_material',\n          status: 'rejected',\n          requestedBy: '파트너 B',\n          requestedAt: '2024-01-25 09:00:00',\n          reviewedBy: '관리자',\n          reviewedAt: '2024-01-25 11:00:00',\n          details: {\n            reason: '가이드라인 위반'\n          }\n        }\n      ];\n      setApprovals(mockData);\n    } catch (error) {\n      console.error('Failed to fetch approvals:', error);\n      toast.error('승인 목록을 불러오는데 실패했습니다');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApprove = async (id: string) => {\n    if (!confirm('승인하시겠습니까?')) return;\n    \n    try {\n      toast.success('승인 처리되었습니다');\n      fetchApprovals();\n    } catch (error) {\n      toast.error('승인 처리에 실패했습니다');\n    }\n  };\n\n  const handleReject = async (id: string) => {\n    const reason = prompt('반려 사유를 입력해주세요:');\n    if (!reason) return;\n    \n    try {\n      toast.success('반려 처리되었습니다');\n      fetchApprovals();\n    } catch (error) {\n      toast.error('반려 처리에 실패했습니다');\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'rejected':\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'pending':\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\n      default:\n        return <AlertCircle className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getTypeLabel = (type: string) => {\n    switch (type) {\n      case 'price_change':\n        return '가격 변경';\n      case 'product_add':\n        return '상품 추가';\n      case 'partner_application':\n        return '파트너 신청';\n      case 'ad_material':\n        return '광고 소재';\n      default:\n        return type;\n    }\n  };\n\n  const filteredApprovals = approvals.filter(approval => {\n    const matchesStatus = filterStatus === 'all' || approval.status === filterStatus;\n    const matchesType = filterType === 'all' || approval.type === filterType;\n    const matchesSearch = approval.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                          approval.requestedBy.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesStatus && matchesType && matchesSearch;\n  });\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold mb-2\">승인 관리</h1>\n        <p className=\"text-gray-600\">가격 변경, 파트너 신청 등 승인이 필요한 항목을 관리합니다</p>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">대기 중</p>\n              <p className=\"text-2xl font-bold text-yellow-600\">\n                {approvals.filter(a => a.status === 'pending').length}\n              </p>\n            </div>\n            <Clock className=\"w-8 h-8 text-yellow-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">승인됨</p>\n              <p className=\"text-2xl font-bold text-green-600\">\n                {approvals.filter(a => a.status === 'approved').length}\n              </p>\n            </div>\n            <CheckCircle className=\"w-8 h-8 text-green-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">반려됨</p>\n              <p className=\"text-2xl font-bold text-red-600\">\n                {approvals.filter(a => a.status === 'rejected').length}\n              </p>\n            </div>\n            <XCircle className=\"w-8 h-8 text-red-600 opacity-50\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">전체</p>\n              <p className=\"text-2xl font-bold\">{approvals.length}</p>\n            </div>\n            <AlertCircle className=\"w-8 h-8 text-gray-600 opacity-50\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-6\">\n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex-1 min-w-[200px]\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type=\"text\"\n                placeholder=\"검색...\"\n                className=\"w-full pl-10 pr-4 py-2 border rounded-lg\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          <select\n            className=\"px-4 py-2 border rounded-lg\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n          >\n            <option value=\"all\">모든 상태</option>\n            <option value=\"pending\">대기 중</option>\n            <option value=\"approved\">승인됨</option>\n            <option value=\"rejected\">반려됨</option>\n          </select>\n          <select\n            className=\"px-4 py-2 border rounded-lg\"\n            value={filterType}\n            onChange={(e) => setFilterType(e.target.value)}\n          >\n            <option value=\"all\">모든 유형</option>\n            <option value=\"price_change\">가격 변경</option>\n            <option value=\"product_add\">상품 추가</option>\n            <option value=\"partner_application\">파트너 신청</option>\n            <option value=\"ad_material\">광고 소재</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                상태\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                유형\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                제목\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                요청자\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                요청 일시\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                작업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {loading ? (\n              <tr>\n                <td colSpan={6} className=\"text-center py-8\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  </div>\n                </td>\n              </tr>\n            ) : filteredApprovals.length === 0 ? (\n              <tr>\n                <td colSpan={6} className=\"text-center py-8 text-gray-500\">\n                  승인 요청이 없습니다\n                </td>\n              </tr>\n            ) : (\n              filteredApprovals.map((approval) => (\n                <tr key={approval.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      {getStatusIcon(approval.status)}\n                      <span className=\"ml-2 text-sm\">\n                        {approval.status === 'pending' ? '대기 중' :\n                         approval.status === 'approved' ? '승인됨' : '반려됨'}\n                      </span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                      {getTypeLabel(approval.type)}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm font-medium text-gray-900\">{approval.title}</div>\n                    {approval.details.reason && (\n                      <div className=\"text-xs text-gray-500\">사유: {approval.details.reason}</div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {approval.requestedBy}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {approval.requestedAt}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    {approval.status === 'pending' ? (\n                      <div className=\"flex gap-2\">\n                        <button\n                          onClick={() => handleApprove(approval.id)}\n                          className=\"text-green-600 hover:text-green-900\"\n                        >\n                          승인\n                        </button>\n                        <button\n                          onClick={() => handleReject(approval.id)}\n                          className=\"text-red-600 hover:text-red-900\"\n                        >\n                          반려\n                        </button>\n                      </div>\n                    ) : (\n                      <span className=\"text-gray-400\">\n                        {approval.reviewedBy} ({approval.reviewedAt})\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Approvals;","import React, { useState, useEffect } from 'react';\nimport { Plus, DollarSign, Users, Calendar, TrendingUp, Settings, Award } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\n\ninterface CommissionPolicy {\n  id: string;\n  title: string;\n  supplier: string;\n  partnerGrades: string[];\n  commissionRate: number;\n  minOrderAmount: number;\n  startDate: string;\n  endDate?: string;\n  status: 'active' | 'scheduled' | 'expired';\n  createdAt: string;\n}\n\nconst Commissions: React.FC = () => {\n  const [policies, setPolicies] = useState<CommissionPolicy[]>([\n    // Mock data for demonstration\n    {\n      id: '1',\n      title: '기본 수수료 정책',\n      supplier: '전체 공급자',\n      partnerGrades: ['bronze', 'silver', 'gold', 'platinum'],\n      commissionRate: 10,\n      minOrderAmount: 0,\n      startDate: '2024-01-01',\n      status: 'active',\n      createdAt: '2024-01-01T00:00:00'\n    },\n    {\n      id: '2',\n      title: '골드 등급 특별 수수료',\n      supplier: '전체 공급자',\n      partnerGrades: ['gold', 'platinum'],\n      commissionRate: 15,\n      minOrderAmount: 100000,\n      startDate: '2024-02-01',\n      status: 'active',\n      createdAt: '2024-02-01T00:00:00'\n    },\n    {\n      id: '3',\n      title: '신규 파트너 프로모션',\n      supplier: '전체 공급자',\n      partnerGrades: ['bronze'],\n      commissionRate: 12,\n      minOrderAmount: 0,\n      startDate: '2024-03-01',\n      endDate: '2024-06-30',\n      status: 'scheduled',\n      createdAt: '2024-03-01T00:00:00'\n    }\n  ]);\n\n  const [showForm, setShowForm] = useState(false);\n  const [selectedPolicy, setSelectedPolicy] = useState<CommissionPolicy | null>(null);\n  const [bulkSelection, setBulkSelection] = useState<string[]>([]);\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      active: { label: '활성', class: 'bg-green-100 text-green-800' },\n      scheduled: { label: '예약됨', class: 'bg-blue-100 text-blue-800' },\n      expired: { label: '만료됨', class: 'bg-gray-100 text-gray-800' }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig];\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.class}`}>\n        {config.label}\n      </span>\n    );\n  };\n\n  const getGradeLabels = (grades: string[]) => {\n    const gradeLabels: any = {\n      bronze: '브론즈',\n      silver: '실버',\n      gold: '골드',\n      platinum: '플래티넘'\n    };\n    \n    return grades.map(g => gradeLabels[g]).join(', ');\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm('정책을 삭제하시겠습니까?')) {\n      setPolicies(policies.filter(p => p.id !== id));\n      toast.success('정책이 삭제되었습니다');\n    }\n  };\n\n  const handleCreate = () => {\n    setSelectedPolicy(null);\n    setShowForm(true);\n  };\n\n  const handleEdit = (policy: CommissionPolicy) => {\n    setSelectedPolicy(policy);\n    setShowForm(true);\n  };\n\n  const toggleBulkSelect = (id: string) => {\n    setBulkSelection(prev => \n      prev.includes(id) \n        ? prev.filter(item => item !== id)\n        : [...prev, id]\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (bulkSelection.length === policies.length) {\n      setBulkSelection([]);\n    } else {\n      setBulkSelection(policies.map(p => p.id));\n    }\n  };\n\n  // Calculate statistics\n  const stats = {\n    total: policies.length,\n    active: policies.filter(p => p.status === 'active').length,\n    avgRate: policies.length > 0\n      ? (policies.reduce((sum, p) => sum + p.commissionRate, 0) / policies.length).toFixed(1)\n      : 0,\n    scheduled: policies.filter(p => p.status === 'scheduled').length\n  };\n\n  if (showForm) {\n    return <CommissionPolicyForm policy={selectedPolicy} onClose={() => setShowForm(false)} />;\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* WordPress Admin Style Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-normal text-gray-900\">수수료 정책</h1>\n        <button\n          onClick={handleCreate}\n          className=\"px-3 py-1 bg-wordpress-blue text-white text-sm rounded hover:bg-wordpress-blue-hover transition\"\n        >\n          새로 추가\n        </button>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">전체 정책</p>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n            </div>\n            <Settings className=\"h-8 w-8 text-gray-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">활성 정책</p>\n              <p className=\"text-2xl font-bold\">{stats.active}</p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-green-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">평균 수수료율</p>\n              <p className=\"text-2xl font-bold\">{stats.avgRate}%</p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-purple-400\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">예약된 정책</p>\n              <p className=\"text-2xl font-bold\">{stats.scheduled}</p>\n            </div>\n            <Calendar className=\"h-8 w-8 text-blue-400\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filter Bar */}\n      <div className=\"bg-white border border-gray-300 rounded-t-lg p-3 flex justify-between items-center\">\n        <div className=\"flex gap-2\">\n          <select className=\"px-3 py-1 border border-gray-300 rounded text-sm\">\n            <option value=\"\">일괄 작업</option>\n            <option value=\"delete\">삭제</option>\n            <option value=\"deactivate\">비활성화</option>\n          </select>\n          <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n            적용\n          </button>\n        </div>\n        \n        <div className=\"flex gap-2 items-center\">\n          <select className=\"px-3 py-1 border border-gray-300 rounded text-sm\">\n            <option value=\"\">모든 상태</option>\n            <option value=\"active\">활성</option>\n            <option value=\"scheduled\">예약됨</option>\n            <option value=\"expired\">만료됨</option>\n          </select>\n          <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n            필터\n          </button>\n        </div>\n      </div>\n\n      {/* WordPress Style Table */}\n      <div className=\"bg-white border-x border-b border-gray-300 rounded-b-lg\">\n        <table className=\"w-full wp-list-table widefat fixed striped\">\n          <thead>\n            <tr>\n              <td className=\"manage-column check-column\">\n                <input \n                  type=\"checkbox\" \n                  onChange={toggleSelectAll}\n                  checked={bulkSelection.length === policies.length && policies.length > 0}\n                />\n              </td>\n              <th className=\"manage-column column-title column-primary\">\n                <span>정책명</span>\n              </th>\n              <th className=\"manage-column\">적용 등급</th>\n              <th className=\"manage-column\">수수료율</th>\n              <th className=\"manage-column\">최소 주문금액</th>\n              <th className=\"manage-column\">기간</th>\n              <th className=\"manage-column\">상태</th>\n            </tr>\n          </thead>\n          <tbody>\n            {policies.map((policy) => (\n              <tr key={policy.id}>\n                <th scope=\"row\" className=\"check-column\">\n                  <input \n                    type=\"checkbox\"\n                    checked={bulkSelection.includes(policy.id)}\n                    onChange={() => toggleBulkSelect(policy.id)}\n                  />\n                </th>\n                <td className=\"title column-title column-primary page-title\">\n                  <strong>\n                    <a \n                      href=\"#\" \n                      onClick={(e) => { e.preventDefault(); handleEdit(policy); }}\n                      className=\"row-title\"\n                    >\n                      {policy.title}\n                    </a>\n                  </strong>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    공급자: {policy.supplier}\n                  </div>\n                  <div className=\"row-actions\">\n                    <span className=\"edit\">\n                      <a href=\"#\" onClick={(e) => { e.preventDefault(); handleEdit(policy); }}>\n                        편집\n                      </a>\n                    </span>\n                    {' | '}\n                    <span className=\"trash\">\n                      <a \n                        href=\"#\" \n                        onClick={(e) => { e.preventDefault(); handleDelete(policy.id); }}\n                        className=\"submitdelete\"\n                      >\n                        휴지통\n                      </a>\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <span className=\"text-sm\">\n                    {getGradeLabels(policy.partnerGrades)}\n                  </span>\n                </td>\n                <td>\n                  <strong className=\"text-lg text-wordpress-blue\">\n                    {policy.commissionRate}%\n                  </strong>\n                </td>\n                <td>\n                  {policy.minOrderAmount > 0 ? (\n                    <span>₩{policy.minOrderAmount.toLocaleString()}</span>\n                  ) : (\n                    <span className=\"text-gray-400\">제한 없음</span>\n                  )}\n                </td>\n                <td className=\"text-sm\">\n                  <div>{new Date(policy.startDate).toLocaleDateString('ko-KR')}</div>\n                  {policy.endDate && (\n                    <div className=\"text-gray-500\">\n                      ~ {new Date(policy.endDate).toLocaleDateString('ko-KR')}\n                    </div>\n                  )}\n                </td>\n                <td>{getStatusBadge(policy.status)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n// Commission Policy Form Component (inline for simplicity)\nconst CommissionPolicyForm: React.FC<{ policy: CommissionPolicy | null; onClose: () => void }> = ({ policy, onClose }) => {\n  const [formData, setFormData] = useState({\n    title: policy?.title || '',\n    supplier: policy?.supplier || '전체 공급자',\n    partnerGrades: policy?.partnerGrades || ['bronze', 'silver', 'gold', 'platinum'],\n    commissionRate: policy?.commissionRate || 10,\n    minOrderAmount: policy?.minOrderAmount || 0,\n    startDate: policy?.startDate || '',\n    endDate: policy?.endDate || ''\n  });\n\n  const handleSave = () => {\n    toast.success(policy ? '정책이 수정되었습니다' : '정책이 생성되었습니다');\n    onClose();\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-normal text-gray-900\">\n          {policy ? '수수료 정책 편집' : '새 수수료 정책'}\n        </h1>\n      </div>\n\n      <div className=\"bg-white border border-gray-300 rounded-lg p-6 max-w-4xl\">\n        <div className=\"grid grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              정책명 <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded focus:border-wordpress-blue focus:outline-none\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              수수료율 (%)\n            </label>\n            <input\n              type=\"number\"\n              value={formData.commissionRate}\n              onChange={(e) => setFormData({ ...formData, commissionRate: Number(e.target.value) })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded focus:border-wordpress-blue focus:outline-none\"\n              min=\"0\"\n              max=\"100\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              시작일\n            </label>\n            <input\n              type=\"date\"\n              value={formData.startDate}\n              onChange={(e) => setFormData({ ...formData, startDate: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded focus:border-wordpress-blue focus:outline-none\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              종료일 (선택)\n            </label>\n            <input\n              type=\"date\"\n              value={formData.endDate}\n              onChange={(e) => setFormData({ ...formData, endDate: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded focus:border-wordpress-blue focus:outline-none\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-6 pt-6 border-t flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n          >\n            취소\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-wordpress-blue text-white rounded hover:bg-wordpress-blue-hover\"\n          >\n            {policy ? '업데이트' : '정책 생성'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Commissions;","import React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, RefreshCw, Database, Loader, AlertTriangle, Play, Zap } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\nimport { apiClient as api } from '../../services/api';\n\ninterface SystemStatus {\n  cpts: {\n    ds_supplier: string;\n    ds_partner: string;\n    ds_product: string;\n    ds_commission_policy: string;\n  };\n  records: {\n    suppliers: number;\n    partners: number;\n    products: number;\n    commissions: number;\n  };\n  fieldGroups: number;\n  systemReady: boolean;\n}\n\nconst SystemSetup: React.FC = () => {\n  const [status, setStatus] = useState<SystemStatus | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [initializing, setInitializing] = useState(false);\n  const [seeding, setSeeding] = useState(false);\n\n  useEffect(() => {\n    checkSystemStatus();\n  }, []);\n\n  const checkSystemStatus = async () => {\n    setLoading(true);\n    try {\n      // For now, set mock data until the API endpoint is created\n      setStatus({\n        cpts: {\n          ds_supplier: 'installed',\n          ds_partner: 'installed',\n          ds_product: 'installed',\n          ds_commission_policy: 'installed'\n        },\n        records: {\n          suppliers: 0,\n          partners: 0,\n          products: 0,\n          commissions: 0\n        },\n        fieldGroups: 0,\n        systemReady: true\n      });\n      \n      // TODO: Uncomment when API endpoint is ready\n      // const response = await api.get('/api/v1/dropshipping/status');\n      // if (response.data.success) {\n      //   setStatus(response.data.status);\n      // }\n    } catch (error) {\n      console.error('Failed to check system status:', error);\n      // Default status on error\n      setStatus({\n        cpts: {\n          ds_supplier: 'not_installed',\n          ds_partner: 'not_installed',\n          ds_product: 'not_installed',\n          ds_commission_policy: 'not_installed'\n        },\n        records: {\n          suppliers: 0,\n          partners: 0,\n          products: 0,\n          commissions: 0\n        },\n        fieldGroups: 0,\n        systemReady: false\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeSystem = async () => {\n    if (!confirm('드롭쉬핑 시스템을 초기화하시겠습니까? CPT와 ACF 필드가 생성됩니다.')) return;\n\n    setInitializing(true);\n    try {\n      // TODO: Implement API endpoint\n      toast.success('시스템이 이미 초기화되어 있습니다');\n      await checkSystemStatus();\n      \n      // TODO: Uncomment when API endpoint is ready\n      // const response = await api.post('/api/v1/dropshipping/initialize');\n      // if (response.data.success) {\n      //   toast.success('시스템이 성공적으로 초기화되었습니다');\n      //   await checkSystemStatus();\n      // }\n    } catch (error) {\n      console.error('Failed to initialize system:', error);\n      toast.error('시스템 초기화에 실패했습니다');\n    } finally {\n      setInitializing(false);\n    }\n  };\n\n  const createSampleData = async () => {\n    if (!confirm('샘플 데이터를 생성하시겠습니까? 테스트용 공급자, 파트너, 상품이 생성됩니다.')) return;\n\n    setSeeding(true);\n    try {\n      // TODO: Implement API endpoint\n      toast.info('샘플 데이터 생성 기능은 준비 중입니다');\n      \n      // TODO: Uncomment when API endpoint is ready\n      // const response = await api.post('/api/v1/dropshipping/seed');\n      // if (response.data.success) {\n      //   toast.success(`샘플 데이터가 생성되었습니다: \n      //     공급자 ${response.data.data.suppliers}개, \n      //     파트너 ${response.data.data.partners}개, \n      //     상품 ${response.data.data.products}개`);\n      //   await checkSystemStatus();\n      // }\n    } catch (error) {\n      console.error('Failed to create sample data:', error);\n      toast.error('샘플 데이터 생성에 실패했습니다');\n    } finally {\n      setSeeding(false);\n    }\n  };\n\n  const getCPTStatus = (status: string) => {\n    if (status === 'installed') {\n      return (\n        <span className=\"flex items-center text-green-600\">\n          <CheckCircle className=\"h-4 w-4 mr-1\" />\n          설치됨\n        </span>\n      );\n    }\n    return (\n      <span className=\"flex items-center text-red-600\">\n        <XCircle className=\"h-4 w-4 mr-1\" />\n        미설치\n      </span>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 flex items-center justify-center min-h-screen\">\n        <Loader className=\"h-8 w-8 animate-spin text-wordpress-blue\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">드롭쉬핑 시스템 설정</h1>\n        <p className=\"text-gray-600\">CPT/ACF 기반 드롭쉬핑 플랫폼 초기화 및 관리</p>\n      </div>\n\n      {/* System Status Card */}\n      <div className=\"bg-white border border-gray-300 rounded-lg p-6 mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold flex items-center\">\n            <Database className=\"h-5 w-5 mr-2\" />\n            시스템 상태\n          </h2>\n          <button\n            onClick={checkSystemStatus}\n            className=\"p-2 text-wordpress-blue hover:bg-blue-50 rounded transition\"\n          >\n            <RefreshCw className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {status && (\n          <div className=\"space-y-4\">\n            {/* Overall Status */}\n            <div className=\"p-4 rounded-lg bg-gray-50 border border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-medium\">전체 시스템 상태</span>\n                {status?.systemReady ? (\n                  <span className=\"flex items-center text-green-600 font-medium\">\n                    <CheckCircle className=\"h-5 w-5 mr-2\" />\n                    준비 완료\n                  </span>\n                ) : (\n                  <span className=\"flex items-center text-yellow-600 font-medium\">\n                    <AlertTriangle className=\"h-5 w-5 mr-2\" />\n                    초기화 필요\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* CPT Status Grid */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-medium text-gray-700 mb-3\">Custom Post Types</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>공급자 (ds_supplier)</span>\n                    {getCPTStatus(status?.cpts?.ds_supplier || 'not_installed')}\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>파트너 (ds_partner)</span>\n                    {getCPTStatus(status?.cpts?.ds_partner || 'not_installed')}\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>상품 (ds_product)</span>\n                    {getCPTStatus(status?.cpts?.ds_product || 'not_installed')}\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>수수료 정책 (ds_commission_policy)</span>\n                    {getCPTStatus(status?.cpts?.ds_commission_policy || 'not_installed')}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-medium text-gray-700 mb-3\">데이터 현황</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>등록된 공급자</span>\n                    <span className=\"font-medium\">{status?.records?.suppliers || 0}개</span>\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>등록된 파트너</span>\n                    <span className=\"font-medium\">{status?.records?.partners || 0}개</span>\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>등록된 상품</span>\n                    <span className=\"font-medium\">{status?.records?.products || 0}개</span>\n                  </div>\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span>수수료 정책</span>\n                    <span className=\"font-medium\">{status?.records?.commissions || 0}개</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Field Groups Status */}\n            <div className=\"flex items-center justify-between p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <span className=\"text-sm font-medium text-blue-900\">ACF 필드 그룹</span>\n              <span className=\"text-sm font-bold text-blue-900\">{status.fieldGroups}개 등록</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {/* Initialize System */}\n        <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n          <div className=\"mb-4\">\n            <Zap className=\"h-8 w-8 text-wordpress-blue mb-2\" />\n            <h3 className=\"font-semibold text-lg\">시스템 초기화</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              CPT와 ACF 필드를 생성하여 시스템을 초기화합니다\n            </p>\n          </div>\n          <button\n            onClick={initializeSystem}\n            disabled={initializing || (status?.systemReady ?? false)}\n            className={`w-full py-2 px-4 rounded font-medium transition ${\n              status?.systemReady \n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-wordpress-blue text-white hover:bg-wordpress-blue-hover'\n            }`}\n          >\n            {initializing ? (\n              <span className=\"flex items-center justify-center\">\n                <Loader className=\"h-4 w-4 mr-2 animate-spin\" />\n                초기화 중...\n              </span>\n            ) : status?.systemReady ? (\n              '초기화 완료'\n            ) : (\n              '초기화 실행'\n            )}\n          </button>\n        </div>\n\n        {/* Create Sample Data */}\n        <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n          <div className=\"mb-4\">\n            <Database className=\"h-8 w-8 text-green-600 mb-2\" />\n            <h3 className=\"font-semibold text-lg\">샘플 데이터 생성</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              테스트용 공급자, 파트너, 상품 데이터를 생성합니다\n            </p>\n          </div>\n          <button\n            onClick={createSampleData}\n            disabled={seeding || !status?.systemReady}\n            className={`w-full py-2 px-4 rounded font-medium transition ${\n              !status?.systemReady\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-green-600 text-white hover:bg-green-700'\n            }`}\n          >\n            {seeding ? (\n              <span className=\"flex items-center justify-center\">\n                <Loader className=\"h-4 w-4 mr-2 animate-spin\" />\n                생성 중...\n              </span>\n            ) : (\n              '샘플 데이터 생성'\n            )}\n          </button>\n        </div>\n\n        {/* View Dashboard */}\n        <div className=\"bg-white border border-gray-300 rounded-lg p-6\">\n          <div className=\"mb-4\">\n            <Play className=\"h-8 w-8 text-purple-600 mb-2\" />\n            <h3 className=\"font-semibold text-lg\">대시보드 이동</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              드롭쉬핑 관리 대시보드로 이동합니다\n            </p>\n          </div>\n          <button\n            onClick={() => window.location.href = '/dropshipping/products'}\n            disabled={!status?.systemReady}\n            className={`w-full py-2 px-4 rounded font-medium transition ${\n              !status?.systemReady\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-purple-600 text-white hover:bg-purple-700'\n            }`}\n          >\n            대시보드로 이동\n          </button>\n        </div>\n      </div>\n\n      {/* Info Box */}\n      <div className=\"mt-8 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n        <h4 className=\"font-medium text-yellow-900 mb-2 flex items-center\">\n          <AlertTriangle className=\"h-4 w-4 mr-2\" />\n          중요 안내\n        </h4>\n        <ul className=\"text-sm text-yellow-800 space-y-1 list-disc list-inside\">\n          <li>시스템 초기화는 최초 1회만 실행하시면 됩니다</li>\n          <li>샘플 데이터는 테스트 목적으로만 사용하세요</li>\n          <li>실제 운영 시에는 샘플 데이터를 삭제하고 실제 데이터를 입력하세요</li>\n          <li>모든 데이터는 WordPress CPT 구조로 저장됩니다</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemSetup;","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Products from './Products';\nimport Orders from './Orders';\nimport Settlements from './Settlements';\nimport SellersList from './SellersList';\nimport PartnersList from './PartnersList';\nimport SuppliersList from './SuppliersList';\nimport Approvals from './Approvals';\nimport Commissions from './Commissions';\nimport SystemSetup from './SystemSetup';\n\nconst DropshippingRouter: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"products\" element={<Products />} />\n      <Route path=\"orders\" element={<Orders />} />\n      <Route path=\"settlements\" element={<Settlements />} />\n      <Route path=\"sellers\" element={<SellersList />} />\n      <Route path=\"partners\" element={<PartnersList />} />\n      <Route path=\"suppliers\" element={<SuppliersList />} />\n      <Route path=\"approvals\" element={<Approvals />} />\n      <Route path=\"commissions\" element={<Commissions />} />\n      <Route path=\"setup\" element={<SystemSetup />} />\n      <Route path=\"/\" element={<Navigate to=\"/dropshipping/products\" replace />} />\n    </Routes>\n  );\n};\n\nexport default DropshippingRouter;"],"names":["dropshippingAPI","api","data","id","cost_price","selling_price","status","params","type","queryString","ProductEditor","product","onClose","formData","setFormData","useState","saving","setSaving","useEffect","calculateMargin","costPrice","sellingPrice","marginRate","prev","handleSave","toast","response","error","getMarginColor","rate","formatCurrency","value","jsxs","jsx","X","e","Package","Truck","Calculator","Save","Products","products","setProducts","loading","setLoading","selectedProduct","setSelectedProduct","showEditor","setShowEditor","bulkSelection","setBulkSelection","filterSupplier","setFilterSupplier","filterMargin","setFilterMargin","fetchProducts","handleDelete","handleBulkDelete","toggleBulkSelect","item","toggleSelectAll","p","handleEdit","handleCreate","handleEditorClose","amount","sum","TrendingUp","BarChart","DollarSign","Orders","orders","setOrders","filterStatus","setFilterStatus","selectedOrder","setSelectedOrder","showDetails","setShowDetails","fetchOrders","updateOrderStatus","orderId","newStatus","getPaymentBadge","CheckCircle","Clock","getPaymentMethodBadge","method","config","getStatusBadge","statusConfig","Icon","viewOrderDetails","order","index","ShoppingCart","o","Settlements","settlements","setSettlements","filterType","setFilterType","selectedSettlement","setSelectedSettlement","fetchSettlements","updateSettlementStatus","settlementId","processSettlement","getTypeBadge","viewSettlementDetails","settlement","stats","s","CreditCard","Fragment","SellersList","navigate","useNavigate","sellers","setSellers","page","setPage","totalPages","setTotalPages","setStats","selectedSellers","setSelectedSellers","searchQuery","setSearchQuery","fetchSellers","filters","UserApi","sellerData","userId","handleApprove","toggleSelection","newSelection","getSellerBadge","user","levels","level","levelColors","levelLabels","UserPlus","ShoppingBag","Store","seller","Phone","Calendar","formatDate","Edit2","Trash2","PartnersList","partners","setPartners","selectedPartners","setSelectedPartners","fetchPartners","partnerData","getGradeBadge","grades","grade","gradeColors","Users","Award","partner","SuppliersList","suppliers","setSuppliers","selectedSuppliers","setSelectedSuppliers","fetchSuppliers","supplierData","Building","supplier","Approvals","approvals","setApprovals","searchTerm","setSearchTerm","fetchApprovals","handleReject","getStatusIcon","XCircle","AlertCircle","getTypeLabel","filteredApprovals","approval","matchesStatus","matchesType","matchesSearch","Search","Commissions","policies","setPolicies","showForm","setShowForm","selectedPolicy","setSelectedPolicy","getGradeLabels","gradeLabels","g","policy","CommissionPolicyForm","Settings","SystemSetup","setStatus","initializing","setInitializing","seeding","setSeeding","checkSystemStatus","initializeSystem","createSampleData","getCPTStatus","Loader","Database","RefreshCw","AlertTriangle","Zap","Play","DropshippingRouter","Routes","Route","Navigate"],"mappings":"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"}