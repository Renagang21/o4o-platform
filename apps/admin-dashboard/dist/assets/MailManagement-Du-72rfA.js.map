{"version":3,"file":"MailManagement-Du-72rfA.js","sources":["../../src/pages/mail/EmailTemplates.tsx","../../src/pages/mail/EmailLogs.tsx","../../src/pages/mail/MailManagement.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { Plus, Edit, Trash2, Eye, Copy } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface EmailTemplate {\n  id: number;\n  name: string;\n  subject: string;\n  slug: string;\n  type: 'system' | 'custom';\n  category: string;\n  htmlContent: string;\n  textContent?: string;\n  variables: string[];\n  enabled: boolean;\n  updatedAt: string;\n}\n\nconst EmailTemplates: FC = () => {\n  const { toast } = useToast();\n  const [templates, setTemplates] = useState<EmailTemplate[]>([]);\n  const [editingTemplate, setEditingTemplate] = useState<EmailTemplate | null>(null);\n  const [showEditor, setShowEditor] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewTemplate, setPreviewTemplate] = useState<EmailTemplate | null>(null);\n\n  // 기본 템플릿 목록\n  const defaultTemplates: EmailTemplate[] = [\n    {\n      id: 1,\n      name: '회원가입 환영',\n      subject: '{{site_name}}에 오신 것을 환영합니다!',\n      slug: 'welcome',\n      type: 'system',\n      category: '회원',\n      htmlContent: '<h1>환영합니다, {{user_name}}님!</h1><p>{{site_name}}의 회원이 되신 것을 축하합니다.</p>',\n      variables: ['site_name', 'user_name', 'user_email'],\n      enabled: true,\n      updatedAt: new Date().toISOString()\n    },\n    {\n      id: 2,\n      name: '비밀번호 재설정',\n      subject: '비밀번호 재설정 요청',\n      slug: 'password-reset',\n      type: 'system',\n      category: '인증',\n      htmlContent: '<p>비밀번호 재설정을 요청하셨습니다.</p><p><a href=\"{{reset_link}}\">여기를 클릭</a>하여 비밀번호를 재설정하세요.</p>',\n      variables: ['user_name', 'reset_link', 'expire_time'],\n      enabled: true,\n      updatedAt: new Date().toISOString()\n    },\n    {\n      id: 3,\n      name: '주문 확인',\n      subject: '주문이 확인되었습니다 - 주문번호: {{order_number}}',\n      slug: 'order-confirmation',\n      type: 'system',\n      category: '주문',\n      htmlContent: '<h2>주문이 확인되었습니다</h2><p>주문번호: {{order_number}}</p><p>총 금액: {{total_amount}}</p>',\n      variables: ['order_number', 'total_amount', 'order_items', 'shipping_address'],\n      enabled: true,\n      updatedAt: new Date().toISOString()\n    },\n    {\n      id: 4,\n      name: '배송 알림',\n      subject: '상품이 배송되었습니다',\n      slug: 'shipping-notification',\n      type: 'system',\n      category: '배송',\n      htmlContent: '<p>주문하신 상품이 배송되었습니다.</p><p>운송장번호: {{tracking_number}}</p>',\n      variables: ['order_number', 'tracking_number', 'carrier', 'expected_delivery'],\n      enabled: true,\n      updatedAt: new Date().toISOString()\n    }\n  ];\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const loadTemplates = async () => {\n    // TODO: API 연동\n    setTemplates(defaultTemplates);\n  };\n\n  const handleEdit = (template: EmailTemplate) => {\n    setEditingTemplate(template);\n    setShowEditor(true);\n  };\n\n  const handlePreview = (template: EmailTemplate) => {\n    setPreviewTemplate(template);\n    setShowPreview(true);\n  };\n\n  const handleDuplicate = (template: EmailTemplate) => {\n    const newTemplate = {\n      ...template,\n      id: Date.now(),\n      name: `${template.name} (복사본)`,\n      slug: `${template.slug}-copy`,\n      type: 'custom' as const\n    };\n    setTemplates([...templates, newTemplate]);\n    toast({\n      title: '템플릿 복제됨',\n      description: '템플릿이 성공적으로 복제되었습니다.'\n    });\n  };\n\n  const handleToggle = (templateId: number) => {\n    setTemplates(templates.map(t => \n      t.id === templateId ? { ...t, enabled: !t.enabled } : t\n    ));\n  };\n\n  const handleSave = () => {\n    if (editingTemplate) {\n      setTemplates(templates.map(t => \n        t.id === editingTemplate.id ? editingTemplate : t\n      ));\n      toast({\n        title: '저장됨',\n        description: '템플릿이 성공적으로 저장되었습니다.'\n      });\n      setShowEditor(false);\n      setEditingTemplate(null);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">이메일 템플릿</h2>\n          <p className=\"text-gray-600 mt-1\">시스템에서 발송되는 이메일 템플릿을 관리합니다</p>\n        </div>\n        <Button onClick={() => {\n          setEditingTemplate({\n            id: Date.now(),\n            name: '새 템플릿',\n            subject: '',\n            slug: '',\n            type: 'custom',\n            category: '기타',\n            htmlContent: '',\n            variables: [],\n            enabled: true,\n            updatedAt: new Date().toISOString()\n          });\n          setShowEditor(true);\n        }}>\n          <Plus className=\"h-4 w-4 mr-2\" />\n          새 템플릿\n        </Button>\n      </div>\n\n      <Card>\n        <CardContent className=\"p-0\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b bg-gray-50\">\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    템플릿\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    카테고리\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    유형\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    상태\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    수정일\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    작업\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {templates.map((template) => (\n                  <tr key={template.id}>\n                    <td className=\"px-6 py-4\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{template.name}</div>\n                        <div className=\"text-sm text-gray-500\">{template.subject}</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800\">\n                        {template.category}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <span className={`px-2 py-1 text-xs rounded-full ${\n                        template.type === 'system' \n                          ? 'bg-gray-100 text-gray-800' \n                          : 'bg-green-100 text-green-800'\n                      }`}>\n                        {template.type === 'system' ? '시스템' : '사용자정의'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <button\n                        onClick={() => handleToggle(template.id)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          template.enabled ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                          template.enabled ? 'translate-x-6' : 'translate-x-1'\n                        }`} />\n                      </button>\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-gray-500\">\n                      {new Date(template.updatedAt).toLocaleDateString()}\n                    </td>\n                    <td className=\"px-6 py-4 text-right\">\n                      <div className=\"flex justify-end space-x-2\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handlePreview(template)}\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleEdit(template)}\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleDuplicate(template)}\n                        >\n                          <Copy className=\"h-4 w-4\" />\n                        </Button>\n                        {template.type === 'custom' && (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => {\n                              setTemplates(templates.filter(t => t.id !== template.id));\n                              toast({\n                                title: '삭제됨',\n                                description: '템플릿이 삭제되었습니다.'\n                              });\n                            }}\n                          >\n                            <Trash2 className=\"h-4 w-4 text-red-500\" />\n                          </Button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 템플릿 편집 다이얼로그 */}\n      <Dialog open={showEditor} onOpenChange={setShowEditor}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>\n              {editingTemplate?.id ? '템플릿 편집' : '새 템플릿'}\n            </DialogTitle>\n          </DialogHeader>\n          {editingTemplate && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label>템플릿 이름</Label>\n                  <Input\n                    value={editingTemplate.name}\n                    onChange={(e) => setEditingTemplate({\n                      ...editingTemplate,\n                      name: e.target.value\n                    })}\n                  />\n                </div>\n                <div>\n                  <Label>슬러그</Label>\n                  <Input\n                    value={editingTemplate.slug}\n                    onChange={(e) => setEditingTemplate({\n                      ...editingTemplate,\n                      slug: e.target.value\n                    })}\n                    placeholder=\"welcome-email\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <Label>제목</Label>\n                <Input\n                  value={editingTemplate.subject}\n                  onChange={(e) => setEditingTemplate({\n                    ...editingTemplate,\n                    subject: e.target.value\n                  })}\n                />\n              </div>\n\n              <div>\n                <Label>HTML 내용</Label>\n                <Textarea\n                  rows={10}\n                  value={editingTemplate.htmlContent}\n                  onChange={(e) => setEditingTemplate({\n                    ...editingTemplate,\n                    htmlContent: e.target.value\n                  })}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n\n              <div>\n                <Label>사용 가능한 변수</Label>\n                <div className=\"flex flex-wrap gap-2 mt-2\">\n                  {editingTemplate.variables.map((variable) => (\n                    <span key={variable} className=\"px-2 py-1 bg-gray-100 rounded text-sm font-mono\">\n                      {`{{${variable}}}`}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowEditor(false)}>\n              취소\n            </Button>\n            <Button onClick={handleSave}>\n              저장\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* 템플릿 미리보기 다이얼로그 */}\n      <Dialog open={showPreview} onOpenChange={setShowPreview}>\n        <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>템플릿 미리보기</DialogTitle>\n          </DialogHeader>\n          {previewTemplate && (\n            <div className=\"space-y-4\">\n              <div>\n                <Label>제목</Label>\n                <div className=\"p-2 bg-gray-50 rounded\">{previewTemplate.subject}</div>\n              </div>\n              <div>\n                <Label>내용</Label>\n                <div \n                  className=\"p-4 bg-white border rounded\"\n                  dangerouslySetInnerHTML={{ __html: previewTemplate.htmlContent }}\n                />\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default EmailTemplates;","import { FC, useState, useEffect } from 'react';\nimport { Mail, Search, AlertCircle, CheckCircle, XCircle, Clock, RefreshCw } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\n\ninterface EmailLog {\n  id: number;\n  recipient: string;\n  subject: string;\n  status: 'sent' | 'failed' | 'pending' | 'bounced';\n  provider: string;\n  sentAt: string;\n  messageId?: string;\n  error?: string;\n  retryCount: number;\n  emailType?: string;\n  metadata?: any;\n}\n\nconst EmailLogs: FC = () => {\n  const [logs, setLogs] = useState<EmailLog[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [selectedLog, setSelectedLog] = useState<EmailLog | null>(null);\n  const [showDetail, setShowDetail] = useState(false);\n\n  // 샘플 데이터\n  const sampleLogs: EmailLog[] = [\n    {\n      id: 1,\n      recipient: 'user1@example.com',\n      subject: '회원가입을 환영합니다!',\n      status: 'sent',\n      provider: 'smtp',\n      sentAt: new Date().toISOString(),\n      messageId: 'msg_001',\n      emailType: 'welcome',\n      retryCount: 0\n    },\n    {\n      id: 2,\n      recipient: 'user2@example.com',\n      subject: '주문이 확인되었습니다',\n      status: 'sent',\n      provider: 'smtp',\n      sentAt: new Date(Date.now() - 3600000).toISOString(),\n      messageId: 'msg_002',\n      emailType: 'order-confirmation',\n      retryCount: 0\n    },\n    {\n      id: 3,\n      recipient: 'user3@example.com',\n      subject: '비밀번호 재설정',\n      status: 'failed',\n      provider: 'smtp',\n      sentAt: new Date(Date.now() - 7200000).toISOString(),\n      error: 'Connection timeout',\n      emailType: 'password-reset',\n      retryCount: 3\n    },\n    {\n      id: 4,\n      recipient: 'user4@example.com',\n      subject: '배송이 시작되었습니다',\n      status: 'pending',\n      provider: 'smtp',\n      sentAt: new Date(Date.now() - 1800000).toISOString(),\n      emailType: 'shipping',\n      retryCount: 1\n    }\n  ];\n\n  useEffect(() => {\n    loadLogs();\n  }, []);\n\n  const loadLogs = async () => {\n    // TODO: API 연동\n    setLogs(sampleLogs);\n  };\n\n  const handleRefresh = () => {\n    loadLogs();\n  };\n\n  const handleRetry = (_log: EmailLog) => {\n    // TODO: 재발송 API 호출\n    // Retrying email: _log.id\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'sent':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'failed':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      case 'bounced':\n        return <AlertCircle className=\"h-4 w-4 text-orange-500\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, 'default' | 'success' | 'destructive' | 'warning'> = {\n      sent: 'success',\n      failed: 'destructive',\n      pending: 'warning',\n      bounced: 'destructive'\n    };\n    \n    return (\n      <Badge variant={(variants[status] || 'default') as any}>\n        {status === 'sent' && '발송완료'}\n        {status === 'failed' && '발송실패'}\n        {status === 'pending' && '대기중'}\n        {status === 'bounced' && '반송됨'}\n      </Badge>\n    );\n  };\n\n  const filteredLogs = logs.filter(log => {\n    const matchesSearch = log.recipient.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         log.subject.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || log.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const stats = {\n    total: logs.length,\n    sent: logs.filter(l => l.status === 'sent').length,\n    failed: logs.filter(l => l.status === 'failed').length,\n    pending: logs.filter(l => l.status === 'pending').length\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">이메일 발송 기록</h2>\n          <p className=\"text-gray-600 mt-1\">시스템에서 발송된 이메일 내역을 확인합니다</p>\n        </div>\n        <Button onClick={handleRefresh}>\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\n          새로고침\n        </Button>\n      </div>\n\n      {/* 통계 카드 */}\n      <div className=\"grid grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">전체</p>\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\n              </div>\n              <Mail className=\"h-8 w-8 text-gray-400\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">발송완료</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.sent}</p>\n              </div>\n              <CheckCircle className=\"h-8 w-8 text-green-400\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">발송실패</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.failed}</p>\n              </div>\n              <XCircle className=\"h-8 w-8 text-red-400\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">대기중</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\n              </div>\n              <Clock className=\"h-8 w-8 text-yellow-400\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* 필터 및 검색 */}\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"flex gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  placeholder=\"이메일 또는 제목으로 검색...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"상태 필터\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">전체</SelectItem>\n                <SelectItem value=\"sent\">발송완료</SelectItem>\n                <SelectItem value=\"failed\">발송실패</SelectItem>\n                <SelectItem value=\"pending\">대기중</SelectItem>\n                <SelectItem value=\"bounced\">반송됨</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 로그 테이블 */}\n      <Card>\n        <CardContent className=\"p-0\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b bg-gray-50\">\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    상태\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    수신자\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    제목\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    유형\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    발송시간\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    작업\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredLogs.map((log) => (\n                  <tr key={log.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center gap-2\">\n                        {getStatusIcon(log.status)}\n                        {getStatusBadge(log.status)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-900\">{log.recipient}</div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-900\">{log.subject}</div>\n                      {log.error && (\n                        <div className=\"text-xs text-red-500 mt-1\">{log.error}</div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <span className=\"px-2 py-1 text-xs rounded bg-gray-100\">\n                        {log.emailType || 'system'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-gray-500\">\n                      {new Date(log.sentAt).toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setSelectedLog(log);\n                            setShowDetail(true);\n                          }}\n                        >\n                          상세보기\n                        </Button>\n                        {(log.status === 'failed' || log.status === 'pending') && (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => handleRetry(log)}\n                          >\n                            재발송\n                          </Button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 상세 정보 다이얼로그 */}\n      <Dialog open={showDetail} onOpenChange={setShowDetail}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>이메일 상세 정보</DialogTitle>\n          </DialogHeader>\n          {selectedLog && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">수신자</p>\n                  <p className=\"font-medium\">{selectedLog.recipient}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">상태</p>\n                  <div className=\"flex items-center gap-2\">\n                    {getStatusIcon(selectedLog.status)}\n                    {getStatusBadge(selectedLog.status)}\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">제목</p>\n                  <p className=\"font-medium\">{selectedLog.subject}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">발송시간</p>\n                  <p className=\"font-medium\">{new Date(selectedLog.sentAt).toLocaleString()}</p>\n                </div>\n                {selectedLog.messageId && (\n                  <div>\n                    <p className=\"text-sm text-gray-500\">메시지 ID</p>\n                    <p className=\"font-mono text-sm\">{selectedLog.messageId}</p>\n                  </div>\n                )}\n                {selectedLog.error && (\n                  <div className=\"col-span-2\">\n                    <p className=\"text-sm text-gray-500\">오류 메시지</p>\n                    <p className=\"text-red-600\">{selectedLog.error}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default EmailLogs;","import { FC } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport EmailSettings from '../settings/EmailSettings';\nimport EmailTemplates from './EmailTemplates';\nimport EmailLogs from './EmailLogs';\n\nconst MailManagement: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Navigate to=\"/mail/smtp\" replace />} />\n      <Route path=\"/smtp\" element={<EmailSettings />} />\n      <Route path=\"/templates\" element={<EmailTemplates />} />\n      <Route path=\"/logs\" element={<EmailLogs />} />\n    </Routes>\n  );\n};\n\nexport default MailManagement;"],"names":["EmailTemplates","toast","useToast","templates","setTemplates","useState","editingTemplate","setEditingTemplate","showEditor","setShowEditor","showPreview","setShowPreview","previewTemplate","setPreviewTemplate","defaultTemplates","useEffect","loadTemplates","handleEdit","template","handlePreview","handleDuplicate","newTemplate","handleToggle","templateId","t","handleSave","jsxs","jsx","Button","Plus","Card","CardContent","Eye","Edit","Copy","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","Label","Input","e","Textarea","variable","DialogFooter","EmailLogs","logs","setLogs","searchTerm","setSearchTerm","statusFilter","setStatusFilter","selectedLog","setSelectedLog","showDetail","setShowDetail","sampleLogs","loadLogs","handleRefresh","handleRetry","_log","getStatusIcon","status","CheckCircle","XCircle","Clock","AlertCircle","getStatusBadge","variants","Badge","filteredLogs","log","matchesSearch","matchesStatus","stats","l","RefreshCw","Mail","Search","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","MailManagement","Routes","Route","Navigate","EmailSettings"],"mappings":"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"}