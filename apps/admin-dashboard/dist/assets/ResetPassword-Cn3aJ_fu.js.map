{"version":3,"file":"ResetPassword-Cn3aJ_fu.js","sources":["../../src/pages/auth/ResetPassword.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams, Link } from 'react-router-dom';\nimport { Lock, CheckCircle, AlertCircle, Eye, EyeOff } from 'lucide-react';\n\nconst ResetPassword = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState('');\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!token) {\n      setError('유효하지 않은 비밀번호 재설정 링크입니다.');\n    }\n  }, [token]);\n\n  const validatePassword = () => {\n    const errors: string[] = [];\n    \n    if (password.length < 8) {\n      errors.push('비밀번호는 최소 8자 이상이어야 합니다.');\n    }\n    if (!/[A-Z]/.test(password)) {\n      errors.push('대문자를 하나 이상 포함해야 합니다.');\n    }\n    if (!/[a-z]/.test(password)) {\n      errors.push('소문자를 하나 이상 포함해야 합니다.');\n    }\n    if (!/[0-9]/.test(password)) {\n      errors.push('숫자를 하나 이상 포함해야 합니다.');\n    }\n    if (!/[!@#$%^&*]/.test(password)) {\n      errors.push('특수문자(!@#$%^&*)를 하나 이상 포함해야 합니다.');\n    }\n    if (password !== confirmPassword) {\n      errors.push('비밀번호가 일치하지 않습니다.');\n    }\n\n    setValidationErrors(errors);\n    return errors.length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validatePassword()) {\n      return;\n    }\n\n    setError('');\n    setIsLoading(true);\n\n    try {\n      const apiUrl = import.meta.env.VITE_API_URL || 'https://api.neture.co.kr/api/v1';\n      const response = await fetch(`${apiUrl}/auth/v2/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setIsSuccess(true);\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      } else {\n        setError(data.error || '비밀번호 재설정에 실패했습니다.');\n      }\n    } catch (err) {\n      setError('서버와의 연결에 실패했습니다. 잠시 후 다시 시도해주세요.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <CheckCircle className=\"mx-auto h-12 w-12 text-green-500\" />\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n              비밀번호가 재설정되었습니다\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              새로운 비밀번호로 로그인할 수 있습니다.\n            </p>\n            <p className=\"mt-1 text-sm text-gray-600\">\n              잠시 후 로그인 페이지로 이동합니다...\n            </p>\n          </div>\n\n          <div className=\"mt-8\">\n            <Link\n              to=\"/login\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-admin-blue hover:bg-admin-blue-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-blue\"\n            >\n              지금 로그인하기\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!token) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"mx-auto h-12 w-12 text-red-500\" />\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n              유효하지 않은 링크\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              비밀번호 재설정 링크가 유효하지 않거나 만료되었습니다.\n            </p>\n          </div>\n\n          <div className=\"mt-8\">\n            <Link\n              to=\"/forgot-password\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-admin-blue hover:bg-admin-blue-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-blue\"\n            >\n              비밀번호 재설정 다시 요청하기\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            새 비밀번호 설정\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            안전한 새 비밀번호를 입력해주세요.\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <AlertCircle className=\"h-5 w-5 text-red-400\" />\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">\n                    {error}\n                  </h3>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {validationErrors.length > 0 && (\n            <div className=\"rounded-md bg-yellow-50 p-4\">\n              <div className=\"flex\">\n                <AlertCircle className=\"h-5 w-5 text-yellow-400\" />\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-yellow-800\">\n                    비밀번호 요구사항\n                  </h3>\n                  <ul className=\"mt-2 text-sm text-yellow-700 list-disc list-inside\">\n                    {validationErrors.map((error, index) => (\n                      <li key={index}>{error}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                새 비밀번호\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={password}\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                    if (validationErrors.length > 0) {\n                      validatePassword();\n                    }\n                  }}\n                  className=\"appearance-none relative block w-full px-3 py-2 pl-10 pr-10 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-admin-blue focus:border-admin-blue focus:z-10 sm:text-sm\"\n                  placeholder=\"새 비밀번호\"\n                  disabled={isLoading}\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                비밀번호 확인\n              </label>\n              <div className=\"mt-1 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={confirmPassword}\n                  onChange={(e) => {\n                    setConfirmPassword(e.target.value);\n                    if (validationErrors.length > 0) {\n                      validatePassword();\n                    }\n                  }}\n                  className=\"appearance-none relative block w-full px-3 py-2 pl-10 pr-10 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-admin-blue focus:border-admin-blue focus:z-10 sm:text-sm\"\n                  placeholder=\"비밀번호 확인\"\n                  disabled={isLoading}\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">비밀번호 요구사항:</h4>\n            <ul className=\"text-xs text-gray-600 space-y-1\">\n              <li className={password.length >= 8 ? 'text-green-600' : ''}>\n                • 최소 8자 이상\n              </li>\n              <li className={/[A-Z]/.test(password) ? 'text-green-600' : ''}>\n                • 대문자 포함\n              </li>\n              <li className={/[a-z]/.test(password) ? 'text-green-600' : ''}>\n                • 소문자 포함\n              </li>\n              <li className={/[0-9]/.test(password) ? 'text-green-600' : ''}>\n                • 숫자 포함\n              </li>\n              <li className={/[!@#$%^&*]/.test(password) ? 'text-green-600' : ''}>\n                • 특수문자 포함 (!@#$%^&*)\n              </li>\n              <li className={password && password === confirmPassword ? 'text-green-600' : ''}>\n                • 비밀번호 일치\n              </li>\n            </ul>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading || !password || !confirmPassword}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-admin-blue hover:bg-admin-blue-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-blue disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <span>비밀번호 재설정 중...</span>\n              ) : (\n                <span>비밀번호 재설정</span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;"],"names":["ResetPassword","navigate","useNavigate","searchParams","useSearchParams","token","password","setPassword","useState","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","isLoading","setIsLoading","isSuccess","setIsSuccess","error","setError","validationErrors","setValidationErrors","useEffect","validatePassword","errors","handleSubmit","e","response","data","jsxs","jsx","CheckCircle","Link","AlertCircle","index","Lock","EyeOff","Eye"],"mappings":"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"}