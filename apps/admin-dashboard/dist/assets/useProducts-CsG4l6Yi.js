import{a as r,u as e,b as s,k as o}from"./vendor-query-DJJ0FlEA.js";import{E as t}from"./ecommerceApi-BNcbfobT.js";import{a}from"./vendor-utils-EdRAegAf.js";import{V as u}from"./vendor-react-40ZmJ4HC.js";const c=(e=1,s=20,a={})=>r({queryKey:["products",e,s,a],queryFn:()=>t.getProducts(e,s,a),placeholderData:o,staleTime:3e5}),n=(e,s=!0)=>r({queryKey:["product",e],queryFn:()=>t.getProduct(e),enabled:!!e&&s,staleTime:3e5}),d=()=>{const r=e();return s({mutationFn:r=>t.createProduct(r),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),u.success("상품이 성공적으로 생성되었습니다.")},onError:r=>{a.isAxiosError(r)?u.error(r.response?.data?.message||"상품 생성에 실패했습니다."):u.error("상품 생성에 실패했습니다.")}})},i=()=>{const r=e();return s({mutationFn:({productId:r,productData:e})=>t.updateProduct(r,e),onSuccess:(e,s)=>{r.invalidateQueries({queryKey:["products"]}),r.invalidateQueries({queryKey:["product",s.productId]}),u.success("상품이 성공적으로 수정되었습니다.")},onError:r=>{a.isAxiosError(r)?u.error(r.response?.data?.message||"상품 수정에 실패했습니다."):u.error("상품 수정에 실패했습니다.")}})},p=()=>{const r=e();return s({mutationFn:r=>t.deleteProduct(r),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),u.success("상품이 성공적으로 삭제되었습니다.")},onError:r=>{a.isAxiosError(r)?u.error(r.response?.data?.message||"상품 삭제에 실패했습니다."):u.error("상품 삭제에 실패했습니다.")}})},m=()=>{const r=e();return s({mutationFn:r=>t.duplicateProduct(r),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),u.success("상품이 성공적으로 복제되었습니다.")},onError:r=>{a.isAxiosError(r)?u.error(r.response?.data?.message||"상품 복제에 실패했습니다."):u.error("상품 복제에 실패했습니다.")}})};export{p as a,m as b,n as c,d,i as e,c as u};
//# sourceMappingURL=useProducts-CsG4l6Yi.js.map
