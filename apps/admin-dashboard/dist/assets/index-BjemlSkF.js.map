{"version":3,"file":"index-BjemlSkF.js","sources":["../../src/components/editor/blocks/slide/SlideEditor.tsx","../../src/components/editor/blocks/slide/AdvancedSlideEditor.tsx","../../src/components/editor/blocks/slide/SlideProgress.tsx","../../src/components/editor/blocks/slide/SlideAccessibility.tsx","../../src/components/editor/blocks/slide/EnhancedSlideViewer.tsx","../../src/components/editor/blocks/slide/BasicNavigation.tsx","../../src/components/editor/blocks/slide/SlideSortableList.tsx","../../src/components/editor/blocks/slide/BulkEditPanel.tsx","../../src/components/editor/blocks/slide/useKeyboardNavigation.ts","../../src/components/editor/blocks/slide/useTouchGestures.ts","../../src/components/editor/blocks/slide/useMouseInteractions.ts","../../src/components/editor/blocks/slide/SlideBlock.tsx","../../src/blocks/media/slide-block.ts","../../src/blocks/media/index.ts"],"sourcesContent":["/**\n * SlideEditor - Edit individual slide content\n */\n\nimport React from 'react';\nimport { \n  Type, \n  Image, \n  Palette, \n  Upload,\n  X\n} from 'lucide-react';\nimport { Slide } from './SlideBlock';\n\ninterface SlideEditorProps {\n  slide: Slide;\n  onChange: (slide: Partial<Slide>) => void;\n  onMediaSelect: (media: { url: string; alt: string }) => void;\n}\n\nconst SlideEditor: React.FC<SlideEditorProps> = ({\n  slide,\n  onChange,\n  onMediaSelect\n}) => {\n  // Handle text changes\n  const handleTextChange = (field: keyof Slide, value: string) => {\n    onChange({ [field]: value });\n  };\n\n  // Handle color changes\n  const handleColorChange = (field: 'backgroundColor' | 'textColor', value: string) => {\n    onChange({ [field]: value });\n  };\n\n  // Handle image upload (simplified for Phase 1)\n  const handleImageUpload = () => {\n    // For Phase 1, we'll use a simple prompt\n    // In production, this would open the WordPress media library\n    const imageUrl = prompt('Enter image URL:');\n    if (imageUrl) {\n      onMediaSelect({ \n        url: imageUrl, \n        alt: slide.imageAlt || 'Slide image' \n      });\n    }\n  };\n\n  // Remove image\n  const removeImage = () => {\n    onChange({ \n      imageUrl: undefined, \n      imageAlt: undefined \n    });\n  };\n\n  return (\n    <div className=\"slide-editor\">\n      <div className=\"slide-editor__header\">\n        <h3>Edit Slide #{slide.order + 1}</h3>\n        <span className=\"slide-type-badge\">{slide.type}</span>\n      </div>\n\n      <div className=\"slide-editor__content\">\n        {/* Colors Section */}\n        <div className=\"editor-section\">\n          <h4>Colors</h4>\n          <div className=\"color-controls\">\n            <div className=\"color-control\">\n              <label>\n                <Palette size={14} />\n                Background Color\n              </label>\n              <div className=\"color-input-wrapper\">\n                <input\n                  type=\"color\"\n                  value={slide.backgroundColor || '#ffffff'}\n                  onChange={(e) => handleColorChange('backgroundColor', e.target.value)}\n                />\n                <input\n                  type=\"text\"\n                  value={slide.backgroundColor || '#ffffff'}\n                  onChange={(e) => handleColorChange('backgroundColor', e.target.value)}\n                  placeholder=\"#ffffff\"\n                />\n              </div>\n            </div>\n            \n            {(slide.type === 'text' || slide.type === 'mixed') && (\n              <div className=\"color-control\">\n                <label>\n                  <Type size={14} />\n                  Text Color\n                </label>\n                <div className=\"color-input-wrapper\">\n                  <input\n                    type=\"color\"\n                    value={slide.textColor || '#000000'}\n                    onChange={(e) => handleColorChange('textColor', e.target.value)}\n                  />\n                  <input\n                    type=\"text\"\n                    value={slide.textColor || '#000000'}\n                    onChange={(e) => handleColorChange('textColor', e.target.value)}\n                    placeholder=\"#000000\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Text Content Section */}\n        {(slide.type === 'text' || slide.type === 'mixed') && (\n          <div className=\"editor-section\">\n            <h4>Text Content</h4>\n            \n            <div className=\"form-group\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                value={slide.title || ''}\n                onChange={(e) => handleTextChange('title', e.target.value)}\n                placeholder=\"Enter slide title...\"\n                className=\"form-input\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Subtitle</label>\n              <input\n                type=\"text\"\n                value={slide.subtitle || ''}\n                onChange={(e) => handleTextChange('subtitle', e.target.value)}\n                placeholder=\"Enter slide subtitle...\"\n                className=\"form-input\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Content</label>\n              <textarea\n                value={slide.content || ''}\n                onChange={(e) => handleTextChange('content', e.target.value)}\n                placeholder=\"Enter slide content...\"\n                className=\"form-textarea\"\n                rows={5}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Image Section */}\n        {(slide.type === 'image' || slide.type === 'mixed') && (\n          <div className=\"editor-section\">\n            <h4>Image</h4>\n            \n            {slide.imageUrl ? (\n              <div className=\"image-preview\">\n                <img \n                  src={slide.imageUrl} \n                  alt={slide.imageAlt || 'Slide image'} \n                />\n                <div className=\"image-actions\">\n                  <button\n                    onClick={handleImageUpload}\n                    className=\"btn btn-secondary\"\n                  >\n                    <Upload size={14} />\n                    Replace Image\n                  </button>\n                  <button\n                    onClick={removeImage}\n                    className=\"btn btn-danger\"\n                  >\n                    <X size={14} />\n                    Remove\n                  </button>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Alt Text</label>\n                  <input\n                    type=\"text\"\n                    value={slide.imageAlt || ''}\n                    onChange={(e) => handleTextChange('imageAlt', e.target.value)}\n                    placeholder=\"Describe the image...\"\n                    className=\"form-input\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"image-upload\">\n                <button\n                  onClick={handleImageUpload}\n                  className=\"upload-btn\"\n                >\n                  <Image size={24} />\n                  <span>Click to add image</span>\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Preview Section */}\n        <div className=\"editor-section\">\n          <h4>Preview</h4>\n          <div \n            className=\"slide-preview\"\n            style={{\n              backgroundColor: slide.backgroundColor || '#ffffff',\n              color: slide.textColor || '#000000'\n            }}\n          >\n            {slide.imageUrl && slide.type === 'image' && (\n              <div className=\"preview-image-only\">\n                <img src={slide.imageUrl} alt={slide.imageAlt} />\n              </div>\n            )}\n            \n            {slide.type === 'mixed' && (\n              <div className=\"preview-mixed\">\n                {slide.imageUrl && (\n                  <div className=\"preview-mixed__image\">\n                    <img src={slide.imageUrl} alt={slide.imageAlt} />\n                  </div>\n                )}\n                <div className=\"preview-mixed__text\">\n                  {slide.title && <h2>{slide.title}</h2>}\n                  {slide.subtitle && <h3>{slide.subtitle}</h3>}\n                  {slide.content && <p>{slide.content}</p>}\n                </div>\n              </div>\n            )}\n            \n            {slide.type === 'text' && (\n              <div className=\"preview-text\">\n                {slide.title && <h2>{slide.title}</h2>}\n                {slide.subtitle && <h3>{slide.subtitle}</h3>}\n                {slide.content && <p>{slide.content}</p>}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlideEditor;","/**\n * AdvancedSlideEditor - Enhanced editor with gradient and advanced text styles\n * Phase 2: Advanced editing features\n */\n\nimport React, { useState } from 'react';\nimport { \n  Type, \n  Image, \n  Palette, \n  Upload,\n  X,\n  Sliders,\n  Bold,\n  Italic,\n  Underline,\n  AlignLeft,\n  AlignCenter,\n  AlignRight,\n  Sparkles\n} from 'lucide-react';\nimport { Slide } from './SlideBlock';\n\ninterface AdvancedSlideEditorProps {\n  slide: Slide;\n  onChange: (slide: Partial<Slide>) => void;\n  onMediaSelect: (media: { url: string; alt: string }) => void;\n}\n\nconst AdvancedSlideEditor: React.FC<AdvancedSlideEditorProps> = ({\n  slide,\n  onChange,\n  onMediaSelect\n}) => {\n  const [showGradient, setShowGradient] = useState(!!slide.backgroundGradient);\n  const [gradientColors, setGradientColors] = useState<string[]>(\n    slide.backgroundGradient?.colors || ['#ffffff', '#000000']\n  );\n  const [gradientAngle, setGradientAngle] = useState(\n    slide.backgroundGradient?.angle || 90\n  );\n  const [backgroundImage, setBackgroundImage] = useState(slide.backgroundImage || '');\n  \n  // Text formatting states\n  const textStyles = slide.textStyles || {};\n  const [fontSize, setFontSize] = useState(textStyles.fontSize || 'medium');\n  const [fontWeight, setFontWeight] = useState(textStyles.fontWeight || '400');\n  const [textAlign, setTextAlign] = useState(textStyles.textAlign || 'center');\n  const [textShadow, setTextShadow] = useState(textStyles.textShadow || 'none');\n  const [lineHeight, setLineHeight] = useState(textStyles.lineHeight || '1.6');\n\n  // Handle text changes\n  const handleTextChange = (field: keyof Slide, value: string) => {\n    onChange({ [field]: value });\n  };\n\n  // Handle gradient changes\n  const handleGradientChange = () => {\n    if (showGradient) {\n      onChange({\n        backgroundGradient: {\n          type: 'linear',\n          angle: gradientAngle,\n          colors: gradientColors\n        }\n      });\n    } else {\n      onChange({ backgroundGradient: undefined });\n    }\n  };\n\n  // Add gradient color stop\n  const addGradientColor = () => {\n    if (gradientColors.length < 4) {\n      const newColors = [...gradientColors, '#808080'];\n      setGradientColors(newColors);\n      onChange({\n        backgroundGradient: {\n          type: 'linear',\n          angle: gradientAngle,\n          colors: newColors\n        }\n      });\n    }\n  };\n\n  // Remove gradient color stop\n  const removeGradientColor = (index: number) => {\n    if (gradientColors.length > 2) {\n      const newColors = gradientColors.filter((_, i) => i !== index);\n      setGradientColors(newColors);\n      onChange({\n        backgroundGradient: {\n          type: 'linear',\n          angle: gradientAngle,\n          colors: newColors\n        }\n      });\n    }\n  };\n\n  // Handle background image\n  const handleBackgroundImage = () => {\n    const imageUrl = prompt('Enter background image URL:');\n    if (imageUrl) {\n      setBackgroundImage(imageUrl);\n      onChange({ backgroundImage: imageUrl });\n    }\n  };\n\n  // Remove background image\n  const removeBackgroundImage = () => {\n    setBackgroundImage('');\n    onChange({ backgroundImage: undefined });\n  };\n\n  // Handle text style changes\n  const updateTextStyles = (newStyles: any) => {\n    const updatedStyles = { ...textStyles, ...newStyles };\n    onChange({ textStyles: updatedStyles });\n  };\n\n  return (\n    <div className=\"advanced-slide-editor\">\n      <div className=\"slide-editor__header\">\n        <h3>Edit Slide #{slide.order + 1}</h3>\n        <div className=\"slide-type-indicators\">\n          <span className=\"slide-type-badge\">{slide.type}</span>\n          {slide.transitionType && (\n            <span className=\"transition-badge\">{slide.transitionType}</span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"slide-editor__content\">\n        {/* Background Section */}\n        <div className=\"editor-section\">\n          <h4>\n            <Palette size={14} />\n            Background\n          </h4>\n          \n          {/* Background Type Selector */}\n          <div className=\"background-type-selector\">\n            <label className=\"radio-option\">\n              <input\n                type=\"radio\"\n                name=\"bgType\"\n                checked={!showGradient && !backgroundImage}\n                onChange={() => {\n                  setShowGradient(false);\n                  setBackgroundImage('');\n                  onChange({ \n                    backgroundGradient: undefined,\n                    backgroundImage: undefined \n                  });\n                }}\n              />\n              Solid Color\n            </label>\n            <label className=\"radio-option\">\n              <input\n                type=\"radio\"\n                name=\"bgType\"\n                checked={showGradient}\n                onChange={() => {\n                  setShowGradient(true);\n                  setBackgroundImage('');\n                  handleGradientChange();\n                }}\n              />\n              Gradient\n            </label>\n            <label className=\"radio-option\">\n              <input\n                type=\"radio\"\n                name=\"bgType\"\n                checked={!!backgroundImage}\n                onChange={() => {\n                  setShowGradient(false);\n                  if (!backgroundImage) {\n                    handleBackgroundImage();\n                  }\n                }}\n              />\n              Image\n            </label>\n          </div>\n\n          {/* Solid Color */}\n          {!showGradient && !backgroundImage && (\n            <div className=\"color-control\">\n              <label>Background Color</label>\n              <div className=\"color-input-wrapper\">\n                <input\n                  type=\"color\"\n                  value={slide.backgroundColor || '#ffffff'}\n                  onChange={(e) => onChange({ backgroundColor: e.target.value })}\n                />\n                <input\n                  type=\"text\"\n                  value={slide.backgroundColor || '#ffffff'}\n                  onChange={(e) => onChange({ backgroundColor: e.target.value })}\n                  placeholder=\"#ffffff\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Gradient Controls */}\n          {showGradient && (\n            <div className=\"gradient-editor\">\n              <div className=\"gradient-preview\" \n                style={{\n                  background: `linear-gradient(${gradientAngle}deg, ${gradientColors.join(', ')})`\n                }}\n              />\n              \n              <div className=\"gradient-colors-list\">\n                {gradientColors.map((color, index) => (\n                  <div key={index} className=\"gradient-color-item\">\n                    <span>Color {index + 1}</span>\n                    <div className=\"color-input-wrapper\">\n                      <input\n                        type=\"color\"\n                        value={color}\n                        onChange={(e) => {\n                          const newColors = [...gradientColors];\n                          newColors[index] = e.target.value;\n                          setGradientColors(newColors);\n                          handleGradientChange();\n                        }}\n                      />\n                      <input\n                        type=\"text\"\n                        value={color}\n                        onChange={(e) => {\n                          const newColors = [...gradientColors];\n                          newColors[index] = e.target.value;\n                          setGradientColors(newColors);\n                          handleGradientChange();\n                        }}\n                      />\n                      {gradientColors.length > 2 && (\n                        <button\n                          className=\"remove-color-btn\"\n                          onClick={() => removeGradientColor(index)}\n                        >\n                          <X size={14} />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {gradientColors.length < 4 && (\n                <button className=\"add-color-btn\" onClick={addGradientColor}>\n                  + Add Color Stop\n                </button>\n              )}\n              \n              <div className=\"gradient-angle-control\">\n                <label>Angle: {gradientAngle}°</label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"360\"\n                  value={gradientAngle}\n                  onChange={(e) => {\n                    const angle = parseInt(e.target.value);\n                    setGradientAngle(angle);\n                    onChange({\n                      backgroundGradient: {\n                        type: 'linear',\n                        angle,\n                        colors: gradientColors\n                      }\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Background Image */}\n          {backgroundImage && (\n            <div className=\"background-image-control\">\n              <div className=\"image-preview\">\n                <img src={backgroundImage} alt=\"Background\" />\n                <div className=\"image-actions\">\n                  <button onClick={handleBackgroundImage} className=\"btn btn-secondary\">\n                    <Upload size={14} />\n                    Replace\n                  </button>\n                  <button onClick={removeBackgroundImage} className=\"btn btn-danger\">\n                    <X size={14} />\n                    Remove\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Advanced Text Styling */}\n        {(slide.type === 'text' || slide.type === 'mixed') && (\n          <div className=\"editor-section\">\n            <h4>\n              <Type size={14} />\n              Text Styling\n            </h4>\n\n            {/* Text Color */}\n            <div className=\"color-control\">\n              <label>Text Color</label>\n              <div className=\"color-input-wrapper\">\n                <input\n                  type=\"color\"\n                  value={slide.textColor || '#000000'}\n                  onChange={(e) => onChange({ textColor: e.target.value })}\n                />\n                <input\n                  type=\"text\"\n                  value={slide.textColor || '#000000'}\n                  onChange={(e) => onChange({ textColor: e.target.value })}\n                  placeholder=\"#000000\"\n                />\n              </div>\n            </div>\n\n            {/* Font Size */}\n            <div className=\"form-group\">\n              <label>Font Size</label>\n              <div className=\"button-group\">\n                {['small', 'medium', 'large', 'x-large'].map(size => (\n                  <button\n                    key={size}\n                    className={`size-btn ${fontSize === size ? 'active' : ''}`}\n                    onClick={() => {\n                      setFontSize(size as 'small' | 'medium' | 'large' | 'x-large');\n                      updateTextStyles({ fontSize: size });\n                    }}\n                  >\n                    {size.charAt(0).toUpperCase()}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Font Weight */}\n            <div className=\"form-group\">\n              <label>Font Weight</label>\n              <input\n                type=\"range\"\n                min=\"300\"\n                max=\"900\"\n                step=\"100\"\n                value={fontWeight}\n                onChange={(e) => {\n                  setFontWeight(e.target.value);\n                  updateTextStyles({ fontWeight: e.target.value });\n                }}\n              />\n              <span className=\"range-value\">{fontWeight}</span>\n            </div>\n\n            {/* Text Alignment */}\n            <div className=\"form-group\">\n              <label>Text Alignment</label>\n              <div className=\"button-group\">\n                <button\n                  className={`align-btn ${textAlign === 'left' ? 'active' : ''}`}\n                  onClick={() => {\n                    setTextAlign('left');\n                    updateTextStyles({ textAlign: 'left' });\n                  }}\n                >\n                  <AlignLeft size={16} />\n                </button>\n                <button\n                  className={`align-btn ${textAlign === 'center' ? 'active' : ''}`}\n                  onClick={() => {\n                    setTextAlign('center');\n                    updateTextStyles({ textAlign: 'center' });\n                  }}\n                >\n                  <AlignCenter size={16} />\n                </button>\n                <button\n                  className={`align-btn ${textAlign === 'right' ? 'active' : ''}`}\n                  onClick={() => {\n                    setTextAlign('right');\n                    updateTextStyles({ textAlign: 'right' });\n                  }}\n                >\n                  <AlignRight size={16} />\n                </button>\n              </div>\n            </div>\n\n            {/* Text Shadow */}\n            <div className=\"form-group\">\n              <label>\n                <Sparkles size={14} />\n                Text Shadow\n              </label>\n              <select\n                value={textShadow}\n                onChange={(e) => {\n                  setTextShadow(e.target.value as 'none' | 'subtle' | 'medium' | 'strong' | 'glow');\n                  updateTextStyles({ textShadow: e.target.value });\n                }}\n              >\n                <option value=\"none\">None</option>\n                <option value=\"subtle\">Subtle</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"strong\">Strong</option>\n                <option value=\"glow\">Glow Effect</option>\n              </select>\n            </div>\n\n            {/* Line Height */}\n            <div className=\"form-group\">\n              <label>Line Height</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"3\"\n                step=\"0.1\"\n                value={lineHeight}\n                onChange={(e) => {\n                  setLineHeight(e.target.value);\n                  updateTextStyles({ lineHeight: e.target.value });\n                }}\n              />\n              <span className=\"range-value\">{lineHeight}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Text Content */}\n        {(slide.type === 'text' || slide.type === 'mixed') && (\n          <div className=\"editor-section\">\n            <h4>Content</h4>\n            \n            <div className=\"form-group\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                value={slide.title || ''}\n                onChange={(e) => handleTextChange('title', e.target.value)}\n                placeholder=\"Enter slide title...\"\n                className=\"form-input\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Subtitle</label>\n              <input\n                type=\"text\"\n                value={slide.subtitle || ''}\n                onChange={(e) => handleTextChange('subtitle', e.target.value)}\n                placeholder=\"Enter slide subtitle...\"\n                className=\"form-input\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Body Text</label>\n              <textarea\n                value={slide.content || ''}\n                onChange={(e) => handleTextChange('content', e.target.value)}\n                placeholder=\"Enter slide content...\"\n                className=\"form-textarea\"\n                rows={5}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Image Section */}\n        {(slide.type === 'image' || slide.type === 'mixed') && (\n          <div className=\"editor-section\">\n            <h4>\n              <Image size={14} />\n              Main Image\n            </h4>\n            \n            {slide.imageUrl ? (\n              <div className=\"image-preview\">\n                <img src={slide.imageUrl} alt={slide.imageAlt || 'Slide image'} />\n                <div className=\"image-actions\">\n                  <button\n                    onClick={() => {\n                      const imageUrl = prompt('Enter image URL:', slide.imageUrl);\n                      if (imageUrl) {\n                        onMediaSelect({ \n                          url: imageUrl, \n                          alt: slide.imageAlt || 'Slide image' \n                        });\n                      }\n                    }}\n                    className=\"btn btn-secondary\"\n                  >\n                    <Upload size={14} />\n                    Replace\n                  </button>\n                  <button\n                    onClick={() => onChange({ \n                      imageUrl: undefined, \n                      imageAlt: undefined \n                    })}\n                    className=\"btn btn-danger\"\n                  >\n                    <X size={14} />\n                    Remove\n                  </button>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Alt Text</label>\n                  <input\n                    type=\"text\"\n                    value={slide.imageAlt || ''}\n                    onChange={(e) => handleTextChange('imageAlt', e.target.value)}\n                    placeholder=\"Describe the image...\"\n                    className=\"form-input\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"image-upload\">\n                <button\n                  onClick={() => {\n                    const imageUrl = prompt('Enter image URL:');\n                    if (imageUrl) {\n                      onMediaSelect({ \n                        url: imageUrl, \n                        alt: 'Slide image' \n                      });\n                    }\n                  }}\n                  className=\"upload-btn\"\n                >\n                  <Image size={24} />\n                  <span>Click to add image</span>\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSlideEditor;","/**\n * SlideProgress - Progress indicators and loading states\n * Phase 3: Interaction features\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Loader2 } from 'lucide-react';\n\ninterface SlideProgressProps {\n  current: number;\n  total: number;\n  autoPlayInterval?: number;\n  isPlaying?: boolean;\n  showProgressBar?: boolean;\n  showIndicators?: boolean;\n  position?: 'top' | 'bottom';\n  color?: string;\n}\n\nexport const SlideProgress: React.FC<SlideProgressProps> = ({\n  current,\n  total,\n  autoPlayInterval = 5000,\n  isPlaying = false,\n  showProgressBar = true,\n  showIndicators = true,\n  position = 'bottom',\n  color = '#0073aa'\n}) => {\n  const [progress, setProgress] = useState(0);\n  \n  // Auto-play progress animation\n  useEffect(() => {\n    if (isPlaying && autoPlayInterval > 0) {\n      setProgress(0);\n      const startTime = Date.now();\n      \n      const updateProgress = () => {\n        const elapsed = Date.now() - startTime;\n        const newProgress = Math.min((elapsed / autoPlayInterval) * 100, 100);\n        setProgress(newProgress);\n        \n        if (newProgress < 100 && isPlaying) {\n          requestAnimationFrame(updateProgress);\n        }\n      };\n      \n      requestAnimationFrame(updateProgress);\n    } else {\n      setProgress(0);\n    }\n  }, [current, isPlaying, autoPlayInterval]);\n\n  return (\n    <div className={`slide-progress slide-progress--${position}`}>\n      {showProgressBar && (\n        <div className=\"slide-progress__bar\">\n          <div \n            className=\"slide-progress__fill\"\n            style={{\n              width: `${(current / total) * 100}%`,\n              backgroundColor: color\n            }}\n          />\n          {isPlaying && (\n            <div \n              className=\"slide-progress__auto-play\"\n              style={{\n                width: `${progress}%`,\n                backgroundColor: color,\n                opacity: 0.5\n              }}\n            />\n          )}\n        </div>\n      )}\n      \n      {showIndicators && (\n        <div className=\"slide-progress__indicators\">\n          <span className=\"slide-progress__current\">{current + 1}</span>\n          <span className=\"slide-progress__separator\">/</span>\n          <span className=\"slide-progress__total\">{total}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface SlideLoadingProps {\n  isLoading?: boolean;\n  message?: string;\n  type?: 'spinner' | 'dots' | 'pulse';\n}\n\nexport const SlideLoading: React.FC<SlideLoadingProps> = ({\n  isLoading = false,\n  message = 'Loading slide...',\n  type = 'spinner'\n}) => {\n  if (!isLoading) return null;\n\n  return (\n    <div className=\"slide-loading\">\n      <div className={`slide-loading__indicator slide-loading__indicator--${type}`}>\n        {type === 'spinner' && (\n          <Loader2 className=\"slide-loading__spinner\" size={32} />\n        )}\n        {type === 'dots' && (\n          <div className=\"slide-loading__dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        {type === 'pulse' && (\n          <div className=\"slide-loading__pulse\"></div>\n        )}\n      </div>\n      {message && (\n        <div className=\"slide-loading__message\">{message}</div>\n      )}\n    </div>\n  );\n};\n\ninterface ImageLoaderProps {\n  src: string;\n  alt?: string;\n  onLoad?: () => void;\n  onError?: (error: Error) => void;\n  lazy?: boolean;\n  placeholder?: string;\n  className?: string;\n}\n\nexport const ImageLoader: React.FC<ImageLoaderProps> = ({\n  src,\n  alt = '',\n  onLoad,\n  onError,\n  lazy = true,\n  placeholder = 'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 300\"%3E%3Crect fill=\"%23f0f0f0\" width=\"400\" height=\"300\"/%3E%3C/svg%3E',\n  className = ''\n}) => {\n  const [imageState, setImageState] = useState<'loading' | 'loaded' | 'error'>('loading');\n  const [imageSrc, setImageSrc] = useState(lazy ? placeholder : src);\n\n  useEffect(() => {\n    if (!lazy) {\n      setImageSrc(src);\n      return;\n    }\n\n    // Create an IntersectionObserver for lazy loading\n    const img = new Image();\n    img.src = src;\n    \n    img.onload = () => {\n      setImageSrc(src);\n      setImageState('loaded');\n      if (onLoad) onLoad();\n    };\n    \n    img.onerror = () => {\n      setImageState('error');\n      if (onError) onError(new Error(`Failed to load image: ${src}`));\n    };\n  }, [src, lazy, onLoad, onError, placeholder]);\n\n  return (\n    <div className={`image-loader ${className} image-loader--${imageState}`}>\n      {imageState === 'loading' && (\n        <div className=\"image-loader__loading\">\n          <Loader2 className=\"image-loader__spinner\" size={24} />\n        </div>\n      )}\n      {imageState === 'error' ? (\n        <div className=\"image-loader__error\">\n          <span>Failed to load image</span>\n        </div>\n      ) : (\n        <img\n          src={imageSrc}\n          alt={alt}\n          loading={lazy ? 'lazy' : 'eager'}\n          className=\"image-loader__img\"\n          onLoad={() => setImageState('loaded')}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SlideProgress;","/**\n * SlideAccessibility - Accessibility components and utilities\n * Phase 3: Interaction features\n */\n\nimport React, { useEffect, useRef } from 'react';\nimport { AlertCircle, Volume2, VolumeX } from 'lucide-react';\n\ninterface SlideAccessibilityProps {\n  currentSlide: number;\n  totalSlides: number;\n  slideTitle?: string;\n  isPlaying?: boolean;\n  onAnnounce?: (message: string) => void;\n}\n\n// Screen reader announcements\nexport const SlideAnnouncer: React.FC<SlideAccessibilityProps> = ({\n  currentSlide,\n  totalSlides,\n  slideTitle,\n  isPlaying,\n  onAnnounce\n}) => {\n  const announcerRef = useRef<HTMLDivElement>(null);\n  const lastAnnouncedSlide = useRef<number>(-1);\n\n  useEffect(() => {\n    if (currentSlide !== lastAnnouncedSlide.current) {\n      const message = `Slide ${currentSlide + 1} of ${totalSlides}${\n        slideTitle ? `: ${slideTitle}` : ''\n      }${isPlaying ? ', auto-playing' : ''}`;\n      \n      if (announcerRef.current) {\n        announcerRef.current.textContent = message;\n      }\n      \n      if (onAnnounce) {\n        onAnnounce(message);\n      }\n      \n      lastAnnouncedSlide.current = currentSlide;\n    }\n  }, [currentSlide, totalSlides, slideTitle, isPlaying, onAnnounce]);\n\n  return (\n    <div\n      ref={announcerRef}\n      className=\"sr-only\"\n      role=\"status\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n    />\n  );\n};\n\ninterface FocusTrapProps {\n  children: React.ReactNode;\n  active?: boolean;\n  onEscape?: () => void;\n}\n\n// Focus trap for modal/fullscreen mode\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  children,\n  active = false,\n  onEscape\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    if (!active || !containerRef.current) return;\n\n    // Store previous focus\n    previousFocusRef.current = document.activeElement as HTMLElement;\n\n    // Get focusable elements\n    const getFocusableElements = () => {\n      if (!containerRef.current) return [];\n      \n      const selectors = [\n        'button:not([disabled])',\n        'a[href]',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        '[tabindex]:not([tabindex=\"-1\"])'\n      ].join(', ');\n      \n      return Array.from(containerRef.current.querySelectorAll(selectors)) as HTMLElement[];\n    };\n\n    // Focus first element\n    const focusableElements = getFocusableElements();\n    if (focusableElements.length > 0) {\n      focusableElements[0].focus();\n    }\n\n    // Handle tab navigation\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && onEscape) {\n        onEscape();\n        return;\n      }\n\n      if (e.key !== 'Tab') return;\n\n      const focusableElements = getFocusableElements();\n      if (focusableElements.length === 0) return;\n\n      const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\n      \n      if (e.shiftKey) {\n        // Backward tab\n        if (currentIndex <= 0) {\n          e.preventDefault();\n          focusableElements[focusableElements.length - 1].focus();\n        }\n      } else {\n        // Forward tab\n        if (currentIndex === focusableElements.length - 1 || currentIndex === -1) {\n          e.preventDefault();\n          focusableElements[0].focus();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      \n      // Restore previous focus\n      if (previousFocusRef.current && previousFocusRef.current.focus) {\n        previousFocusRef.current.focus();\n      }\n    };\n  }, [active, onEscape]);\n\n  return (\n    <div ref={containerRef} className=\"focus-trap\">\n      {children}\n    </div>\n  );\n};\n\ninterface SkipLinksProps {\n  onSkipToContent?: () => void;\n  onSkipToNavigation?: () => void;\n  onSkipToControls?: () => void;\n}\n\n// Skip links for keyboard navigation\nexport const SkipLinks: React.FC<SkipLinksProps> = ({\n  onSkipToContent,\n  onSkipToNavigation,\n  onSkipToControls\n}) => {\n  return (\n    <div className=\"skip-links\">\n      {onSkipToContent && (\n        <button\n          className=\"skip-link\"\n          onClick={onSkipToContent}\n        >\n          Skip to slide content\n        </button>\n      )}\n      {onSkipToNavigation && (\n        <button\n          className=\"skip-link\"\n          onClick={onSkipToNavigation}\n        >\n          Skip to navigation\n        </button>\n      )}\n      {onSkipToControls && (\n        <button\n          className=\"skip-link\"\n          onClick={onSkipToControls}\n        >\n          Skip to controls\n        </button>\n      )}\n    </div>\n  );\n};\n\ninterface ReducedMotionProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n// Component that respects prefers-reduced-motion\nexport const ReducedMotion: React.FC<ReducedMotionProps> = ({\n  children,\n  fallback\n}) => {\n  const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(false);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    const handleChange = (e: MediaQueryListEvent) => {\n      setPrefersReducedMotion(e.matches);\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  if (prefersReducedMotion && fallback) {\n    return <>{fallback}</>;\n  }\n\n  return (\n    <div className={prefersReducedMotion ? 'reduced-motion' : ''}>\n      {children}\n    </div>\n  );\n};\n\ninterface AudioDescriptionProps {\n  description: string;\n  enabled?: boolean;\n  autoPlay?: boolean;\n  volume?: number;\n}\n\n// Audio description for visually impaired users\nexport const AudioDescription: React.FC<AudioDescriptionProps> = ({\n  description,\n  enabled = false,\n  autoPlay = false,\n  volume = 0.8\n}) => {\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [isMuted, setIsMuted] = React.useState(false);\n  const synthRef = useRef<SpeechSynthesisUtterance | null>(null);\n\n  useEffect(() => {\n    if (!enabled || !description) return;\n\n    if ('speechSynthesis' in window) {\n      synthRef.current = new SpeechSynthesisUtterance(description);\n      synthRef.current.volume = isMuted ? 0 : volume;\n      \n      if (autoPlay) {\n        window.speechSynthesis.speak(synthRef.current);\n        setIsPlaying(true);\n      }\n\n      synthRef.current.onend = () => {\n        setIsPlaying(false);\n      };\n    }\n\n    return () => {\n      if (window.speechSynthesis) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, [description, enabled, autoPlay, volume, isMuted]);\n\n  const togglePlayback = () => {\n    if (!synthRef.current) return;\n\n    if (isPlaying) {\n      window.speechSynthesis.pause();\n      setIsPlaying(false);\n    } else {\n      window.speechSynthesis.resume();\n      setIsPlaying(true);\n    }\n  };\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    if (synthRef.current) {\n      synthRef.current.volume = !isMuted ? 0 : volume;\n    }\n  };\n\n  if (!enabled) return null;\n\n  return (\n    <div className=\"audio-description\">\n      <button\n        onClick={togglePlayback}\n        aria-label={isPlaying ? 'Pause audio description' : 'Play audio description'}\n        className=\"audio-description__toggle\"\n      >\n        {isPlaying ? 'Pause' : 'Play'} Audio\n      </button>\n      <button\n        onClick={toggleMute}\n        aria-label={isMuted ? 'Unmute audio' : 'Mute audio'}\n        className=\"audio-description__mute\"\n      >\n        {isMuted ? <VolumeX size={16} /> : <Volume2 size={16} />}\n      </button>\n      <span className=\"sr-only\">{description}</span>\n    </div>\n  );\n};\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\n// Error boundary for graceful error handling\nexport class SlideErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n    console.error('Slide error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <div className=\"slide-error\">\n          <AlertCircle size={48} />\n          <h2>Something went wrong</h2>\n          <p>Unable to display this slide.</p>\n          {this.state.error && (\n            <details className=\"slide-error__details\">\n              <summary>Error details</summary>\n              <pre>{this.state.error.toString()}</pre>\n            </details>\n          )}\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default SlideAnnouncer;","/**\n * EnhancedSlideViewer - SlideViewer with Phase 3 features\n * Includes lazy loading, error handling, and accessibility\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Slide } from './types';\nimport { ImageLoader, SlideLoading } from './SlideProgress';\nimport { SlideErrorBoundary, ReducedMotion } from './SlideAccessibility';\n\ninterface EnhancedSlideViewerProps {\n  slide: Slide;\n  transition: 'fade' | 'slide' | 'zoom' | 'flip' | 'cube' | 'none';\n  isActive: boolean;\n  prefetchNext?: boolean;\n  onImageLoad?: () => void;\n  onImageError?: (error: Error) => void;\n  reducedMotion?: boolean;\n  lazyLoad?: boolean;\n}\n\nconst EnhancedSlideViewer: React.FC<EnhancedSlideViewerProps> = ({\n  slide,\n  transition,\n  isActive,\n  prefetchNext = true,\n  onImageLoad,\n  onImageError,\n  reducedMotion = false,\n  lazyLoad = true\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const getTransitionClass = () => {\n    if (!isActive) return 'slide-hidden';\n    if (reducedMotion) return 'slide-visible slide-transition-none';\n    return `slide-visible slide-transition-${transition}`;\n  };\n\n  // Apply text styles\n  const getTextStyles = () => {\n    const styles: React.CSSProperties = {};\n    \n    if (slide.textStyles) {\n      if (slide.textStyles.fontSize) {\n        styles.fontSize = `var(--text-size-${slide.textStyles.fontSize})`;\n      }\n      if (slide.textStyles.fontWeight) {\n        styles.fontWeight = slide.textStyles.fontWeight;\n      }\n      if (slide.textStyles.textAlign) {\n        styles.textAlign = slide.textStyles.textAlign;\n      }\n      if (slide.textStyles.lineHeight) {\n        styles.lineHeight = slide.textStyles.lineHeight;\n      }\n    }\n    \n    return styles;\n  };\n\n  // Get text shadow class\n  const getTextShadowClass = () => {\n    if (slide.textStyles?.textShadow && slide.textStyles.textShadow !== 'none') {\n      return `text-shadow-${slide.textStyles.textShadow}`;\n    }\n    return '';\n  };\n\n  // Get background style\n  const getBackgroundStyle = (): React.CSSProperties => {\n    const style: React.CSSProperties = {\n      color: slide.textColor || '#000000'\n    };\n\n    if (slide.backgroundGradient) {\n      const { type, angle = 90, colors } = slide.backgroundGradient;\n      if (type === 'linear') {\n        style.background = `linear-gradient(${angle}deg, ${colors.join(', ')})`;\n      } else if (type === 'radial') {\n        style.background = `radial-gradient(circle, ${colors.join(', ')})`;\n      }\n    } else if (slide.backgroundImage) {\n      style.backgroundImage = `url(${slide.backgroundImage})`;\n      style.backgroundSize = 'cover';\n      style.backgroundPosition = 'center';\n    } else {\n      style.backgroundColor = slide.backgroundColor || '#ffffff';\n    }\n\n    return style;\n  };\n\n  const handleImageLoad = () => {\n    setIsLoading(false);\n    if (onImageLoad) onImageLoad();\n  };\n\n  const handleImageError = (error: Error) => {\n    setIsLoading(false);\n    setHasError(true);\n    if (onImageError) onImageError(error);\n  };\n\n  const renderContent = () => {\n    switch (slide.type) {\n      case 'text':\n        return (\n          <div \n            className={`slide-content slide-content--text ${getTextShadowClass()}`}\n            style={getTextStyles()}\n          >\n            {slide.title && (\n              <h1 className=\"slide-title\">{slide.title}</h1>\n            )}\n            {slide.subtitle && (\n              <h2 className=\"slide-subtitle\">{slide.subtitle}</h2>\n            )}\n            {slide.content && (\n              <div className=\"slide-body\">\n                {slide.content.split('\\n').map((paragraph, index) => (\n                  <p key={index}>{paragraph}</p>\n                ))}\n              </div>\n            )}\n          </div>\n        );\n\n      case 'image':\n        return (\n          <div className=\"slide-content slide-content--image\">\n            {slide.imageUrl && (\n              <ImageLoader\n                src={slide.imageUrl}\n                alt={slide.imageAlt || 'Slide image'}\n                onLoad={handleImageLoad}\n                onError={handleImageError}\n                lazy={lazyLoad && !isActive}\n                className=\"slide-image\"\n              />\n            )}\n          </div>\n        );\n\n      case 'mixed':\n        return (\n          <div \n            className={`slide-content slide-content--mixed ${getTextShadowClass()}`}\n            style={getTextStyles()}\n          >\n            <div className=\"slide-mixed-container\">\n              {slide.imageUrl && (\n                <div className=\"slide-mixed__image\">\n                  <ImageLoader\n                    src={slide.imageUrl}\n                    alt={slide.imageAlt || 'Slide image'}\n                    onLoad={handleImageLoad}\n                    onError={handleImageError}\n                    lazy={lazyLoad && !isActive}\n                  />\n                </div>\n              )}\n              <div className=\"slide-mixed__text\">\n                {slide.title && (\n                  <h1 className=\"slide-title\">{slide.title}</h1>\n                )}\n                {slide.subtitle && (\n                  <h2 className=\"slide-subtitle\">{slide.subtitle}</h2>\n                )}\n                {slide.content && (\n                  <div className=\"slide-body\">\n                    {slide.content.split('\\n').map((paragraph, index) => (\n                      <p key={index}>{paragraph}</p>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  // Skip invisible slides\n  if (slide.visible === false) {\n    return null;\n  }\n\n  return (\n    <SlideErrorBoundary\n      fallback={\n        <div className=\"slide-viewer slide-viewer--error\">\n          <div className=\"slide-error\">\n            <p>Unable to display this slide</p>\n          </div>\n        </div>\n      }\n    >\n      <ReducedMotion\n        fallback={\n          <div \n            className=\"slide-viewer slide-visible slide-transition-none\"\n            style={getBackgroundStyle()}\n            role=\"region\"\n            aria-label={`Slide: ${slide.title || 'Untitled'}`}\n            aria-live={isActive ? 'polite' : 'off'}\n          >\n            {renderContent()}\n          </div>\n        }\n      >\n        <div \n          className={`slide-viewer ${getTransitionClass()}`}\n          style={getBackgroundStyle()}\n          role=\"region\"\n          aria-label={`Slide: ${slide.title || 'Untitled'}`}\n          aria-live={isActive ? 'polite' : 'off'}\n          data-slide-type={slide.type}\n        >\n          {isLoading && (\n            <SlideLoading isLoading={true} message=\"Loading slide...\" />\n          )}\n          {renderContent()}\n        </div>\n      </ReducedMotion>\n    </SlideErrorBoundary>\n  );\n};\n\nexport default EnhancedSlideViewer;","/**\n * BasicNavigation - Navigation controls for slides\n */\n\nimport React from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface BasicNavigationProps {\n  currentSlide: number;\n  totalSlides: number;\n  onPrev: () => void;\n  onNext: () => void;\n  onGoToSlide: (index: number) => void;\n  showPagination: boolean;\n}\n\nconst BasicNavigation: React.FC<BasicNavigationProps> = ({\n  currentSlide,\n  totalSlides,\n  onPrev,\n  onNext,\n  onGoToSlide,\n  showPagination\n}) => {\n  return (\n    <div className=\"slide-navigation\">\n      {/* Previous/Next Arrows */}\n      <button\n        className=\"slide-navigation__arrow slide-navigation__arrow--prev\"\n        onClick={onPrev}\n        aria-label=\"Previous slide\"\n        disabled={totalSlides <= 1}\n      >\n        <ChevronLeft size={24} />\n      </button>\n      \n      <button\n        className=\"slide-navigation__arrow slide-navigation__arrow--next\"\n        onClick={onNext}\n        aria-label=\"Next slide\"\n        disabled={totalSlides <= 1}\n      >\n        <ChevronRight size={24} />\n      </button>\n\n      {/* Pagination Dots */}\n      {showPagination && (\n        <div className=\"slide-navigation__pagination\">\n          {Array.from({ length: totalSlides }, (_, index) => (\n            <button\n              key={index}\n              className={`pagination-dot ${\n                currentSlide === index ? 'active' : ''\n              }`}\n              onClick={() => onGoToSlide(index)}\n              aria-label={`Go to slide ${index + 1}`}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Slide Counter */}\n      <div className=\"slide-navigation__counter\">\n        {currentSlide + 1} / {totalSlides}\n      </div>\n    </div>\n  );\n};\n\nexport default BasicNavigation;","/**\n * SlideSortableList - Drag-and-drop reorderable slide list\n * Phase 2: Advanced editing features\n */\n\nimport React, { useState } from 'react';\nimport {\n  DndContext,\n  DragEndEvent,\n  DragStartEvent,\n  DragOverlay,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragOverEvent\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy\n} from '@dnd-kit/sortable';\nimport {\n  useSortable\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { \n  GripVertical, \n  Copy, \n  Trash2, \n  Eye,\n  EyeOff,\n  Image,\n  Type,\n  Layers\n} from 'lucide-react';\nimport { Slide } from './SlideBlock';\n\ninterface SlideSortableListProps {\n  slides: Slide[];\n  currentSlide: number;\n  onReorder: (slides: Slide[]) => void;\n  onSelect: (index: number) => void;\n  onDuplicate: (index: number) => void;\n  onDelete: (index: number) => void;\n  onToggleVisibility?: (index: number) => void;\n  selectedSlides?: Set<number>;\n  onSelectionChange?: (selected: Set<number>) => void;\n}\n\ninterface SortableSlideItemProps {\n  slide: Slide;\n  index: number;\n  isActive: boolean;\n  isSelected: boolean;\n  onSelect: () => void;\n  onDuplicate: () => void;\n  onDelete: () => void;\n  onToggleVisibility?: () => void;\n  onMultiSelect?: (add: boolean) => void;\n}\n\nconst SortableSlideItem: React.FC<SortableSlideItemProps> = ({\n  slide,\n  index,\n  isActive,\n  isSelected,\n  onSelect,\n  onDuplicate,\n  onDelete,\n  onToggleVisibility,\n  onMultiSelect\n}) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ id: slide.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  const getSlideIcon = () => {\n    switch (slide.type) {\n      case 'text': return <Type size={14} />;\n      case 'image': return <Image size={14} />;\n      case 'mixed': return <Layers size={14} />;\n      default: return null;\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.shiftKey && onMultiSelect) {\n      onMultiSelect(true);\n    } else if (e.ctrlKey || e.metaKey) {\n      onMultiSelect?.(true);\n    } else {\n      onSelect();\n    }\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`slide-sortable-item ${isActive ? 'active' : ''} ${isSelected ? 'selected' : ''} ${isDragging ? 'dragging' : ''}`}\n      onClick={handleClick}\n    >\n      <div className=\"slide-sortable-item__drag-handle\" {...attributes} {...listeners}>\n        <GripVertical size={16} />\n      </div>\n\n      <div className=\"slide-sortable-item__thumbnail\">\n        {slide.imageUrl ? (\n          <img src={slide.imageUrl} alt=\"\" />\n        ) : (\n          <div \n            className=\"thumbnail-placeholder\"\n            style={{ backgroundColor: slide.backgroundColor || '#f0f0f0' }}\n          >\n            {getSlideIcon()}\n          </div>\n        )}\n        <span className=\"slide-number\">#{index + 1}</span>\n      </div>\n\n      <div className=\"slide-sortable-item__content\">\n        <div className=\"slide-title\">\n          {slide.title || `Slide ${index + 1}`}\n        </div>\n        <div className=\"slide-type\">\n          {getSlideIcon()}\n          <span>{slide.type}</span>\n        </div>\n      </div>\n\n      <div className=\"slide-sortable-item__actions\">\n        {onToggleVisibility && (\n          <button\n            className=\"action-btn\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onToggleVisibility();\n            }}\n            title={slide.visible !== false ? \"Hide slide\" : \"Show slide\"}\n          >\n            {slide.visible !== false ? <Eye size={14} /> : <EyeOff size={14} />}\n          </button>\n        )}\n        <button\n          className=\"action-btn\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onDuplicate();\n          }}\n          title=\"Duplicate slide\"\n        >\n          <Copy size={14} />\n        </button>\n        <button\n          className=\"action-btn action-btn--danger\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onDelete();\n          }}\n          title=\"Delete slide\"\n        >\n          <Trash2 size={14} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst SlideSortableList: React.FC<SlideSortableListProps> = ({\n  slides,\n  currentSlide,\n  onReorder,\n  onSelect,\n  onDuplicate,\n  onDelete,\n  onToggleVisibility,\n  selectedSlides = new Set(),\n  onSelectionChange\n}) => {\n  const [activeId, setActiveId] = useState<string | null>(null);\n  \n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event;\n    setActiveId(active.id as string);\n  };\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    \n    if (over && active.id !== over.id) {\n      const oldIndex = slides.findIndex(slide => slide.id === active.id);\n      const newIndex = slides.findIndex(slide => slide.id === over.id);\n      \n      const newSlides = arrayMove(slides, oldIndex, newIndex);\n      // Update order numbers\n      newSlides.forEach((slide, index) => {\n        slide.order = index;\n      });\n      \n      onReorder(newSlides);\n    }\n    \n    setActiveId(null);\n  };\n\n  const handleDragCancel = () => {\n    setActiveId(null);\n  };\n\n  const handleMultiSelect = (index: number, add: boolean) => {\n    if (!onSelectionChange) return;\n    \n    const newSelection = new Set(selectedSlides);\n    if (add) {\n      if (newSelection.has(index)) {\n        newSelection.delete(index);\n      } else {\n        newSelection.add(index);\n      }\n    } else {\n      newSelection.clear();\n      newSelection.add(index);\n    }\n    onSelectionChange(newSelection);\n  };\n\n  const activeSlide = activeId ? slides.find(s => s.id === activeId) : null;\n\n  return (\n    <div className=\"slide-sortable-list\">\n      <DndContext\n        sensors={sensors}\n        collisionDetection={closestCenter}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragCancel}\n      >\n        <SortableContext\n          items={slides.map(s => s.id)}\n          strategy={verticalListSortingStrategy}\n        >\n          <div className=\"slide-sortable-list__items\">\n            {slides.map((slide, index) => (\n              <SortableSlideItem\n                key={slide.id}\n                slide={slide}\n                index={index}\n                isActive={currentSlide === index}\n                isSelected={selectedSlides.has(index)}\n                onSelect={() => onSelect(index)}\n                onDuplicate={() => onDuplicate(index)}\n                onDelete={() => onDelete(index)}\n                onToggleVisibility={onToggleVisibility ? () => onToggleVisibility(index) : undefined}\n                onMultiSelect={(add) => handleMultiSelect(index, add)}\n              />\n            ))}\n          </div>\n        </SortableContext>\n        \n        <DragOverlay>\n          {activeSlide ? (\n            <div className=\"slide-sortable-item dragging-overlay\">\n              <div className=\"slide-sortable-item__content\">\n                <div className=\"slide-title\">\n                  {activeSlide.title || 'Slide'}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </DragOverlay>\n      </DndContext>\n    </div>\n  );\n};\n\nexport default SlideSortableList;","/**\n * BulkEditPanel - Bulk editing for multiple slides\n * Phase 2: Advanced editing features\n */\n\nimport React, { useState } from 'react';\nimport {\n  Palette,\n  Type,\n  Image,\n  Settings,\n  Check,\n  X,\n  Layers,\n  Copy,\n  Trash2,\n  Eye,\n  EyeOff\n} from 'lucide-react';\nimport { Slide } from './SlideBlock';\n\ninterface BulkEditPanelProps {\n  slides: Slide[];\n  selectedIndices: Set<number>;\n  onApplyChanges: (indices: number[], changes: Partial<Slide>) => void;\n  onDuplicateSelected: () => void;\n  onDeleteSelected: () => void;\n  onToggleVisibilitySelected: () => void;\n  onClose: () => void;\n}\n\nconst BulkEditPanel: React.FC<BulkEditPanelProps> = ({\n  slides,\n  selectedIndices,\n  onApplyChanges,\n  onDuplicateSelected,\n  onDeleteSelected,\n  onToggleVisibilitySelected,\n  onClose\n}) => {\n  const [backgroundColor, setBackgroundColor] = useState<string>('');\n  const [textColor, setTextColor] = useState<string>('');\n  const [gradientEnabled, setGradientEnabled] = useState(false);\n  const [gradientStart, setGradientStart] = useState('#ffffff');\n  const [gradientEnd, setGradientEnd] = useState('#000000');\n  const [gradientAngle, setGradientAngle] = useState(90);\n  const [fontSize, setFontSize] = useState<string>('');\n  const [fontWeight, setFontWeight] = useState<string>('');\n  const [textShadow, setTextShadow] = useState<string>('');\n  const [transition, setTransition] = useState<string>('');\n  \n  const selectedCount = selectedIndices.size;\n  const selectedSlides = Array.from(selectedIndices).map(i => slides[i]);\n\n  const applyColors = () => {\n    const changes: Partial<Slide> = {};\n    \n    if (backgroundColor) {\n      changes.backgroundColor = backgroundColor;\n    }\n    \n    if (textColor) {\n      changes.textColor = textColor;\n    }\n    \n    if (gradientEnabled) {\n      changes.backgroundGradient = {\n        type: 'linear',\n        angle: gradientAngle,\n        colors: [gradientStart, gradientEnd]\n      };\n    }\n    \n    onApplyChanges(Array.from(selectedIndices), changes);\n  };\n\n  const applyTextStyles = () => {\n    const changes: Partial<Slide> = {};\n    \n    if (fontSize) {\n      changes.textStyles = {\n        ...changes.textStyles,\n        fontSize: fontSize as 'small' | 'medium' | 'large' | 'x-large'\n      };\n    }\n    \n    if (fontWeight) {\n      changes.textStyles = {\n        ...changes.textStyles,\n        fontWeight: fontWeight as 'normal' | 'bold' | 'light'\n      };\n    }\n    \n    if (textShadow) {\n      changes.textStyles = {\n        ...changes.textStyles,\n        textShadow: textShadow as 'none' | 'subtle' | 'medium' | 'strong' | 'glow'\n      };\n    }\n    \n    onApplyChanges(Array.from(selectedIndices), changes);\n  };\n\n  const applyTransition = () => {\n    if (transition) {\n      const changes: Partial<Slide> = {\n        transitionType: transition as any\n      };\n      onApplyChanges(Array.from(selectedIndices), changes);\n    }\n  };\n\n  if (selectedCount === 0) {\n    return (\n      <div className=\"bulk-edit-panel bulk-edit-panel--empty\">\n        <p>Select slides to edit them in bulk</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bulk-edit-panel\">\n      <div className=\"bulk-edit-panel__header\">\n        <h3>\n          <Layers size={16} />\n          Bulk Edit ({selectedCount} slides)\n        </h3>\n        <button className=\"close-btn\" onClick={onClose}>\n          <X size={16} />\n        </button>\n      </div>\n\n      <div className=\"bulk-edit-panel__content\">\n        {/* Quick Actions */}\n        <div className=\"bulk-edit-section\">\n          <h4>Quick Actions</h4>\n          <div className=\"bulk-actions\">\n            <button\n              className=\"bulk-action-btn\"\n              onClick={onDuplicateSelected}\n              title=\"Duplicate selected slides\"\n            >\n              <Copy size={16} />\n              <span>Duplicate</span>\n            </button>\n            <button\n              className=\"bulk-action-btn\"\n              onClick={onToggleVisibilitySelected}\n              title=\"Toggle visibility\"\n            >\n              <Eye size={16} />\n              <span>Toggle Visibility</span>\n            </button>\n            <button\n              className=\"bulk-action-btn bulk-action-btn--danger\"\n              onClick={onDeleteSelected}\n              title=\"Delete selected slides\"\n            >\n              <Trash2 size={16} />\n              <span>Delete</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Background Colors */}\n        <div className=\"bulk-edit-section\">\n          <h4>\n            <Palette size={14} />\n            Background Style\n          </h4>\n          \n          <div className=\"form-group\">\n            <label>Solid Color</label>\n            <div className=\"color-input-group\">\n              <input\n                type=\"color\"\n                value={backgroundColor || '#ffffff'}\n                onChange={(e) => setBackgroundColor(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={backgroundColor}\n                onChange={(e) => setBackgroundColor(e.target.value)}\n                placeholder=\"#ffffff\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={gradientEnabled}\n                onChange={(e) => setGradientEnabled(e.target.checked)}\n              />\n              Enable Gradient\n            </label>\n          </div>\n\n          {gradientEnabled && (\n            <div className=\"gradient-controls\">\n              <div className=\"gradient-colors\">\n                <div className=\"color-input-group\">\n                  <label>Start</label>\n                  <input\n                    type=\"color\"\n                    value={gradientStart}\n                    onChange={(e) => setGradientStart(e.target.value)}\n                  />\n                </div>\n                <div className=\"color-input-group\">\n                  <label>End</label>\n                  <input\n                    type=\"color\"\n                    value={gradientEnd}\n                    onChange={(e) => setGradientEnd(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Angle: {gradientAngle}°</label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"360\"\n                  value={gradientAngle}\n                  onChange={(e) => setGradientAngle(parseInt(e.target.value))}\n                />\n              </div>\n            </div>\n          )}\n          \n          <button className=\"apply-btn\" onClick={applyColors}>\n            <Check size={14} />\n            Apply Colors\n          </button>\n        </div>\n\n        {/* Text Styles */}\n        <div className=\"bulk-edit-section\">\n          <h4>\n            <Type size={14} />\n            Text Styles\n          </h4>\n          \n          <div className=\"form-group\">\n            <label>Text Color</label>\n            <div className=\"color-input-group\">\n              <input\n                type=\"color\"\n                value={textColor || '#000000'}\n                onChange={(e) => setTextColor(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={textColor}\n                onChange={(e) => setTextColor(e.target.value)}\n                placeholder=\"#000000\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Font Size</label>\n            <select\n              value={fontSize}\n              onChange={(e) => setFontSize(e.target.value)}\n            >\n              <option value=\"\">Default</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n              <option value=\"x-large\">Extra Large</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Font Weight</label>\n            <select\n              value={fontWeight}\n              onChange={(e) => setFontWeight(e.target.value)}\n            >\n              <option value=\"\">Default</option>\n              <option value=\"300\">Light</option>\n              <option value=\"400\">Regular</option>\n              <option value=\"500\">Medium</option>\n              <option value=\"600\">Semi Bold</option>\n              <option value=\"700\">Bold</option>\n              <option value=\"900\">Black</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Text Shadow</label>\n            <select\n              value={textShadow}\n              onChange={(e) => setTextShadow(e.target.value)}\n            >\n              <option value=\"\">None</option>\n              <option value=\"subtle\">Subtle</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"strong\">Strong</option>\n              <option value=\"glow\">Glow</option>\n            </select>\n          </div>\n          \n          <button className=\"apply-btn\" onClick={applyTextStyles}>\n            <Check size={14} />\n            Apply Text Styles\n          </button>\n        </div>\n\n        {/* Transitions */}\n        <div className=\"bulk-edit-section\">\n          <h4>\n            <Settings size={14} />\n            Transition Effect\n          </h4>\n          \n          <div className=\"form-group\">\n            <select\n              value={transition}\n              onChange={(e) => setTransition(e.target.value)}\n            >\n              <option value=\"\">Keep Current</option>\n              <option value=\"none\">None</option>\n              <option value=\"fade\">Fade</option>\n              <option value=\"slide\">Slide</option>\n              <option value=\"zoom\">Zoom</option>\n              <option value=\"flip\">Flip</option>\n              <option value=\"cube\">Cube</option>\n            </select>\n          </div>\n          \n          <button className=\"apply-btn\" onClick={applyTransition}>\n            <Check size={14} />\n            Apply Transition\n          </button>\n        </div>\n\n        {/* Selected Slides Preview */}\n        <div className=\"bulk-edit-section\">\n          <h4>Selected Slides</h4>\n          <div className=\"selected-slides-list\">\n            {selectedSlides.map((slide, idx) => (\n              <div key={slide.id} className=\"selected-slide-chip\">\n                <span>#{Array.from(selectedIndices)[idx] + 1}</span>\n                <span>{slide.title || 'Untitled'}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BulkEditPanel;","/**\n * useKeyboardNavigation - Keyboard shortcuts for slide navigation\n * Phase 2: Advanced editing features\n */\n\nimport { useEffect, useCallback } from 'react';\n\ninterface UseKeyboardNavigationProps {\n  onNext: () => void;\n  onPrev: () => void;\n  onTogglePlay?: () => void;\n  onEscape?: () => void;\n  onFullscreen?: () => void;\n  onDelete?: () => void;\n  onDuplicate?: () => void;\n  enabled?: boolean;\n  isEditing?: boolean;\n}\n\nexport const useKeyboardNavigation = ({\n  onNext,\n  onPrev,\n  onTogglePlay,\n  onEscape,\n  onFullscreen,\n  onDelete,\n  onDuplicate,\n  enabled = true,\n  isEditing = false\n}: UseKeyboardNavigationProps) => {\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (!enabled) return;\n    \n    // Don't handle if user is typing in an input\n    const target = event.target as HTMLElement;\n    if (target.tagName === 'INPUT' || \n        target.tagName === 'TEXTAREA' || \n        target.contentEditable === 'true') {\n      return;\n    }\n\n    // Navigation shortcuts\n    switch (event.key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        onPrev();\n        break;\n      \n      case 'ArrowRight':\n        event.preventDefault();\n        onNext();\n        break;\n      \n      case 'ArrowUp':\n        if (event.shiftKey) {\n          event.preventDefault();\n          onPrev();\n        }\n        break;\n      \n      case 'ArrowDown':\n        if (event.shiftKey) {\n          event.preventDefault();\n          onNext();\n        }\n        break;\n      \n      case ' ':  // Spacebar\n        if (!isEditing) {\n          event.preventDefault();\n          onTogglePlay?.();\n        }\n        break;\n      \n      case 'Escape':\n        event.preventDefault();\n        onEscape?.();\n        break;\n      \n      case 'f':\n      case 'F':\n        if (!isEditing) {\n          event.preventDefault();\n          onFullscreen?.();\n        }\n        break;\n      \n      case 'Delete':\n      case 'Backspace':\n        if (isEditing && (event.ctrlKey || event.metaKey)) {\n          event.preventDefault();\n          onDelete?.();\n        }\n        break;\n      \n      case 'd':\n      case 'D':\n        if (isEditing && (event.ctrlKey || event.metaKey)) {\n          event.preventDefault();\n          onDuplicate?.();\n        }\n        break;\n      \n      case 'Home':\n        event.preventDefault();\n        // Go to first slide - handled by parent\n        break;\n      \n      case 'End':\n        event.preventDefault();\n        // Go to last slide - handled by parent\n        break;\n    }\n\n    // Number keys for direct slide navigation (1-9)\n    if (event.key >= '1' && event.key <= '9' && !isEditing) {\n      event.preventDefault();\n      const slideIndex = parseInt(event.key) - 1;\n      // This will be handled by parent component\n      window.dispatchEvent(new CustomEvent('slideGoTo', { detail: slideIndex }));\n    }\n  }, [enabled, isEditing, onNext, onPrev, onTogglePlay, onEscape, onFullscreen, onDelete, onDuplicate]);\n\n  useEffect(() => {\n    if (enabled) {\n      window.addEventListener('keydown', handleKeyDown);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [enabled, handleKeyDown]);\n\n  return {\n    shortcuts: [\n      { key: '←/→', description: 'Navigate slides' },\n      { key: 'Space', description: 'Play/Pause' },\n      { key: 'F', description: 'Fullscreen' },\n      { key: 'Esc', description: 'Exit fullscreen' },\n      { key: '1-9', description: 'Jump to slide' },\n      ...(isEditing ? [\n        { key: 'Ctrl+D', description: 'Duplicate slide' },\n        { key: 'Ctrl+Delete', description: 'Delete slide' },\n      ] : [])\n    ]\n  };\n};\n\nexport default useKeyboardNavigation;","/**\n * useTouchGestures - Touch gesture support for mobile/tablet\n * Phase 3: Interaction features\n */\n\nimport { useEffect, useRef, useCallback } from 'react';\n\ninterface UseTouchGesturesProps {\n  onSwipeLeft?: () => void;\n  onSwipeRight?: () => void;\n  onSwipeUp?: () => void;\n  onSwipeDown?: () => void;\n  onPinchZoom?: (scale: number) => void;\n  onTap?: () => void;\n  onDoubleTap?: () => void;\n  enabled?: boolean;\n  swipeThreshold?: number;\n  swipeVelocityThreshold?: number;\n}\n\ninterface TouchPoint {\n  x: number;\n  y: number;\n  time: number;\n}\n\nexport const useTouchGestures = ({\n  onSwipeLeft,\n  onSwipeRight,\n  onSwipeUp,\n  onSwipeDown,\n  onPinchZoom,\n  onTap,\n  onDoubleTap,\n  enabled = true,\n  swipeThreshold = 50,\n  swipeVelocityThreshold = 0.3\n}: UseTouchGesturesProps) => {\n  const touchStartRef = useRef<TouchPoint | null>(null);\n  const touchEndRef = useRef<TouchPoint | null>(null);\n  const lastTapRef = useRef<number>(0);\n  const pinchStartDistanceRef = useRef<number>(0);\n  const isPinchingRef = useRef(false);\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  // Calculate distance between two touch points\n  const getDistance = (touch1: Touch, touch2: Touch): number => {\n    const dx = touch1.clientX - touch2.clientX;\n    const dy = touch1.clientY - touch2.clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  // Handle touch start\n  const handleTouchStart = useCallback((e: TouchEvent) => {\n    if (!enabled) return;\n\n    // Handle pinch zoom start\n    if (e.touches.length === 2 && onPinchZoom) {\n      isPinchingRef.current = true;\n      pinchStartDistanceRef.current = getDistance(e.touches[0], e.touches[1]);\n      e.preventDefault();\n      return;\n    }\n\n    // Single touch\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      touchStartRef.current = {\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now()\n      };\n      touchEndRef.current = null;\n    }\n  }, [enabled, onPinchZoom]);\n\n  // Handle touch move\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    if (!enabled) return;\n\n    // Handle pinch zoom\n    if (e.touches.length === 2 && isPinchingRef.current && onPinchZoom) {\n      const currentDistance = getDistance(e.touches[0], e.touches[1]);\n      const scale = currentDistance / pinchStartDistanceRef.current;\n      onPinchZoom(scale);\n      e.preventDefault();\n      return;\n    }\n\n    // Track single touch movement\n    if (e.touches.length === 1 && touchStartRef.current) {\n      const touch = e.touches[0];\n      touchEndRef.current = {\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now()\n      };\n    }\n  }, [enabled, onPinchZoom]);\n\n  // Handle touch end\n  const handleTouchEnd = useCallback((e: TouchEvent) => {\n    if (!enabled) return;\n\n    // End pinch zoom\n    if (isPinchingRef.current) {\n      isPinchingRef.current = false;\n      pinchStartDistanceRef.current = 0;\n      return;\n    }\n\n    const start = touchStartRef.current;\n    const end = touchEndRef.current || (e.changedTouches.length > 0 ? {\n      x: e.changedTouches[0].clientX,\n      y: e.changedTouches[0].clientY,\n      time: Date.now()\n    } : null);\n\n    if (!start || !end) return;\n\n    const deltaX = end.x - start.x;\n    const deltaY = end.y - start.y;\n    const deltaTime = end.time - start.time;\n    const velocityX = Math.abs(deltaX) / deltaTime;\n    const velocityY = Math.abs(deltaY) / deltaTime;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    // Check for tap or double tap\n    if (distance < 10 && deltaTime < 200) {\n      const now = Date.now();\n      const timeSinceLastTap = now - lastTapRef.current;\n      \n      if (timeSinceLastTap < 300 && onDoubleTap) {\n        onDoubleTap();\n        lastTapRef.current = 0;\n      } else if (onTap) {\n        onTap();\n        lastTapRef.current = now;\n      }\n      return;\n    }\n\n    // Check for swipe\n    const isHorizontalSwipe = Math.abs(deltaX) > Math.abs(deltaY);\n    \n    if (isHorizontalSwipe && Math.abs(deltaX) > swipeThreshold && velocityX > swipeVelocityThreshold) {\n      if (deltaX > 0 && onSwipeRight) {\n        onSwipeRight();\n      } else if (deltaX < 0 && onSwipeLeft) {\n        onSwipeLeft();\n      }\n    } else if (!isHorizontalSwipe && Math.abs(deltaY) > swipeThreshold && velocityY > swipeVelocityThreshold) {\n      if (deltaY > 0 && onSwipeDown) {\n        onSwipeDown();\n      } else if (deltaY < 0 && onSwipeUp) {\n        onSwipeUp();\n      }\n    }\n\n    // Reset\n    touchStartRef.current = null;\n    touchEndRef.current = null;\n  }, [\n    enabled,\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeUp,\n    onSwipeDown,\n    onTap,\n    onDoubleTap,\n    swipeThreshold,\n    swipeVelocityThreshold\n  ]);\n\n  // Handle touch cancel\n  const handleTouchCancel = useCallback(() => {\n    touchStartRef.current = null;\n    touchEndRef.current = null;\n    isPinchingRef.current = false;\n    pinchStartDistanceRef.current = 0;\n  }, []);\n\n  // Set up event listeners\n  const attachToElement = useCallback((element: HTMLElement | null) => {\n    if (elementRef.current && elementRef.current !== element) {\n      // Remove old listeners\n      elementRef.current.removeEventListener('touchstart', handleTouchStart as any);\n      elementRef.current.removeEventListener('touchmove', handleTouchMove as any);\n      elementRef.current.removeEventListener('touchend', handleTouchEnd as any);\n      elementRef.current.removeEventListener('touchcancel', handleTouchCancel);\n    }\n\n    elementRef.current = element;\n\n    if (element && enabled) {\n      // Add new listeners with passive: false for preventDefault to work\n      element.addEventListener('touchstart', handleTouchStart as any, { passive: false });\n      element.addEventListener('touchmove', handleTouchMove as any, { passive: false });\n      element.addEventListener('touchend', handleTouchEnd as any, { passive: false });\n      element.addEventListener('touchcancel', handleTouchCancel, { passive: false });\n    }\n\n    return () => {\n      if (element) {\n        element.removeEventListener('touchstart', handleTouchStart as any);\n        element.removeEventListener('touchmove', handleTouchMove as any);\n        element.removeEventListener('touchend', handleTouchEnd as any);\n        element.removeEventListener('touchcancel', handleTouchCancel);\n      }\n    };\n  }, [enabled, handleTouchStart, handleTouchMove, handleTouchEnd, handleTouchCancel]);\n\n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      if (elementRef.current) {\n        elementRef.current.removeEventListener('touchstart', handleTouchStart as any);\n        elementRef.current.removeEventListener('touchmove', handleTouchMove as any);\n        elementRef.current.removeEventListener('touchend', handleTouchEnd as any);\n        elementRef.current.removeEventListener('touchcancel', handleTouchCancel);\n      }\n    };\n  }, []);\n\n  return {\n    attachToElement,\n    touchIndicators: {\n      isTouching: touchStartRef.current !== null,\n      isPinching: isPinchingRef.current\n    }\n  };\n};\n\nexport default useTouchGestures;","/**\n * useMouseInteractions - Mouse wheel and hover interactions\n * Phase 3: Interaction features\n */\n\nimport { useEffect, useCallback, useRef } from 'react';\n\ninterface UseMouseInteractionsProps {\n  onWheelNext?: () => void;\n  onWheelPrev?: () => void;\n  onHoverStart?: () => void;\n  onHoverEnd?: () => void;\n  enabled?: boolean;\n  wheelThreshold?: number;\n  wheelDebounceMs?: number;\n  pauseOnHover?: boolean;\n}\n\nexport const useMouseInteractions = ({\n  onWheelNext,\n  onWheelPrev,\n  onHoverStart,\n  onHoverEnd,\n  enabled = true,\n  wheelThreshold = 50,\n  wheelDebounceMs = 300,\n  pauseOnHover = true\n}: UseMouseInteractionsProps) => {\n  const lastWheelTime = useRef<number>(0);\n  const wheelDelta = useRef<number>(0);\n  const isHovering = useRef<boolean>(false);\n  const elementRef = useRef<HTMLElement | null>(null);\n  const wheelTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Handle mouse wheel\n  const handleWheel = useCallback((e: WheelEvent) => {\n    if (!enabled) return;\n\n    const now = Date.now();\n    const timeSinceLastWheel = now - lastWheelTime.current;\n\n    // Clear previous timeout\n    if (wheelTimeoutRef.current) {\n      clearTimeout(wheelTimeoutRef.current);\n    }\n\n    // Accumulate wheel delta\n    if (timeSinceLastWheel < wheelDebounceMs) {\n      wheelDelta.current += e.deltaY;\n    } else {\n      wheelDelta.current = e.deltaY;\n    }\n\n    lastWheelTime.current = now;\n\n    // Set new timeout to process accumulated delta\n    wheelTimeoutRef.current = setTimeout(() => {\n      if (Math.abs(wheelDelta.current) >= wheelThreshold) {\n        if (wheelDelta.current > 0 && onWheelNext) {\n          onWheelNext();\n        } else if (wheelDelta.current < 0 && onWheelPrev) {\n          onWheelPrev();\n        }\n      }\n      wheelDelta.current = 0;\n    }, wheelDebounceMs);\n\n    // Prevent default scrolling\n    e.preventDefault();\n  }, [enabled, onWheelNext, onWheelPrev, wheelThreshold, wheelDebounceMs]);\n\n  // Handle mouse enter\n  const handleMouseEnter = useCallback(() => {\n    if (!enabled || !pauseOnHover) return;\n    \n    isHovering.current = true;\n    if (onHoverStart) {\n      onHoverStart();\n    }\n  }, [enabled, pauseOnHover, onHoverStart]);\n\n  // Handle mouse leave\n  const handleMouseLeave = useCallback(() => {\n    if (!enabled || !pauseOnHover) return;\n    \n    isHovering.current = false;\n    if (onHoverEnd) {\n      onHoverEnd();\n    }\n  }, [enabled, pauseOnHover, onHoverEnd]);\n\n  // Attach to element\n  const attachToElement = useCallback((element: HTMLElement | null) => {\n    // Remove old listeners\n    if (elementRef.current && elementRef.current !== element) {\n      elementRef.current.removeEventListener('wheel', handleWheel);\n      elementRef.current.removeEventListener('mouseenter', handleMouseEnter);\n      elementRef.current.removeEventListener('mouseleave', handleMouseLeave);\n    }\n\n    elementRef.current = element;\n\n    // Add new listeners\n    if (element && enabled) {\n      element.addEventListener('wheel', handleWheel, { passive: false });\n      element.addEventListener('mouseenter', handleMouseEnter);\n      element.addEventListener('mouseleave', handleMouseLeave);\n    }\n\n    return () => {\n      if (element) {\n        element.removeEventListener('wheel', handleWheel);\n        element.removeEventListener('mouseenter', handleMouseEnter);\n        element.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n  }, [enabled, handleWheel, handleMouseEnter, handleMouseLeave]);\n\n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      if (elementRef.current) {\n        elementRef.current.removeEventListener('wheel', handleWheel);\n        elementRef.current.removeEventListener('mouseenter', handleMouseEnter);\n        elementRef.current.removeEventListener('mouseleave', handleMouseLeave);\n      }\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    attachToElement,\n    isHovering: isHovering.current\n  };\n};\n\nexport default useMouseInteractions;","/**\n * SlideBlock - Phase 2: Advanced Slide System\n * Main component for slide presentation block with advanced features\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { \n  Plus, \n  Trash2, \n  ChevronUp, \n  ChevronDown,\n  Image,\n  Type,\n  Play,\n  Pause,\n  Settings,\n  Maximize2,\n  Grid,\n  Layers,\n  Copy,\n  Eye\n} from 'lucide-react';\nimport SlideEditor from './SlideEditor';\nimport AdvancedSlideEditor from './AdvancedSlideEditor';\nimport SlideViewer from './SlideViewer';\nimport EnhancedSlideViewer from './EnhancedSlideViewer';\nimport BasicNavigation from './BasicNavigation';\nimport SlideSortableList from './SlideSortableList';\nimport BulkEditPanel from './BulkEditPanel';\nimport useKeyboardNavigation from './useKeyboardNavigation';\nimport useTouchGestures from './useTouchGestures';\nimport useMouseInteractions from './useMouseInteractions';\nimport { SlideProgress } from './SlideProgress';\nimport { SlideAnnouncer, FocusTrap, SkipLinks } from './SlideAccessibility';\nimport { Slide, SlideBlockAttributes } from './types';\nimport './SlideBlock.css';\nimport './AdvancedTransitions.css';\nimport './InteractionStyles.css';\n\n// Re-export types for backward compatibility\nexport type { Slide, SlideBlockAttributes } from './types';\n\ninterface SlideBlockProps {\n  attributes: SlideBlockAttributes;\n  setAttributes: (attributes: Partial<SlideBlockAttributes>) => void;\n  isSelected?: boolean;\n  className?: string;\n}\n\nconst SlideBlock: React.FC<SlideBlockProps> = ({\n  attributes,\n  setAttributes,\n  isSelected = false,\n  className = ''\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(attributes.autoPlay);\n  const [isEditing, setIsEditing] = useState(true);\n  const [presentationMode, setPresentationMode] = useState(false);\n  const [showBulkEdit, setShowBulkEdit] = useState(false);\n  const [selectedSlides, setSelectedSlides] = useState<Set<number>>(new Set());\n  const [useAdvancedEditor, setUseAdvancedEditor] = useState(true);\n  const [showThumbnails, setShowThumbnails] = useState(attributes.showThumbnails ?? true);\n  const [pausedForHover, setPausedForHover] = useState(false);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const viewportRef = useRef<HTMLDivElement>(null);\n\n  const {\n    slides = [],\n    aspectRatio = '16:9',\n    transition = 'fade',\n    autoPlay = false,\n    autoPlayInterval = 5000,\n    showNavigation = true,\n    showPagination = true,\n    backgroundColor = '#f0f0f0',\n    enableKeyboardNavigation = true,\n    fullscreenEnabled = true,\n    loop = true\n  } = attributes;\n\n  // Initialize with one slide if empty\n  useEffect(() => {\n    if (slides.length === 0) {\n      addSlide('text');\n    }\n  }, []);\n\n  // Auto-play functionality with hover pause\n  useEffect(() => {\n    if (isPlaying && !pausedForHover && slides.length > 1) {\n      const interval = setInterval(() => {\n        setCurrentSlide((prev) => (prev + 1) % slides.length);\n      }, autoPlayInterval);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, pausedForHover, slides.length, autoPlayInterval]);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Generate unique ID\n  const generateId = () => `slide-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Add new slide\n  const addSlide = (type: 'text' | 'image' | 'mixed') => {\n    const newSlide: Slide = {\n      id: generateId(),\n      type,\n      order: slides.length,\n      backgroundColor: '#ffffff',\n      textColor: '#000000',\n      title: type === 'image' ? '' : 'New Slide Title',\n      subtitle: type === 'image' ? '' : 'Add your subtitle here',\n      content: type === 'image' ? '' : 'Enter your content here...'\n    };\n\n    setAttributes({\n      slides: [...slides, newSlide]\n    });\n    setCurrentSlide(slides.length);\n  };\n\n  // Delete slide\n  const deleteSlide = (index: number) => {\n    if (slides.length <= 1) {\n      alert('You must have at least one slide');\n      return;\n    }\n\n    const newSlides = slides.filter((_, i) => i !== index);\n    setAttributes({ slides: newSlides });\n    \n    if (currentSlide >= newSlides.length) {\n      setCurrentSlide(newSlides.length - 1);\n    }\n  };\n\n  // Duplicate slide\n  const duplicateSlide = (index: number) => {\n    const slideToDuplicate = slides[index];\n    const newSlide: Slide = {\n      ...slideToDuplicate,\n      id: generateId(),\n      order: index + 1,\n      title: slideToDuplicate.title ? `${slideToDuplicate.title} (Copy)` : undefined\n    };\n    \n    const newSlides = [\n      ...slides.slice(0, index + 1),\n      newSlide,\n      ...slides.slice(index + 1)\n    ];\n    \n    // Update order numbers\n    newSlides.forEach((slide, i) => {\n      slide.order = i;\n    });\n    \n    setAttributes({ slides: newSlides });\n    setCurrentSlide(index + 1);\n  };\n\n  // Bulk edit functions\n  const applyBulkChanges = (indices: number[], changes: Partial<Slide>) => {\n    const newSlides = [...slides];\n    indices.forEach(index => {\n      newSlides[index] = { ...newSlides[index], ...changes };\n    });\n    setAttributes({ slides: newSlides });\n  };\n\n  const duplicateSelectedSlides = () => {\n    const indicesToDuplicate = Array.from(selectedSlides).sort((a, b) => b - a);\n    let newSlides = [...slides];\n    \n    indicesToDuplicate.forEach(index => {\n      const slideToDuplicate = slides[index];\n      const newSlide: Slide = {\n        ...slideToDuplicate,\n        id: generateId(),\n        title: slideToDuplicate.title ? `${slideToDuplicate.title} (Copy)` : undefined\n      };\n      newSlides.splice(index + 1, 0, newSlide);\n    });\n    \n    // Update order numbers\n    newSlides.forEach((slide, i) => {\n      slide.order = i;\n    });\n    \n    setAttributes({ slides: newSlides });\n    setSelectedSlides(new Set());\n  };\n\n  const deleteSelectedSlides = () => {\n    if (selectedSlides.size === slides.length) {\n      alert('You must keep at least one slide');\n      return;\n    }\n    \n    const newSlides = slides.filter((_, index) => !selectedSlides.has(index));\n    setAttributes({ slides: newSlides });\n    setSelectedSlides(new Set());\n    \n    if (currentSlide >= newSlides.length) {\n      setCurrentSlide(Math.max(0, newSlides.length - 1));\n    }\n  };\n\n  const toggleVisibilitySelected = () => {\n    const newSlides = [...slides];\n    selectedSlides.forEach(index => {\n      newSlides[index] = {\n        ...newSlides[index],\n        visible: newSlides[index].visible === false ? true : false\n      };\n    });\n    setAttributes({ slides: newSlides });\n  };\n\n  // Update slide\n  const updateSlide = (index: number, updatedSlide: Partial<Slide>) => {\n    const newSlides = [...slides];\n    newSlides[index] = { ...newSlides[index], ...updatedSlide };\n    setAttributes({ slides: newSlides });\n  };\n\n  // Move slide up/down\n  const moveSlide = (index: number, direction: 'up' | 'down') => {\n    const newIndex = direction === 'up' ? index - 1 : index + 1;\n    \n    if (newIndex < 0 || newIndex >= slides.length) {\n      return;\n    }\n\n    const newSlides = [...slides];\n    [newSlides[index], newSlides[newIndex]] = [newSlides[newIndex], newSlides[index]];\n    \n    // Update order\n    newSlides.forEach((slide, i) => {\n      slide.order = i;\n    });\n    \n    setAttributes({ slides: newSlides });\n    setCurrentSlide(newIndex);\n  };\n\n  // Navigation handlers\n  const goToPrevSlide = () => {\n    if (loop) {\n      setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n    } else {\n      setCurrentSlide((prev) => Math.max(0, prev - 1));\n    }\n  };\n\n  const goToNextSlide = () => {\n    if (loop) {\n      setCurrentSlide((prev) => (prev + 1) % slides.length);\n    } else {\n      setCurrentSlide((prev) => Math.min(slides.length - 1, prev + 1));\n    }\n  };\n\n  const goToSlide = (index: number) => {\n    if (index >= 0 && index < slides.length) {\n      setCurrentSlide(index);\n    }\n  };\n\n  // Fullscreen handler\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement && containerRef.current) {\n      containerRef.current.requestFullscreen();\n      setPresentationMode(true);\n    } else if (document.fullscreenElement) {\n      document.exitFullscreen();\n      setPresentationMode(false);\n    }\n  };\n\n  // Keyboard navigation\n  const { shortcuts } = useKeyboardNavigation({\n    onNext: goToNextSlide,\n    onPrev: goToPrevSlide,\n    onTogglePlay: () => setIsPlaying(!isPlaying),\n    onEscape: () => {\n      if (presentationMode) {\n        toggleFullscreen();\n      }\n    },\n    onFullscreen: toggleFullscreen,\n    onDelete: () => {\n      if (selectedSlides.size > 0) {\n        deleteSelectedSlides();\n      } else {\n        deleteSlide(currentSlide);\n      }\n    },\n    onDuplicate: () => {\n      if (selectedSlides.size > 0) {\n        duplicateSelectedSlides();\n      } else {\n        duplicateSlide(currentSlide);\n      }\n    },\n    enabled: enableKeyboardNavigation && !presentationMode,\n    isEditing\n  });\n\n  // Handle slide go to event\n  useEffect(() => {\n    const handleGoTo = (e: CustomEvent) => {\n      goToSlide(e.detail);\n    };\n    window.addEventListener('slideGoTo', handleGoTo as any);\n    return () => {\n      window.removeEventListener('slideGoTo', handleGoTo as any);\n    };\n  }, []);\n\n  // Touch gestures\n  const { attachToElement: attachTouchElement } = useTouchGestures({\n    onSwipeLeft: goToNextSlide,\n    onSwipeRight: goToPrevSlide,\n    onDoubleTap: () => setIsPlaying(!isPlaying),\n    enabled: isTouchDevice && !isEditing\n  });\n\n  // Mouse interactions\n  const { attachToElement: attachMouseElement } = useMouseInteractions({\n    onWheelNext: goToNextSlide,\n    onWheelPrev: goToPrevSlide,\n    onHoverStart: () => setPausedForHover(true),\n    onHoverEnd: () => setPausedForHover(false),\n    enabled: !isEditing && !presentationMode,\n    pauseOnHover: autoPlay\n  });\n\n  // Attach interactions to viewport\n  useEffect(() => {\n    if (viewportRef.current) {\n      attachTouchElement(viewportRef.current);\n      attachMouseElement(viewportRef.current);\n    }\n  }, [viewportRef.current, isEditing, presentationMode]);\n\n  // Get aspect ratio styles\n  const getAspectRatioStyle = () => {\n    const ratios = {\n      '16:9': { paddingTop: '56.25%' },\n      '4:3': { paddingTop: '75%' },\n      '1:1': { paddingTop: '100%' }\n    };\n    return ratios[aspectRatio];\n  };\n\n  return (\n    <div \n      ref={containerRef}\n      className={`slide-block ${className} ${isSelected ? 'selected' : ''} ${presentationMode ? 'presentation-mode' : ''} ${isTouchDevice ? 'slide-block--touch-enabled' : ''}`}\n      role=\"region\"\n      aria-label=\"Slide presentation\"\n    >\n      {/* Toolbar */}\n      {isSelected && (\n        <div className=\"slide-block__toolbar\">\n          <div className=\"toolbar-group\">\n            <button\n              className=\"toolbar-btn\"\n              onClick={() => setIsEditing(!isEditing)}\n              title={isEditing ? 'Preview' : 'Edit'}\n            >\n              {isEditing ? <Play size={16} /> : <Settings size={16} />}\n              {isEditing ? 'Preview' : 'Edit'}\n            </button>\n            \n            <button\n              className=\"toolbar-btn\"\n              onClick={() => setIsPlaying(!isPlaying)}\n              title={isPlaying ? 'Pause' : 'Play'}\n            >\n              {isPlaying ? <Pause size={16} /> : <Play size={16} />}\n              {isPlaying ? 'Pause' : 'Auto-play'}\n            </button>\n            \n            {fullscreenEnabled && (\n              <button\n                className=\"toolbar-btn\"\n                onClick={toggleFullscreen}\n                title=\"Fullscreen\"\n              >\n                <Maximize2 size={16} />\n                Fullscreen\n              </button>\n            )}\n            \n            <button\n              className=\"toolbar-btn\"\n              onClick={() => setShowThumbnails(!showThumbnails)}\n              title={showThumbnails ? 'Hide Thumbnails' : 'Show Thumbnails'}\n            >\n              <Grid size={16} />\n              Thumbnails\n            </button>\n            \n            {selectedSlides.size > 0 && (\n              <button\n                className=\"toolbar-btn\"\n                onClick={() => setShowBulkEdit(!showBulkEdit)}\n                title=\"Bulk Edit\"\n              >\n                <Layers size={16} />\n                Bulk Edit ({selectedSlides.size})\n              </button>\n            )}\n          </div>\n\n          <div className=\"toolbar-group\">\n            <label>Aspect Ratio:</label>\n            <select\n              value={aspectRatio}\n              onChange={(e) => setAttributes({ \n                aspectRatio: e.target.value as '16:9' | '4:3' | '1:1' \n              })}\n              className=\"toolbar-select\"\n            >\n              <option value=\"16:9\">16:9</option>\n              <option value=\"4:3\">4:3</option>\n              <option value=\"1:1\">1:1</option>\n            </select>\n          </div>\n\n          <div className=\"toolbar-group\">\n            <label>Transition:</label>\n            <select\n              value={transition}\n              onChange={(e) => setAttributes({ \n                transition: e.target.value as 'fade' | 'slide' | 'none' \n              })}\n              className=\"toolbar-select\"\n            >\n              <option value=\"fade\">Fade</option>\n              <option value=\"slide\">Slide</option>\n              <option value=\"zoom\">Zoom</option>\n              <option value=\"flip\">Flip</option>\n              <option value=\"cube\">Cube</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n      )}\n\n      {/* Main Content Area */}\n      <div className=\"slide-block__content\">\n        {isEditing && isSelected ? (\n          /* Edit Mode */\n          <div className=\"slide-block__editor\">\n            {/* Slide List or Sortable List */}\n            <div className=\"slide-list\">\n              <div className=\"slide-list__header\">\n                <h3>Slides ({slides.length})</h3>\n                <div className=\"slide-list__actions\">\n                  <button\n                    className=\"btn-add\"\n                    onClick={() => setUseAdvancedEditor(!useAdvancedEditor)}\n                    title=\"Toggle Advanced Editor\"\n                  >\n                    <Settings size={16} />\n                  </button>\n                  <button\n                    className=\"btn-add\"\n                    onClick={() => addSlide('text')}\n                    title=\"Add Text Slide\"\n                  >\n                    <Type size={16} />\n                  </button>\n                  <button\n                    className=\"btn-add\"\n                    onClick={() => addSlide('image')}\n                    title=\"Add Image Slide\"\n                  >\n                    <Image size={16} />\n                  </button>\n                  <button\n                    className=\"btn-add\"\n                    onClick={() => addSlide('mixed')}\n                    title=\"Add Mixed Slide\"\n                  >\n                    <Plus size={16} />\n                  </button>\n                </div>\n              </div>\n\n              {showThumbnails ? (\n                <SlideSortableList\n                  slides={slides}\n                  currentSlide={currentSlide}\n                  onReorder={(newSlides) => setAttributes({ slides: newSlides })}\n                  onSelect={setCurrentSlide}\n                  onDuplicate={duplicateSlide}\n                  onDelete={deleteSlide}\n                  onToggleVisibility={(index) => {\n                    const newSlides = [...slides];\n                    newSlides[index] = {\n                      ...newSlides[index],\n                      visible: newSlides[index].visible === false ? true : false\n                    };\n                    setAttributes({ slides: newSlides });\n                  }}\n                  selectedSlides={selectedSlides}\n                  onSelectionChange={setSelectedSlides}\n                />\n              ) : (\n                <div className=\"slide-list__items\">\n                  {slides.map((slide, index) => (\n                    <div\n                      key={slide.id}\n                      className={`slide-item ${currentSlide === index ? 'active' : ''}`}\n                      onClick={() => setCurrentSlide(index)}\n                    >\n                      <div className=\"slide-item__header\">\n                        <span className=\"slide-number\">#{index + 1}</span>\n                        <span className=\"slide-type\">{slide.type}</span>\n                      </div>\n                      \n                      <div className=\"slide-item__preview\">\n                        {slide.title && <div className=\"preview-title\">{slide.title}</div>}\n                        {slide.imageUrl && <div className=\"preview-image\">🖼️ Image</div>}\n                      </div>\n\n                      <div className=\"slide-item__actions\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            duplicateSlide(index);\n                          }}\n                          title=\"Duplicate Slide\"\n                        >\n                          <Copy size={14} />\n                        </button>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            deleteSlide(index);\n                          }}\n                          className=\"btn-delete\"\n                          title=\"Delete Slide\"\n                        >\n                          <Trash2 size={14} />\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Slide Editor */}\n            <div className=\"slide-editor-container\">\n              {showBulkEdit && selectedSlides.size > 0 ? (\n                <BulkEditPanel\n                  slides={slides}\n                  selectedIndices={selectedSlides}\n                  onApplyChanges={applyBulkChanges}\n                  onDuplicateSelected={duplicateSelectedSlides}\n                  onDeleteSelected={deleteSelectedSlides}\n                  onToggleVisibilitySelected={toggleVisibilitySelected}\n                  onClose={() => setShowBulkEdit(false)}\n                />\n              ) : slides[currentSlide] && (\n                useAdvancedEditor ? (\n                  <AdvancedSlideEditor\n                    slide={slides[currentSlide]}\n                    onChange={(updatedSlide) => updateSlide(currentSlide, updatedSlide)}\n                    onMediaSelect={(media) => {\n                      updateSlide(currentSlide, {\n                        imageUrl: media.url,\n                        imageAlt: media.alt\n                      });\n                    }}\n                  />\n                ) : (\n                  <SlideEditor\n                    slide={slides[currentSlide]}\n                    onChange={(updatedSlide) => updateSlide(currentSlide, updatedSlide)}\n                    onMediaSelect={(media) => {\n                      updateSlide(currentSlide, {\n                        imageUrl: media.url,\n                        imageAlt: media.alt\n                      });\n                    }}\n                  />\n                )\n              )}\n            </div>\n          </div>\n        ) : (\n          /* Preview Mode */\n          <FocusTrap active={presentationMode} onEscape={() => setPresentationMode(false)}>\n            <div \n              className=\"slide-block__viewer\"\n              style={{ backgroundColor }}\n              ref={viewportRef}\n            >\n              <SkipLinks\n                onSkipToContent={() => viewportRef.current?.focus()}\n                onSkipToNavigation={() => (document.querySelector('.slide-navigation') as HTMLElement)?.focus()}\n              />\n              \n              <SlideAnnouncer\n                currentSlide={currentSlide}\n                totalSlides={slides.length}\n                slideTitle={slides[currentSlide]?.title}\n                isPlaying={isPlaying && !pausedForHover}\n              />\n              \n              <div \n                className=\"slide-viewport\"\n                style={getAspectRatioStyle()}\n                role=\"application\"\n                aria-roledescription=\"slide viewer\"\n              >\n                <div className=\"slide-viewport__inner\">\n                  {slides[currentSlide] && (\n                    <EnhancedSlideViewer\n                      slide={slides[currentSlide]}\n                      transition={transition}\n                      isActive={true}\n                      lazyLoad={true}\n                      reducedMotion={false}\n                    />\n                  )}\n\n                  {showNavigation && slides.length > 1 && (\n                    <BasicNavigation\n                      currentSlide={currentSlide}\n                      totalSlides={slides.length}\n                      onPrev={goToPrevSlide}\n                      onNext={goToNextSlide}\n                      onGoToSlide={goToSlide}\n                      showPagination={showPagination}\n                    />\n                  )}\n                  \n                  <SlideProgress\n                    current={currentSlide}\n                    total={slides.length}\n                    autoPlayInterval={autoPlayInterval}\n                    isPlaying={isPlaying && !pausedForHover}\n                    showProgressBar={true}\n                    position=\"bottom\"\n                  />\n                </div>\n              </div>\n            </div>\n          </FocusTrap>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SlideBlock;","/**\n * SlideBlock Registration for WordPress Block Editor\n */\n\nimport { SlideBlock } from '@/components/editor/blocks/slide';\n\nexport function registerSlideBlock() {\n  if (!window.wp?.blocks?.registerBlockType) {\n    return;\n  }\n\n  window.wp.blocks.registerBlockType('o4o/slide', {\n    title: 'Slide Presentation',\n    description: 'Create interactive slide presentations with text, images, and mixed content.',\n    category: 'media',\n    icon: 'slides',\n    keywords: ['slide', 'presentation', 'carousel', 'slideshow'],\n    supports: {\n      className: true,\n      anchor: true,\n      align: ['wide', 'full']\n    },\n    attributes: {\n      slides: {\n        type: 'array',\n        default: []\n      },\n      aspectRatio: {\n        type: 'string',\n        default: '16:9'\n      },\n      transition: {\n        type: 'string',\n        default: 'fade'\n      },\n      autoPlay: {\n        type: 'boolean',\n        default: false\n      },\n      autoPlayInterval: {\n        type: 'number',\n        default: 5000\n      },\n      showNavigation: {\n        type: 'boolean',\n        default: true\n      },\n      showPagination: {\n        type: 'boolean',\n        default: true\n      },\n      backgroundColor: {\n        type: 'string',\n        default: '#f0f0f0'\n      }\n    },\n    edit: SlideBlock,\n    save: () => null\n  });\n}","/**\n * Media Blocks - For multimedia content\n * Lazy loaded when needed\n */\n\nimport { registerSlideBlock } from './slide-block';\n\n// Register media WordPress blocks\nexport function registerMediaBlocks() {\n  if (!window.wp?.blocks?.registerBlockType) {\n    // WordPress blocks API not available\n    return;\n  }\n\n  // Register gallery block\n  window.wp.blocks.registerBlockType('core/gallery', {\n    title: 'Gallery',\n    description: 'Display multiple images in a rich gallery.',\n    category: 'media',\n    icon: 'format-gallery',\n    keywords: ['images', 'photos'],\n    supports: {\n      anchor: true,\n      align: ['left', 'center', 'right', 'wide', 'full'],\n    },\n    attributes: {\n      images: {\n        type: 'array',\n        default: [],\n        source: 'query',\n        selector: '.blocks-gallery-item',\n        query: {\n          url: {\n            type: 'string',\n            source: 'attribute',\n            selector: 'img',\n            attribute: 'src',\n          },\n          fullUrl: {\n            type: 'string',\n            source: 'attribute',\n            selector: 'img',\n            attribute: 'data-full-url',\n          },\n          link: {\n            type: 'string',\n            source: 'attribute',\n            selector: 'img',\n            attribute: 'data-link',\n          },\n          alt: {\n            type: 'string',\n            source: 'attribute',\n            selector: 'img',\n            attribute: 'alt',\n            default: '',\n          },\n          id: {\n            type: 'string',\n            source: 'attribute',\n            selector: 'img',\n            attribute: 'data-id',\n          },\n          caption: {\n            type: 'string',\n            source: 'html',\n            selector: '.blocks-gallery-item__caption',\n          },\n        },\n      },\n      columns: {\n        type: 'number',\n        default: 3,\n      },\n      caption: {\n        type: 'string',\n        source: 'html',\n        selector: '.blocks-gallery-caption',\n      },\n      imageCrop: {\n        type: 'boolean',\n        default: true,\n      },\n      linkTo: {\n        type: 'string',\n      },\n    },\n    edit: () => null,\n    save: () => null,\n  });\n\n  // Register audio block\n  window.wp.blocks.registerBlockType('core/audio', {\n    title: 'Audio',\n    description: 'Embed a simple audio player.',\n    category: 'media',\n    icon: 'format-audio',\n    keywords: ['music', 'sound', 'podcast'],\n    supports: {\n      anchor: true,\n      align: ['left', 'center', 'right', 'wide', 'full'],\n    },\n    attributes: {\n      src: {\n        type: 'string',\n      },\n      caption: {\n        type: 'string',\n        source: 'html',\n        selector: 'figcaption',\n      },\n      id: {\n        type: 'number',\n      },\n      autoplay: {\n        type: 'boolean',\n      },\n      loop: {\n        type: 'boolean',\n      },\n      preload: {\n        type: 'string',\n      },\n    },\n    edit: () => null,\n    save: () => null,\n  });\n\n  // Register video block\n  window.wp.blocks.registerBlockType('core/video', {\n    title: 'Video',\n    description: 'Embed a video.',\n    category: 'media',\n    icon: 'format-video',\n    keywords: ['movie', 'film'],\n    supports: {\n      anchor: true,\n      align: ['left', 'center', 'right', 'wide', 'full'],\n    },\n    attributes: {\n      autoplay: {\n        type: 'boolean',\n      },\n      caption: {\n        type: 'string',\n        source: 'html',\n        selector: 'figcaption',\n      },\n      controls: {\n        type: 'boolean',\n        default: true,\n      },\n      id: {\n        type: 'number',\n      },\n      loop: {\n        type: 'boolean',\n      },\n      muted: {\n        type: 'boolean',\n      },\n      poster: {\n        type: 'string',\n      },\n      preload: {\n        type: 'string',\n        default: 'metadata',\n      },\n      src: {\n        type: 'string',\n      },\n      playsInline: {\n        type: 'boolean',\n      },\n    },\n    edit: () => null,\n    save: () => null,\n  });\n\n  // Register file block\n  window.wp.blocks.registerBlockType('core/file', {\n    title: 'File',\n    description: 'Add a link to a downloadable file.',\n    category: 'media',\n    icon: 'media-default',\n    keywords: ['document', 'pdf', 'download'],\n    supports: {\n      anchor: true,\n      align: true,\n    },\n    attributes: {\n      id: {\n        type: 'number',\n      },\n      href: {\n        type: 'string',\n      },\n      fileName: {\n        type: 'string',\n      },\n      textLinkHref: {\n        type: 'string',\n      },\n      textLinkTarget: {\n        type: 'string',\n      },\n      showDownloadButton: {\n        type: 'boolean',\n        default: true,\n      },\n      downloadButtonText: {\n        type: 'string',\n      },\n      displayPreview: {\n        type: 'boolean',\n      },\n      previewHeight: {\n        type: 'number',\n        default: 600,\n      },\n    },\n    edit: () => null,\n    save: () => null,\n  });\n\n  // Register media & text block\n  window.wp.blocks.registerBlockType('core/media-text', {\n    title: 'Media & Text',\n    description: 'Set media and words side-by-side.',\n    category: 'media',\n    icon: 'align-left',\n    keywords: ['image', 'video', 'half'],\n    supports: {\n      anchor: true,\n      align: ['wide', 'full'],\n      html: false,\n      color: {\n        gradients: true,\n        link: true,\n      },\n    },\n    attributes: {\n      align: {\n        type: 'string',\n        default: 'wide',\n      },\n      mediaAlt: {\n        type: 'string',\n      },\n      mediaPosition: {\n        type: 'string',\n        default: 'left',\n      },\n      mediaId: {\n        type: 'number',\n      },\n      mediaUrl: {\n        type: 'string',\n      },\n      mediaLink: {\n        type: 'string',\n      },\n      linkDestination: {\n        type: 'string',\n      },\n      linkTarget: {\n        type: 'string',\n      },\n      href: {\n        type: 'string',\n      },\n      rel: {\n        type: 'string',\n      },\n      linkClass: {\n        type: 'string',\n      },\n      mediaType: {\n        type: 'string',\n      },\n      mediaWidth: {\n        type: 'number',\n        default: 50,\n      },\n      mediaSizeSlug: {\n        type: 'string',\n      },\n      isStackedOnMobile: {\n        type: 'boolean',\n        default: true,\n      },\n      verticalAlignment: {\n        type: 'string',\n      },\n      imageFill: {\n        type: 'boolean',\n      },\n      focalPoint: {\n        type: 'object',\n      },\n    },\n    edit: () => null,\n    save: () => null,\n  });\n\n  // Register slide presentation block\n  registerSlideBlock();\n}\n\nexport default registerMediaBlocks;"],"names":["SlideEditor","slide","onChange","onMediaSelect","handleTextChange","field","value","handleColorChange","handleImageUpload","imageUrl","removeImage","jsxs","jsx","Palette","e","Type","Upload","X","Image","AdvancedSlideEditor","showGradient","setShowGradient","useState","gradientColors","setGradientColors","gradientAngle","setGradientAngle","backgroundImage","setBackgroundImage","textStyles","fontSize","setFontSize","fontWeight","setFontWeight","textAlign","setTextAlign","textShadow","setTextShadow","lineHeight","setLineHeight","handleGradientChange","addGradientColor","newColors","removeGradientColor","index","_","i","handleBackgroundImage","removeBackgroundImage","updateTextStyles","newStyles","updatedStyles","color","angle","size","AlignLeft","AlignCenter","AlignRight","Sparkles","SlideProgress","current","total","autoPlayInterval","isPlaying","showProgressBar","showIndicators","position","progress","setProgress","useEffect","startTime","updateProgress","elapsed","newProgress","SlideLoading","isLoading","message","type","Loader2","ImageLoader","src","alt","onLoad","onError","lazy","placeholder","className","imageState","setImageState","imageSrc","setImageSrc","img","SlideAnnouncer","currentSlide","totalSlides","slideTitle","onAnnounce","announcerRef","useRef","lastAnnouncedSlide","FocusTrap","children","active","onEscape","containerRef","previousFocusRef","getFocusableElements","selectors","focusableElements","handleKeyDown","currentIndex","SkipLinks","onSkipToContent","onSkipToNavigation","onSkipToControls","ReducedMotion","fallback","prefersReducedMotion","setPrefersReducedMotion","React","mediaQuery","handleChange","SlideErrorBoundary","props","error","errorInfo","AlertCircle","EnhancedSlideViewer","transition","isActive","prefetchNext","onImageLoad","onImageError","reducedMotion","lazyLoad","setIsLoading","hasError","setHasError","getTransitionClass","getTextStyles","styles","getTextShadowClass","getBackgroundStyle","style","colors","handleImageLoad","handleImageError","renderContent","paragraph","BasicNavigation","onPrev","onNext","onGoToSlide","showPagination","ChevronLeft","ChevronRight","SortableSlideItem","isSelected","onSelect","onDuplicate","onDelete","onToggleVisibility","onMultiSelect","attributes","listeners","setNodeRef","transform","isDragging","useSortable","CSS","getSlideIcon","Layers","handleClick","GripVertical","Eye","EyeOff","Copy","Trash2","SlideSortableList","slides","onReorder","selectedSlides","onSelectionChange","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","handleDragStart","event","handleDragEnd","over","oldIndex","newIndex","newSlides","arrayMove","handleDragCancel","handleMultiSelect","add","newSelection","activeSlide","s","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","DragOverlay","BulkEditPanel","selectedIndices","onApplyChanges","onDuplicateSelected","onDeleteSelected","onToggleVisibilitySelected","onClose","backgroundColor","setBackgroundColor","textColor","setTextColor","gradientEnabled","setGradientEnabled","gradientStart","setGradientStart","gradientEnd","setGradientEnd","setTransition","selectedCount","applyColors","changes","applyTextStyles","applyTransition","Check","Settings","idx","useKeyboardNavigation","onTogglePlay","onFullscreen","enabled","isEditing","useCallback","target","slideIndex","useTouchGestures","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onPinchZoom","onTap","onDoubleTap","swipeThreshold","swipeVelocityThreshold","touchStartRef","touchEndRef","lastTapRef","pinchStartDistanceRef","isPinchingRef","elementRef","getDistance","touch1","touch2","dx","dy","handleTouchStart","touch","handleTouchMove","scale","handleTouchEnd","start","end","deltaX","deltaY","deltaTime","velocityX","velocityY","now","isHorizontalSwipe","handleTouchCancel","attachToElement","element","useMouseInteractions","onWheelNext","onWheelPrev","onHoverStart","onHoverEnd","wheelThreshold","wheelDebounceMs","pauseOnHover","lastWheelTime","wheelDelta","isHovering","wheelTimeoutRef","handleWheel","timeSinceLastWheel","handleMouseEnter","handleMouseLeave","SlideBlock","setAttributes","setCurrentSlide","setIsPlaying","setIsEditing","presentationMode","setPresentationMode","showBulkEdit","setShowBulkEdit","setSelectedSlides","useAdvancedEditor","setUseAdvancedEditor","showThumbnails","setShowThumbnails","pausedForHover","setPausedForHover","isTouchDevice","setIsTouchDevice","viewportRef","aspectRatio","autoPlay","showNavigation","enableKeyboardNavigation","fullscreenEnabled","loop","addSlide","interval","prev","generateId","newSlide","deleteSlide","duplicateSlide","slideToDuplicate","applyBulkChanges","indices","duplicateSelectedSlides","indicesToDuplicate","a","b","deleteSelectedSlides","toggleVisibilitySelected","updateSlide","updatedSlide","goToPrevSlide","goToNextSlide","goToSlide","toggleFullscreen","handleGoTo","attachTouchElement","attachMouseElement","getAspectRatioStyle","Play","Pause","Maximize2","Grid","Plus","media","registerSlideBlock","registerMediaBlocks"],"mappings":"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"}