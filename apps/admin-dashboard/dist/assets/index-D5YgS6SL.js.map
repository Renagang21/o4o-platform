{"version":3,"file":"index-D5YgS6SL.js","sources":["../../src/pages/users/UsersListClean.tsx","../../src/pages/users/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  ChevronDown,\n  ChevronUp,\n  Settings,\n  User,\n  Mail,\n  Shield,\n  Calendar,\n  Search,\n  MoreHorizontal,\n  Edit,\n  Trash2\n} from 'lucide-react';\nimport AdminBreadcrumb from '@/components/common/AdminBreadcrumb';\nimport { authClient } from '@o4o/auth-client';\nimport toast from 'react-hot-toast';\n\ninterface User {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n  role: string;\n  posts: number;\n  registeredDate: string;\n  lastLogin?: string;\n  status: 'active' | 'inactive' | 'pending';\n  avatar?: string;\n}\n\ntype SortField = 'username' | 'email' | 'role' | 'registeredDate' | null;\ntype SortOrder = 'asc' | 'desc';\n\nconst UsersListClean = () => {\n  const navigate = useNavigate();\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Filters - persist in sessionStorage\n  const [activeTab, setActiveTab] = useState<'all' | 'administrator' | 'editor' | 'subscriber'>(() => {\n    const saved = sessionStorage.getItem('users-active-tab');\n    return (saved as any) || 'all';\n  });\n  \n  const [selectedUsers, setSelectedUsers] = useState<Set<string>>(new Set());\n  const [hoveredRow, setHoveredRow] = useState<string | null>(null);\n  const hoverTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [showScreenOptions, setShowScreenOptions] = useState(false);\n  const [selectedBulkAction, setSelectedBulkAction] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortField, setSortField] = useState<SortField>(null);\n  const [sortOrder, setSortOrder] = useState<SortOrder>('desc');\n  \n  // Quick Edit state\n  const [quickEditId, setQuickEditId] = useState<string | null>(null);\n  const [quickEditData, setQuickEditData] = useState({\n    name: '',\n    email: '',\n    role: 'subscriber',\n    username: ''\n  });\n\n  // Screen Options - persist in localStorage\n  const [visibleColumns, setVisibleColumns] = useState(() => {\n    const saved = localStorage.getItem('users-visible-columns');\n    return saved ? JSON.parse(saved) : {\n      username: true,\n      name: true,\n      email: true,\n      role: true,\n      posts: true,\n      registeredDate: true\n    };\n  });\n\n  const [itemsPerPage, setItemsPerPage] = useState(() => {\n    const saved = localStorage.getItem('users-items-per-page');\n    return saved ? parseInt(saved) : 20;\n  });\n\n  // Fetch users from API\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setLoading(true);\n        const response = await authClient.api.get('/v1/users');\n\n        // Check for both direct data and nested data structure\n        const userData = response.data?.data?.users || response.data?.data || response.data || [];\n\n        if (Array.isArray(userData) && userData.length > 0) {\n          const transformedUsers = userData.map((user: any) => ({\n            id: user.id || user._id,\n            name: user.name || 'Unknown',\n            username: user.username || user.email?.split('@')[0] || 'unknown',\n            email: user.email || '',\n            role: user.role || 'subscriber',\n            posts: user.postsCount || 0,\n            registeredDate: user.createdAt ? new Date(user.createdAt).toISOString().split('T')[0] : '',\n            lastLogin: user.lastLogin || user.lastLoginAt ? new Date(user.lastLogin || user.lastLoginAt).toISOString().split('T')[0] : undefined,\n            status: user.status || 'active',\n            avatar: user.avatar\n          }));\n\n          setUsers(transformedUsers);\n        } else {\n          setUsers([]);\n        }\n      } catch (err: any) {\n        setError('Failed to load users');\n        setUsers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  // Save activeTab to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem('users-active-tab', activeTab);\n  }, [activeTab]);\n\n  // Save Screen Options to localStorage\n  useEffect(() => {\n    localStorage.setItem('users-visible-columns', JSON.stringify(visibleColumns));\n  }, [visibleColumns]);\n\n  useEffect(() => {\n    localStorage.setItem('users-items-per-page', itemsPerPage.toString());\n  }, [itemsPerPage]);\n\n  // Clean up hover timeout\n  useEffect(() => {\n    return () => {\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Filter users based on activeTab and searchQuery\n  const filteredUsers = users.filter(user => {\n    // Filter by role\n    if (activeTab !== 'all' && user.role !== activeTab) {\n      return false;\n    }\n    \n    // Filter by search\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      return user.username.toLowerCase().includes(query) ||\n             user.name.toLowerCase().includes(query) ||\n             user.email.toLowerCase().includes(query);\n    }\n    \n    return true;\n  });\n\n  // Sort users\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    if (!sortField) return 0;\n    \n    let aVal = a[sortField];\n    let bVal = b[sortField];\n    \n    if (typeof aVal === 'string' && typeof bVal === 'string') {\n      return sortOrder === 'asc' \n        ? aVal.localeCompare(bVal)\n        : bVal.localeCompare(aVal);\n    }\n    \n    return 0;\n  });\n\n  // Paginate users\n  const paginatedUsers = sortedUsers.slice(0, itemsPerPage);\n\n  // Count users by role\n  const getCounts = () => {\n    return {\n      all: users.length,\n      administrator: users.filter(u => u.role === 'administrator').length,\n      editor: users.filter(u => u.role === 'editor').length,\n      subscriber: users.filter(u => u.role === 'subscriber').length\n    };\n  };\n\n  const counts = getCounts();\n\n  // Handle row hover with delay\n  const handleRowMouseEnter = (userId: string) => {\n    if (hoverTimeoutRef.current) {\n      clearTimeout(hoverTimeoutRef.current);\n    }\n    hoverTimeoutRef.current = setTimeout(() => {\n      setHoveredRow(userId);\n    }, 300);\n  };\n\n  const handleRowMouseLeave = () => {\n    if (hoverTimeoutRef.current) {\n      clearTimeout(hoverTimeoutRef.current);\n    }\n    setHoveredRow(null);\n  };\n\n  // Handle bulk actions\n  const handleBulkAction = async () => {\n    if (!selectedBulkAction) {\n      toast.error('Please select a bulk action');\n      return;\n    }\n\n    if (selectedUsers.size === 0) {\n      toast.error('Please select users first');\n      return;\n    }\n\n    if (selectedBulkAction === 'delete') {\n      if (!confirm(`Are you sure you want to delete ${selectedUsers.size} user(s)?`)) {\n        return;\n      }\n\n      try {\n        // API call to delete users\n        await Promise.all(\n          Array.from(selectedUsers).map(id => \n            authClient.api.delete(`/api/v1/users/${id}`)\n          )\n        );\n        \n        setUsers(prev => prev.filter(u => !selectedUsers.has(u.id)));\n        setSelectedUsers(new Set());\n        toast.success(`${selectedUsers.size} user(s) deleted`);\n      } catch (error) {\n        toast.error('Failed to delete users');\n      }\n    } else if (selectedBulkAction === 'change-role') {\n      // Show role change dialog\n      const newRole = prompt('Enter new role (administrator, editor, subscriber):');\n      if (!newRole) return;\n\n      try {\n        await Promise.all(\n          Array.from(selectedUsers).map(id => \n            authClient.api.patch(`/api/v1/users/${id}`, { role: newRole })\n          )\n        );\n        \n        setUsers(prev => prev.map(u => \n          selectedUsers.has(u.id) ? { ...u, role: newRole } : u\n        ));\n        setSelectedUsers(new Set());\n        toast.success(`Role changed for ${selectedUsers.size} user(s)`);\n      } catch (error) {\n        toast.error('Failed to change roles');\n      }\n    }\n    \n    setSelectedBulkAction('');\n  };\n\n  // Handle quick edit\n  const handleQuickEdit = (user: User) => {\n    setQuickEditId(user.id);\n    setQuickEditData({\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      username: user.username\n    });\n  };\n\n  const handleQuickEditSave = async () => {\n    try {\n      await authClient.api.patch(`/api/v1/users/${quickEditId}`, quickEditData);\n      \n      setUsers(prev => prev.map(u => \n        u.id === quickEditId \n          ? { ...u, ...quickEditData }\n          : u\n      ));\n      \n      setQuickEditId(null);\n      toast.success('User updated successfully');\n    } catch (error) {\n      toast.error('Failed to update user');\n    }\n  };\n\n  // Handle sort\n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortOrder('asc');\n    }\n  };\n\n  // Handle select all\n  const handleSelectAll = () => {\n    if (selectedUsers.size === paginatedUsers.length) {\n      setSelectedUsers(new Set());\n    } else {\n      setSelectedUsers(new Set(paginatedUsers.map(u => u.id)));\n    }\n  };\n\n  // Handle delete user\n  const handleDelete = async (userId: string) => {\n    if (!confirm('Are you sure you want to delete this user?')) {\n      return;\n    }\n\n    try {\n      await authClient.api.delete(`/api/v1/users/${userId}`);\n      setUsers(prev => prev.filter(u => u.id !== userId));\n      toast.success('User deleted successfully');\n    } catch (error) {\n      toast.error('Failed to delete user');\n    }\n  };\n\n  // Role display helper\n  const getRoleDisplay = (role: string) => {\n    const roleMap: Record<string, { label: string; color: string }> = {\n      administrator: { label: 'Administrator', color: 'text-red-600' },\n      editor: { label: 'Editor', color: 'text-blue-600' },\n      author: { label: 'Author', color: 'text-green-600' },\n      contributor: { label: 'Contributor', color: 'text-purple-600' },\n      subscriber: { label: 'Subscriber', color: 'text-gray-600' }\n    };\n    \n    return roleMap[role] || { label: role, color: 'text-gray-600' };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-gray-600\">Loading users...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b px-8 py-3\">\n        <AdminBreadcrumb \n          items={[\n            { label: 'Dashboard', path: '/' },\n            { label: 'Users', path: '/users' }\n          ]} \n        />\n      </div>\n\n      <div className=\"px-8 py-6\">\n        {/* Title and Add New */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <h1 className=\"text-2xl font-normal\">Users</h1>\n          <button\n            onClick={() => navigate('/users/new')}\n            className=\"px-3 py-1 bg-white border border-gray-300 rounded text-sm hover:bg-gray-50\"\n          >\n            Add New User\n          </button>\n        </div>\n\n        {/* Status Filter Tabs */}\n        <ul className=\"flex gap-2 text-sm mb-4\">\n          <li>\n            <button\n              onClick={() => setActiveTab('all')}\n              className={activeTab === 'all' ? 'font-medium' : 'text-blue-600 hover:text-blue-800'}\n            >\n              All ({counts.all})\n            </button>\n          </li>\n          <li className=\"text-gray-400\">|</li>\n          <li>\n            <button\n              onClick={() => setActiveTab('administrator')}\n              className={activeTab === 'administrator' ? 'font-medium' : 'text-blue-600 hover:text-blue-800'}\n            >\n              Administrator ({counts.administrator})\n            </button>\n          </li>\n          <li className=\"text-gray-400\">|</li>\n          <li>\n            <button\n              onClick={() => setActiveTab('editor')}\n              className={activeTab === 'editor' ? 'font-medium' : 'text-blue-600 hover:text-blue-800'}\n            >\n              Editor ({counts.editor})\n            </button>\n          </li>\n          <li className=\"text-gray-400\">|</li>\n          <li>\n            <button\n              onClick={() => setActiveTab('subscriber')}\n              className={activeTab === 'subscriber' ? 'font-medium' : 'text-blue-600 hover:text-blue-800'}\n            >\n              Subscriber ({counts.subscriber})\n            </button>\n          </li>\n        </ul>\n\n        {/* Search and Bulk Actions */}\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <select\n              value={selectedBulkAction}\n              onChange={(e) => setSelectedBulkAction(e.target.value)}\n              className=\"border border-gray-300 rounded px-2 py-1 text-sm\"\n            >\n              <option value=\"\">Bulk actions</option>\n              <option value=\"delete\">Delete</option>\n              <option value=\"change-role\">Change role</option>\n            </select>\n            <button\n              onClick={handleBulkAction}\n              className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50\"\n            >\n              Apply\n            </button>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search users...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-9 pr-3 py-1 border border-gray-300 rounded text-sm w-64\"\n              />\n            </div>\n            <button className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50\">\n              Search\n            </button>\n          </div>\n        </div>\n\n        {/* Users Table */}\n        <div className=\"bg-white border rounded-lg\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b bg-gray-50\">\n                <th className=\"w-10 px-4 py-2 text-left\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedUsers.size === paginatedUsers.length && paginatedUsers.length > 0}\n                    onChange={handleSelectAll}\n                    className=\"rounded border-gray-300\"\n                  />\n                </th>\n                {visibleColumns.username && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <button\n                      onClick={() => handleSort('username')}\n                      className=\"flex items-center gap-1 font-normal text-sm hover:text-blue-600\"\n                    >\n                      Username\n                      {sortField === 'username' && (\n                        sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {visibleColumns.name && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <span className=\"text-sm font-normal\">Name</span>\n                  </th>\n                )}\n                {visibleColumns.email && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <button\n                      onClick={() => handleSort('email')}\n                      className=\"flex items-center gap-1 font-normal text-sm hover:text-blue-600\"\n                    >\n                      Email\n                      {sortField === 'email' && (\n                        sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {visibleColumns.role && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <button\n                      onClick={() => handleSort('role')}\n                      className=\"flex items-center gap-1 font-normal text-sm hover:text-blue-600\"\n                    >\n                      Role\n                      {sortField === 'role' && (\n                        sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {visibleColumns.posts && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <span className=\"text-sm font-normal\">Posts</span>\n                  </th>\n                )}\n                {visibleColumns.registeredDate && (\n                  <th className=\"px-4 py-2 text-left\">\n                    <button\n                      onClick={() => handleSort('registeredDate')}\n                      className=\"flex items-center gap-1 font-normal text-sm hover:text-blue-600\"\n                    >\n                      Date\n                      {sortField === 'registeredDate' && (\n                        sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {paginatedUsers.length === 0 ? (\n                <tr>\n                  <td colSpan={Object.values(visibleColumns).filter(v => v).length + 1} className=\"px-4 py-8 text-center text-gray-500\">\n                    No users found\n                  </td>\n                </tr>\n              ) : (\n                paginatedUsers.map((user) => (\n                  <React.Fragment key={user.id}>\n                    <tr\n                      className=\"border-b hover:bg-gray-50 transition-colors\"\n                      onMouseEnter={() => handleRowMouseEnter(user.id)}\n                      onMouseLeave={handleRowMouseLeave}\n                    >\n                      <td className=\"px-4 py-3\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedUsers.has(user.id)}\n                          onChange={(e) => {\n                            const newSelected = new Set(selectedUsers);\n                            if (e.target.checked) {\n                              newSelected.add(user.id);\n                            } else {\n                              newSelected.delete(user.id);\n                            }\n                            setSelectedUsers(newSelected);\n                          }}\n                          className=\"rounded border-gray-300\"\n                        />\n                      </td>\n                      {visibleColumns.username && (\n                        <td className=\"px-4 py-3\">\n                          <div className=\"flex items-center gap-2\">\n                            {user.avatar && (\n                              <img\n                                src={user.avatar}\n                                alt={user.name}\n                                className=\"w-8 h-8 rounded-full\"\n                              />\n                            )}\n                            <div>\n                              <button\n                                onClick={() => navigate(`/users/${user.id}/edit`)}\n                                className=\"text-blue-600 hover:text-blue-800 font-medium\"\n                              >\n                                {user.username}\n                              </button>\n                              {hoveredRow === user.id && (\n                                <div className=\"flex gap-2 mt-1 text-xs\">\n                                  <button\n                                    onClick={() => navigate(`/users/${user.id}/edit`)}\n                                    className=\"text-blue-600 hover:text-blue-800\"\n                                  >\n                                    Edit\n                                  </button>\n                                  <span className=\"text-gray-400\">|</span>\n                                  <button\n                                    onClick={() => handleDelete(user.id)}\n                                    className=\"text-red-600 hover:text-red-800\"\n                                  >\n                                    Delete\n                                  </button>\n                                  <span className=\"text-gray-400\">|</span>\n                                  <button\n                                    onClick={() => handleQuickEdit(user)}\n                                    className=\"text-blue-600 hover:text-blue-800\"\n                                  >\n                                    Quick Edit\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </td>\n                      )}\n                      {visibleColumns.name && (\n                        <td className=\"px-4 py-3 text-sm text-gray-700\">\n                          {user.name}\n                        </td>\n                      )}\n                      {visibleColumns.email && (\n                        <td className=\"px-4 py-3\">\n                          <a href={`mailto:${user.email}`} className=\"text-sm text-blue-600 hover:text-blue-800\">\n                            {user.email}\n                          </a>\n                        </td>\n                      )}\n                      {visibleColumns.role && (\n                        <td className=\"px-4 py-3\">\n                          <span className={`text-sm ${getRoleDisplay(user.role).color}`}>\n                            {getRoleDisplay(user.role).label}\n                          </span>\n                        </td>\n                      )}\n                      {visibleColumns.posts && (\n                        <td className=\"px-4 py-3 text-sm text-gray-700\">\n                          {user.posts > 0 ? (\n                            <button className=\"text-blue-600 hover:text-blue-800\">\n                              {user.posts}\n                            </button>\n                          ) : (\n                            <span className=\"text-gray-400\">0</span>\n                          )}\n                        </td>\n                      )}\n                      {visibleColumns.registeredDate && (\n                        <td className=\"px-4 py-3 text-sm text-gray-700\">\n                          {user.registeredDate}\n                        </td>\n                      )}\n                    </tr>\n                    \n                    {/* Quick Edit Row */}\n                    {quickEditId === user.id && (\n                      <tr className=\"bg-gray-50 border-b\">\n                        <td colSpan={Object.values(visibleColumns).filter(v => v).length + 1} className=\"px-4 py-4\">\n                          <div className=\"flex gap-4\">\n                            <div>\n                              <label className=\"block text-xs text-gray-600 mb-1\">Username</label>\n                              <input\n                                type=\"text\"\n                                value={quickEditData.username}\n                                onChange={(e) => setQuickEditData({ ...quickEditData, username: e.target.value })}\n                                className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-gray-600 mb-1\">Name</label>\n                              <input\n                                type=\"text\"\n                                value={quickEditData.name}\n                                onChange={(e) => setQuickEditData({ ...quickEditData, name: e.target.value })}\n                                className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-gray-600 mb-1\">Email</label>\n                              <input\n                                type=\"email\"\n                                value={quickEditData.email}\n                                onChange={(e) => setQuickEditData({ ...quickEditData, email: e.target.value })}\n                                className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-gray-600 mb-1\">Role</label>\n                              <select\n                                value={quickEditData.role}\n                                onChange={(e) => setQuickEditData({ ...quickEditData, role: e.target.value })}\n                                className=\"px-2 py-1 border border-gray-300 rounded text-sm\"\n                              >\n                                <option value=\"administrator\">Administrator</option>\n                                <option value=\"editor\">Editor</option>\n                                <option value=\"author\">Author</option>\n                                <option value=\"contributor\">Contributor</option>\n                                <option value=\"subscriber\">Subscriber</option>\n                              </select>\n                            </div>\n                            <div className=\"flex items-end gap-2\">\n                              <button\n                                onClick={handleQuickEditSave}\n                                className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                              >\n                                Update\n                              </button>\n                              <button\n                                onClick={() => setQuickEditId(null)}\n                                className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\"\n                              >\n                                Cancel\n                              </button>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )}\n                  </React.Fragment>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination Info */}\n        <div className=\"mt-4 text-sm text-gray-600\">\n          {paginatedUsers.length} of {filteredUsers.length} items\n        </div>\n\n        {/* Screen Options */}\n        <div className=\"fixed bottom-4 right-4\">\n          <button\n            onClick={() => setShowScreenOptions(!showScreenOptions)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-lg hover:bg-gray-50\"\n          >\n            <Settings className=\"w-4 h-4\" />\n            Screen Options\n          </button>\n          \n          {showScreenOptions && (\n            <div className=\"absolute bottom-full right-0 mb-2 p-4 bg-white border rounded-lg shadow-xl w-80\">\n              <h3 className=\"font-medium mb-3\">Screen Options</h3>\n              \n              <div className=\"mb-4\">\n                <h4 className=\"text-sm font-medium mb-2\">Columns</h4>\n                <div className=\"space-y-2\">\n                  {Object.entries({\n                    username: 'Username',\n                    name: 'Name',\n                    email: 'Email',\n                    role: 'Role',\n                    posts: 'Posts',\n                    registeredDate: 'Date'\n                  }).map(([key, label]) => (\n                    <label key={key} className=\"flex items-center gap-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        checked={visibleColumns[key as keyof typeof visibleColumns]}\n                        onChange={(e) => setVisibleColumns({\n                          ...visibleColumns,\n                          [key]: e.target.checked\n                        })}\n                        className=\"rounded border-gray-300\"\n                      />\n                      {label}\n                    </label>\n                  ))}\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"text-sm font-medium mb-2\">Pagination</h4>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm\">Number of items per page:</span>\n                  <input\n                    type=\"number\"\n                    value={itemsPerPage}\n                    onChange={(e) => setItemsPerPage(parseInt(e.target.value) || 20)}\n                    className=\"w-16 px-2 py-1 border border-gray-300 rounded text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersListClean;","// import UsersListBulk from './UsersListBulk'; // Old complex version\nimport UsersListClean from './UsersListClean'; // New clean WordPress-style\n// import UserListNew from './UserListNew'; // Unified clean version with UserApi\n\nexport default function UsersPage() {\n  return <UsersListClean />;\n}"],"names":["UsersListClean","navigate","useNavigate","users","setUsers","useState","loading","setLoading","error","setError","activeTab","setActiveTab","selectedUsers","setSelectedUsers","hoveredRow","setHoveredRow","hoverTimeoutRef","useRef","showScreenOptions","setShowScreenOptions","selectedBulkAction","setSelectedBulkAction","searchQuery","setSearchQuery","sortField","setSortField","sortOrder","setSortOrder","quickEditId","setQuickEditId","quickEditData","setQuickEditData","visibleColumns","setVisibleColumns","saved","itemsPerPage","setItemsPerPage","useEffect","response","authClient","userData","transformedUsers","user","filteredUsers","query","paginatedUsers","a","b","aVal","bVal","counts","u","handleRowMouseEnter","userId","handleRowMouseLeave","handleBulkAction","toast","id","prev","newRole","handleQuickEdit","handleQuickEditSave","handleSort","field","handleSelectAll","handleDelete","getRoleDisplay","role","jsx","jsxs","AdminBreadcrumb","e","Search","ChevronUp","ChevronDown","v","React","newSelected","Settings","key","label","UsersPage"],"mappings":"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"}