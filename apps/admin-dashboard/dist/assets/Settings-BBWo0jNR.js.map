{"version":3,"file":"Settings-BBWo0jNR.js","sources":["../../src/components/ui/separator.tsx","../../src/pages/settings/GeneralSettings.tsx","../../src/components/ui/radio-group.tsx","../../src/constants/defaultSettings.ts","../../src/pages/settings/ReadingSettings.tsx","../../src/constants/oauth.ts","../../src/pages/settings/OAuthSettings.tsx","../../src/pages/settings/PermalinkSettings.tsx","../../src/pages/settings/WritingSettings.tsx","../../src/pages/settings/PrivacySettings.tsx","../../src/pages/settings/Settings.tsx"],"sourcesContent":["import { forwardRef, HTMLAttributes } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface SeparatorProps extends HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical';\n  decorative?: boolean;\n}\n\nconst Separator = forwardRef<HTMLDivElement, SeparatorProps>(\n  ({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\n    <div\n      ref={ref}\n      role={decorative ? 'none' : 'separator'}\n      aria-orientation={orientation}\n      className={cn(\n        'shrink-0 bg-border',\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n        className\n      )}\n      {...props}\n    />\n  )\n);\n\nSeparator.displayName = 'Separator';\n\nexport { Separator };","import { useState } from 'react';\nimport { Save, Globe, Clock, Shield, Database } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiClient } from '@/api/client';\nimport { useAdminNotices } from '@/hooks/useAdminNotices';\n\ninterface GeneralSettingsData {\n  siteName: string;\n  siteDescription: string;\n  siteUrl: string;\n  adminEmail: string;\n  timezone: string;\n  dateFormat: string;\n  timeFormat: string;\n  language: string;\n  maintenanceMode: boolean;\n  maintenanceMessage: string;\n  allowRegistration: boolean;\n  defaultUserRole: string;\n  requireEmailVerification: boolean;\n  enableApiAccess: boolean;\n  apiRateLimit: number;\n}\n\nconst timezones = [\n  { value: 'Asia/Seoul', label: 'Seoul (UTC+9)' },\n  { value: 'Asia/Tokyo', label: 'Tokyo (UTC+9)' },\n  { value: 'America/New_York', label: 'New York (UTC-5)' },\n  { value: 'America/Los_Angeles', label: 'Los Angeles (UTC-8)' },\n  { value: 'Europe/London', label: 'London (UTC+0)' },\n  { value: 'Europe/Paris', label: 'Paris (UTC+1)' },\n];\n\nconst dateFormats = [\n  { value: 'YYYY-MM-DD', label: '2024-12-25' },\n  { value: 'DD/MM/YYYY', label: '25/12/2024' },\n  { value: 'MM/DD/YYYY', label: '12/25/2024' },\n  { value: 'YYYY년 MM월 DD일', label: '2024년 12월 25일' },\n];\n\nconst timeFormats = [\n  { value: 'HH:mm', label: '14:30 (24시간)' },\n  { value: 'hh:mm A', label: '02:30 PM (12시간)' },\n];\n\nexport default function GeneralSettings() {\n  const queryClient = useQueryClient();\n  const { success, error } = useAdminNotices();\n  const [settings, setSettings] = useState({\n    siteName: '',\n    siteDescription: '',\n    siteUrl: '',\n    adminEmail: '',\n    timezone: 'Asia/Seoul',\n    dateFormat: 'YYYY-MM-DD',\n    timeFormat: 'HH:mm',\n    language: 'ko',\n    maintenanceMode: false,\n    maintenanceMessage: '',\n    allowRegistration: true,\n    defaultUserRole: 'customer',\n    requireEmailVerification: true,\n    enableApiAccess: false,\n    apiRateLimit: 100\n  });\n\n  // Fetch settings\n  const { isLoading } = useQuery({\n    queryKey: ['settings', 'general'],\n    queryFn: async () => {\n      const response = await apiClient.get('/settings/general');\n      const data = response.data.data;\n      if (data) {\n        setSettings(data);\n      }\n      return data;\n    }\n  });\n\n  // Save settings mutation\n  const saveMutation = useMutation({\n    mutationFn: async (data: GeneralSettingsData) => {\n      return apiClient.put('/settings/general', data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['settings', 'general'] });\n      success('설정이 저장되었습니다.');\n    },\n    onError: (err: unknown) => {\n      const message = err instanceof Error ? err.message : '설정 저장에 실패했습니다';\n      error(message);\n    }\n  });\n\n  const handleSave = () => {\n    saveMutation.mutate(settings);\n  };\n\n  const handleChange = (field: keyof GeneralSettingsData, value: any) => {\n    setSettings((prev: any) => ({ ...prev, [field]: value }));\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Site Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Globe className=\"w-5 h-5\" />\n            사이트 정보\n          </CardTitle>\n          <CardDescription>\n            웹사이트의 기본 정보를 설정합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"siteName\">사이트 이름</Label>\n              <Input\n                id=\"siteName\"\n                value={settings.siteName}\n                onChange={(e: any) => handleChange('siteName', e.target.value)}\n                placeholder=\"O4O Platform\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"siteUrl\">사이트 URL</Label>\n              <Input\n                id=\"siteUrl\"\n                value={settings.siteUrl}\n                onChange={(e: any) => handleChange('siteUrl', e.target.value)}\n                placeholder=\"https://admin.neture.co.kr\"\n              />\n            </div>\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"siteDescription\">사이트 설명</Label>\n            <Textarea\n              id=\"siteDescription\"\n              value={settings.siteDescription}\n              onChange={(e: any) => handleChange('siteDescription', e.target.value)}\n              placeholder=\"사이트에 대한 간단한 설명을 입력하세요\"\n              rows={3}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"adminEmail\">관리자 이메일</Label>\n            <Input\n              id=\"adminEmail\"\n              type=\"email\"\n              value={settings.adminEmail}\n              onChange={(e: any) => handleChange('adminEmail', e.target.value)}\n              placeholder=\"admin@example.com\"\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Localization */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"w-5 h-5\" />\n            지역화 설정\n          </CardTitle>\n          <CardDescription>\n            시간대 및 날짜/시간 형식을 설정합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"timezone\">시간대</Label>\n              <Select\n                value={settings.timezone}\n                onValueChange={(value: string) => handleChange('timezone', value)}\n              >\n                <SelectTrigger id=\"timezone\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {timezones.map((tz: any) => (\n                    <SelectItem key={tz.value} value={tz.value}>\n                      {tz.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"language\">언어</Label>\n              <Select\n                value={settings.language}\n                onValueChange={(value: string) => handleChange('language', value)}\n              >\n                <SelectTrigger id=\"language\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"ko\">한국어</SelectItem>\n                  <SelectItem value=\"en\">English</SelectItem>\n                  <SelectItem value=\"ja\">日本語</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dateFormat\">날짜 형식</Label>\n              <Select\n                value={settings.dateFormat}\n                onValueChange={(value: string) => handleChange('dateFormat', value)}\n              >\n                <SelectTrigger id=\"dateFormat\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {dateFormats.map((format: any) => (\n                    <SelectItem key={format.value} value={format.value}>\n                      {format.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"timeFormat\">시간 형식</Label>\n              <Select\n                value={settings.timeFormat}\n                onValueChange={(value: string) => handleChange('timeFormat', value)}\n              >\n                <SelectTrigger id=\"timeFormat\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {timeFormats.map((format: any) => (\n                    <SelectItem key={format.value} value={format.value}>\n                      {format.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Security & Access */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"w-5 h-5\" />\n            보안 & 접근 설정\n          </CardTitle>\n          <CardDescription>\n            사용자 등록 및 API 접근을 관리합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>회원가입 허용</Label>\n                <p className=\"text-sm text-gray-500\">\n                  새로운 사용자의 회원가입을 허용합니다\n                </p>\n              </div>\n              <Switch\n                checked={settings.allowRegistration}\n                onCheckedChange={(checked: boolean) => handleChange('allowRegistration', checked)}\n              />\n            </div>\n            <Separator />\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>이메일 인증 필수</Label>\n                <p className=\"text-sm text-gray-500\">\n                  회원가입 시 이메일 인증을 요구합니다\n                </p>\n              </div>\n              <Switch\n                checked={settings.requireEmailVerification}\n                onCheckedChange={(checked: boolean) => handleChange('requireEmailVerification', checked)}\n              />\n            </div>\n            <Separator />\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"defaultRole\">기본 사용자 역할</Label>\n              <Select\n                value={settings.defaultUserRole}\n                onValueChange={(value: string) => handleChange('defaultUserRole', value)}\n              >\n                <SelectTrigger id=\"defaultRole\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"customer\">일반 회원</SelectItem>\n                  <SelectItem value=\"business\">사업자 회원</SelectItem>\n                  <SelectItem value=\"affiliate\">제휴 회원</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Maintenance Mode */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Database className=\"w-5 h-5\" />\n            유지보수 모드\n          </CardTitle>\n          <CardDescription>\n            사이트를 일시적으로 유지보수 모드로 전환합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-0.5\">\n              <Label>유지보수 모드 활성화</Label>\n              <p className=\"text-sm text-gray-500\">\n                관리자를 제외한 모든 사용자의 접근을 차단합니다\n              </p>\n            </div>\n            <Switch\n              checked={settings.maintenanceMode}\n              onCheckedChange={(checked: boolean) => handleChange('maintenanceMode', checked)}\n            />\n          </div>\n          {settings.maintenanceMode && (\n            <>\n              <Separator />\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"maintenanceMessage\">유지보수 메시지</Label>\n                <Textarea\n                  id=\"maintenanceMessage\"\n                  value={settings.maintenanceMessage}\n                  onChange={(e: any) => handleChange('maintenanceMessage', e.target.value)}\n                  placeholder=\"잠시 시스템 점검 중입니다. 곧 정상 서비스하겠습니다.\"\n                  rows={3}\n                />\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Save Button */}\n      <div className=\"flex justify-end\">\n        <Button \n          onClick={handleSave}\n          disabled={saveMutation.isPending}\n        >\n          <Save className=\"w-4 h-4 mr-2\" />\n          {saveMutation.isPending ? '저장 중...' : '설정 저장'}\n        </Button>\n      </div>\n    </div>\n  );\n}","import { forwardRef, HTMLAttributes, InputHTMLAttributes, createContext, useContext, useState } from 'react';\nimport { Circle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface RadioGroupContextValue {\n  value: string;\n  onValueChange: (value: string) => void;\n  name: string;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextValue | null>(null);\n\nexport interface RadioGroupProps extends HTMLAttributes<HTMLDivElement> {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  name?: string;\n}\n\nconst RadioGroup = forwardRef<HTMLDivElement, RadioGroupProps>(\n  ({ className, value: controlledValue, defaultValue = '', onValueChange, name = `radio-group-${Math.random()}`, children, ...props }, ref) => {\n    const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n    const value = controlledValue ?? uncontrolledValue;\n    \n    const handleValueChange = (newValue: string) => {\n      if (controlledValue === undefined) {\n        setUncontrolledValue(newValue);\n      }\n      onValueChange?.(newValue);\n    };\n\n    return (\n      <RadioGroupContext.Provider value={{ value, onValueChange: handleValueChange, name }}>\n        <div\n          ref={ref}\n          role=\"radiogroup\"\n          className={cn(\"grid gap-2\", className)}\n          {...props}\n        >\n          {children}\n        </div>\n      </RadioGroupContext.Provider>\n    );\n  }\n);\n\nexport interface RadioGroupItemProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'name'> {\n  value: string;\n}\n\nconst RadioGroupItem = forwardRef<HTMLInputElement, RadioGroupItemProps>(\n  ({ className, value, id, ...props }, ref) => {\n    const context = useContext(RadioGroupContext);\n    if (!context) throw new Error('RadioGroupItem must be used within RadioGroup');\n    \n    const isChecked = context.value === value;\n    const inputId = id || `${context.name}-${value}`;\n    \n    return (\n      <div className=\"relative\">\n        <input\n          ref={ref}\n          type=\"radio\"\n          id={inputId}\n          name={context.name}\n          value={value}\n          checked={isChecked}\n          onChange={(e: any) => {\n            if (e.target.checked) {\n              context.onValueChange(value);\n            }\n          }}\n          className=\"sr-only peer\"\n          {...props}\n        />\n        <label\n          htmlFor={inputId}\n          className={cn(\n            \"aspect-square h-4 w-4 rounded-full border border-wp-border\",\n            \"ring-offset-white focus:outline-none peer-focus-visible:ring-2\",\n            \"peer-focus-visible:ring-wp-primary peer-focus-visible:ring-offset-2\",\n            \"peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n            \"peer-checked:border-wp-primary cursor-pointer\",\n            \"flex items-center justify-center\",\n            className\n          )}\n        >\n          {isChecked && (\n            <Circle className=\"h-2.5 w-2.5 fill-wp-primary text-wp-primary\" />\n          )}\n        </label>\n      </div>\n    );\n  }\n);\n\nRadioGroup.displayName = 'RadioGroup';\nRadioGroupItem.displayName = 'RadioGroupItem';\n\nexport { RadioGroup, RadioGroupItem };","/**\n * Default Settings Values\n * API 실패 시 사용할 fallback 데이터 정의\n */\n\nexport interface WritingSettingsData {\n  defaultPostCategory: string;\n  defaultPostFormat: string;\n  enableMarkdown: boolean;\n  enableRichEditor: boolean;\n  autoSaveDraft: boolean;\n  autoSaveInterval: number;\n  revisionsToKeep: number;\n  enableComments: boolean;\n  requireCommentApproval: boolean;\n  enablePingbacks: boolean;\n  defaultCommentStatus: string;\n  emailNewPost: boolean;\n  allowEmojis: boolean;\n}\n\nexport interface ReadingSettingsData {\n  homepageType: 'latest_posts' | 'static_page';\n  homepageId?: string;\n  postsPerPage: number;\n  showSummary: 'full' | 'excerpt';\n  excerptLength: number;\n}\n\nexport interface DiscussionSettingsData {\n  enableComments: boolean;\n  requireNameEmail: boolean;\n  requireRegistration: boolean;\n  closeCommentsAfterDays: number;\n  enableThreadedComments: boolean;\n  threadDepth: number;\n  commentsPerPage: number;\n  defaultCommentOrder: string;\n  requireModeration: boolean;\n  moderationKeywords: string[];\n  blacklistKeywords: string[];\n  enableGravatar: boolean;\n  defaultAvatar: string;\n  maxLinks: number;\n  holdForModeration: boolean;\n}\n\nexport interface OAuthSettingsData {\n  google: {\n    provider: 'google';\n    enabled: boolean;\n    clientId: string;\n    clientSecret: string;\n    callbackUrl: string;\n    scope: string[];\n  };\n  kakao: {\n    provider: 'kakao';\n    enabled: boolean;\n    clientId: string;\n    clientSecret: string;\n    callbackUrl: string;\n    scope: string[];\n  };\n  naver: {\n    provider: 'naver';\n    enabled: boolean;\n    clientId: string;\n    clientSecret: string;\n    callbackUrl: string;\n    scope: string[];\n  };\n}\n\n// 기본값 객체들\nexport const DEFAULT_WRITING_SETTINGS: WritingSettingsData = {\n  defaultPostCategory: 'uncategorized',\n  defaultPostFormat: 'standard',\n  enableMarkdown: true,\n  enableRichEditor: true,\n  autoSaveDraft: true,\n  autoSaveInterval: 60,\n  revisionsToKeep: 10,\n  enableComments: true,\n  requireCommentApproval: false,\n  enablePingbacks: true,\n  defaultCommentStatus: 'open',\n  emailNewPost: false,\n  allowEmojis: true\n};\n\nexport const DEFAULT_READING_SETTINGS: ReadingSettingsData = {\n  homepageType: 'latest_posts',\n  homepageId: undefined,\n  postsPerPage: 10,\n  showSummary: 'excerpt',\n  excerptLength: 200\n};\n\nexport const DEFAULT_DISCUSSION_SETTINGS: DiscussionSettingsData = {\n  enableComments: true,\n  requireNameEmail: true,\n  requireRegistration: false,\n  closeCommentsAfterDays: 0,\n  enableThreadedComments: true,\n  threadDepth: 5,\n  commentsPerPage: 50,\n  defaultCommentOrder: 'oldest',\n  requireModeration: false,\n  moderationKeywords: [],\n  blacklistKeywords: [],\n  enableGravatar: true,\n  defaultAvatar: 'mystery',\n  maxLinks: 2,\n  holdForModeration: false\n};\n\nexport const DEFAULT_OAUTH_SETTINGS: OAuthSettingsData = {\n  google: {\n    provider: 'google',\n    enabled: false,\n    clientId: '',\n    clientSecret: '',\n    callbackUrl: '',\n    scope: []\n  },\n  kakao: {\n    provider: 'kakao',\n    enabled: false,\n    clientId: '',\n    clientSecret: '',\n    callbackUrl: '',\n    scope: []\n  },\n  naver: {\n    provider: 'naver',\n    enabled: false,\n    clientId: '',\n    clientSecret: '',\n    callbackUrl: '',\n    scope: []\n  }\n};\n\n// localStorage 키 상수\nexport const STORAGE_KEYS = {\n  WRITING_SETTINGS: 'o4o-settings-writing',\n  READING_SETTINGS: 'o4o-settings-reading', \n  DISCUSSION_SETTINGS: 'o4o-settings-discussion',\n  OAUTH_SETTINGS: 'o4o-settings-oauth'\n} as const;\n\n// 설정 저장 헬퍼 함수\nexport const saveSettingsToStorage = <T>(key: string, settings: T): void => {\n  try {\n    localStorage.setItem(key, JSON.stringify(settings));\n  } catch (error) {\n    // localStorage save failed, ignore silently\n  }\n};\n\n// 설정 로드 헬퍼 함수\nexport const loadSettingsFromStorage = <T>(key: string, defaultValue: T): T => {\n  try {\n    const stored = localStorage.getItem(key);\n    return stored ? JSON.parse(stored) : defaultValue;\n  } catch (error) {\n    // localStorage load failed, return default value\n    return defaultValue;\n  }\n};","import { useState, useEffect } from 'react';\nimport { Save, Home, FileText, User, AlertCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiClient } from '@/api/client';\nimport { ContentApi } from '@/api/contentApi';\nimport toast from 'react-hot-toast';\nimport { \n  DEFAULT_READING_SETTINGS\n} from '@/constants/defaultSettings';\n\ninterface ReadingSettingsData {\n  homepageType: 'latest_posts' | 'static_page';\n  homepageId?: string;\n  postsPerPage: number;\n  showSummary: 'full' | 'excerpt';\n  excerptLength: number;\n}\n\n// interface Page {\n//   id: string;\n//   title: string;\n//   slug: string;\n//   status: string;\n// }\n\nexport default function ReadingSettings() {\n  const queryClient = useQueryClient();\n  const [settings, setSettings] = useState<ReadingSettingsData>(DEFAULT_READING_SETTINGS);\n  const [pages, setPages] = useState<any[]>([]);\n  const [authStatus, setAuthStatus] = useState<{\n    hasToken: boolean;\n    userRole?: string;\n    isAdmin: boolean;\n  }>({ hasToken: false, isAdmin: false });\n\n  // 인증 상태 체크\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      const accessToken = localStorage.getItem('accessToken');\n      const token = localStorage.getItem('token');\n      const adminStorage = localStorage.getItem('admin-auth-storage');\n      \n      let userRole = '';\n      let isAdmin = false;\n      \n      // JWT 토큰에서 역할 추출\n      const actualToken = accessToken || token;\n      if (actualToken) {\n        try {\n          const payload = JSON.parse(atob(actualToken.split('.')[1]));\n          userRole = payload.role || '';\n          isAdmin = userRole === 'admin' || userRole === 'super_admin';\n        } catch (e) {\n          // 토큰 파싱 실패\n        }\n      }\n      \n      setAuthStatus({\n        hasToken: !!(accessToken || token || adminStorage),\n        userRole,\n        isAdmin\n      });\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  // Fetch available pages (using Posts API with type=page)\n  const { data: pagesData, isLoading: pagesLoading } = useQuery({\n    queryKey: ['pages', 'published'],\n    queryFn: async () => {\n      try {\n        const response = await apiClient.get('/api/posts', {\n          params: {\n            type: 'page',\n            status: 'publish',\n            page: 1,\n            pageSize: 100\n          }\n        });\n        return response.data?.data || response.data || [];\n      } catch (error) {\n        throw error;\n      }\n    }\n  });\n\n  // Fetch current settings\n  const { isLoading: settingsLoading } = useQuery({\n    queryKey: ['settings', 'reading'],\n    queryFn: async () => {\n      try {\n        const response = await apiClient.get('/api/v1/settings/reading');\n        const data = response.data.data;\n        if (data) {\n          // Preserve homepageId even if it comes as undefined from API\n          // Don't override with default settings when data exists\n          setSettings({\n            homepageType: data.homepageType || 'latest_posts',\n            homepageId: data.homepageId, // Keep undefined or actual value\n            postsPerPage: data.postsPerPage || 10,\n            showSummary: data.showSummary || 'excerpt',\n            excerptLength: data.excerptLength || 200\n          });\n        }\n        return data;\n      } catch (apiError) {\n        throw apiError;\n      }\n    }\n  });\n\n  // Update pages when data is loaded\n  useEffect(() => {\n    if (pagesData) {\n      setPages(pagesData);\n    }\n  }, [pagesData]);\n\n  // Save settings mutation\n  const saveMutation = useMutation({\n    mutationFn: async (data: ReadingSettingsData) => {\n      try {\n        // Ensure homepageId is included in the request\n        const payload = {\n          ...data,\n          homepageId: data.homepageType === 'static_page' ? data.homepageId : undefined\n        };\n        const response = await apiClient.put('/api/v1/settings/reading', payload);\n        return response;\n      } catch (apiError: any) {\n        // 구체적인 에러 상황별 메시지 처리\n        if (apiError.response?.status === 401) {\n          throw new Error('로그인이 필요합니다. 다시 로그인해주세요.');\n        } else if (apiError.response?.status === 403) {\n          throw new Error('관리자 권한이 필요합니다. 관리자 계정으로 로그인해주세요.');\n        } else if (apiError.response?.status === 400) {\n          const errorData = apiError.response?.data;\n          if (errorData?.code === 'MISSING_PAGE_ID') {\n            throw new Error('홈페이지로 사용할 페이지를 선택해주세요.');\n          } else if (errorData?.code === 'PAGE_NOT_FOUND') {\n            throw new Error('선택한 페이지를 찾을 수 없습니다. 다른 페이지를 선택해주세요.');\n          } else if (errorData?.code === 'PAGE_NOT_PUBLISHED') {\n            throw new Error('선택한 페이지가 게시되지 않았습니다. 게시된 페이지를 선택해주세요.');\n          } else {\n            throw new Error(errorData?.error || '잘못된 요청입니다.');\n          }\n        } else if (apiError.response?.status >= 500) {\n          throw new Error('서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\n        } else if (apiError.code === 'ECONNABORTED') {\n          throw new Error('요청 시간이 초과되었습니다. 네트워크 연결을 확인해주세요.');\n        } else {\n          throw new Error('설정 저장에 실패했습니다. 네트워크 연결을 확인하고 다시 시도해주세요.');\n        }\n      }\n    },\n    onSuccess: async () => {\n      // 즉시 서버에서 최신 데이터를 다시 가져와 동기화\n      await queryClient.invalidateQueries({ queryKey: ['settings', 'reading'] });\n      await queryClient.refetchQueries({ queryKey: ['settings', 'reading'] });\n      toast.success('읽기 설정이 저장되었습니다');\n    },\n    onError: (error: unknown) => {\n      const message = error instanceof Error ? error.message : '설정 저장에 실패했습니다';\n      toast.error(message);\n    }\n  });\n\n  const handleSave = () => {\n    // Validate settings\n    if (settings.homepageType === 'static_page' && !settings.homepageId) {\n      toast.error('홈페이지로 사용할 페이지를 선택해주세요');\n      return;\n    }\n    saveMutation.mutate(settings);\n  };\n\n  const handleChange = (field: keyof ReadingSettingsData, value: any) => {\n    setSettings((prev: any) => ({ ...prev, [field]: value }));\n  };\n\n  const isLoading = settingsLoading || pagesLoading;\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Authentication Status Alert */}\n      {!authStatus.hasToken && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-center\">\n            <AlertCircle className=\"h-5 w-5 text-red-600 mr-2\" />\n            <div>\n              <h4 className=\"text-red-800 font-medium\">로그인이 필요합니다</h4>\n              <p className=\"text-red-700 text-sm mt-1\">\n                설정을 저장하려면 관리자 계정으로 로그인해주세요.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {authStatus.hasToken && !authStatus.isAdmin && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center\">\n            <AlertCircle className=\"h-5 w-5 text-yellow-600 mr-2\" />\n            <div>\n              <h4 className=\"text-yellow-800 font-medium\">권한이 부족합니다</h4>\n              <p className=\"text-yellow-700 text-sm mt-1\">\n                현재 역할: {authStatus.userRole || '알 수 없음'} | 필요 권한: admin 또는 super_admin\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {authStatus.hasToken && authStatus.isAdmin && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n          <div className=\"flex items-center\">\n            <User className=\"h-5 w-5 text-green-600 mr-2\" />\n            <div>\n              <h4 className=\"text-green-800 font-medium\">관리자로 로그인됨</h4>\n              <p className=\"text-green-700 text-sm mt-1\">\n                역할: {authStatus.userRole} | 설정 저장 권한이 있습니다.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Homepage Settings */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Home className=\"w-5 h-5\" />\n            홈페이지 설정\n          </CardTitle>\n          <CardDescription>\n            사이트 홈페이지에 표시할 내용을 설정합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <RadioGroup\n            value={settings.homepageType}\n            onValueChange={(value: string) => handleChange('homepageType', value as 'latest_posts' | 'static_page')}\n          >\n            <div className=\"flex items-start space-x-3 mb-4\">\n              <RadioGroupItem value=\"latest_posts\" id=\"latest_posts\" className=\"mt-1\" />\n              <div className=\"space-y-1\">\n                <Label htmlFor=\"latest_posts\" className=\"font-normal cursor-pointer\">\n                  최신 글 표시\n                </Label>\n                <p className=\"text-sm text-gray-500\">\n                  홈페이지에 최신 블로그 글 목록을 표시합니다\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <RadioGroupItem value=\"static_page\" id=\"static_page\" className=\"mt-1\" />\n              <div className=\"space-y-1 flex-1\">\n                <Label htmlFor=\"static_page\" className=\"font-normal cursor-pointer\">\n                  정적인 페이지 선택\n                </Label>\n                <p className=\"text-sm text-gray-500 mb-3\">\n                  특정 페이지를 홈페이지로 사용합니다\n                </p>\n                \n                {settings.homepageType !== 'latest_posts' && (\n                  <div className=\"space-y-2 ml-6\">\n                    <Label htmlFor=\"homepage-select\">홈페이지</Label>\n                    <Select\n                      value={settings.homepageId}\n                      onValueChange={(value: string) => handleChange('homepageId', value)}\n                    >\n                      <SelectTrigger id=\"homepage-select\" className=\"w-full\">\n                        <SelectValue \n                          placeholder=\"페이지를 선택하세요\"\n                          getDisplayValue={(pageId) => {\n                            const page = pages.find(p => p.id === pageId);\n                            return page?.title || pageId;\n                          }}\n                        />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">— 선택 —</SelectItem>\n                        {pages.map((page: any) => (\n                          <SelectItem key={page.id} value={page.id}>\n                            {page.title?.rendered || page.title || page.name || `페이지 ${page.id.substring(0, 8)}`}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {pages.length === 0 && (\n                      <p className=\"text-sm text-amber-600\">\n                        사용 가능한 페이지가 없습니다. 먼저 페이지를 생성해주세요.\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </RadioGroup>\n        </CardContent>\n      </Card>\n\n      {/* Blog Display Settings */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"w-5 h-5\" />\n            블로그 표시 설정\n          </CardTitle>\n          <CardDescription>\n            블로그 글 목록 표시 방식을 설정합니다\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"posts-per-page\">페이지당 글 수</Label>\n            <Select\n              value={settings.postsPerPage.toString() as any}\n              onValueChange={(value: string) => handleChange('postsPerPage', parseInt(value))}\n            >\n              <SelectTrigger id=\"posts-per-page\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"5\">5개</SelectItem>\n                <SelectItem value=\"10\">10개</SelectItem>\n                <SelectItem value=\"15\">15개</SelectItem>\n                <SelectItem value=\"20\">20개</SelectItem>\n                <SelectItem value=\"30\">30개</SelectItem>\n                <SelectItem value=\"50\">50개</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-3\">\n            <Label>피드에서 각 글 표시</Label>\n            <RadioGroup\n              value={settings.showSummary}\n              onValueChange={(value: string) => handleChange('showSummary', value as 'full' | 'excerpt')}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <RadioGroupItem value=\"full\" id=\"show-full\" />\n                <Label htmlFor=\"show-full\" className=\"font-normal cursor-pointer\">\n                  전체 내용\n                </Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <RadioGroupItem value=\"excerpt\" id=\"show-excerpt\" />\n                <Label htmlFor=\"show-excerpt\" className=\"font-normal cursor-pointer\">\n                  요약문\n                </Label>\n              </div>\n            </RadioGroup>\n          </div>\n\n          {settings.showSummary === 'excerpt' && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"excerpt-length\">요약문 길이 (글자 수)</Label>\n              <Select\n                value={settings.excerptLength.toString() as any}\n                onValueChange={(value: string) => handleChange('excerptLength', parseInt(value))}\n              >\n                <SelectTrigger id=\"excerpt-length\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"100\">100자</SelectItem>\n                  <SelectItem value=\"150\">150자</SelectItem>\n                  <SelectItem value=\"200\">200자</SelectItem>\n                  <SelectItem value=\"250\">250자</SelectItem>\n                  <SelectItem value=\"300\">300자</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Save Button */}\n      <div className=\"flex justify-end\">\n        <div className=\"flex flex-col items-end space-y-2\">\n          {!authStatus.hasToken && (\n            <p className=\"text-sm text-red-600\">\n              저장하려면 로그인이 필요합니다\n            </p>\n          )}\n          {authStatus.hasToken && !authStatus.isAdmin && (\n            <p className=\"text-sm text-yellow-600\">\n              저장하려면 관리자 권한이 필요합니다\n            </p>\n          )}\n          <Button \n            onClick={handleSave}\n            disabled={saveMutation.isPending || !authStatus.hasToken || !authStatus.isAdmin}\n            className={`${\n              !authStatus.hasToken || !authStatus.isAdmin \n                ? 'opacity-50 cursor-not-allowed' \n                : ''\n            }`}\n          >\n            <Save className=\"w-4 h-4 mr-2\" />\n            {saveMutation.isPending ? '저장 중...' : '설정 저장'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}","import { OAuthProviderInfo, OAuthFormField } from '@/types/oauth';\n\n// OAuth Provider Information\nexport const OAUTH_PROVIDERS: Record<string, OAuthProviderInfo> = {\n  google: {\n    name: 'google',\n    displayName: 'Google',\n    icon: '🔍',\n    color: '#4285F4',\n    setupUrl: 'https://console.cloud.google.com/apis/credentials',\n    defaultScopes: ['openid', 'profile', 'email']\n  },\n  kakao: {\n    name: 'kakao',\n    displayName: 'Kakao',\n    icon: '💬',\n    color: '#FEE500',\n    setupUrl: 'https://developers.kakao.com/console/app',\n    defaultScopes: ['profile_nickname', 'account_email']\n  },\n  naver: {\n    name: 'naver',\n    displayName: 'Naver',\n    icon: '🟢',\n    color: '#03C75A',\n    setupUrl: 'https://developers.naver.com/apps/#/register',\n    defaultScopes: ['name', 'email']\n  }\n};\n\n// OAuth Form Fields Configuration\nexport const OAUTH_FORM_FIELDS: OAuthFormField[] = [\n  {\n    name: 'enabled',\n    label: '활성화',\n    type: 'checkbox',\n    helpText: '이 OAuth 제공자를 활성화합니다'\n  },\n  {\n    name: 'clientId',\n    label: 'Client ID',\n    type: 'text',\n    placeholder: 'OAuth 애플리케이션의 Client ID를 입력하세요',\n    required: true,\n    helpText: 'OAuth 제공자에서 발급받은 Client ID'\n  },\n  {\n    name: 'clientSecret',\n    label: 'Client Secret',\n    type: 'password',\n    placeholder: 'OAuth 애플리케이션의 Client Secret을 입력하세요',\n    required: true,\n    sensitive: true,\n    helpText: 'OAuth 제공자에서 발급받은 Client Secret (안전하게 암호화되어 저장됩니다)'\n  },\n  {\n    name: 'callbackUrl',\n    label: 'Callback URL',\n    type: 'text',\n    readonly: true,\n    helpText: '이 URL을 OAuth 제공자의 리다이렉트 URI로 등록하세요'\n  }\n];\n\n// OAuth Scope Options\nexport const OAUTH_SCOPE_OPTIONS: Record<string, { value: string; label: string }[]> = {\n  google: [\n    { value: 'openid', label: 'OpenID (필수)' },\n    { value: 'profile', label: '프로필 정보' },\n    { value: 'email', label: '이메일 주소' },\n    { value: 'https://www.googleapis.com/auth/userinfo.profile', label: '상세 프로필' }\n  ],\n  kakao: [\n    { value: 'profile_nickname', label: '닉네임' },\n    { value: 'profile_image', label: '프로필 이미지' },\n    { value: 'account_email', label: '이메일' },\n    { value: 'gender', label: '성별' },\n    { value: 'age_range', label: '연령대' },\n    { value: 'birthday', label: '생일' }\n  ],\n  naver: [\n    { value: 'name', label: '이름' },\n    { value: 'email', label: '이메일' },\n    { value: 'nickname', label: '별명' },\n    { value: 'profile_image', label: '프로필 이미지' },\n    { value: 'age', label: '연령대' },\n    { value: 'gender', label: '성별' },\n    { value: 'birthday', label: '생일' }\n  ]\n};","import { useState, useCallback, useEffect } from 'react';\nimport { Save, Copy, Check, AlertCircle, ExternalLink, TestTube, Eye, EyeOff } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiClient } from '@/api/client';\nimport { useAdminNotices } from '@/hooks/useAdminNotices';\nimport { \n  OAuthProvider, \n  OAuthConfig, \n  OAuthSettingsResponse,\n  OAuthUpdateRequest,\n  OAuthUpdateResponse,\n  OAuthTestRequest,\n  OAuthTestResponse\n} from '@/types/oauth';\nimport { OAUTH_PROVIDERS } from '@/constants/oauth';\n\nconst OAuthSettings = () => {\n  const { addNotice } = useAdminNotices();\n  const queryClient = useQueryClient();\n  const [showSecrets, setShowSecrets] = useState<Record<OAuthProvider, boolean>>({\n    google: false,\n    kakao: false,\n    naver: false\n  });\n  const [copiedUrls, setCopiedUrls] = useState<Record<OAuthProvider, boolean>>({\n    google: false,\n    kakao: false,\n    naver: false\n  });\n  \n  // Local state for form data - prevents immediate saving\n  const [localSettings, setLocalSettings] = useState<Record<OAuthProvider, OAuthConfig>>({\n    google: { provider: 'google', enabled: false, clientId: '', clientSecret: '', callbackUrl: '', scope: [] },\n    kakao: { provider: 'kakao', enabled: false, clientId: '', clientSecret: '', callbackUrl: '', scope: [] },\n    naver: { provider: 'naver', enabled: false, clientId: '', clientSecret: '', callbackUrl: '', scope: [] }\n  });\n  \n  // Track which providers have unsaved changes\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState<Record<OAuthProvider, boolean>>({\n    google: false,\n    kakao: false,\n    naver: false\n  });\n\n  // Fetch OAuth settings\n  const { data: settings, isLoading } = useQuery<OAuthSettingsResponse>({\n    queryKey: ['oauth-settings'],\n    queryFn: async () => {\n      const response = await apiClient.get('/api/v1/settings/oauth');\n      return response.data;\n    }\n  });\n\n  // Sync server settings to local state when data loads\n  useEffect(() => {\n    if (settings?.data) {\n      setLocalSettings(settings.data);\n      // Reset unsaved changes when fresh data loads\n      setHasUnsavedChanges({\n        google: false,\n        kakao: false,\n        naver: false\n      });\n    }\n  }, [settings]);\n\n  // Update OAuth settings mutation\n  const updateMutation = useMutation<OAuthUpdateResponse, Error, OAuthUpdateRequest>({\n    mutationFn: async (data: OAuthUpdateRequest) => {\n      const response = await apiClient.put('/api/v1/settings/oauth', data);\n      return response.data;\n    },\n    onMutate: async (newData) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: ['oauth-settings'] });\n      \n      // Snapshot the previous value\n      const previousSettings = queryClient.getQueryData(['oauth-settings']);\n      \n      // Optimistically update to the new value\n      queryClient.setQueryData(['oauth-settings'], (old: any) => {\n        if (!old?.data) return old;\n        \n        return {\n          ...old,\n          data: {\n            ...old.data,\n            [newData.provider]: {\n              ...old.data[newData.provider],\n              ...newData.config\n            }\n          }\n        };\n      });\n      \n      // Return a context object with the snapshotted value\n      return { previousSettings };\n    },\n    onSuccess: (_data, variables) => {\n      addNotice({\n        type: 'success',\n        message: `${OAUTH_PROVIDERS[variables.provider].displayName} 설정이 저장되었습니다.`\n      });\n    },\n    onError: (error: Error, _variables, context: { previousSettings?: any } | undefined) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousSettings) {\n        queryClient.setQueryData(['oauth-settings'], context.previousSettings);\n      }\n      addNotice({\n        type: 'error',\n        message: `설정 저장 실패: ${error.message}`\n      });\n    },\n    onSettled: () => {\n      // Always refetch after error or success to ensure we have the latest data\n      queryClient.invalidateQueries({ queryKey: ['oauth-settings'] });\n    }\n  });\n\n  // Test OAuth connection mutation\n  const testMutation = useMutation<OAuthTestResponse, Error, OAuthTestRequest>({\n    mutationFn: async (data: OAuthTestRequest) => {\n      const response = await apiClient.post('/api/v1/settings/oauth/test', data);\n      return response.data;\n    },\n    onSuccess: (data, _variables) => {\n      addNotice({\n        type: data.success ? 'success' : 'error',\n        message: data.message\n      });\n    },\n    onError: (error: Error) => {\n      addNotice({\n        type: 'error',\n        message: `연결 테스트 실패: ${error.message}`\n      });\n    }\n  });\n\n  // Handle local input changes (no immediate save)\n  const handleInputChange = useCallback((provider: OAuthProvider, field: keyof OAuthConfig, value: string | boolean | string[]) => {\n    setLocalSettings(prev => ({\n      ...prev,\n      [provider]: {\n        ...prev[provider],\n        [field]: value\n      }\n    }));\n    \n    // Mark as having unsaved changes\n    setHasUnsavedChanges(prev => ({\n      ...prev,\n      [provider]: true\n    }));\n  }, []);\n\n  // Save specific provider settings to server\n  const handleSaveProvider = useCallback(async (provider: OAuthProvider) => {\n    const config = localSettings[provider];\n    \n    // Validate required fields\n    if (config.enabled && (!config.clientId || !config.clientSecret)) {\n      addNotice({\n        type: 'error',\n        message: `${OAUTH_PROVIDERS[provider].displayName} 설정을 저장하려면 Client ID와 Client Secret을 모두 입력해주세요.`\n      });\n      return;\n    }\n\n    updateMutation.mutate(\n      {\n        provider,\n        config\n      },\n      {\n        onSuccess: () => {\n          // Mark as saved\n          setHasUnsavedChanges(prev => ({\n            ...prev,\n            [provider]: false\n          }));\n        }\n      }\n    );\n  }, [localSettings, updateMutation, addNotice]);\n\n  // Toggle secret visibility\n  const toggleSecretVisibility = useCallback((provider: OAuthProvider) => {\n    setShowSecrets(prev => ({\n      ...prev,\n      [provider]: !prev[provider]\n    }));\n  }, []);\n\n  // Copy callback URL\n  const copyCallbackUrl = useCallback(async (provider: OAuthProvider, url: string) => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopiedUrls(prev => ({ ...prev, [provider]: true }));\n      setTimeout(() => {\n        setCopiedUrls(prev => ({ ...prev, [provider]: false }));\n      }, 2000);\n      addNotice({\n        type: 'success',\n        message: 'Callback URL이 클립보드에 복사되었습니다.'\n      });\n    } catch (error) {\n      addNotice({\n        type: 'error',\n        message: '클립보드 복사 실패'\n      });\n    }\n  }, [addNotice]);\n\n  // Test connection\n  const testConnection = useCallback((provider: OAuthProvider) => {\n    testMutation.mutate({ provider });\n  }, [testMutation]);\n\n  // Generate callback URL\n  const generateCallbackUrl = useCallback((provider: OAuthProvider): string => {\n    const baseUrl = window.location.origin;\n    return `${baseUrl}/api/auth/callback/${provider}`;\n  }, []);\n\n  // Mask sensitive data\n  const maskSecret = useCallback((secret: string): string => {\n    if (!secret || secret.length < 8) return secret;\n    return secret.substring(0, 4) + '****' + secret.substring(secret.length - 4);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  // Use local settings for UI display\n  const oauthData = localSettings;\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium\">OAuth 소셜 로그인 설정</h3>\n        <p className=\"text-sm text-muted-foreground mt-1\">\n          소셜 로그인 제공자의 OAuth 인증 정보를 설정합니다.\n        </p>\n      </div>\n\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          각 OAuth 제공자의 개발자 콘솔에서 애플리케이션을 생성하고, \n          아래의 Callback URL을 리다이렉트 URI로 등록해야 합니다.\n        </AlertDescription>\n      </Alert>\n\n      {(Object.keys(OAUTH_PROVIDERS) as OAuthProvider[]).map((provider) => {\n        const providerInfo = OAUTH_PROVIDERS[provider];\n        const config = oauthData[provider];\n        const callbackUrl = generateCallbackUrl(provider);\n\n        return (\n          <Card key={provider}>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-2xl\">{providerInfo.icon}</span>\n                  <div>\n                    <CardTitle>{providerInfo.displayName}</CardTitle>\n                    <CardDescription>\n                      {providerInfo.displayName} OAuth 2.0 인증 설정\n                    </CardDescription>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant={config.enabled ? 'default' : 'secondary'}>\n                    {config.enabled ? '활성화' : '비활성화'}\n                  </Badge>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => window.open(providerInfo.setupUrl, '_blank')}\n                  >\n                    <ExternalLink className=\"h-4 w-4 mr-1\" />\n                    개발자 콘솔\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <form className=\"space-y-4\" onSubmit={(e) => e.preventDefault()}>\n                {/* Enable/Disable Switch */}\n                <div className=\"flex items-center justify-between\">\n                <Label htmlFor={`${provider}-enabled`}>활성화</Label>\n                <div className=\"flex items-center space-x-2\">\n                  {updateMutation.isPending && (\n                    <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n                  )}\n                  <Switch\n                    id={`${provider}-enabled`}\n                    checked={config.enabled}\n                    disabled={updateMutation.isPending}\n                    onCheckedChange={(checked: boolean) => \n                      handleInputChange(provider, 'enabled', checked)\n                    }\n                  />\n                </div>\n              </div>\n\n              <Separator />\n\n              {/* Client ID */}\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${provider}-client-id`}>Client ID</Label>\n                <Input\n                  id={`${provider}-client-id`}\n                  type=\"text\"\n                  value={config.clientId}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n                    handleInputChange(provider, 'clientId', e.target.value)\n                  }\n                  placeholder=\"OAuth 애플리케이션의 Client ID\"\n                  disabled={!config.enabled || updateMutation.isPending}\n                />\n              </div>\n\n              {/* Client Secret */}\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${provider}-client-secret`}>Client Secret</Label>\n                <div className=\"flex space-x-2\">\n                  <Input\n                    id={`${provider}-client-secret`}\n                    type={showSecrets[provider] ? 'text' : 'password'}\n                    value={config.clientSecret || ''}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n                      handleInputChange(provider, 'clientSecret', e.target.value)\n                    }\n                    placeholder=\"OAuth 애플리케이션의 Client Secret\"\n                    disabled={!config.enabled || updateMutation.isPending}\n                    autoComplete=\"new-password\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => toggleSecretVisibility(provider)}\n                    disabled={updateMutation.isPending}\n                  >\n                    {showSecrets[provider] ? \n                      <EyeOff className=\"h-4 w-4\" /> : \n                      <Eye className=\"h-4 w-4\" />\n                    }\n                  </Button>\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  안전하게 암호화되어 저장됩니다\n                </p>\n              </div>\n\n              {/* Callback URL */}\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${provider}-callback-url`}>Callback URL</Label>\n                <div className=\"flex space-x-2\">\n                  <Input\n                    id={`${provider}-callback-url`}\n                    type=\"text\"\n                    value={callbackUrl}\n                    readOnly\n                    className=\"bg-muted\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => copyCallbackUrl(provider, callbackUrl)}\n                  >\n                    {copiedUrls[provider] ? \n                      <Check className=\"h-4 w-4 text-green-600\" /> : \n                      <Copy className=\"h-4 w-4\" />\n                    }\n                  </Button>\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  이 URL을 OAuth 제공자의 리다이렉트 URI로 등록하세요\n                </p>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"pt-4 flex gap-2\">\n                {/* Save Button */}\n                <Button\n                  variant={hasUnsavedChanges[provider] ? \"default\" : \"outline\"}\n                  onClick={() => handleSaveProvider(provider)}\n                  disabled={updateMutation.isPending}\n                  className={hasUnsavedChanges[provider] ? \"bg-blue-600 hover:bg-blue-700\" : \"\"}\n                >\n                  <Save className=\"h-4 w-4 mr-2\" />\n                  {hasUnsavedChanges[provider] ? '저장' : '저장됨'}\n                </Button>\n\n                {/* Test Connection - only show when saved and enabled */}\n                {config.enabled && config.clientId && config.clientSecret && !hasUnsavedChanges[provider] && (\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => testConnection(provider)}\n                    disabled={testMutation.isPending || updateMutation.isPending}\n                  >\n                    <TestTube className=\"h-4 w-4 mr-2\" />\n                    연결 테스트\n                  </Button>\n                )}\n              </div>\n              </form>\n            </CardContent>\n          </Card>\n        );\n      })}\n\n      {/* Info about individual saving */}\n      <div className=\"text-sm text-gray-600 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <p className=\"font-medium text-blue-800 mb-1\">💡 개별 저장 방식</p>\n        <p className=\"text-blue-700\">\n          각 소셜 로그인 제공자의 설정을 완료한 후, 해당 카드의 <strong>\"저장\"</strong> 버튼을 눌러주세요. \n          모든 정보를 입력한 후에만 저장이 가능하며, 저장되지 않은 변경사항은 파란색 \"저장\" 버튼으로 표시됩니다.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OAuthSettings;","import { FC, useState, useEffect } from 'react';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AlertTriangle, Link, Eye, CheckCircle, XCircle, Clock, TrendingUp } from 'lucide-react';\nimport { authClient } from '@o4o/auth-client';\n\ninterface PermalinkSettings {\n  structure: string;\n  categoryBase: string;\n  tagBase: string;\n  customStructures?: {\n    post?: string;\n    page?: string;\n    category?: string;\n    tag?: string;\n  };\n  removeStopWords: boolean;\n  maxUrlLength: number;\n  autoFlushRules: boolean;\n  enableSeoWarnings: boolean;\n}\n\ninterface UrlPreview {\n  type: string;\n  example: string;\n  seoScore: number;\n  warnings: string[];\n}\n\ninterface ValidationResult {\n  valid: boolean;\n  errors: string[];\n}\n\nconst PermalinkSettings: FC = () => {\n  const [selectedStructure, setSelectedStructure] = useState('/%postname%/');\n  const [customStructure, setCustomStructure] = useState('');\n  const [categoryBase, setCategoryBase] = useState('category');\n  const [tagBase, setTagBase] = useState('tag');\n  const [removeStopWords, setRemoveStopWords] = useState(false);\n  const [maxUrlLength, setMaxUrlLength] = useState(75);\n  const [autoFlushRules, setAutoFlushRules] = useState(true);\n  const [enableSeoWarnings, setEnableSeoWarnings] = useState(true);\n  const [previews, setPreviews] = useState<UrlPreview[]>([]);\n  const [validation, setValidation] = useState<ValidationResult | null>(null);\n\n  const queryClient = useQueryClient();\n\n  // 공통 구조 옵션 (보완된 버전)\n  const commonStructures = [\n    { \n      value: '/%postname%/', \n      label: '글 이름', \n      example: '/sample-post/',\n      description: 'SEO에 가장 친화적 (권장)',\n      seoRating: 'excellent'\n    },\n    { \n      value: '/%category%/%postname%/', \n      label: '카테고리와 이름', \n      example: '/technology/sample-post/',\n      description: '구조화된 콘텐츠에 적합',\n      seoRating: 'good'\n    },\n    { \n      value: '/%year%/%monthnum%/%postname%/', \n      label: '년/월/이름', \n      example: '/2025/09/sample-post/',\n      description: '시간 순서가 중요한 콘텐츠',\n      seoRating: 'warning'\n    },\n    { \n      value: '/%year%/%monthnum%/%day%/%postname%/', \n      label: '전체 날짜와 이름', \n      example: '/2025/09/18/sample-post/',\n      description: '뉴스나 일일 콘텐츠용',\n      seoRating: 'warning'\n    },\n    { \n      value: '/archives/%post_id%', \n      label: '숫자형', \n      example: '/archives/123',\n      description: '간단하지만 SEO에 불리',\n      seoRating: 'poor'\n    }\n  ];\n\n  // 설정 조회\n  const { data: settings, isLoading } = useQuery<PermalinkSettings>({\n    queryKey: ['permalink-settings'],\n    queryFn: async () => {\n      try {\n        const response = await authClient.api.get('/public/permalink-settings');\n        return response.data?.data || response.data as PermalinkSettings;\n      } catch (error) {\n        // Return default settings if API fails\n        return {\n          structure: '/%postname%/',\n          categoryBase: 'category',\n          tagBase: 'tag',\n          removeStopWords: false,\n          maxUrlLength: 75,\n          autoFlushRules: true,\n          enableSeoWarnings: true\n        };\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (settings) {\n      setSelectedStructure(settings.structure || '/%postname%/');\n      setCategoryBase(settings.categoryBase || 'category');\n      setTagBase(settings.tagBase || 'tag');\n      setRemoveStopWords(!!settings.removeStopWords);\n      setMaxUrlLength(settings.maxUrlLength || 75);\n      setAutoFlushRules(settings.autoFlushRules !== undefined ? settings.autoFlushRules : true);\n      setEnableSeoWarnings(settings.enableSeoWarnings !== undefined ? settings.enableSeoWarnings : true);\n    }\n  }, [settings]);\n\n  // 설정 저장\n  const saveMutation = useMutation({\n    mutationFn: async (newSettings: PermalinkSettings) => {\n      const response = await authClient.api.put('/v1/settings/permalink', newSettings);\n      return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['permalink-settings'] });\n    }\n  });\n\n  // 미리보기 생성\n  const previewMutation = useMutation({\n    mutationFn: async (structure: string) => {\n      const response = await authClient.api.post('/v1/settings/permalink/preview', { structure });\n      return response.data.data as UrlPreview[];\n    },\n    onSuccess: (data) => {\n      setPreviews(data);\n    }\n  });\n\n  // 검증\n  const validateMutation = useMutation({\n    mutationFn: async (settings: PermalinkSettings) => {\n      const response = await authClient.api.post('/v1/settings/permalink/validate', settings);\n      return response.data.data as ValidationResult;\n    },\n    onSuccess: (data) => {\n      setValidation(data);\n    }\n  });\n\n  // 구조 변경 시 미리보기 업데이트\n  useEffect(() => {\n    const currentStructure = selectedStructure === 'custom' ? customStructure : selectedStructure;\n    if (currentStructure) {\n      previewMutation.mutate(currentStructure);\n    }\n  }, [selectedStructure, customStructure]);\n\n  // 설정 변경 시 검증\n  useEffect(() => {\n    if (selectedStructure && categoryBase && tagBase) {\n      const currentSettings: PermalinkSettings = {\n        structure: selectedStructure === 'custom' ? customStructure : selectedStructure,\n        categoryBase,\n        tagBase,\n        removeStopWords,\n        maxUrlLength,\n        autoFlushRules,\n        enableSeoWarnings\n      };\n      validateMutation.mutate(currentSettings);\n    }\n  }, [selectedStructure, customStructure, categoryBase, tagBase, removeStopWords, maxUrlLength, autoFlushRules, enableSeoWarnings]);\n\n  const handleSave = () => {\n    const currentSettings: PermalinkSettings = {\n      structure: selectedStructure === 'custom' ? customStructure : selectedStructure,\n      categoryBase,\n      tagBase,\n      removeStopWords,\n      maxUrlLength,\n      autoFlushRules,\n      enableSeoWarnings\n    };\n    saveMutation.mutate(currentSettings);\n  };\n\n  const getSeoRatingColor = (rating: string) => {\n    switch (rating) {\n      case 'excellent': return 'text-green-600';\n      case 'good': return 'text-blue-600';\n      case 'warning': return 'text-yellow-600';\n      case 'poor': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getSeoRatingIcon = (rating: string) => {\n    switch (rating) {\n      case 'excellent': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n      case 'good': return <TrendingUp className=\"w-4 h-4 text-blue-600\" />;\n      case 'warning': return <Clock className=\"w-4 h-4 text-yellow-600\" />;\n      case 'poor': return <XCircle className=\"w-4 h-4 text-red-600\" />;\n      default: return null;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"wp-card\">\n        <div className=\"wp-card-body\">\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <span className=\"ml-3 text-gray-600\">설정을 불러오는 중...</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"wp-card\">\n        <div className=\"wp-card-header\">\n          <div className=\"flex items-center space-x-2\">\n            <Link className=\"w-5 h-5 text-blue-600\" />\n            <h2>고유주소 설정</h2>\n          </div>\n          <p className=\"text-wp-text-secondary mt-1\">\n            게시글과 페이지의 URL 구조를 설정합니다. SEO와 사용자 경험에 중요한 영향을 줍니다.\n          </p>\n        </div>\n        \n        <div className=\"wp-card-body space-y-6\">\n          {/* 공통 구조 선택 */}\n          <div>\n            <h3 className=\"font-medium mb-4 flex items-center space-x-2\">\n              <span>URL 구조 선택</span>\n              {enableSeoWarnings && <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\">SEO 평가 활성화됨</span>}\n            </h3>\n            <div className=\"space-y-3\">\n              {commonStructures.map((item) => (\n                <label key={item.value} className=\"flex items-start space-x-3 p-3 border rounded hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name=\"structure\"\n                    value={item.value}\n                    checked={selectedStructure === item.value}\n                    onChange={(e) => setSelectedStructure(e.target.value)}\n                    className=\"mt-1\"\n                  />\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-medium\">{item.label}</span>\n                        {enableSeoWarnings && getSeoRatingIcon(item.seoRating)}\n                      </div>\n                      <span className=\"text-sm text-gray-500 font-mono\">{item.example}</span>\n                    </div>\n                    <p className={`text-sm mt-1 ${enableSeoWarnings ? getSeoRatingColor(item.seoRating) : 'text-gray-600'}`}>\n                      {item.description}\n                    </p>\n                  </div>\n                </label>\n              ))}\n              \n              {/* 사용자 정의 */}\n              <label className=\"flex items-start space-x-3 p-3 border rounded hover:bg-gray-50 cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"structure\"\n                  value=\"custom\"\n                  checked={selectedStructure === 'custom'}\n                  onChange={() => setSelectedStructure('custom')}\n                  className=\"mt-1\"\n                />\n                <div className=\"flex-1\">\n                  <span className=\"font-medium\">사용자 정의 구조</span>\n                  <p className=\"text-sm text-gray-600 mt-1\">원하는 URL 패턴을 직접 입력하세요</p>\n                </div>\n              </label>\n            </div>\n            \n            {selectedStructure === 'custom' && (\n              <div className=\"mt-4 pl-6\">\n                <input\n                  type=\"text\"\n                  value={customStructure}\n                  onChange={(e) => setCustomStructure(e.target.value)}\n                  placeholder=\"예: /%year%/%monthnum%/%postname%/\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded font-mono\"\n                />\n                <div className=\"mt-2 text-sm text-gray-500\">\n                  <p>사용 가능한 태그:</p>\n                  <p className=\"font-mono\">%year%, %monthnum%, %day%, %postname%, %post_id%, %category%, %author%</p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* 카테고리 및 태그 베이스 */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">카테고리 베이스</label>\n              <input\n                type=\"text\"\n                value={categoryBase}\n                onChange={(e) => setCategoryBase(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">예: /category/news/</p>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">태그 베이스</label>\n              <input\n                type=\"text\"\n                value={tagBase}\n                onChange={(e) => setTagBase(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">예: /tag/technology/</p>\n            </div>\n          </div>\n\n          {/* 고급 옵션 */}\n          <div>\n            <h4 className=\"font-medium mb-3\">고급 설정</h4>\n            <div className=\"space-y-4\">\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={removeStopWords}\n                  onChange={(e) => setRemoveStopWords(e.target.checked)}\n                  className=\"mt-1\"\n                />\n                <div>\n                  <span className=\"text-sm font-medium\">불용어 자동 제거</span>\n                  <p className=\"text-xs text-gray-500\">URL에서 \"the\", \"and\" 등 불필요한 단어를 제거합니다</p>\n                </div>\n              </label>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  최대 URL 길이 ({maxUrlLength}자)\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"30\"\n                  max=\"200\"\n                  value={maxUrlLength}\n                  onChange={(e) => setMaxUrlLength(parseInt(e.target.value))}\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                  <span>30자</span>\n                  <span>권장: 75자 이하</span>\n                  <span>200자</span>\n                </div>\n              </div>\n\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={autoFlushRules}\n                  onChange={(e) => setAutoFlushRules(e.target.checked)}\n                  className=\"mt-1\"\n                />\n                <div>\n                  <span className=\"text-sm font-medium\">자동 URL 규칙 갱신</span>\n                  <p className=\"text-xs text-gray-500\">설정 변경 시 자동으로 리다이렉트 규칙을 업데이트합니다</p>\n                </div>\n              </label>\n\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={enableSeoWarnings}\n                  onChange={(e) => setEnableSeoWarnings(e.target.checked)}\n                  className=\"mt-1\"\n                />\n                <div>\n                  <span className=\"text-sm font-medium\">SEO 경고 표시</span>\n                  <p className=\"text-xs text-gray-500\">SEO에 영향을 줄 수 있는 설정에 대한 경고를 표시합니다</p>\n                </div>\n              </label>\n            </div>\n          </div>\n\n          {/* URL 미리보기 */}\n          {previews.length > 0 && (\n            <div>\n              <h4 className=\"font-medium mb-3 flex items-center space-x-2\">\n                <Eye className=\"w-4 h-4\" />\n                <span>URL 미리보기</span>\n              </h4>\n              <div className=\"bg-gray-50 p-4 rounded space-y-3\">\n                {previews.map((preview, index) => (\n                  <div key={index} className=\"flex items-center justify-between\">\n                    <div>\n                      <span className=\"text-sm text-gray-600\">{preview.type}:</span> \n                      <span className=\"ml-2 font-mono text-sm\">{preview.example}</span>\n                    </div>\n                    {enableSeoWarnings && (\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs px-2 py-1 rounded bg-gray-200\">\n                          SEO: {preview.seoScore}점\n                        </span>\n                        {preview.warnings.length > 0 && (\n                          <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* 검증 결과 */}\n          {validation && !validation.valid && (\n            <div className=\"bg-red-50 border border-red-200 rounded p-4\">\n              <div className=\"flex items-start\">\n                <XCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                <div>\n                  <h4 className=\"font-medium text-red-800\">설정 오류</h4>\n                  <ul className=\"text-sm text-red-700 mt-1 space-y-1\">\n                    {validation.errors.map((error, index) => (\n                      <li key={index}>• {error}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* 경고 메시지 */}\n          {enableSeoWarnings && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded p-4\">\n              <div className=\"flex items-start\">\n                <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5 mr-3\" />\n                <div>\n                  <h4 className=\"font-medium text-yellow-800\">SEO 최적화 팁</h4>\n                  <ul className=\"text-sm text-yellow-700 mt-1 space-y-1\">\n                    <li>• <strong>날짜 포함 주의:</strong> 에버그린 콘텐츠는 날짜가 없는 구조를 사용하세요</li>\n                    <li>• <strong>URL 길이:</strong> 75자 이하로 유지하면 검색 결과에서 완전히 표시됩니다</li>\n                    <li>• <strong>구조 변경:</strong> 기존 URL이 변경되므로 외부 링크에 영향을 줄 수 있습니다</li>\n                    <li>• <strong>자동 리다이렉트:</strong> 301 리다이렉트가 자동 설정되지만 확인이 필요합니다</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n            <button \n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50\"\n            >\n              취소\n            </button>\n            <button \n              onClick={handleSave}\n              disabled={saveMutation.isPending || !!(validation && !validation.valid)}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {saveMutation.isPending ? '저장 중...' : '변경사항 저장'}\n            </button>\n          </div>\n\n          {saveMutation.isSuccess && (\n            <div className=\"bg-green-50 border border-green-200 rounded p-4\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-5 h-5 text-green-600 mr-3\" />\n                <span className=\"text-green-800\">고유주소 설정이 성공적으로 저장되었습니다.</span>\n              </div>\n            </div>\n          )}\n\n          {saveMutation.isError && (\n            <div className=\"bg-red-50 border border-red-200 rounded p-4\">\n              <div className=\"flex items-center\">\n                <XCircle className=\"w-5 h-5 text-red-600 mr-3\" />\n                <span className=\"text-red-800\">설정 저장에 실패했습니다. 다시 시도해 주세요.</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PermalinkSettings;\n","/**\n * Writing Settings Page\n * WordPress-style writing configuration\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@o4o/auth-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Save, \n  Info, \n  AlertCircle,\n  FileText,\n  Edit,\n  MessageSquare,\n  Mail,\n  Globe,\n  RefreshCw,\n  Hash\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\ninterface WritingSettings {\n  // Default Post Settings\n  defaultCategory: string;\n  defaultPostFormat: string;\n  \n  // Editor Settings\n  useBlockEditor: boolean;\n  enableMarkdown: boolean;\n  enableRichTextPaste: boolean;\n  convertEmoticonsToEmoji: boolean;\n  \n  // Publishing Settings\n  defaultCommentStatus: 'open' | 'closed';\n  defaultPingStatus: 'open' | 'closed';\n  requireNameEmail: boolean;\n  requireModeration: boolean;\n  requireManualApproval: boolean;\n  \n  // Update Services\n  updateServices: string;\n  pingServices: string[];\n  \n  // Auto-save Settings\n  autoSaveInterval: number;\n  revisionsToKeep: number;\n  \n  // Email Settings\n  emailNotifyPost: boolean;\n  emailNotifyComment: boolean;\n  emailNotifyModeration: boolean;\n}\n\nconst WritingSettings: React.FC = () => {\n  const { authClient } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [settings, setSettings] = useState<WritingSettings>({\n    defaultCategory: '1',\n    defaultPostFormat: 'standard',\n    useBlockEditor: true,\n    enableMarkdown: false,\n    enableRichTextPaste: true,\n    convertEmoticonsToEmoji: true,\n    defaultCommentStatus: 'open',\n    defaultPingStatus: 'open',\n    requireNameEmail: true,\n    requireModeration: false,\n    requireManualApproval: false,\n    updateServices: '',\n    pingServices: [],\n    autoSaveInterval: 60,\n    revisionsToKeep: 10,\n    emailNotifyPost: false,\n    emailNotifyComment: true,\n    emailNotifyModeration: true\n  });\n\n  // Categories will be fetched from API\n  const categories = [\n    { id: '1', name: 'Uncategorized' }\n  ];\n\n  // Post formats\n  const postFormats = [\n    { value: 'standard', label: 'Standard' },\n    { value: 'aside', label: 'Aside' },\n    { value: 'gallery', label: 'Gallery' },\n    { value: 'link', label: 'Link' },\n    { value: 'image', label: 'Image' },\n    { value: 'quote', label: 'Quote' },\n    { value: 'status', label: 'Status' },\n    { value: 'video', label: 'Video' },\n    { value: 'audio', label: 'Audio' },\n    { value: 'chat', label: 'Chat' }\n  ];\n\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n\n  const fetchSettings = async () => {\n    setLoading(true);\n    try {\n      const response = await authClient.api.get('/v1/settings/writing');\n      if (response.data?.data) {\n        setSettings(response.data.data);\n      }\n    } catch (error: any) {\n      // Using default settings on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      await authClient.api.put('/v1/settings/writing', settings);\n      toast.success('Writing settings saved successfully');\n    } catch (error: any) {\n      toast.error('Failed to save settings');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const updateSetting = <K extends keyof WritingSettings>(\n    key: K,\n    value: WritingSettings[K]\n  ) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <RefreshCw className=\"h-8 w-8 animate-spin text-gray-500\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-6 max-w-4xl\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold tracking-tight\">Writing Settings</h1>\n        <p className=\"text-gray-600 mt-2\">Configure default settings for writing and publishing content</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Default Post Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              Default Post Settings\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"defaultCategory\">Default Post Category</Label>\n                <Select\n                  value={settings.defaultCategory}\n                  onValueChange={(value) => updateSetting('defaultCategory', value)}\n                >\n                  <SelectTrigger id=\"defaultCategory\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {categories.map((cat) => (\n                      <SelectItem key={cat.id} value={cat.id}>\n                        {cat.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <p className=\"text-sm text-gray-500\">Posts will be assigned to this category by default</p>\n              </div>\n\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"defaultPostFormat\">Default Post Format</Label>\n                <Select\n                  value={settings.defaultPostFormat}\n                  onValueChange={(value) => updateSetting('defaultPostFormat', value)}\n                >\n                  <SelectTrigger id=\"defaultPostFormat\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {postFormats.map((format) => (\n                      <SelectItem key={format.value} value={format.value}>\n                        {format.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Editor Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Edit className=\"h-5 w-5\" />\n              Editor Settings\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Use Block Editor (Gutenberg)</Label>\n                  <p className=\"text-sm text-gray-500\">Enable the modern block-based editor</p>\n                </div>\n                <Switch\n                  checked={settings.useBlockEditor}\n                  onCheckedChange={(checked) => updateSetting('useBlockEditor', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Enable Markdown</Label>\n                  <p className=\"text-sm text-gray-500\">Allow writing posts using Markdown syntax</p>\n                </div>\n                <Switch\n                  checked={settings.enableMarkdown}\n                  onCheckedChange={(checked) => updateSetting('enableMarkdown', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Enable Rich Text Paste</Label>\n                  <p className=\"text-sm text-gray-500\">Preserve formatting when pasting from other applications</p>\n                </div>\n                <Switch\n                  checked={settings.enableRichTextPaste}\n                  onCheckedChange={(checked) => updateSetting('enableRichTextPaste', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Convert Emoticons to Emoji</Label>\n                  <p className=\"text-sm text-gray-500\">Convert text emoticons like :-) to 😊</p>\n                </div>\n                <Switch\n                  checked={settings.convertEmoticonsToEmoji}\n                  onCheckedChange={(checked) => updateSetting('convertEmoticonsToEmoji', checked)}\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Discussion Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <MessageSquare className=\"h-5 w-5\" />\n              Default Discussion Settings\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"defaultCommentStatus\">Default Comment Status</Label>\n                <Select\n                  value={settings.defaultCommentStatus}\n                  onValueChange={(value: 'open' | 'closed') => updateSetting('defaultCommentStatus', value)}\n                >\n                  <SelectTrigger id=\"defaultCommentStatus\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"open\">Allow comments</SelectItem>\n                    <SelectItem value=\"closed\">Comments closed</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"defaultPingStatus\">Default Pingback/Trackback Status</Label>\n                <Select\n                  value={settings.defaultPingStatus}\n                  onValueChange={(value: 'open' | 'closed') => updateSetting('defaultPingStatus', value)}\n                >\n                  <SelectTrigger id=\"defaultPingStatus\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"open\">Allow pingbacks and trackbacks</SelectItem>\n                    <SelectItem value=\"closed\">Disable pingbacks and trackbacks</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <Separator />\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Comment author must fill out name and email</Label>\n                    <p className=\"text-sm text-gray-500\">Anonymous comments will not be allowed</p>\n                  </div>\n                  <Switch\n                    checked={settings.requireNameEmail}\n                    onCheckedChange={(checked) => updateSetting('requireNameEmail', checked)}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Hold comments for moderation</Label>\n                    <p className=\"text-sm text-gray-500\">Comments must be approved before appearing</p>\n                  </div>\n                  <Switch\n                    checked={settings.requireModeration}\n                    onCheckedChange={(checked) => updateSetting('requireModeration', checked)}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Comment must be manually approved</Label>\n                    <p className=\"text-sm text-gray-500\">Even from previously approved authors</p>\n                  </div>\n                  <Switch\n                    checked={settings.requireManualApproval}\n                    onCheckedChange={(checked) => updateSetting('requireManualApproval', checked)}\n                  />\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Auto-save and Revisions */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <RefreshCw className=\"h-5 w-5\" />\n              Auto-save and Revisions\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"autoSaveInterval\">Auto-save Interval (seconds)</Label>\n                <Input\n                  id=\"autoSaveInterval\"\n                  type=\"number\"\n                  min=\"30\"\n                  max=\"300\"\n                  value={settings.autoSaveInterval}\n                  onChange={(e) => updateSetting('autoSaveInterval', parseInt(e.target.value) || 60)}\n                />\n                <p className=\"text-sm text-gray-500\">How often to save drafts automatically (30-300 seconds)</p>\n              </div>\n\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"revisionsToKeep\">Revisions to Keep</Label>\n                <Input\n                  id=\"revisionsToKeep\"\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={settings.revisionsToKeep}\n                  onChange={(e) => updateSetting('revisionsToKeep', parseInt(e.target.value) || 10)}\n                />\n                <p className=\"text-sm text-gray-500\">Maximum number of revisions to store (0 = disable revisions)</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Email Notifications */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Mail className=\"h-5 w-5\" />\n              Email Notifications\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Email me when a post is published</Label>\n                  <p className=\"text-sm text-gray-500\">Receive notifications for new posts</p>\n                </div>\n                <Switch\n                  checked={settings.emailNotifyPost}\n                  onCheckedChange={(checked) => updateSetting('emailNotifyPost', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Email me when someone comments</Label>\n                  <p className=\"text-sm text-gray-500\">Get notified about new comments</p>\n                </div>\n                <Switch\n                  checked={settings.emailNotifyComment}\n                  onCheckedChange={(checked) => updateSetting('emailNotifyComment', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Email me when a comment is held for moderation</Label>\n                  <p className=\"text-sm text-gray-500\">Notify about comments awaiting approval</p>\n                </div>\n                <Switch\n                  checked={settings.emailNotifyModeration}\n                  onCheckedChange={(checked) => updateSetting('emailNotifyModeration', checked)}\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Update Services */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Globe className=\"h-5 w-5\" />\n              Update Services\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"updateServices\">Ping Services</Label>\n              <Textarea\n                id=\"updateServices\"\n                placeholder=\"Enter ping service URLs, one per line...\"\n                value={settings.updateServices}\n                onChange={(e) => updateSetting('updateServices', e.target.value)}\n                rows={5}\n                className=\"font-mono text-sm\"\n              />\n              <p className=\"text-sm text-gray-500\">\n                When you publish a new post, these services will be notified automatically.\n                Separate multiple URLs with line breaks.\n              </p>\n            </div>\n\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertTitle>Common Ping Services</AlertTitle>\n              <AlertDescription className=\"mt-2 text-sm\">\n                <div className=\"font-mono text-xs space-y-1\">\n                  <div>http://rpc.pingomatic.com/</div>\n                  <div>http://ping.bloggers.jp/rpc/</div>\n                  <div>http://blogsearch.google.com/ping/RPC2</div>\n                </div>\n              </AlertDescription>\n            </Alert>\n          </CardContent>\n        </Card>\n\n        {/* Save Button */}\n        <div className=\"flex justify-end sticky bottom-4\">\n          <Button\n            size=\"lg\"\n            onClick={handleSave}\n            disabled={saving}\n            className=\"shadow-lg\"\n          >\n            {saving ? (\n              <>\n                <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                Saving...\n              </>\n            ) : (\n              <>\n                <Save className=\"mr-2 h-4 w-4\" />\n                Save Changes\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WritingSettings;","/**\n * Privacy Settings Page\n * WordPress-style privacy and GDPR compliance settings\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@o4o/auth-context';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Save,\n  Shield,\n  Lock,\n  Eye,\n  FileText,\n  Download,\n  Trash2,\n  UserX,\n  Cookie,\n  Globe,\n  Info,\n  AlertTriangle,\n  CheckCircle,\n  RefreshCw,\n  ExternalLink,\n  Copy,\n  Mail\n} from 'lucide-react';\nimport toast from 'react-hot-toast';\n\ninterface PrivacySettings {\n  // Privacy Policy\n  privacyPolicyPage: string;\n  privacyPolicyUrl: string;\n  generateDefaultPolicy: boolean;\n  \n  // Data Retention\n  retentionPeriod: {\n    comments: number;\n    users: number;\n    logs: number;\n    orders: number;\n  };\n  \n  // GDPR Compliance\n  gdpr: {\n    enabled: boolean;\n    consentBanner: boolean;\n    consentText: string;\n    dataProcessingAgreement: boolean;\n    rightToErasure: boolean;\n    rightToPortability: boolean;\n    rightToAccess: boolean;\n    dataBreachNotification: boolean;\n  };\n  \n  // Cookie Settings\n  cookies: {\n    essential: boolean;\n    functional: boolean;\n    analytics: boolean;\n    marketing: boolean;\n    thirdParty: boolean;\n    cookieBannerText: string;\n    cookiePolicyUrl: string;\n  };\n  \n  // Data Export/Erasure\n  dataHandling: {\n    exportFormats: string[];\n    autoDeleteInactive: boolean;\n    inactivePeriod: number;\n    anonymizeData: boolean;\n    exportIncludeMedia: boolean;\n  };\n  \n  // Third-party Services\n  thirdPartyServices: {\n    googleAnalytics: { enabled: boolean; anonymizeIp: boolean; id: string };\n    facebook: { enabled: boolean; pixelId: string };\n    mailchimp: { enabled: boolean; apiKey: string };\n  };\n}\n\nconst PrivacySettings: React.FC = () => {\n  const { authClient } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [settings, setSettings] = useState<PrivacySettings>({\n    privacyPolicyPage: '',\n    privacyPolicyUrl: '/privacy-policy',\n    generateDefaultPolicy: false,\n    retentionPeriod: {\n      comments: 365,\n      users: 730,\n      logs: 90,\n      orders: 2555\n    },\n    gdpr: {\n      enabled: true,\n      consentBanner: true,\n      consentText: 'We use cookies to improve your experience. By using our site, you agree to our privacy policy.',\n      dataProcessingAgreement: true,\n      rightToErasure: true,\n      rightToPortability: true,\n      rightToAccess: true,\n      dataBreachNotification: true\n    },\n    cookies: {\n      essential: true,\n      functional: true,\n      analytics: false,\n      marketing: false,\n      thirdParty: false,\n      cookieBannerText: 'This website uses cookies to ensure you get the best experience.',\n      cookiePolicyUrl: '/cookie-policy'\n    },\n    dataHandling: {\n      exportFormats: ['json', 'csv'],\n      autoDeleteInactive: false,\n      inactivePeriod: 365,\n      anonymizeData: true,\n      exportIncludeMedia: false\n    },\n    thirdPartyServices: {\n      googleAnalytics: { enabled: false, anonymizeIp: true, id: '' },\n      facebook: { enabled: false, pixelId: '' },\n      mailchimp: { enabled: false, apiKey: '' }\n    }\n  });\n\n  // Pages for privacy policy selection (will be fetched from API)\n  const pages = [\n    { id: '0', title: '-- Select --' }\n  ];\n\n  const exportFormats = [\n    { value: 'json', label: 'JSON' },\n    { value: 'csv', label: 'CSV' },\n    { value: 'xml', label: 'XML' },\n    { value: 'pdf', label: 'PDF' }\n  ];\n\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n\n  const fetchSettings = async () => {\n    setLoading(true);\n    try {\n      const response = await authClient.api.get('/v1/settings/privacy');\n      if (response.data?.data) {\n        setSettings(response.data.data);\n      }\n    } catch (error: any) {\n      // Using default settings on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      await authClient.api.put('/v1/settings/privacy', settings);\n      toast.success('Privacy settings saved successfully');\n    } catch (error: any) {\n      toast.error('Failed to save settings');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const updateSetting = (path: string, value: any) => {\n    setSettings(prev => {\n      const newSettings = { ...prev };\n      const keys = path.split('.');\n      let current: any = newSettings;\n      \n      for (let i = 0; i < keys.length - 1; i++) {\n        current = current[keys[i]];\n      }\n      \n      current[keys[keys.length - 1]] = value;\n      return newSettings;\n    });\n  };\n\n  const generatePrivacyPolicy = () => {\n    toast.success('Privacy policy template generated');\n    // Would trigger actual generation logic\n  };\n\n  const exportUserData = () => {\n    toast.success('User data export initiated');\n    // Would trigger actual export\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <RefreshCw className=\"h-8 w-8 animate-spin text-gray-500\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-6 max-w-4xl\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold tracking-tight\">Privacy Settings</h1>\n        <p className=\"text-gray-600 mt-2\">Manage privacy policy, GDPR compliance, and data protection settings</p>\n      </div>\n\n      {/* GDPR Status Banner */}\n      <Alert className={`mb-6 ${settings.gdpr.enabled ? 'border-green-500' : 'border-yellow-500'}`}>\n        <Shield className=\"h-4 w-4\" />\n        <AlertTitle>GDPR Compliance Status</AlertTitle>\n        <AlertDescription className=\"mt-2\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-1\">\n              {settings.gdpr.enabled ? (\n                <p className=\"text-sm\">GDPR compliance features are enabled.</p>\n              ) : (\n                <p className=\"text-sm\">GDPR compliance features are disabled. Enable them to comply with EU regulations.</p>\n              )}\n            </div>\n            <Badge variant={settings.gdpr.enabled ? 'default' : 'secondary'}>\n              {settings.gdpr.enabled ? 'Compliant' : 'Not Compliant'}\n            </Badge>\n          </div>\n        </AlertDescription>\n      </Alert>\n\n      <div className=\"space-y-6\">\n        {/* Privacy Policy */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              Privacy Policy\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"privacyPolicyPage\">Privacy Policy Page</Label>\n                <Select\n                  value={settings.privacyPolicyPage}\n                  onValueChange={(value) => updateSetting('privacyPolicyPage', value)}\n                >\n                  <SelectTrigger id=\"privacyPolicyPage\">\n                    <SelectValue placeholder=\"Select a page\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {pages.map((page) => (\n                      <SelectItem key={page.id} value={page.id}>\n                        {page.title}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <p className=\"text-sm text-gray-500\">Select which page contains your privacy policy</p>\n              </div>\n\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"privacyPolicyUrl\">Privacy Policy URL</Label>\n                <div className=\"flex gap-2\">\n                  <Input\n                    id=\"privacyPolicyUrl\"\n                    value={settings.privacyPolicyUrl}\n                    onChange={(e) => updateSetting('privacyPolicyUrl', e.target.value)}\n                    placeholder=\"/privacy-policy\"\n                  />\n                  <Button variant=\"outline\" size=\"icon\">\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                <div className=\"space-y-0.5\">\n                  <Label>Generate Default Privacy Policy</Label>\n                  <p className=\"text-sm text-gray-500\">Create a basic privacy policy template</p>\n                </div>\n                <Button onClick={generatePrivacyPolicy} variant=\"outline\">\n                  Generate Template\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* GDPR Compliance */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Lock className=\"h-5 w-5\" />\n              GDPR Compliance\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between p-4 bg-blue-50 rounded-lg\">\n              <div className=\"space-y-0.5\">\n                <Label>Enable GDPR Compliance Features</Label>\n                <p className=\"text-sm text-gray-600\">Activate all GDPR-related functionality</p>\n              </div>\n              <Switch\n                checked={settings.gdpr.enabled}\n                onCheckedChange={(checked) => updateSetting('gdpr.enabled', checked)}\n              />\n            </div>\n\n            {settings.gdpr.enabled && (\n              <>\n                <Separator />\n                \n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label>Show Consent Banner</Label>\n                      <p className=\"text-sm text-gray-500\">Display cookie consent banner to visitors</p>\n                    </div>\n                    <Switch\n                      checked={settings.gdpr.consentBanner}\n                      onCheckedChange={(checked) => updateSetting('gdpr.consentBanner', checked)}\n                    />\n                  </div>\n\n                  {settings.gdpr.consentBanner && (\n                    <div className=\"grid gap-2 ml-6\">\n                      <Label htmlFor=\"consentText\">Consent Banner Text</Label>\n                      <Textarea\n                        id=\"consentText\"\n                        value={settings.gdpr.consentText}\n                        onChange={(e) => updateSetting('gdpr.consentText', e.target.value)}\n                        rows={3}\n                      />\n                    </div>\n                  )}\n\n                  <Separator />\n\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-medium text-sm\">User Rights</h4>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label>Right to Erasure</Label>\n                        <p className=\"text-sm text-gray-500\">Allow users to request data deletion</p>\n                      </div>\n                      <Switch\n                        checked={settings.gdpr.rightToErasure}\n                        onCheckedChange={(checked) => updateSetting('gdpr.rightToErasure', checked)}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label>Right to Data Portability</Label>\n                        <p className=\"text-sm text-gray-500\">Allow users to export their data</p>\n                      </div>\n                      <Switch\n                        checked={settings.gdpr.rightToPortability}\n                        onCheckedChange={(checked) => updateSetting('gdpr.rightToPortability', checked)}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label>Right to Access</Label>\n                        <p className=\"text-sm text-gray-500\">Allow users to view their stored data</p>\n                      </div>\n                      <Switch\n                        checked={settings.gdpr.rightToAccess}\n                        onCheckedChange={(checked) => updateSetting('gdpr.rightToAccess', checked)}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label>Data Breach Notification</Label>\n                        <p className=\"text-sm text-gray-500\">Enable breach notification system</p>\n                      </div>\n                      <Switch\n                        checked={settings.gdpr.dataBreachNotification}\n                        onCheckedChange={(checked) => updateSetting('gdpr.dataBreachNotification', checked)}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Cookie Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Cookie className=\"h-5 w-5\" />\n              Cookie Settings\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div className=\"grid gap-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Essential Cookies</Label>\n                    <p className=\"text-sm text-gray-500\">Required for basic site functionality</p>\n                  </div>\n                  <Badge variant=\"default\">Always On</Badge>\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Functional Cookies</Label>\n                    <p className=\"text-sm text-gray-500\">Remember user preferences and settings</p>\n                  </div>\n                  <Switch\n                    checked={settings.cookies.functional}\n                    onCheckedChange={(checked) => updateSetting('cookies.functional', checked)}\n                  />\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Analytics Cookies</Label>\n                    <p className=\"text-sm text-gray-500\">Track site usage and performance</p>\n                  </div>\n                  <Switch\n                    checked={settings.cookies.analytics}\n                    onCheckedChange={(checked) => updateSetting('cookies.analytics', checked)}\n                  />\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Marketing Cookies</Label>\n                    <p className=\"text-sm text-gray-500\">Used for targeted advertising</p>\n                  </div>\n                  <Switch\n                    checked={settings.cookies.marketing}\n                    onCheckedChange={(checked) => updateSetting('cookies.marketing', checked)}\n                  />\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Third-party Cookies</Label>\n                    <p className=\"text-sm text-gray-500\">Allow cookies from external services</p>\n                  </div>\n                  <Switch\n                    checked={settings.cookies.thirdParty}\n                    onCheckedChange={(checked) => updateSetting('cookies.thirdParty', checked)}\n                  />\n                </div>\n              </div>\n\n              <Separator />\n\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"cookieBannerText\">Cookie Banner Text</Label>\n                <Textarea\n                  id=\"cookieBannerText\"\n                  value={settings.cookies.cookieBannerText}\n                  onChange={(e) => updateSetting('cookies.cookieBannerText', e.target.value)}\n                  rows={2}\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Data Retention */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Trash2 className=\"h-5 w-5\" />\n              Data Retention\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                Set how long different types of data should be retained before automatic deletion.\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"grid gap-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"retentionComments\">Comments (days)</Label>\n                  <Input\n                    id=\"retentionComments\"\n                    type=\"number\"\n                    min=\"30\"\n                    value={settings.retentionPeriod.comments}\n                    onChange={(e) => updateSetting('retentionPeriod.comments', parseInt(e.target.value) || 365)}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"retentionUsers\">User Data (days)</Label>\n                  <Input\n                    id=\"retentionUsers\"\n                    type=\"number\"\n                    min=\"30\"\n                    value={settings.retentionPeriod.users}\n                    onChange={(e) => updateSetting('retentionPeriod.users', parseInt(e.target.value) || 730)}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"retentionLogs\">System Logs (days)</Label>\n                  <Input\n                    id=\"retentionLogs\"\n                    type=\"number\"\n                    min=\"7\"\n                    value={settings.retentionPeriod.logs}\n                    onChange={(e) => updateSetting('retentionPeriod.logs', parseInt(e.target.value) || 90)}\n                  />\n                </div>\n\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"retentionOrders\">Order History (days)</Label>\n                  <Input\n                    id=\"retentionOrders\"\n                    type=\"number\"\n                    min=\"365\"\n                    value={settings.retentionPeriod.orders}\n                    onChange={(e) => updateSetting('retentionPeriod.orders', parseInt(e.target.value) || 2555)}\n                  />\n                </div>\n              </div>\n\n              <Separator />\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Auto-delete Inactive Users</Label>\n                    <p className=\"text-sm text-gray-500\">Remove users who haven't logged in</p>\n                  </div>\n                  <Switch\n                    checked={settings.dataHandling.autoDeleteInactive}\n                    onCheckedChange={(checked) => updateSetting('dataHandling.autoDeleteInactive', checked)}\n                  />\n                </div>\n\n                {settings.dataHandling.autoDeleteInactive && (\n                  <div className=\"grid gap-2 ml-6\">\n                    <Label htmlFor=\"inactivePeriod\">Inactive Period (days)</Label>\n                    <Input\n                      id=\"inactivePeriod\"\n                      type=\"number\"\n                      min=\"90\"\n                      value={settings.dataHandling.inactivePeriod}\n                      onChange={(e) => updateSetting('dataHandling.inactivePeriod', parseInt(e.target.value) || 365)}\n                    />\n                  </div>\n                )}\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Anonymize Data Instead of Deleting</Label>\n                    <p className=\"text-sm text-gray-500\">Keep data but remove personal information</p>\n                  </div>\n                  <Switch\n                    checked={settings.dataHandling.anonymizeData}\n                    onCheckedChange={(checked) => updateSetting('dataHandling.anonymizeData', checked)}\n                  />\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Data Export */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Download className=\"h-5 w-5\" />\n              Data Export Settings\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2\">\n                <Label>Export Formats</Label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {exportFormats.map((format) => (\n                    <Badge\n                      key={format.value}\n                      variant={settings.dataHandling.exportFormats.includes(format.value) ? 'default' : 'outline'}\n                      className=\"cursor-pointer\"\n                      onClick={() => {\n                        const formats = settings.dataHandling.exportFormats;\n                        if (formats.includes(format.value)) {\n                          updateSetting('dataHandling.exportFormats', \n                            formats.filter(f => f !== format.value)\n                          );\n                        } else {\n                          updateSetting('dataHandling.exportFormats', \n                            [...formats, format.value]\n                          );\n                        }\n                      }}\n                    >\n                      {format.label}\n                    </Badge>\n                  ))}\n                </div>\n                <p className=\"text-sm text-gray-500\">Available formats for user data export</p>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Include Media Files in Export</Label>\n                  <p className=\"text-sm text-gray-500\">Add uploaded images and files to data export</p>\n                </div>\n                <Switch\n                  checked={settings.dataHandling.exportIncludeMedia}\n                  onCheckedChange={(checked) => updateSetting('dataHandling.exportIncludeMedia', checked)}\n                />\n              </div>\n\n              <Separator />\n\n              <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded-lg\">\n                <div className=\"space-y-0.5\">\n                  <Label>Export All User Data</Label>\n                  <p className=\"text-sm text-gray-500\">Generate a complete data export for GDPR compliance</p>\n                </div>\n                <Button onClick={exportUserData} variant=\"outline\">\n                  <Download className=\"mr-2 h-4 w-4\" />\n                  Export Data\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Third-party Services */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Globe className=\"h-5 w-5\" />\n              Third-party Services\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Alert className=\"border-yellow-200 bg-yellow-50\">\n              <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n              <AlertDescription>\n                Third-party services may collect user data. Ensure compliance with their privacy policies.\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-4\">\n              {/* Google Analytics */}\n              <div className=\"p-4 border rounded-lg space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Label>Google Analytics</Label>\n                    {settings.thirdPartyServices.googleAnalytics.enabled && (\n                      <Badge variant=\"default\" className=\"text-xs\">Active</Badge>\n                    )}\n                  </div>\n                  <Switch\n                    checked={settings.thirdPartyServices.googleAnalytics.enabled}\n                    onCheckedChange={(checked) => updateSetting('thirdPartyServices.googleAnalytics.enabled', checked)}\n                  />\n                </div>\n                \n                {settings.thirdPartyServices.googleAnalytics.enabled && (\n                  <>\n                    <div className=\"grid gap-2\">\n                      <Label htmlFor=\"gaId\">Tracking ID</Label>\n                      <Input\n                        id=\"gaId\"\n                        placeholder=\"G-XXXXXXXXXX\"\n                        value={settings.thirdPartyServices.googleAnalytics.id}\n                        onChange={(e) => updateSetting('thirdPartyServices.googleAnalytics.id', e.target.value)}\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <Label>Anonymize IP Addresses</Label>\n                      <Switch\n                        checked={settings.thirdPartyServices.googleAnalytics.anonymizeIp}\n                        onCheckedChange={(checked) => updateSetting('thirdPartyServices.googleAnalytics.anonymizeIp', checked)}\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {/* Facebook Pixel */}\n              <div className=\"p-4 border rounded-lg space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Label>Facebook Pixel</Label>\n                    {settings.thirdPartyServices.facebook.enabled && (\n                      <Badge variant=\"default\" className=\"text-xs\">Active</Badge>\n                    )}\n                  </div>\n                  <Switch\n                    checked={settings.thirdPartyServices.facebook.enabled}\n                    onCheckedChange={(checked) => updateSetting('thirdPartyServices.facebook.enabled', checked)}\n                  />\n                </div>\n                \n                {settings.thirdPartyServices.facebook.enabled && (\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"fbPixel\">Pixel ID</Label>\n                    <Input\n                      id=\"fbPixel\"\n                      placeholder=\"Enter Facebook Pixel ID\"\n                      value={settings.thirdPartyServices.facebook.pixelId}\n                      onChange={(e) => updateSetting('thirdPartyServices.facebook.pixelId', e.target.value)}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Save Button */}\n        <div className=\"flex justify-end sticky bottom-4\">\n          <Button\n            size=\"lg\"\n            onClick={handleSave}\n            disabled={saving}\n            className=\"shadow-lg\"\n          >\n            {saving ? (\n              <>\n                <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                Saving...\n              </>\n            ) : (\n              <>\n                <Save className=\"mr-2 h-4 w-4\" />\n                Save Changes\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrivacySettings;","import { FC } from 'react';\nimport { Routes, Route, Navigate, Link, useLocation } from 'react-router-dom'\nimport { Settings as SettingsIcon, Mail, BookOpen, Key, FileText, MessageSquare, Shield, Link as LinkIcon, Edit, Sparkles } from 'lucide-react'\nimport GeneralSettings from './GeneralSettings'\nimport ReadingSettings from './ReadingSettings'\nimport OAuthSettings from './OAuthSettings'\nimport EmailSettings from './EmailSettings'\nimport PermalinkSettings from './PermalinkSettings'\nimport WritingSettings from './WritingSettings'\nimport PrivacySettings from './PrivacySettings'\nimport AISettings from './AISettings'\n\nconst UserSettings: FC = () => (\n  <div className=\"wp-card\">\n    <div className=\"wp-card-body\">\n      <div className=\"text-center py-12 text-wp-text-secondary\">\n        <p>사용자 설정 페이지는 개발 중입니다.</p>\n      </div>\n    </div>\n  </div>\n)\n\n\nconst IntegrationSettings: FC = () => (\n  <div className=\"wp-card\">\n    <div className=\"wp-card-body\">\n      <div className=\"text-center py-12 text-wp-text-secondary\">\n        <p>연동 설정 페이지는 개발 중입니다.</p>\n      </div>\n    </div>\n  </div>\n)\n\nconst settingsTabs = [\n  { id: 'general', label: '일반', icon: <SettingsIcon className=\"w-4 h-4\" />, path: '/settings' },\n  { id: 'writing', label: '쓰기', icon: <Edit className=\"w-4 h-4\" />, path: '/settings/writing' },\n  { id: 'reading', label: '읽기', icon: <BookOpen className=\"w-4 h-4\" />, path: '/settings/reading' },\n  { id: 'permalink', label: '고유주소', icon: <LinkIcon className=\"w-4 h-4\" />, path: '/settings/permalink' },\n  { id: 'discussion', label: '토론', icon: <MessageSquare className=\"w-4 h-4\" />, path: '/settings/discussion' },\n  { id: 'privacy', label: '개인정보', icon: <Shield className=\"w-4 h-4\" />, path: '/settings/privacy' },\n  { id: 'oauth', label: 'OAuth', icon: <Key className=\"w-4 h-4\" />, path: '/settings/oauth' },\n  { id: 'email', label: '이메일', icon: <Mail className=\"w-4 h-4\" />, path: '/settings/email' },\n  { id: 'ai', label: 'AI API', icon: <Sparkles className=\"w-4 h-4\" />, path: '/settings/ai' }\n]\n\nconst Settings: FC = () => {\n  const location = useLocation()\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-wp-text-primary\">설정</h1>\n        <p className=\"text-wp-text-secondary mt-1\">시스템 설정을 관리합니다</p>\n      </div>\n\n      {/* Settings Navigation Tabs */}\n      <div className=\"border-b border-gray-300\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {settingsTabs.map((tab) => {\n            const isActive = location.pathname === tab.path\n            return (\n              <Link\n                key={tab.id}\n                to={tab.path}\n                className={`\n                  flex items-center gap-2 py-2 px-1 border-b-2 font-medium text-sm\n                  ${isActive\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-wp-text-secondary hover:text-wp-text-primary hover:border border-gray-200'\n                  }\n                `}\n              >\n                {tab.icon}\n                {tab.label}\n              </Link>\n            )\n          })}\n        </nav>\n      </div>\n\n      {/* Settings Content */}\n      <Routes>\n        <Route index element={<GeneralSettings />} />\n        <Route path=\"writing\" element={<WritingSettings />} />\n        <Route path=\"reading\" element={<ReadingSettings />} />\n        <Route path=\"permalink\" element={<PermalinkSettings />} />\n        <Route path=\"privacy\" element={<PrivacySettings />} />\n        <Route path=\"oauth\" element={<OAuthSettings />} />\n        <Route path=\"users\" element={<UserSettings />} />\n        <Route path=\"email\" element={<EmailSettings />} />\n        <Route path=\"ai\" element={<AISettings />} />\n        <Route path=\"integrations\" element={<IntegrationSettings />} />\n        <Route path=\"*\" element={<Navigate to=\"\" replace />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default Settings"],"names":["Separator","forwardRef","className","orientation","decorative","props","ref","jsx","cn","timezones","dateFormats","timeFormats","GeneralSettings","queryClient","useQueryClient","success","error","useAdminNotices","settings","setSettings","useState","isLoading","useQuery","data","apiClient","saveMutation","useMutation","err","message","handleSave","handleChange","field","value","prev","jsxs","Card","CardHeader","CardTitle","Globe","CardDescription","CardContent","Label","Input","e","Textarea","Clock","Select","SelectTrigger","SelectValue","SelectContent","tz","SelectItem","format","Shield","Switch","checked","Database","Fragment","Button","Save","RadioGroupContext","createContext","RadioGroup","controlledValue","defaultValue","onValueChange","name","children","uncontrolledValue","setUncontrolledValue","handleValueChange","newValue","RadioGroupItem","id","context","useContext","isChecked","inputId","Circle","DEFAULT_READING_SETTINGS","ReadingSettings","pages","setPages","authStatus","setAuthStatus","useEffect","accessToken","token","adminStorage","userRole","isAdmin","actualToken","pagesData","pagesLoading","response","settingsLoading","apiError","payload","errorData","toast","AlertCircle","User","Home","pageId","p","page","FileText","OAUTH_PROVIDERS","OAuthSettings","addNotice","showSecrets","setShowSecrets","copiedUrls","setCopiedUrls","localSettings","setLocalSettings","hasUnsavedChanges","setHasUnsavedChanges","updateMutation","newData","previousSettings","old","_data","variables","_variables","testMutation","handleInputChange","useCallback","provider","handleSaveProvider","config","toggleSecretVisibility","copyCallbackUrl","url","testConnection","generateCallbackUrl","secret","oauthData","Alert","AlertDescription","providerInfo","callbackUrl","Badge","ExternalLink","EyeOff","Eye","Check","Copy","TestTube","PermalinkSettings","selectedStructure","setSelectedStructure","customStructure","setCustomStructure","categoryBase","setCategoryBase","tagBase","setTagBase","removeStopWords","setRemoveStopWords","maxUrlLength","setMaxUrlLength","autoFlushRules","setAutoFlushRules","enableSeoWarnings","setEnableSeoWarnings","previews","setPreviews","validation","setValidation","commonStructures","authClient","newSettings","previewMutation","structure","validateMutation","currentStructure","currentSettings","getSeoRatingColor","rating","getSeoRatingIcon","CheckCircle","TrendingUp","XCircle","Link","item","preview","index","AlertTriangle","WritingSettings","useAuth","loading","setLoading","saving","setSaving","categories","postFormats","fetchSettings","updateSetting","key","RefreshCw","cat","Edit","MessageSquare","Mail","Info","AlertTitle","PrivacySettings","exportFormats","path","keys","current","i","generatePrivacyPolicy","exportUserData","Lock","Cookie","Trash2","Download","formats","f","UserSettings","IntegrationSettings","settingsTabs","SettingsIcon","BookOpen","LinkIcon","Key","Sparkles","Settings","location","useLocation","tab","isActive","Routes","Route","EmailSettings","AISettings","Navigate"],"mappings":"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"}