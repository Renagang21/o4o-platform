import{a as e,u as r,b as s,k as o}from"./vendor-query-CbBSyLUF.js";import{E as a}from"./ecommerceApi-D0afJ9ty.js";import{a as t}from"./vendor-utils-C9jLuAcl.js";const n=e=>{},d=e=>{},i=(r=1,s=20,t={})=>e({queryKey:["orders",r,s,t],queryFn:()=>a.getOrders(r,s,t),placeholderData:o,staleTime:12e4}),u=(r,s=!0)=>e({queryKey:["order",r],queryFn:()=>a.getOrder(r),enabled:!!r&&s,staleTime:12e4}),c=()=>{const e=r();return s({mutationFn:({orderId:e,status:r,note:s})=>a.updateOrderStatus(e,r,s),onSuccess:(r,s)=>{e.invalidateQueries({queryKey:["orders"]}),e.invalidateQueries({queryKey:["order",s.orderId]}),n(`주문 상태가 '${s.status}'로 변경되었습니다.`)},onError:e=>{t.isAxiosError(e)&&d(e.response?.data?.message||"주문 상태 변경에 실패했습니다.")}})},m=()=>{const e=r();return s({mutationFn:({orderId:e,amount:r,reason:s,items:o})=>a.refundOrder(e,r,s,o),onSuccess:(r,s)=>{e.invalidateQueries({queryKey:["orders"]}),e.invalidateQueries({queryKey:["order",s.orderId]})},onError:e=>{t.isAxiosError(e)&&d(e.response?.data?.message||"주문 환불 처리에 실패했습니다.")}})},y=()=>{const e=r();return s({mutationFn:e=>a.bulkOrderAction(e),onSuccess:(r,s)=>{e.invalidateQueries({queryKey:["orders"]}),"update_status"===s.action?n(`${s.orderIds.length}개 주문의 상태가 변경되었습니다.`):"delete"===s.action?n(`${s.orderIds.length}개 주문이 삭제되었습니다.`):s.action},onError:e=>{t.isAxiosError(e)&&d(e.response?.data?.message||"대량 작업 처리에 실패했습니다.")}})};export{y as a,c as b,u as c,m as d,i as u};
