{"version":3,"file":"UIShowcase-DMJAVCSu.js","sources":["../../src/components/DraggableWidget.tsx","../../src/components/InlineEdit.tsx","../../src/components/ScreenOptions.tsx","../../src/pages/UIShowcase.tsx"],"sourcesContent":["import { useState, FC, ReactNode, Children } from 'react';\nimport { GripVertical, ChevronUp, ChevronDown, X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface DraggableWidgetProps {\n  id: string;\n  title: string;\n  children: ReactNode;\n  isCollapsible?: boolean;\n  isClosable?: boolean;\n  onClose?: (id: string) => void;\n  defaultCollapsed?: boolean;\n}\n\nconst DraggableWidget: FC<DraggableWidgetProps> = ({\n  id,\n  title,\n  children,\n  isCollapsible = true,\n  isClosable = false,\n  onClose,\n  defaultCollapsed = false,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleDragStart = (e: React.DragEvent) => {\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('widgetId', id);\n    setIsDragging(true);\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose(id);\n    }\n  };\n\n  return (\n    <div\n      draggable\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      className={cn(\n        \"wp-card transition-all duration-200\",\n        isDragging && \"opacity-50 scale-[0.98]\",\n        \"hover:shadow-lg\"\n      )}\n    >\n      <div className=\"wp-card-header flex items-center justify-between cursor-move select-none\">\n        <div className=\"flex items-center gap-2\">\n          <GripVertical className=\"w-4 h-4 text-gray-400 dark:text-gray-500\" />\n          <h3 className=\"text-base font-semibold\">{title}</h3>\n        </div>\n        <div className=\"flex items-center gap-1\">\n          {isCollapsible && (\n            <button\n              onClick={(e: any) => {\n                e.stopPropagation();\n                setIsCollapsed(!isCollapsed);\n              }}\n              className={cn(\n                \"p-1 rounded transition-colors\",\n                \"hover:bg-gray-100 dark:hover:bg-gray-800\",\n                \"text-gray-500 hover:text-gray-700\",\n                \"dark:text-gray-400 dark:hover:text-gray-200\"\n              )}\n              aria-label={isCollapsed ? 'Expand' : 'Collapse'}\n            >\n              {isCollapsed ? (\n                <ChevronDown className=\"w-4 h-4\" />\n              ) : (\n                <ChevronUp className=\"w-4 h-4\" />\n              )}\n            </button>\n          )}\n          {isClosable && onClose && (\n            <button\n              onClick={(e: any) => {\n                e.stopPropagation();\n                handleClose();\n              }}\n              className={cn(\n                \"p-1 rounded transition-colors\",\n                \"hover:bg-gray-100 dark:hover:bg-gray-800\",\n                \"text-gray-500 hover:text-error-600\",\n                \"dark:text-gray-400 dark:hover:text-error-400\"\n              )}\n              aria-label=\"Close\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          )}\n        </div>\n      </div>\n      {!isCollapsed && (\n        <div className=\"wp-card-body\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface WidgetContainerProps {\n  children: ReactNode;\n  onReorder: (fromIndex: number, toIndex: number) => void;\n  columns?: number;\n}\n\nexport const WidgetContainer: FC<WidgetContainerProps> = ({\n  children,\n  onReorder,\n  columns = 2,\n}) => {\n  const [dragOverIndex, setDragOverIndex] = useState<number | null>(null);\n\n  const handleDragOver = (e: React.DragEvent, index: number) => {\n    e.preventDefault();\n    setDragOverIndex(index);\n  };\n\n  const handleDrop = (e: React.DragEvent, dropIndex: number) => {\n    e.preventDefault();\n    const draggedId = e.dataTransfer.getData('widgetId');\n    \n    // Find the index of the dragged widget\n    const childrenArray = Children.toArray(children);\n    const draggedIndex = childrenArray.findIndex(\n      (child: any) => child.props.id === draggedId\n    );\n\n    if (draggedIndex !== -1 && draggedIndex !== dropIndex) {\n      onReorder(draggedIndex, dropIndex);\n    }\n\n    setDragOverIndex(null);\n  };\n\n  const handleDragLeave = () => {\n    setDragOverIndex(null);\n  };\n\n  const gridColumns = {\n    1: 'grid-cols-1',\n    2: 'lg:grid-cols-2',\n    3: 'lg:grid-cols-3',\n    4: 'lg:grid-cols-4',\n  }[columns] || 'lg:grid-cols-2';\n\n  return (\n    <div className={cn(\"grid grid-cols-1 gap-6\", gridColumns)}>\n      {Children.map(children, (child, index) => (\n        <div\n          key={index}\n          onDragOver={(e) => handleDragOver(e, index)}\n          onDrop={(e) => handleDrop(e, index)}\n          onDragLeave={handleDragLeave}\n          className={cn(\n            \"relative transition-all duration-200\",\n            dragOverIndex === index && \"ring-2 ring-primary-500 ring-offset-2 dark:ring-offset-gray-900\"\n          )}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DraggableWidget;","import { FC, KeyboardEvent, useEffect, useRef, useState } from 'react';\nimport { Check, X, Edit2 } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface InlineEditProps {\n  value: string;\n  onSave: (value: string) => void;\n  onCancel?: () => void;\n  className?: string;\n  inputClassName?: string;\n  multiline?: boolean;\n  placeholder?: string;\n  required?: boolean;\n  maxLength?: number;\n  disabled?: boolean;\n}\n\nexport const InlineEdit: FC<InlineEditProps> = ({\n  value: initialValue,\n  onSave,\n  onCancel,\n  className,\n  inputClassName,\n  multiline = false,\n  placeholder = 'Click to edit...',\n  required = false,\n  maxLength,\n  disabled = false,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  const [error, setError] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  useEffect(() => {\n    if (isEditing) {\n      if (multiline && textareaRef.current) {\n        textareaRef.current.focus();\n        textareaRef.current.select();\n      } else if (!multiline && inputRef.current) {\n        inputRef.current.focus();\n        inputRef.current.select();\n      }\n    }\n  }, [isEditing, multiline]);\n\n  const handleSave = () => {\n    if (required && !value.trim()) {\n      setError('This field is required');\n      return;\n    }\n\n    if (maxLength && value.length > maxLength) {\n      setError(`Maximum ${maxLength} characters allowed`);\n      return;\n    }\n\n    onSave(value);\n    setIsEditing(false);\n    setError('');\n  };\n\n  const handleCancel = () => {\n    setValue(initialValue);\n    setIsEditing(false);\n    setError('');\n    onCancel?.();\n  };\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' && !multiline) {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      handleCancel();\n    }\n  };\n\n  if (!isEditing) {\n    return (\n      <div\n        className={cn(\n          'group relative inline-flex items-center gap-2 cursor-pointer rounded px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors',\n          disabled && 'cursor-not-allowed opacity-50',\n          className\n        )}\n        onClick={() => !disabled && setIsEditing(true)}\n      >\n        <span className={cn('text-sm', !initialValue && 'text-gray-500')}>\n          {initialValue || placeholder}\n        </span>\n        {!disabled && (\n          <Edit2 className=\"w-3 h-3 opacity-0 group-hover:opacity-100 transition-opacity\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('inline-flex items-start gap-2', className)}>\n      <div className=\"flex-1\">\n        {multiline ? (\n          <Textarea\n            ref={textareaRef}\n            value={value}\n            onChange={(e: any) => {\n              setValue(e.target.value);\n              setError('');\n            }}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            className={cn(\n              'min-h-[60px] resize-none',\n              error && 'border-red-500',\n              inputClassName\n            )}\n            maxLength={maxLength}\n          />\n        ) : (\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            value={value}\n            onChange={(e: any) => {\n              setValue(e.target.value);\n              setError('');\n            }}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            className={cn(\n              error && 'border-red-500',\n              inputClassName\n            )}\n            maxLength={maxLength}\n          />\n        )}\n        {error && (\n          <p className=\"text-xs text-red-500 mt-1\">{error}</p>\n        )}\n      </div>\n      <div className=\"flex gap-1\">\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"h-8 w-8\"\n          onClick={handleSave}\n        >\n          <Check className=\"w-4 h-4 text-green-600\" />\n        </Button>\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"h-8 w-8\"\n          onClick={handleCancel}\n        >\n          <X className=\"w-4 h-4 text-red-600\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default InlineEdit;\n","import { FC, useState } from 'react';\nimport { ChevronDown, Settings } from 'lucide-react';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\n\nexport interface ScreenOption {\n  id: string;\n  label: string;\n  checked: boolean;\n}\n\ninterface ScreenOptionsProps {\n  options: ScreenOption[];\n  onOptionChange: (id: string, checked: boolean) => void;\n  columns?: number;\n  onColumnsChange?: (columns: number) => void;\n  itemsPerPage?: number;\n  onItemsPerPageChange?: (items: number) => void;\n  className?: string;\n}\n\nexport const ScreenOptions: FC<ScreenOptionsProps> = ({\n  options,\n  onOptionChange,\n  columns,\n  onColumnsChange,\n  itemsPerPage,\n  onItemsPerPageChange,\n  className,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={cn('relative', className)}>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={cn(\n          'inline-flex items-center gap-2 px-3 py-2',\n          'bg-white dark:bg-gray-800',\n          'border border-gray-300 dark:border-gray-600',\n          'rounded-md shadow-sm',\n          'hover:bg-gray-50 dark:hover:bg-gray-700',\n          'focus:outline-none focus:ring-2 focus:ring-primary-500'\n        )}\n      >\n        <Settings className=\"w-4 h-4\" />\n        <span>Screen Options</span>\n        <ChevronDown className={cn(\n          'w-4 h-4 transition-transform',\n          isOpen && 'rotate-180'\n        )} />\n      </button>\n\n      {isOpen && (\n        <div className={cn(\n          'absolute right-0 mt-2 w-80',\n          'bg-white dark:bg-gray-800',\n          'border border-gray-300 dark:border-gray-600',\n          'rounded-md shadow-lg',\n          'z-50'\n        )}>\n          <div className=\"p-4\">\n            {options.length > 0 && (\n              <div className=\"mb-4\">\n                <h3 className=\"text-sm font-medium mb-2\">Show on screen</h3>\n                <div className=\"space-y-2\">\n                  {options.map((option: ScreenOption) => (\n                    <div key={option.id} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id={option.id}\n                        checked={option.checked}\n                        onCheckedChange={(checked: boolean) => \n                          onOptionChange(option.id, checked as boolean)\n                        }\n                      />\n                      <Label \n                        htmlFor={option.id}\n                        className=\"text-sm font-normal cursor-pointer\"\n                      >\n                        {option.label}\n                      </Label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {columns !== undefined && onColumnsChange && (\n              <div className=\"mb-4\">\n                <Label htmlFor=\"columns\" className=\"text-sm font-medium\">\n                  Number of Columns\n                </Label>\n                <Input\n                  id=\"columns\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"6\"\n                  value={columns}\n                  onChange={(e: any) => onColumnsChange(parseInt(e.target.value) || 1)}\n                  className=\"mt-1 w-full\"\n                />\n              </div>\n            )}\n\n            {itemsPerPage !== undefined && onItemsPerPageChange && (\n              <div>\n                <Label htmlFor=\"itemsPerPage\" className=\"text-sm font-medium\">\n                  Items per page\n                </Label>\n                <Input\n                  id=\"itemsPerPage\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"999\"\n                  value={itemsPerPage}\n                  onChange={(e: any) => onItemsPerPageChange(parseInt(e.target.value) || 20)}\n                  className=\"mt-1 w-full\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700\">\n            <button\n              onClick={() => setIsOpen(false)}\n              className={cn(\n                'px-3 py-1.5 text-sm',\n                'bg-primary-600 text-white',\n                'rounded hover:bg-primary-700',\n                'focus:outline-none focus:ring-2 focus:ring-primary-500'\n              )}\n            >\n              Apply\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScreenOptions;\n","import { useState } from 'react';\nimport { Palette, Moon, Sun, Layout, Type, Zap } from 'lucide-react';\nimport DraggableWidget, { WidgetContainer } from '@/components/DraggableWidget';\nimport { InlineEdit } from '@/components/InlineEdit';\nimport { ScreenOptions } from '@/components/ScreenOptions';\nimport { useTheme } from '@/contexts/ThemeContext';\n\nconst UIShowcase = () => {\n  const { theme, toggleTheme } = useTheme();\n  const [widgets, setWidgets] = useState([\n    { id: 'colors', title: 'Modern Color Palette', order: 0 },\n    { id: 'components', title: 'Component Examples', order: 1 },\n    { id: 'inline', title: 'Inline Editing', order: 2 },\n    { id: 'theme', title: 'Theme System', order: 3 },\n  ]);\n\n  const [screenOptions, setScreenOptions] = useState([\n    { id: 'colors', label: 'Color Palette', checked: true },\n    { id: 'components', label: 'Components', checked: true },\n    { id: 'inline', label: 'Inline Editing', checked: true },\n    { id: 'theme', label: 'Theme Demo', checked: true },\n  ]);\n\n  const [columns, setColumns] = useState(2);\n  const [inlineValues, setInlineValues] = useState({\n    title: 'Modern WordPress Admin',\n    subtitle: 'With advanced UI/UX features',\n    price: '99.99',\n  });\n\n  const handleReorder = (fromIndex: number, toIndex: number) => {\n    const newWidgets = [...widgets];\n    const [movedWidget] = newWidgets.splice(fromIndex, 1);\n    newWidgets.splice(toIndex, 0, movedWidget);\n    setWidgets(newWidgets.map((w, i) => ({ ...w, order: i })));\n  };\n\n  const handleOptionChange = (id: string, checked: boolean) => {\n    setScreenOptions((prev: any) =>\n      prev.map((opt: any) => (opt.id === id ? { ...opt, checked } : opt))\n    );\n  };\n\n  const visibleWidgets = widgets\n    .filter((w: any) => screenOptions.find((opt: any) => opt.id === w.id)?.checked)\n    .sort((a, b) => a.order - b.order);\n\n  const colorPalette = [\n    { name: 'Primary', var: '--modern-primary', class: 'bg-modern-primary' },\n    { name: 'Secondary', var: '--modern-secondary', class: 'bg-modern-secondary' },\n    { name: 'Success', var: '--modern-success', class: 'bg-modern-success' },\n    { name: 'Warning', var: '--modern-warning', class: 'bg-modern-warning' },\n    { name: 'Danger', var: '--modern-danger', class: 'bg-modern-danger' },\n    { name: 'Accent', var: '--modern-accent', class: 'bg-modern-accent' },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-modern-text-primary flex items-center gap-2\">\n            <Palette className=\"w-8 h-8 text-modern-primary\" />\n            UI/UX Showcase\n          </h1>\n          <p className=\"text-modern-text-secondary mt-1\">\n            Modern WordPress-style admin interface with advanced features\n          </p>\n        </div>\n        <ScreenOptions\n          options={screenOptions}\n          onOptionChange={handleOptionChange}\n          columns={columns}\n          onColumnsChange={setColumns}\n        />\n      </div>\n\n      {/* Draggable Widgets */}\n      <WidgetContainer onReorder={handleReorder} columns={columns}>\n        {visibleWidgets.map((widget: any) => {\n          switch (widget.id) {\n            case 'colors':\n              return (\n                <DraggableWidget\n                  key={widget.id}\n                  id={widget.id}\n                  title={widget.title}\n                  isCollapsible\n                  isClosable\n                  onClose={(id) => handleOptionChange(id, false)}\n                >\n                  <div className=\"space-y-4\">\n                    <p className=\"text-sm text-modern-text-secondary\">\n                      Modern color system with CSS variables for easy theming\n                    </p>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      {colorPalette.map((color: any) => (\n                        <div key={color.name} className=\"space-y-2\">\n                          <div className={`h-20 rounded-lg ${color.class} shadow-md`} />\n                          <div>\n                            <p className=\"font-medium text-modern-text-primary\">{color.name}</p>\n                            <code className=\"text-xs text-modern-text-secondary\">{color.var}</code>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"p-4 bg-gradient-to-r from-modern-primary to-modern-secondary rounded-lg text-white\">\n                      <p className=\"font-semibold\">Gradient Support</p>\n                      <p className=\"text-sm opacity-90\">Beautiful gradients for modern UI</p>\n                    </div>\n                  </div>\n                </DraggableWidget>\n              );\n\n            case 'components':\n              return (\n                <DraggableWidget\n                  key={widget.id}\n                  id={widget.id}\n                  title={widget.title}\n                  isCollapsible\n                  isClosable\n                  onClose={(id) => handleOptionChange(id, false)}\n                >\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-medium text-modern-text-primary\">Buttons</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        <button className=\"modern-btn-primary\">Primary</button>\n                        <button className=\"modern-btn-secondary\">Secondary</button>\n                        <button className=\"modern-btn-outline\">Outline</button>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-medium text-modern-text-primary\">Badges</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        <span className=\"modern-badge-primary\">Primary</span>\n                        <span className=\"modern-badge-success\">Success</span>\n                        <span className=\"modern-badge-warning\">Warning</span>\n                        <span className=\"modern-badge-error\">Error</span>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-medium text-modern-text-primary\">Input</h4>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Modern input field\"\n                        className=\"modern-input w-full\"\n                      />\n                    </div>\n\n                    <div className=\"modern-glass p-4\">\n                      <p className=\"font-medium text-modern-text-primary\">Glass Effect</p>\n                      <p className=\"text-sm text-modern-text-secondary\">\n                        Modern glassmorphism design\n                      </p>\n                    </div>\n                  </div>\n                </DraggableWidget>\n              );\n\n            case 'inline':\n              return (\n                <DraggableWidget\n                  key={widget.id}\n                  id={widget.id}\n                  title={widget.title}\n                  isCollapsible\n                  isClosable\n                  onClose={(id) => handleOptionChange(id, false)}\n                >\n                  <div className=\"space-y-4\">\n                    <p className=\"text-sm text-modern-text-secondary\">\n                      Click on any text below to edit inline\n                    </p>\n                    \n                    <div className=\"space-y-3\">\n                      <div>\n                        <label className=\"text-sm font-medium text-modern-text-secondary\">Title</label>\n                        <div className=\"text-lg font-semibold\">\n                          <InlineEdit\n                            value={inlineValues.title}\n                            onSave={(value) => setInlineValues((prev: any) => ({ ...prev, title: value }))}\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"text-sm font-medium text-modern-text-secondary\">Subtitle</label>\n                        <div>\n                          <InlineEdit\n                            value={inlineValues.subtitle}\n                            onSave={(value) => setInlineValues((prev: any) => ({ ...prev, subtitle: value }))}\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"text-sm font-medium text-modern-text-secondary\">Price</label>\n                        <div className=\"text-2xl font-bold text-modern-primary\">\n                          $<InlineEdit\n                            value={inlineValues.price}\n                            onSave={(value) => setInlineValues((prev: any) => ({ ...prev, price: value }))}\n                            inputClassName=\"w-24\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </DraggableWidget>\n              );\n\n            case 'theme':\n              return (\n                <DraggableWidget\n                  key={widget.id}\n                  id={widget.id}\n                  title={widget.title}\n                  isCollapsible\n                  isClosable\n                  onClose={(id) => handleOptionChange(id, false)}\n                >\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-4 bg-modern-bg-tertiary rounded-lg\">\n                      <div className=\"flex items-center gap-3\">\n                        {theme === 'light' ? (\n                          <Sun className=\"w-6 h-6 text-modern-warning\" />\n                        ) : (\n                          <Moon className=\"w-6 h-6 text-modern-primary\" />\n                        )}\n                        <div>\n                          <p className=\"font-medium text-modern-text-primary\">\n                            {theme === 'light' ? 'Light Mode' : 'Dark Mode'}\n                          </p>\n                          <p className=\"text-sm text-modern-text-secondary\">\n                            Click to switch theme\n                          </p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={toggleTheme}\n                        className=\"px-4 py-2 bg-modern-primary text-white rounded-lg hover:bg-modern-primary-hover transition-colors\"\n                      >\n                        Toggle\n                      </button>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div className=\"p-3 bg-modern-bg-primary rounded-lg text-center\">\n                        <Layout className=\"w-8 h-8 mx-auto mb-2 text-modern-primary\" />\n                        <p className=\"text-sm font-medium text-modern-text-primary\">Responsive</p>\n                      </div>\n                      <div className=\"p-3 bg-modern-bg-primary rounded-lg text-center\">\n                        <Type className=\"w-8 h-8 mx-auto mb-2 text-modern-secondary\" />\n                        <p className=\"text-sm font-medium text-modern-text-primary\">Typography</p>\n                      </div>\n                      <div className=\"p-3 bg-modern-bg-primary rounded-lg text-center\">\n                        <Zap className=\"w-8 h-8 mx-auto mb-2 text-modern-warning\" />\n                        <p className=\"text-sm font-medium text-modern-text-primary\">Fast</p>\n                      </div>\n                      <div className=\"p-3 bg-modern-bg-primary rounded-lg text-center\">\n                        <Palette className=\"w-8 h-8 mx-auto mb-2 text-modern-accent\" />\n                        <p className=\"text-sm font-medium text-modern-text-primary\">Beautiful</p>\n                      </div>\n                    </div>\n                  </div>\n                </DraggableWidget>\n              );\n\n            default:\n              return null;\n          }\n        })}\n      </WidgetContainer>\n\n      {/* Footer */}\n      <div className=\"mt-8 p-6 bg-modern-bg-tertiary rounded-lg\">\n        <h3 className=\"text-lg font-semibold text-modern-text-primary mb-4\">\n          Key Features Implemented\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"w-2 h-2 bg-modern-primary rounded-full mt-2\" />\n            <div>\n              <p className=\"font-medium text-modern-text-primary\">Modern Color System</p>\n              <p className=\"text-sm text-modern-text-secondary\">\n                CSS variables with light/dark mode support\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"w-2 h-2 bg-modern-secondary rounded-full mt-2\" />\n            <div>\n              <p className=\"font-medium text-modern-text-primary\">Drag & Drop Widgets</p>\n              <p className=\"text-sm text-modern-text-secondary\">\n                Reorganize dashboard widgets easily\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"w-2 h-2 bg-modern-success rounded-full mt-2\" />\n            <div>\n              <p className=\"font-medium text-modern-text-primary\">Screen Options</p>\n              <p className=\"text-sm text-modern-text-secondary\">\n                WordPress-style visibility controls\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"w-2 h-2 bg-modern-warning rounded-full mt-2\" />\n            <div>\n              <p className=\"font-medium text-modern-text-primary\">Inline Editing</p>\n              <p className=\"text-sm text-modern-text-secondary\">\n                Edit content without page refresh\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UIShowcase;"],"names":["DraggableWidget","id","title","children","isCollapsible","isClosable","onClose","defaultCollapsed","isCollapsed","setIsCollapsed","useState","isDragging","setIsDragging","handleDragStart","e","handleDragEnd","handleClose","jsxs","cn","jsx","GripVertical","ChevronDown","ChevronUp","X","WidgetContainer","onReorder","columns","dragOverIndex","setDragOverIndex","handleDragOver","index","handleDrop","dropIndex","draggedId","draggedIndex","Children","child","handleDragLeave","gridColumns","InlineEdit","initialValue","onSave","onCancel","className","inputClassName","multiline","placeholder","required","maxLength","disabled","isEditing","setIsEditing","value","setValue","error","setError","inputRef","useRef","textareaRef","useEffect","handleSave","handleCancel","handleKeyDown","Textarea","Input","Button","Check","Edit2","ScreenOptions","options","onOptionChange","onColumnsChange","itemsPerPage","onItemsPerPageChange","isOpen","setIsOpen","Settings","option","Checkbox","checked","Label","UIShowcase","theme","toggleTheme","useTheme","widgets","setWidgets","screenOptions","setScreenOptions","setColumns","inlineValues","setInlineValues","handleReorder","fromIndex","toIndex","newWidgets","movedWidget","w","i","handleOptionChange","prev","opt","visibleWidgets","a","b","colorPalette","Palette","widget","color","Sun","Moon","Layout","Type","Zap"],"mappings":"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"}