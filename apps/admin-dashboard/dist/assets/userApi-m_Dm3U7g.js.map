{"version":3,"file":"userApi-m_Dm3U7g.js","sources":["../../src/api/userApi.ts"],"sourcesContent":["import { unifiedApi } from './unified-client'\nimport { User, UserFilters, UserBulkAction, UserFormData, UserStats, UserActivityLog } from '@/types/user'\nimport { ApiResponse, PaginatedResponse } from '@/types'\n\nexport class UserApi {\n  static async getUsers(\n    page = 1, \n    limit = 10, \n    filters: UserFilters = {}\n  ): Promise<PaginatedResponse<User>> {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString(),\n      ...Object.fromEntries(\n        Object.entries(filters).filter(([_, value]) => value && value !== 'all')\n      )\n    })\n\n    const response = await unifiedApi.raw.get(`/v1/users?${params}`)\n    \n    // Backend returns data in response.data.data structure\n    if (response.data?.data?.users) {\n      return {\n        data: response.data.data.users,\n        total: response.data.data.pagination?.totalItems || 0,\n        totalPages: response.data.data.pagination?.total || 0,\n        pagination: response.data.data.pagination\n      }\n    }\n    \n    return response.data\n  }\n\n  static async getPendingUsers(\n    page = 1,\n    limit = 10,\n    businessType?: string\n  ): Promise<PaginatedResponse<User>> {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString(),\n      status: 'pending'\n    })\n\n    if (businessType && businessType !== 'all') {\n      params.append('businessType', businessType)\n    }\n\n    const response = await unifiedApi.raw.get(`/v1/users?${params}`)\n    return response.data\n  }\n\n  static async getUser(userId: string): Promise<ApiResponse<User>> {\n    const response = await unifiedApi.raw.get(`/v1/users/${userId}`)\n    return response.data\n  }\n\n  static async createUser(userData: UserFormData): Promise<ApiResponse<User>> {\n    const response = await unifiedApi.raw.post('/v1/users', userData)\n    return response.data\n  }\n\n  static async updateUser(userId: string, userData: Partial<UserFormData>): Promise<ApiResponse<User>> {\n    const response = await unifiedApi.raw.put(`/v1/users/${userId}`, userData)\n    return response.data\n  }\n\n  static async approveUser(userId: string, notes?: string): Promise<ApiResponse<User>> {\n    const response = await unifiedApi.raw.post(`/admin/users/${userId}/approve`, { notes })\n    return response.data\n  }\n\n  static async rejectUser(userId: string, reason: string): Promise<ApiResponse<User>> {\n    const response = await unifiedApi.raw.post(`/admin/users/${userId}/reject`, { notes: reason })\n    return response.data\n  }\n\n  // TODO: Implement suspend/reactivate endpoints in backend\n  // static async suspendUser(userId: string, reason: string): Promise<ApiResponse<User>> {\n  //   const response = await apiClient.post(`/users/${userId}/suspend`, { reason })\n  //   return response.data\n  // }\n\n  // static async reactivateUser(userId: string): Promise<ApiResponse<User>> {\n  //   const response = await apiClient.post(`/users/${userId}/reactivate`)\n  //   return response.data\n  // }\n\n  static async deleteUser(userId: string): Promise<ApiResponse<void>> {\n    const response = await unifiedApi.raw.delete(`/v1/users/${userId}`)\n    return response.data\n  }\n\n  static async bulkAction(action: UserBulkAction): Promise<ApiResponse<void>> {\n    const endpoint = action.action === 'approve' ? '/v1/users/bulk-approve' : '/v1/users/bulk-reject'\n    const response = await unifiedApi.raw.post(endpoint, {\n      userIds: action.userIds,\n      notes: action.reason || 'Bulk action via admin dashboard'\n    })\n    return response.data\n  }\n\n  static async getUserStats(): Promise<ApiResponse<UserStats>> {\n    const response = await unifiedApi.raw.get('/v1/users/statistics')\n    return response.data\n  }\n\n  static async exportUsers(filters: UserFilters = {}): Promise<Blob> {\n    const params = new URLSearchParams(\n      Object.fromEntries(\n        Object.entries(filters)\n          .filter(([_, value]) => value && value !== 'all')\n          .map(([key, value]) => [key, String(value)])\n      )\n    )\n\n    const response = await unifiedApi.raw.get(`/v1/users/export/csv?${params}`, {\n      responseType: 'blob'\n    })\n    return response.data\n  }\n\n  static async getUserActivity(userId: string): Promise<ApiResponse<UserActivityLog[]>> {\n    const response = await unifiedApi.raw.get(`/v1/users/${userId}/approval-history`)\n    return response.data\n  }\n\n  // Legacy role migration helper\n  static async migrateUserRoles(): Promise<ApiResponse<void>> {\n    const response = await unifiedApi.raw.post('/admin/users/migrate-roles')\n    return response.data\n  }\n}"],"names":["UserApi","page","limit","filters","params","_","value","response","unifiedApi","businessType","userId","userData","notes","reason","action","endpoint","key"],"mappings":"iDAIO,MAAMA,CAAQ,CACnB,aAAa,SACXC,EAAO,EACPC,EAAQ,GACRC,EAAuB,GACW,CAClC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,KAAMH,EAAK,SAAA,EACX,MAAOC,EAAM,SAAA,EACb,GAAG,OAAO,YACR,OAAO,QAAQC,CAAO,EAAE,OAAO,CAAC,CAACE,EAAGC,CAAK,IAAMA,GAASA,IAAU,KAAK,CAAA,CACzE,CACD,EAEKC,EAAW,MAAMC,EAAW,IAAI,IAAI,aAAaJ,CAAM,EAAE,EAG/D,OAAIG,EAAS,MAAM,MAAM,MAChB,CACL,KAAMA,EAAS,KAAK,KAAK,MACzB,MAAOA,EAAS,KAAK,KAAK,YAAY,YAAc,EACpD,WAAYA,EAAS,KAAK,KAAK,YAAY,OAAS,EACpD,WAAYA,EAAS,KAAK,KAAK,UAAA,EAI5BA,EAAS,IAClB,CAEA,aAAa,gBACXN,EAAO,EACPC,EAAQ,GACRO,EACkC,CAClC,MAAML,EAAS,IAAI,gBAAgB,CACjC,KAAMH,EAAK,SAAA,EACX,MAAOC,EAAM,SAAA,EACb,OAAQ,SAAA,CACT,EAED,OAAIO,GAAgBA,IAAiB,OACnCL,EAAO,OAAO,eAAgBK,CAAY,GAG3B,MAAMD,EAAW,IAAI,IAAI,aAAaJ,CAAM,EAAE,GAC/C,IAClB,CAEA,aAAa,QAAQM,EAA4C,CAE/D,OADiB,MAAMF,EAAW,IAAI,IAAI,aAAaE,CAAM,EAAE,GAC/C,IAClB,CAEA,aAAa,WAAWC,EAAoD,CAE1E,OADiB,MAAMH,EAAW,IAAI,KAAK,YAAaG,CAAQ,GAChD,IAClB,CAEA,aAAa,WAAWD,EAAgBC,EAA6D,CAEnG,OADiB,MAAMH,EAAW,IAAI,IAAI,aAAaE,CAAM,GAAIC,CAAQ,GACzD,IAClB,CAEA,aAAa,YAAYD,EAAgBE,EAA4C,CAEnF,OADiB,MAAMJ,EAAW,IAAI,KAAK,gBAAgBE,CAAM,WAAY,CAAE,MAAAE,CAAA,CAAO,GACtE,IAClB,CAEA,aAAa,WAAWF,EAAgBG,EAA4C,CAElF,OADiB,MAAML,EAAW,IAAI,KAAK,gBAAgBE,CAAM,UAAW,CAAE,MAAOG,CAAA,CAAQ,GAC7E,IAClB,CAaA,aAAa,WAAWH,EAA4C,CAElE,OADiB,MAAMF,EAAW,IAAI,OAAO,aAAaE,CAAM,EAAE,GAClD,IAClB,CAEA,aAAa,WAAWI,EAAoD,CAC1E,MAAMC,EAAWD,EAAO,SAAW,UAAY,yBAA2B,wBAK1E,OAJiB,MAAMN,EAAW,IAAI,KAAKO,EAAU,CACnD,QAASD,EAAO,QAChB,MAAOA,EAAO,QAAU,iCAAA,CACzB,GACe,IAClB,CAEA,aAAa,cAAgD,CAE3D,OADiB,MAAMN,EAAW,IAAI,IAAI,sBAAsB,GAChD,IAClB,CAEA,aAAa,YAAYL,EAAuB,GAAmB,CACjE,MAAMC,EAAS,IAAI,gBACjB,OAAO,YACL,OAAO,QAAQD,CAAO,EACnB,OAAO,CAAC,CAACE,EAAGC,CAAK,IAAMA,GAASA,IAAU,KAAK,EAC/C,IAAI,CAAC,CAACU,EAAKV,CAAK,IAAM,CAACU,EAAK,OAAOV,CAAK,CAAC,CAAC,CAAA,CAC/C,EAMF,OAHiB,MAAME,EAAW,IAAI,IAAI,wBAAwBJ,CAAM,GAAI,CAC1E,aAAc,MAAA,CACf,GACe,IAClB,CAEA,aAAa,gBAAgBM,EAAyD,CAEpF,OADiB,MAAMF,EAAW,IAAI,IAAI,aAAaE,CAAM,mBAAmB,GAChE,IAClB,CAGA,aAAa,kBAA+C,CAE1D,OADiB,MAAMF,EAAW,IAAI,KAAK,4BAA4B,GACvD,IAClB,CACF"}