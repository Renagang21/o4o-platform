import{a as n,u,b as a,k as i}from"./vendor-query-GrNIwsDq.js";import{E as o}from"./ecommerceApi-C5OjghYT.js";import{a as c}from"./vendor-utils-DQ8F5vJI.js";import{V as s}from"./vendor-react-BZRIq8oW.js";const m=(r=1,e=20,t={})=>n({queryKey:["products",r,e,t],queryFn:()=>o.getProducts(r,e,t),placeholderData:i,staleTime:300*1e3}),q=(r,e=!0)=>n({queryKey:["product",r],queryFn:()=>o.getProduct(r),enabled:!!r&&e,staleTime:300*1e3}),P=()=>{const r=u();return a({mutationFn:e=>o.createProduct(e),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),s.success("상품이 성공적으로 생성되었습니다.")},onError:e=>{c.isAxiosError(e)?s.error(e.response?.data?.message||"상품 생성에 실패했습니다."):s.error("상품 생성에 실패했습니다.")}})},E=()=>{const r=u();return a({mutationFn:({productId:e,productData:t})=>o.updateProduct(e,t),onSuccess:(e,t)=>{r.invalidateQueries({queryKey:["products"]}),r.invalidateQueries({queryKey:["product",t.productId]}),s.success("상품이 성공적으로 수정되었습니다.")},onError:e=>{c.isAxiosError(e)?s.error(e.response?.data?.message||"상품 수정에 실패했습니다."):s.error("상품 수정에 실패했습니다.")}})},f=()=>{const r=u();return a({mutationFn:e=>o.deleteProduct(e),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),s.success("상품이 성공적으로 삭제되었습니다.")},onError:e=>{c.isAxiosError(e)?s.error(e.response?.data?.message||"상품 삭제에 실패했습니다."):s.error("상품 삭제에 실패했습니다.")}})},K=()=>{const r=u();return a({mutationFn:e=>o.duplicateProduct(e),onSuccess:()=>{r.invalidateQueries({queryKey:["products"]}),s.success("상품이 성공적으로 복제되었습니다.")},onError:e=>{c.isAxiosError(e)?s.error(e.response?.data?.message||"상품 복제에 실패했습니다."):s.error("상품 복제에 실패했습니다.")}})};export{f as a,K as b,q as c,P as d,E as e,m as u};
