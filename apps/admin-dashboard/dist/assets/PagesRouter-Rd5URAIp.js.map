{"version":3,"file":"PagesRouter-Rd5URAIp.js","sources":["../../src/pages/pages/PageList.tsx","../../src/pages/pages/PagesRouter.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  ChevronDown,\n  ChevronUp,\n  Settings,\n  MessageSquare,\n  Calendar,\n  Search\n} from 'lucide-react';\nimport AdminBreadcrumb from '@/components/common/AdminBreadcrumb';\nimport toast from 'react-hot-toast';\n\ninterface Page {\n  id: string;\n  title: string;\n  slug: string;\n  author: string;\n  template: string;\n  comments: number;\n  date: string;\n  status: 'publish' | 'draft' | 'private' | 'archived' | 'scheduled' | 'trash';\n  views: number;\n}\n\ntype SortField = 'title' | 'date' | null;\ntype SortOrder = 'asc' | 'desc';\n\nconst PageList = () => {\n  const navigate = useNavigate();\n  const [pages, setPages] = useState<Page[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Persist activeTab in sessionStorage\n  const [activeTab, setActiveTab] = useState<'all' | 'publish' | 'draft' | 'trash'>(() => {\n    const saved = sessionStorage.getItem('pages-active-tab');\n    return (saved as 'all' | 'publish' | 'draft' | 'trash') || 'all';\n  });\n  \n  // Fetch pages from API\n  useEffect(() => {\n    const fetchPages = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n        \n        const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n        \n        const params = new URLSearchParams();\n        params.append('type', 'page');\n        params.append('per_page', '1000');\n        \n        const response = await fetch(`${apiUrl}/api/posts?${params}`, {\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n          }\n        });\n        \n        if (!response.ok) {\n          if (response.status === 401) {\n            setError('Authentication required. Please login.');\n            window.location.href = '/login';\n          } else {\n            setError(`Failed to fetch pages: ${response.status}`);\n          }\n          setPages([]);\n          return;\n        }\n        \n        const data = await response.json();\n        \n        const pagesArray = data.data || data.posts || [];\n        const transformedPages = pagesArray.map((page: any) => {\n          let date = new Date().toISOString().split('T')[0];\n          try {\n            if (page.publishedAt) {\n              date = new Date(page.publishedAt).toISOString().split('T')[0];\n            } else if (page.createdAt) {\n              date = new Date(page.createdAt).toISOString().split('T')[0];\n            }\n          } catch (err) {\n            // Failed to parse date, use default\n          }\n          \n          return {\n            id: page.id || page._id,\n            title: page.title || 'Untitled',\n            slug: page.slug || '',\n            author: page.author?.name || page.authorName || 'Unknown',\n            template: page.template || 'Default Template',\n            comments: page.commentCount || 0,\n            date: date,\n            status: page.status || 'draft',\n            views: page.views || 0\n          };\n        });\n        \n        setPages(transformedPages);\n        sessionStorage.setItem('pages-data', JSON.stringify(transformedPages));\n        setError(null);\n      } catch (error) {\n        setError('Failed to load pages. Please try again.');\n        setPages([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchPages();\n  }, []);\n  \n  // Save activeTab to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem('pages-active-tab', activeTab);\n  }, [activeTab]);\n  \n  // Filtering and sorting states\n  const [selectedPages, setSelectedPages] = useState<Set<string>>(new Set());\n  const [showBulkActions, setShowBulkActions] = useState(false);\n  const [selectedBulkAction, setSelectedBulkAction] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortField, setSortField] = useState<SortField>(null);\n  const [sortOrder, setSortOrder] = useState<SortOrder>('asc');\n  const [showScreenOptions, setShowScreenOptions] = useState(false);\n  const [itemsPerPage, setItemsPerPage] = useState(20);\n  \n  // Columns visibility\n  const [visibleColumns, setVisibleColumns] = useState({\n    author: true,\n    template: true,\n    comments: true,\n    date: true,\n    status: true\n  });\n  \n  // Quick edit state\n  const [quickEditId, setQuickEditId] = useState<string | null>(null);\n  const [quickEditData, setQuickEditData] = useState({\n    title: '',\n    slug: '',\n    status: 'publish' as 'publish' | 'draft' | 'private',\n    template: 'default'\n  });\n  \n  // Row actions hover state\n  const [hoveredRow, setHoveredRow] = useState<string | null>(null);\n  const hoverTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n      }\n    };\n  }, []);\n  \n  const handleColumnToggle = (column: keyof typeof visibleColumns) => {\n    setVisibleColumns(prev => ({\n      ...prev,\n      [column]: !prev[column]\n    }));\n  };\n  \n  const counts = {\n    all: pages.length,\n    published: pages.filter(p => p.status === 'publish').length,\n    draft: pages.filter(p => p.status === 'draft').length,\n    trash: pages.filter(p => p.status === 'trash').length\n  };\n  \n  const handleAddNew = () => {\n    navigate('/editor/pages/new');\n  };\n  \n  const handleEdit = (id: string) => {\n    navigate(`/editor/pages/${id}`);\n  };\n  \n  const handleQuickEdit = (page: Page) => {\n    setQuickEditId(page.id);\n    setQuickEditData({\n      title: page.title,\n      slug: page.slug,\n      status: page.status as 'publish' | 'draft' | 'private',\n      template: page.template || 'default'\n    });\n  };\n  \n  const handleSaveQuickEdit = async () => {\n    if (quickEditId) {\n      try {\n        const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n        const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n        \n        const response = await fetch(`${apiUrl}/api/posts/${quickEditId}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(quickEditData)\n        });\n        \n        if (response.ok) {\n          setPages(prevPages => prevPages.map(p => \n            p.id === quickEditId \n              ? { ...p, ...quickEditData }\n              : p\n          ));\n          setQuickEditId(null);\n          toast.success('Page updated successfully');\n        } else {\n          toast.error('Failed to update page');\n        }\n      } catch (error) {\n        toast.error('Failed to update page');\n      }\n    }\n  };\n  \n  const handleCancelQuickEdit = () => {\n    setQuickEditId(null);\n    setQuickEditData({\n      title: '',\n      slug: '',\n      status: 'publish' as 'publish' | 'draft' | 'private',\n      template: 'default'\n    });\n  };\n  \n  const handleDelete = async (id: string) => {\n    if (confirm('정말 이 페이지를 휴지통으로 이동하시겠습니까?')) {\n      try {\n        const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n        const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n        \n        const response = await fetch(`${apiUrl}/api/posts/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ status: 'trash' })\n        });\n        \n        if (response.ok) {\n          setPages(prevPages => prevPages.map(p => \n            p.id === id ? { ...p, status: 'trash' as const } : p\n          ));\n          toast.success('Page moved to trash');\n        } else {\n          toast.error('Failed to delete page');\n        }\n      } catch (error) {\n        toast.error('Failed to delete page');\n      }\n    }\n  };\n  \n  const handlePermanentDelete = async (id: string) => {\n    if (confirm('이 페이지를 영구적으로 삭제하시겠습니까? 이 작업은 취소할 수 없습니다.')) {\n      try {\n        const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n        const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n        \n        const response = await fetch(`${apiUrl}/api/posts/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n          }\n        });\n        \n        if (response.ok) {\n          setPages(prevPages => prevPages.filter(p => p.id !== id));\n          sessionStorage.removeItem('pages-data');\n          toast.success('Page deleted permanently');\n        } else {\n          toast.error('Failed to delete page');\n        }\n      } catch (error) {\n        toast.error('Failed to delete page');\n      }\n    }\n  };\n  \n  const handleRestore = async (id: string) => {\n    if (confirm('이 페이지를 복원하시겠습니까?')) {\n      try {\n        const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n        const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n        \n        const response = await fetch(`${apiUrl}/api/posts/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ status: 'draft' })\n        });\n        \n        if (response.ok) {\n          setPages(prevPages => prevPages.map(p => \n            p.id === id ? { ...p, status: 'draft' as const } : p\n          ));\n          toast.success('Page restored');\n        } else {\n          toast.error('Failed to restore page');\n        }\n      } catch (error) {\n        toast.error('Failed to restore page');\n      }\n    }\n  };\n  \n  const handleView = (id: string) => {\n    window.open(`/preview/pages/${id}`, '_blank');\n  };\n  \n  const handleApplyBulkAction = async () => {\n    if (!selectedBulkAction) {\n      alert('Please select an action.');\n      return;\n    }\n    \n    if (selectedPages.size === 0) {\n      alert('No pages selected.');\n      return;\n    }\n    \n    if (selectedBulkAction === 'trash') {\n      if (confirm(`선택한 ${selectedPages.size}개의 페이지를 휴지통으로 이동하시겠습니까?`)) {\n        try {\n          const token = localStorage.getItem('accessToken') || localStorage.getItem('token');\n          const apiUrl = import.meta.env.VITE_API_BASE_URL || 'https://api.neture.co.kr';\n          \n          const promises = Array.from(selectedPages).map(id => \n            fetch(`${apiUrl}/api/posts/${id}`, {\n              method: 'PUT',\n              headers: {\n                'Authorization': token ? `Bearer ${token}` : '',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ status: 'trash' })\n            })\n          );\n          \n          const results = await Promise.all(promises);\n          const allSuccessful = results.every(r => r.ok);\n          \n          if (allSuccessful) {\n            setPages(prevPages => prevPages.map(p => \n              selectedPages.has(p.id) ? { ...p, status: 'trash' as const } : p\n            ));\n            setSelectedPages(new Set());\n            setSelectedBulkAction('');\n            toast.success('Pages moved to trash');\n          } else {\n            toast.error('Some pages failed to move to trash');\n          }\n        } catch (error) {\n          toast.error('Failed to move pages to trash');\n        }\n      }\n    }\n  };\n  \n  const handleSearch = () => {\n    // Search functionality is handled in getFilteredPages()\n  };\n  \n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortOrder('asc');\n    }\n  };\n  \n  const getFilteredPages = () => {\n    let filtered = pages;\n    \n    // Filter by tab\n    if (activeTab === 'publish') {\n      filtered = filtered.filter(p => p.status === 'publish');\n    } else if (activeTab === 'draft') {\n      filtered = filtered.filter(p => p.status === 'draft');\n    } else if (activeTab === 'trash') {\n      filtered = filtered.filter(p => p.status === 'trash');\n    }\n    \n    // Filter by search\n    if (searchQuery) {\n      filtered = filtered.filter(p => \n        p.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        p.slug.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    // Sort\n    if (sortField) {\n      filtered = [...filtered].sort((a, b) => {\n        const aVal = a[sortField];\n        const bVal = b[sortField];\n        const comparison = aVal < bVal ? -1 : aVal > bVal ? 1 : 0;\n        return sortOrder === 'asc' ? comparison : -comparison;\n      });\n    }\n    \n    return filtered;\n  };\n  \n  const filteredPages = getFilteredPages();\n  \n  const handleRowHover = (id: string | null) => {\n    if (hoverTimeoutRef.current) {\n      clearTimeout(hoverTimeoutRef.current);\n    }\n    \n    if (id) {\n      hoverTimeoutRef.current = setTimeout(() => {\n        setHoveredRow(id);\n      }, 100);\n    } else {\n      setHoveredRow(null);\n    }\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\" style={{ backgroundColor: '#f0f0f1' }}>\n        <div className=\"text-gray-600\">Loading pages...</div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen\" style={{ backgroundColor: '#f0f0f1' }}>\n      {/* Show error message if any */}\n      {error && (\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mx-8 mt-4\">\n          <p className=\"text-sm text-yellow-700\">{error}</p>\n        </div>\n      )}\n      \n      {/* Header with Breadcrumb and Screen Options */}\n      <div className=\"bg-white border-b border-gray-200 px-8 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <AdminBreadcrumb \n            items={[\n              { label: 'Admin' },\n              { label: '페이지' },\n              { label: '모든 페이지' }\n            ]}\n          />\n          \n          {/* Screen Options Button */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowScreenOptions(!showScreenOptions)}\n              className=\"flex items-center gap-2 px-3 py-1.5 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\n            >\n              <Settings className=\"w-4 h-4\" />\n              Screen Options\n              <ChevronDown className=\"w-3 h-3\" />\n            </button>\n            \n            {showScreenOptions && (\n              <div className=\"absolute right-0 top-full mt-2 w-72 bg-white border border-gray-300 rounded-md shadow-lg z-50\">\n                <div className=\"p-4\">\n                  <h3 className=\"font-medium text-sm mb-3\">Columns</h3>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        checked={visibleColumns.author}\n                        onChange={() => handleColumnToggle('author')}\n                        className=\"mr-2\" \n                      />\n                      작성자\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        checked={visibleColumns.template}\n                        onChange={() => handleColumnToggle('template')}\n                        className=\"mr-2\" \n                      />\n                      템플릿\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        checked={visibleColumns.comments}\n                        onChange={() => handleColumnToggle('comments')}\n                        className=\"mr-2\" \n                      />\n                      댓글\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        checked={visibleColumns.date}\n                        onChange={() => handleColumnToggle('date')}\n                        className=\"mr-2\" \n                      />\n                      날짜\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        checked={visibleColumns.status}\n                        onChange={() => handleColumnToggle('status')}\n                        className=\"mr-2\" \n                      />\n                      상태\n                    </label>\n                  </div>\n                  \n                  {/* Pagination Settings */}\n                  <div className=\"border-t border-gray-200 mt-3 pt-3\">\n                    <h3 className=\"font-medium text-sm mb-3\">Pagination</h3>\n                    <div className=\"flex items-center gap-2\">\n                      <label className=\"text-sm text-gray-600\">페이징 항목 수:</label>\n                      <input\n                        type=\"number\"\n                        value={itemsPerPage}\n                        onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                        min=\"1\"\n                        max=\"999\"\n                        className=\"w-20 px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      />\n                      <button\n                        onClick={() => setShowScreenOptions(false)}\n                        className=\"ml-auto px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                      >\n                        적용\n                      </button>\n                    </div>\n                    <p className=\"text-xs text-gray-500 mt-2\">1-999 사이의 숫자를 입력하세요</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"px-8 py-6\">\n        {/* Title and Add New */}\n        <div className=\"flex items-center gap-3 mb-4\">\n          <h1 className=\"text-2xl font-normal text-gray-900\">Pages</h1>\n          <button\n            onClick={handleAddNew}\n            className=\"px-3 py-1 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors\"\n          >\n            Add New\n          </button>\n        </div>\n\n        {/* Status Tabs */}\n        <div className=\"flex items-center gap-4 mb-4\">\n          <button\n            onClick={() => setActiveTab('all')}\n            className={`text-sm ${activeTab === 'all' ? 'text-gray-900 font-medium' : 'text-blue-600 hover:text-blue-800'}`}\n          >\n            모든 ({counts.all})\n          </button>\n          <span className=\"text-gray-400\">|</span>\n          <button\n            onClick={() => setActiveTab('publish')}\n            className={`text-sm ${activeTab === 'publish' ? 'text-gray-900 font-medium' : 'text-blue-600 hover:text-blue-800'}`}\n          >\n            발행됨 ({counts.published})\n          </button>\n          <span className=\"text-gray-400\">|</span>\n          <button\n            onClick={() => setActiveTab('draft')}\n            className={`text-sm ${activeTab === 'draft' ? 'text-gray-900 font-medium' : 'text-blue-600 hover:text-blue-800'}`}\n          >\n            임시글 ({counts.draft})\n          </button>\n          <span className=\"text-gray-400\">|</span>\n          <button\n            onClick={() => setActiveTab('trash')}\n            className={`text-sm ${activeTab === 'trash' ? 'text-gray-900 font-medium' : 'text-blue-600 hover:text-blue-800'}`}\n          >\n            휴지통 ({counts.trash || 0})\n          </button>\n        </div>\n\n        {/* Bulk Actions and Search */}\n        <div className=\"flex justify-between items-center mb-4\">\n          {/* Bulk Actions Bar */}\n          <div className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowBulkActions(!showBulkActions)}\n                className=\"flex items-center gap-1 px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                {selectedBulkAction === 'trash' ? 'Move to Trash' : selectedBulkAction === 'edit' ? 'Edit' : 'Bulk Actions'}\n                <ChevronDown className=\"w-3 h-3\" />\n              </button>\n              \n              {showBulkActions && (\n                <div className=\"absolute left-0 top-full mt-1 w-48 bg-white border border-gray-300 rounded shadow-lg z-20\">\n                  <button\n                    onClick={() => {\n                      setSelectedBulkAction('edit');\n                      setShowBulkActions(false);\n                    }}\n                    className=\"block w-full text-left px-3 py-2 text-sm hover:bg-gray-50\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => {\n                      setSelectedBulkAction('trash');\n                      setShowBulkActions(false);\n                    }}\n                    className=\"block w-full text-left px-3 py-2 text-sm hover:bg-gray-50\"\n                  >\n                    Move to Trash\n                  </button>\n                </div>\n              )}\n            </div>\n            <button \n              onClick={handleApplyBulkAction}\n              className={`px-3 py-1.5 text-sm border border-gray-300 rounded transition-colors ${\n                selectedBulkAction && selectedPages.size > 0 \n                  ? 'bg-blue-600 text-white border-blue-600 hover:bg-blue-700' \n                  : 'bg-white hover:bg-gray-50'\n              }`}\n            >\n              Apply\n            </button>\n          </div>\n\n          {/* Search Box */}\n          <div className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search pages...\"\n                className=\"px-3 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 pr-8\"\n              />\n              <Search className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            </div>\n            <button \n              onClick={handleSearch}\n              className=\"px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50\"\n            >\n              Search Pages\n            </button>\n          </div>\n        </div>\n\n        {/* Table */}\n        <div className=\"bg-white border border-gray-300 rounded-lg overflow-hidden\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr className=\"bg-white border-b border-gray-200\">\n                <th className=\"w-10 px-3 py-2\">\n                  <input \n                    type=\"checkbox\"\n                    checked={selectedPages.size > 0 && selectedPages.size === filteredPages.length}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setSelectedPages(new Set(filteredPages.map(p => p.id)));\n                      } else {\n                        setSelectedPages(new Set());\n                      }\n                    }}\n                    className=\"rounded border-gray-300\"\n                  />\n                </th>\n                <th className=\"text-left px-3 py-2\">\n                  <button\n                    onClick={() => handleSort('title')}\n                    className=\"flex items-center gap-1 text-sm font-medium text-gray-900 hover:text-blue-600\"\n                  >\n                    제목\n                    {sortField === 'title' && (\n                      sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                    )}\n                  </button>\n                </th>\n                {visibleColumns.author && (\n                  <th className=\"text-left px-3 py-2 text-sm font-medium text-gray-900\">작성자</th>\n                )}\n                {visibleColumns.template && (\n                  <th className=\"text-left px-3 py-2 text-sm font-medium text-gray-900\">템플릿</th>\n                )}\n                {visibleColumns.comments && (\n                  <th className=\"text-center px-3 py-2\">\n                    <MessageSquare className=\"w-4 h-4 text-gray-600 mx-auto\" />\n                  </th>\n                )}\n                {visibleColumns.date && (\n                  <th className=\"text-left px-3 py-2\">\n                    <button\n                      onClick={() => handleSort('date')}\n                      className=\"flex items-center gap-1 text-sm font-medium text-gray-900 hover:text-blue-600\"\n                    >\n                      날짜\n                      {sortField === 'date' && (\n                        sortOrder === 'asc' ? <ChevronUp className=\"w-3 h-3\" /> : <ChevronDown className=\"w-3 h-3\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {visibleColumns.status && (\n                  <th className=\"text-left px-3 py-2 text-sm font-medium text-gray-900\">상태</th>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {filteredPages.length === 0 ? (\n                <tr>\n                  <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                    No pages found.\n                  </td>\n                </tr>\n              ) : (\n                filteredPages.slice(0, itemsPerPage).map((page) => (\n                  <React.Fragment key={page.id}>\n                    {quickEditId === page.id ? (\n                      // Pages Quick Edit Row - Styled like Posts\n                      <tr className=\"border-b border-gray-200 bg-gray-50\">\n                        <td colSpan={100} className=\"p-4\">\n                          <div className=\"bg-white border border-gray-300 rounded p-4\">\n                            <h3 className=\"font-medium text-sm mb-3\">Quick Edit Page</h3>\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title</label>\n                                <input\n                                  type=\"text\"\n                                  value={quickEditData.title}\n                                  onChange={(e) => setQuickEditData({...quickEditData, title: e.target.value})}\n                                  className=\"w-full px-3 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Slug</label>\n                                <input\n                                  type=\"text\"\n                                  value={quickEditData.slug}\n                                  onChange={(e) => setQuickEditData({...quickEditData, slug: e.target.value})}\n                                  className=\"w-full px-3 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                                <select\n                                  value={quickEditData.status}\n                                  onChange={(e) => setQuickEditData({...quickEditData, status: e.target.value as 'publish' | 'draft'})}\n                                  className=\"w-full px-3 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                >\n                                  <option value=\"publish\">Published</option>\n                                  <option value=\"draft\">Draft</option>\n                                  <option value=\"private\">Private</option>\n                                </select>\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Template</label>\n                                <select\n                                  value={quickEditData.template || 'default'}\n                                  onChange={(e) => setQuickEditData({...quickEditData, template: e.target.value})}\n                                  className=\"w-full px-3 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                >\n                                  <option value=\"default\">Default Template</option>\n                                  <option value=\"page\">Page Template</option>\n                                  <option value=\"full-width\">Full Width</option>\n                                  <option value=\"no-sidebar\">No Sidebar</option>\n                                </select>\n                              </div>\n                            </div>\n                            <div className=\"flex justify-end gap-2 mt-4\">\n                              <button\n                                onClick={handleCancelQuickEdit}\n                                className=\"px-4 py-2 text-sm border border-gray-300 rounded hover:bg-gray-50\"\n                              >\n                                Cancel\n                              </button>\n                              <button\n                                onClick={handleSaveQuickEdit}\n                                className=\"px-4 py-2 text-sm bg-blue-600 text-white rounded hover:bg-blue-700\"\n                              >\n                                Update Page\n                              </button>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    ) : (\n                      <tr \n                        className=\"border-b border-gray-100 hover:bg-gray-50\"\n                        onMouseEnter={() => handleRowHover(page.id)}\n                        onMouseLeave={() => handleRowHover(null)}\n                      >\n                        <td className=\"px-3 py-3\">\n                          <input \n                            type=\"checkbox\"\n                            checked={selectedPages.has(page.id)}\n                            onChange={(e) => {\n                              const newSelected = new Set(selectedPages);\n                              if (e.target.checked) {\n                                newSelected.add(page.id);\n                              } else {\n                                newSelected.delete(page.id);\n                              }\n                              setSelectedPages(newSelected);\n                            }}\n                            className=\"rounded border-gray-300\"\n                          />\n                        </td>\n                        <td className=\"px-3 py-3\">\n                          <div>\n                            <a \n                              href={`/editor/pages/${page.id}`}\n                              className=\"text-sm font-medium text-gray-900 hover:text-blue-600\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                handleEdit(page.id);\n                              }}\n                            >\n                              {page.title}\n                            </a>\n                            {page.status === 'draft' && (\n                              <span className=\"ml-2 text-xs text-gray-500\">— Draft</span>\n                            )}\n                            {/* Row Actions */}\n                            {hoveredRow === page.id && (\n                              <div className=\"flex items-center gap-2 mt-1 text-xs\">\n                                {activeTab !== 'trash' ? (\n                                  <>\n                                    <button \n                                      onClick={() => handleEdit(page.id)}\n                                      className=\"text-blue-600 hover:text-blue-800\"\n                                    >\n                                      Edit\n                                    </button>\n                                    <span className=\"text-gray-400\">|</span>\n                                    <button \n                                      onClick={() => handleQuickEdit(page)}\n                                      className=\"text-blue-600 hover:text-blue-800\"\n                                    >\n                                      Quick Edit\n                                    </button>\n                                    <span className=\"text-gray-400\">|</span>\n                                    <button \n                                      onClick={() => handleDelete(page.id)}\n                                      className=\"text-red-600 hover:text-red-800\"\n                                    >\n                                      Trash\n                                    </button>\n                                    <span className=\"text-gray-400\">|</span>\n                                    <button \n                                      onClick={() => handleView(page.id)}\n                                      className=\"text-blue-600 hover:text-blue-800\"\n                                    >\n                                      View\n                                    </button>\n                                  </>\n                                ) : (\n                                  <>\n                                    <button \n                                      onClick={() => handleRestore(page.id)}\n                                      className=\"text-blue-600 hover:text-blue-800\"\n                                    >\n                                      Restore\n                                    </button>\n                                    <span className=\"text-gray-400\">|</span>\n                                    <button \n                                      onClick={() => handlePermanentDelete(page.id)}\n                                      className=\"text-red-600 hover:text-red-800\"\n                                    >\n                                      Delete Permanently\n                                    </button>\n                                  </>\n                                )}\n                              </div>\n                            )}\n                          </div>\n                        </td>\n                        {visibleColumns.author && (\n                          <td className=\"px-3 py-3 text-sm text-gray-600\">{page.author}</td>\n                        )}\n                        {visibleColumns.template && (\n                          <td className=\"px-3 py-3 text-sm text-gray-600\">{page.template}</td>\n                        )}\n                        {visibleColumns.comments && (\n                          <td className=\"px-3 py-3 text-center\">\n                            <div className=\"flex items-center justify-center\">\n                              <MessageSquare className=\"w-3 h-3 text-gray-400 mr-1\" />\n                              <span className=\"text-sm text-gray-600\">{page.comments}</span>\n                            </div>\n                          </td>\n                        )}\n                        {visibleColumns.date && (\n                          <td className=\"px-3 py-3 text-sm text-gray-600\">\n                            <div className=\"flex items-center gap-1\">\n                              <Calendar className=\"w-3 h-3 text-gray-400\" />\n                              {page.date}\n                            </div>\n                          </td>\n                        )}\n                        {visibleColumns.status && (\n                          <td className=\"px-3 py-3\">\n                            <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${\n                              page.status === 'publish' \n                                ? 'bg-green-100 text-green-800' \n                                : page.status === 'draft'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : page.status === 'trash'\n                                ? 'bg-red-100 text-red-800'\n                                : 'bg-gray-100 text-gray-800'\n                            }`}>\n                              {page.status === 'publish' ? 'Published' : \n                               page.status === 'draft' ? 'Draft' :\n                               page.status === 'trash' ? 'Trash' : page.status}\n                            </span>\n                          </td>\n                        )}\n                      </tr>\n                    )}\n                  </React.Fragment>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination info */}\n        <div className=\"mt-4 text-sm text-gray-600\">\n          {filteredPages.length} items\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageList;","import { FC } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport PageList from './PageList';\n\nconst PagesRouter: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<PageList />} />\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  );\n};\n\nexport default PagesRouter;"],"names":["PageList","navigate","useNavigate","pages","setPages","useState","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","token","apiUrl","params","response","data","transformedPages","page","date","selectedPages","setSelectedPages","showBulkActions","setShowBulkActions","selectedBulkAction","setSelectedBulkAction","searchQuery","setSearchQuery","sortField","setSortField","sortOrder","setSortOrder","showScreenOptions","setShowScreenOptions","itemsPerPage","setItemsPerPage","visibleColumns","setVisibleColumns","quickEditId","setQuickEditId","quickEditData","setQuickEditData","hoveredRow","setHoveredRow","hoverTimeoutRef","useRef","handleColumnToggle","column","prev","counts","p","handleAddNew","handleEdit","id","handleQuickEdit","handleSaveQuickEdit","prevPages","toast","handleCancelQuickEdit","handleDelete","handlePermanentDelete","handleRestore","handleView","handleApplyBulkAction","promises","r","handleSearch","handleSort","field","filteredPages","filtered","a","b","aVal","bVal","comparison","handleRowHover","jsx","jsxs","AdminBreadcrumb","Settings","ChevronDown","e","Search","ChevronUp","MessageSquare","React","newSelected","Fragment","Calendar","PagesRouter","Routes","Route","Navigate"],"mappings":"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"}