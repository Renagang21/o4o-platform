{"version":3,"file":"UserForm-BQ1C2zZc.js","sources":["../../src/pages/users/UserForm.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { ArrowLeft, Save } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport BusinessInfoSection from './components/BusinessInfoSection';\nimport toast from 'react-hot-toast';\nimport { UserApi } from '@/api/userApi';\n\nconst userSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(6, 'Password must be at least 6 characters').optional().or(z.literal('')),\n  firstName: z.string().optional(),\n  lastName: z.string().optional(),\n  roles: z.array(z.string()).min(1, 'At least one role is required'),\n  status: z.enum(['active', 'pending', 'approved', 'rejected']),\n});\n\ntype UserFormData = z.infer<typeof userSchema>;\n\nexport default function UserForm() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const isEdit = !!id;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch,\n    formState: { errors },\n  } = useForm<UserFormData>({\n    resolver: zodResolver(userSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      roles: ['customer'],\n      status: 'pending',\n    },\n  });\n\n  const selectedRoles = watch('roles');\n\n  useEffect(() => {\n    if (isEdit) {\n      fetchUser();\n    }\n  }, [id]);\n\n  const fetchUser = async () => {\n    try {\n      setLoading(true);\n      const response = await UserApi.getUser(id);\n      \n      if (response.data.success) {\n        const userData = response.data.data;\n        \n        // Set form values\n        setValue('email', userData.email);\n        setValue('firstName', userData.firstName || '');\n        setValue('lastName', userData.lastName || '');\n        setValue('roles', userData.roles);\n        setValue('status', userData.status);\n      }\n    } catch (error) {\n    // Error logging - use proper error handler\n      toast.error('Failed to load user');\n      navigate('/users');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onSubmit = async (data: UserFormData) => {\n    try {\n      setLoading(true);\n      \n      const payload = {\n        ...data,\n        role: data.roles[0], // Primary role\n      };\n\n      if (isEdit) {\n        // Don't send password if it's empty\n        if (!payload.password) {\n          delete payload.password;\n        }\n        \n        await UserApi.updateUser(id, payload);\n        \n        toast.success('User updated successfully');\n      } else {\n        await UserApi.createUser(payload);\n        \n        toast.success('User created successfully');\n      }\n      \n      navigate('/users');\n    } catch (error: any) {\n    // Error logging - use proper error handler\n      toast.error(error.response?.data?.error || 'Failed to save user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRoleToggle = (role: string) => {\n    const currentRoles = selectedRoles || [];\n    if (currentRoles.includes(role)) {\n      // Don't allow removing the last role\n      if (currentRoles.length > 1) {\n        setValue('roles', currentRoles.filter((r) => r !== role));\n      }\n    } else {\n      setValue('roles', [...currentRoles, role]);\n    }\n  };\n\n  const roles = [\n    { value: 'super_admin', label: 'Super Admin', description: 'Full system access' },\n    { value: 'admin', label: 'Admin', description: 'Administrative access' },\n    { value: 'vendor', label: 'Vendor', description: 'Vendor/supplier access' },\n    { value: 'seller', label: 'Seller', description: 'Can sell products' },\n    { value: 'customer', label: 'Customer', description: 'Regular user' },\n    { value: 'business', label: 'Business', description: 'Business account' },\n    { value: 'moderator', label: 'Moderator', description: 'Content moderation' },\n    { value: 'partner', label: 'Partner', description: 'Partner access' },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <Button variant={\"ghost\" as const} onClick={() => navigate('/users')}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Back to Users\n        </Button>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* User Information */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{isEdit ? 'Edit User' : 'Add New User'}</CardTitle>\n                <CardDescription>\n                  {isEdit ? 'Update user information' : 'Create a new user account'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"firstName\">First Name</Label>\n                    <Input\n                      id=\"firstName\"\n                      {...register('firstName')}\n                      placeholder=\"John\"\n                    />\n                    {errors.firstName && (\n                      <p className=\"text-sm text-red-500 mt-1\">{errors.firstName.message}</p>\n                    )}\n                  </div>\n                  <div>\n                    <Label htmlFor=\"lastName\">Last Name</Label>\n                    <Input\n                      id=\"lastName\"\n                      {...register('lastName')}\n                      placeholder=\"Doe\"\n                    />\n                    {errors.lastName && (\n                      <p className=\"text-sm text-red-500 mt-1\">{errors.lastName.message}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    {...register('email')}\n                    placeholder=\"john.doe@example.com\"\n                    disabled={isEdit}\n                  />\n                  {errors.email && (\n                    <p className=\"text-sm text-red-500 mt-1\">{errors.email.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Label htmlFor=\"password\">\n                    Password {isEdit && '(leave blank to keep current)'}\n                  </Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    {...register('password')}\n                    placeholder={isEdit ? 'Leave blank to keep current' : 'Enter password'}\n                  />\n                  {errors.password && (\n                    <p className=\"text-sm text-red-500 mt-1\">{errors.password.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Label htmlFor=\"status\">Status</Label>\n                  <Select\n                    value={watch('status')}\n                    onValueChange={(value) => setValue('status', value as 'active' | 'pending' | 'approved' | 'rejected')}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"active\">Active</SelectItem>\n                      <SelectItem value=\"pending\">Pending</SelectItem>\n                      <SelectItem value=\"approved\">Approved</SelectItem>\n                      <SelectItem value=\"rejected\">Rejected</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {errors.status && (\n                    <p className=\"text-sm text-red-500 mt-1\">{errors.status.message}</p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Roles */}\n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle>User Roles</CardTitle>\n                <CardDescription>\n                  Select one or more roles for this user\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {roles.map((role) => (\n                    <div\n                      key={role.value}\n                      className=\"flex items-start space-x-3 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\"\n                      onClick={() => handleRoleToggle(role.value)}\n                    >\n                      <Checkbox\n                        checked={selectedRoles?.includes(role.value) || false}\n                        onCheckedChange={() => handleRoleToggle(role.value)}\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium\">{role.label}</div>\n                        <div className=\"text-sm text-gray-600\">{role.description}</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                {errors.roles && (\n                  <p className=\"text-sm text-red-500 mt-2\">{errors.roles.message}</p>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Actions */}\n            <div className=\"mt-6 flex gap-3\">\n              <Button\n                type=\"submit\"\n                className=\"flex-1\"\n                disabled={loading}\n              >\n                <Save className=\"mr-2 h-4 w-4\" />\n                {loading ? 'Saving...' : isEdit ? 'Update User' : 'Create User'}\n              </Button>\n              <Button\n                type=\"button\"\n                variant={\"outline\" as const}\n                onClick={() => navigate('/users')}\n                disabled={loading}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n          \n          {/* Business Information (for business users) */}\n          {isEdit && selectedRoles?.some(role => ['business', 'vendor', 'seller'].includes(role)) && (\n            <BusinessInfoSection userId={id!} userRole={selectedRoles[0]} />\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}"],"names":["userSchema","z.object","z.string","z.literal","z.array","z.enum","UserForm","id","useParams","navigate","useNavigate","loading","setLoading","useState","isEdit","register","handleSubmit","setValue","watch","errors","useForm","zodResolver","selectedRoles","useEffect","fetchUser","response","UserApi","userData","toast","onSubmit","data","payload","error","handleRoleToggle","role","currentRoles","r","roles","jsxs","jsx","Button","ArrowLeft","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Checkbox","e","Save","BusinessInfoSection"],"mappings":"ypBAgBA,MAAMA,EAAaC,EAAS,CAC1B,MAAOC,EAAE,EAAS,MAAM,uBAAuB,EAC/C,SAAUA,EAAE,EAAS,IAAI,EAAG,wCAAwC,EAAE,WAAW,GAAGC,EAAU,EAAE,CAAC,EACjG,UAAWD,EAAE,EAAS,SAAA,EACtB,SAAUA,EAAE,EAAS,SAAA,EACrB,MAAOE,EAAQF,GAAU,EAAE,IAAI,EAAG,+BAA+B,EACjE,OAAQG,EAAO,CAAC,SAAU,UAAW,WAAY,UAAU,CAAC,CAC9D,CAAC,EAID,SAAwBC,IAAW,CACjC,KAAM,CAAE,GAAAC,CAAA,EAAOC,EAAA,EACTC,EAAWC,EAAA,EACX,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EAEtCC,EAAS,CAAC,CAACP,EAEX,CACJ,SAAAQ,EACA,aAAAC,EACA,SAAAC,EACA,MAAAC,EACA,UAAW,CAAE,OAAAC,CAAA,CAAO,EAClBC,EAAsB,CACxB,SAAUC,EAAYrB,CAAU,EAChC,cAAe,CACb,MAAO,GACP,SAAU,GACV,UAAW,GACX,SAAU,GACV,MAAO,CAAC,UAAU,EAClB,OAAQ,SAAA,CACV,CACD,EAEKsB,EAAgBJ,EAAM,OAAO,EAEnCK,EAAAA,UAAU,IAAM,CACVT,GACFU,EAAA,CAEJ,EAAG,CAACjB,CAAE,CAAC,EAEP,MAAMiB,EAAY,SAAY,CAC5B,GAAI,CACFZ,EAAW,EAAI,EACf,MAAMa,EAAW,MAAMC,EAAQ,QAAQnB,CAAE,EAEzC,GAAIkB,EAAS,KAAK,QAAS,CACzB,MAAME,EAAWF,EAAS,KAAK,KAG/BR,EAAS,QAASU,EAAS,KAAK,EAChCV,EAAS,YAAaU,EAAS,WAAa,EAAE,EAC9CV,EAAS,WAAYU,EAAS,UAAY,EAAE,EAC5CV,EAAS,QAASU,EAAS,KAAK,EAChCV,EAAS,SAAUU,EAAS,MAAM,CACpC,CACF,MAAgB,CAEdC,EAAM,MAAM,qBAAqB,EACjCnB,EAAS,QAAQ,CACnB,QAAA,CACEG,EAAW,EAAK,CAClB,CACF,EAEMiB,EAAW,MAAOC,GAAuB,CAC7C,GAAI,CACFlB,EAAW,EAAI,EAEf,MAAMmB,EAAU,CACd,GAAGD,EACH,KAAMA,EAAK,MAAM,CAAC,CAAA,EAGhBhB,GAEGiB,EAAQ,UACX,OAAOA,EAAQ,SAGjB,MAAML,EAAQ,WAAWnB,EAAIwB,CAAO,EAEpCH,EAAM,QAAQ,2BAA2B,IAEzC,MAAMF,EAAQ,WAAWK,CAAO,EAEhCH,EAAM,QAAQ,2BAA2B,GAG3CnB,EAAS,QAAQ,CACnB,OAASuB,EAAY,CAEnBJ,EAAM,MAAMI,EAAM,UAAU,MAAM,OAAS,qBAAqB,CAClE,QAAA,CACEpB,EAAW,EAAK,CAClB,CACF,EAEMqB,EAAoBC,GAAiB,CACzC,MAAMC,EAAeb,GAAiB,CAAA,EAClCa,EAAa,SAASD,CAAI,EAExBC,EAAa,OAAS,GACxBlB,EAAS,QAASkB,EAAa,OAAQC,GAAMA,IAAMF,CAAI,CAAC,EAG1DjB,EAAS,QAAS,CAAC,GAAGkB,EAAcD,CAAI,CAAC,CAE7C,EAEMG,EAAQ,CACZ,CAAE,MAAO,cAAe,MAAO,cAAe,YAAa,oBAAA,EAC3D,CAAE,MAAO,QAAS,MAAO,QAAS,YAAa,uBAAA,EAC/C,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,wBAAA,EACjD,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,mBAAA,EACjD,CAAE,MAAO,WAAY,MAAO,WAAY,YAAa,cAAA,EACrD,CAAE,MAAO,WAAY,MAAO,WAAY,YAAa,kBAAA,EACrD,CAAE,MAAO,YAAa,MAAO,YAAa,YAAa,oBAAA,EACvD,CAAE,MAAO,UAAW,MAAO,UAAW,YAAa,gBAAA,CAAiB,EAGtE,OACEC,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAACE,EAAA,CAAO,QAAS,QAAkB,QAAS,IAAM/B,EAAS,QAAQ,EACjE,SAAA,CAAA8B,EAAAA,IAACE,EAAA,CAAU,UAAU,cAAA,CAAe,EAAE,eAAA,CAAA,CAExC,CAAA,CACF,EAEAF,EAAAA,IAAC,QAAK,SAAUvB,EAAaa,CAAQ,EACnC,SAAAS,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAC,MAAC,MAAA,CAAI,UAAU,gBACb,SAAAD,EAAAA,KAACI,EAAA,CACC,SAAA,CAAAJ,OAACK,EAAA,CACC,SAAA,CAAAJ,EAAAA,IAACK,EAAA,CAAW,SAAA9B,EAAS,YAAc,eAAe,EAClDyB,EAAAA,IAACM,EAAA,CACE,SAAA/B,EAAS,0BAA4B,2BAAA,CACxC,CAAA,EACF,EACAwB,EAAAA,KAACQ,EAAA,CAAY,UAAU,YACrB,SAAA,CAAAR,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CAAM,QAAQ,YAAY,SAAA,aAAU,EACrCR,EAAAA,IAACS,EAAA,CACC,GAAG,YACF,GAAGjC,EAAS,WAAW,EACxB,YAAY,MAAA,CAAA,EAEbI,EAAO,WACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,UAAU,OAAA,CAAQ,CAAA,EAEvE,SACC,MAAA,CACC,SAAA,CAAAoB,EAAAA,IAACQ,EAAA,CAAM,QAAQ,WAAW,SAAA,YAAS,EACnCR,EAAAA,IAACS,EAAA,CACC,GAAG,WACF,GAAGjC,EAAS,UAAU,EACvB,YAAY,KAAA,CAAA,EAEbI,EAAO,UACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,SAAS,OAAA,CAAQ,CAAA,CAAA,CAEtE,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAoB,EAAAA,IAACQ,EAAA,CAAM,QAAQ,QAAQ,SAAA,QAAK,EAC5BR,EAAAA,IAACS,EAAA,CACC,GAAG,QACH,KAAK,QACJ,GAAGjC,EAAS,OAAO,EACpB,YAAY,uBACZ,SAAUD,CAAA,CAAA,EAEXK,EAAO,OACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,MAAM,OAAA,CAAQ,CAAA,EAEnE,SAEC,MAAA,CACC,SAAA,CAAAmB,EAAAA,KAACS,EAAA,CAAM,QAAQ,WAAW,SAAA,CAAA,YACdjC,GAAU,+BAAA,EACtB,EACAyB,EAAAA,IAACS,EAAA,CACC,GAAG,WACH,KAAK,WACJ,GAAGjC,EAAS,UAAU,EACvB,YAAaD,EAAS,8BAAgC,gBAAA,CAAA,EAEvDK,EAAO,UACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,SAAS,OAAA,CAAQ,CAAA,EAEtE,SAEC,MAAA,CACC,SAAA,CAAAoB,EAAAA,IAACQ,EAAA,CAAM,QAAQ,SAAS,SAAA,SAAM,EAC9BT,EAAAA,KAACW,EAAA,CACC,MAAO/B,EAAM,QAAQ,EACrB,cAAgBgC,GAAUjC,EAAS,SAAUiC,CAAuD,EAEpG,SAAA,CAAAX,MAACY,EAAA,CACC,SAAAZ,EAAAA,IAACa,EAAA,CAAY,YAAY,gBAAgB,EAC3C,SACCC,EAAA,CACC,SAAA,CAAAd,EAAAA,IAACe,EAAA,CAAW,MAAM,SAAS,SAAA,SAAM,EACjCf,EAAAA,IAACe,EAAA,CAAW,MAAM,UAAU,SAAA,UAAO,EACnCf,EAAAA,IAACe,EAAA,CAAW,MAAM,WAAW,SAAA,WAAQ,EACrCf,EAAAA,IAACe,EAAA,CAAW,MAAM,WAAW,SAAA,UAAA,CAAQ,CAAA,CAAA,CACvC,CAAA,CAAA,CAAA,EAEDnC,EAAO,QACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,OAAO,OAAA,CAAQ,CAAA,CAAA,CAEpE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,SAGC,MAAA,CACC,SAAA,CAAAmB,OAACI,EAAA,CACC,SAAA,CAAAJ,OAACK,EAAA,CACC,SAAA,CAAAJ,EAAAA,IAACK,GAAU,SAAA,YAAA,CAAU,EACrBL,EAAAA,IAACM,GAAgB,SAAA,wCAAA,CAEjB,CAAA,EACF,SACCC,EAAA,CACC,SAAA,CAAAP,MAAC,OAAI,UAAU,YACZ,SAAAF,EAAM,IAAKH,GACVI,EAAAA,KAAC,MAAA,CAEC,UAAU,mFACV,QAAS,IAAML,EAAiBC,EAAK,KAAK,EAE1C,SAAA,CAAAK,EAAAA,IAACgB,EAAA,CACC,QAASjC,GAAe,SAASY,EAAK,KAAK,GAAK,GAChD,gBAAiB,IAAMD,EAAiBC,EAAK,KAAK,EAClD,QAAUsB,GAAMA,EAAE,gBAAA,CAAgB,CAAA,EAEpClB,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,cAAe,SAAAL,EAAK,MAAM,EACzCK,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAyB,WAAK,WAAA,CAAY,CAAA,CAAA,CAC3D,CAAA,CAAA,EAZKL,EAAK,KAAA,CAcb,EACH,EACCf,EAAO,OACNoB,MAAC,IAAA,CAAE,UAAU,4BAA6B,SAAApB,EAAO,MAAM,OAAA,CAAQ,CAAA,CAAA,CAEnE,CAAA,EACF,EAGAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAA,EAAAA,KAACE,EAAA,CACC,KAAK,SACL,UAAU,SACV,SAAU7B,EAEV,SAAA,CAAA4B,EAAAA,IAACkB,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9B9C,EAAU,YAAcG,EAAS,cAAgB,aAAA,CAAA,CAAA,EAEpDyB,EAAAA,IAACC,EAAA,CACC,KAAK,SACL,QAAS,UACT,QAAS,IAAM/B,EAAS,QAAQ,EAChC,SAAUE,EACX,SAAA,QAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,EAGCG,GAAUQ,GAAe,KAAKY,GAAQ,CAAC,WAAY,SAAU,QAAQ,EAAE,SAASA,CAAI,CAAC,SACnFwB,EAAA,CAAoB,OAAQnD,EAAK,SAAUe,EAAc,CAAC,CAAA,CAAG,CAAA,CAAA,CAElE,CAAA,CACF,CAAA,EACF,CAEJ"}