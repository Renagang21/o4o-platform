{"version":3,"file":"Categories-DBdAZRSY.js","sources":["../../src/pages/posts/Categories.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { \n  ChevronDown,\n  Settings,\n  Eye,\n  Edit2,\n  Trash2,\n  Copy,\n  MoreVertical\n} from 'lucide-react';\nimport AdminBreadcrumb from '@/components/common/AdminBreadcrumb';\n\ninterface Category {\n  id: string;\n  name: string;\n  description: string;\n  slug: string;\n  count: number;\n  date: string;\n}\n\nconst Categories = () => {\n  const [categories, setCategories] = useState<Category[]>([\n    { id: '1', name: '공지사항', description: '중요한 공지사항', slug: 'notice', count: 0, date: '-' },\n    { id: '2', name: '이벤트', description: '이벤트 및 행사', slug: 'events', count: 0, date: '-' }\n  ]);\n  const [selectedCategories, setSelectedCategories] = useState<Set<string>>(new Set());\n  const [hoveredRow, setHoveredRow] = useState<string | null>(null);\n  const [showBulkActions, setShowBulkActions] = useState(false);\n  const [showScreenOptions, setShowScreenOptions] = useState(false);\n  const [editingCategory, setEditingCategory] = useState<string | null>(null);\n  const [selectedBulkAction, setSelectedBulkAction] = useState<string>('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    slug: '',\n    description: '',\n    parent: ''\n  });\n  \n  // Screen Options state - load from localStorage\n  const [visibleColumns, setVisibleColumns] = useState(() => {\n    const saved = localStorage.getItem('categories-visible-columns');\n    return saved ? JSON.parse(saved) : {\n      description: true,\n      slug: true,\n      count: true\n    };\n  });\n  \n  // Save visible columns to localStorage when they change\n  useEffect(() => {\n    localStorage.setItem('categories-visible-columns', JSON.stringify(visibleColumns));\n  }, [visibleColumns]);\n  \n  const handleColumnToggle = (column: string) => {\n    setVisibleColumns((prev: any) => ({\n      ...prev,\n      [column]: !prev[column]\n    }));\n  };\n\n  const handleSelectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      setSelectedCategories(new Set(categories.map(c => c.id)));\n    } else {\n      setSelectedCategories(new Set());\n    }\n  };\n\n  const handleSelectCategory = (id: string) => {\n    const newSelection = new Set(selectedCategories);\n    if (newSelection.has(id)) {\n      newSelection.delete(id);\n    } else {\n      newSelection.add(id);\n    }\n    setSelectedCategories(newSelection);\n  };\n\n  const handleAddNew = () => {\n    setShowAddModal(true);\n  };\n\n  const handleSaveCategory = () => {\n    if (formData.name) {\n      const newCategory: Category = {\n        id: Date.now().toString(),\n        name: formData.name,\n        description: formData.description,\n        slug: formData.slug || formData.name.toLowerCase().replace(/\\s+/g, '-'),\n        count: 0,\n        date: new Date().toISOString().split('T')[0]\n      };\n      setCategories([...categories, newCategory]);\n      setFormData({ name: '', slug: '', description: '', parent: '' });\n      setShowAddModal(false);\n    }\n  };\n\n  const handleEdit = (id: string) => {\n    setEditingCategory(id);\n    const category = categories.find(c => c.id === id);\n    if (category) {\n      setFormData({\n        name: category.name,\n        slug: category.slug,\n        description: category.description,\n        parent: ''\n      });\n    }\n  };\n\n  const handleQuickEdit = (id: string) => {\n    setEditingCategory(id);\n  };\n\n  const handleView = (id: string) => {\n    // TODO: Navigate to category view page\n  };\n\n  const handleDuplicate = (id: string) => {\n    const category = categories.find(c => c.id === id);\n    if (category) {\n      const duplicated = {\n        ...category,\n        id: Date.now().toString(),\n        name: category.name + ' (Copy)',\n        slug: category.slug + '-copy'\n      };\n      setCategories([...categories, duplicated]);\n    }\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm('이 카테고리를 삭제하시겠습니까?')) {\n      setCategories(categories.filter(c => c.id !== id));\n    }\n  };\n\n  const handleApplyBulkAction = () => {\n    if (!selectedBulkAction) {\n      alert('Please select an action.');\n      return;\n    }\n    \n    if (selectedCategories.size === 0) {\n      alert('No categories selected.');\n      return;\n    }\n    \n    if (selectedBulkAction === 'delete') {\n      if (confirm(`선택한 ${selectedCategories.size}개의 카테고리를 삭제하시겠습니까?`)) {\n        setCategories(categories.filter(c => !selectedCategories.has(c.id)));\n        setSelectedCategories(new Set());\n        setSelectedBulkAction('');\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\" style={{ backgroundColor: '#f0f0f1' }}>\n      {/* Header with Breadcrumb and Screen Options */}\n      <div className=\"bg-white border-b border-gray-200 px-8 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <AdminBreadcrumb \n            items={[\n              { label: 'Admin', path: '/admin' },\n              { label: '글', path: '/admin/posts' },\n              { label: '카테고리' }\n            ]}\n          />\n          \n          {/* Screen Options Button */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowScreenOptions(!showScreenOptions)}\n              className=\"flex items-center gap-2 px-3 py-1.5 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\n            >\n              <Settings className=\"w-4 h-4\" />\n              Screen Options\n              <ChevronDown className=\"w-3 h-3\" />\n            </button>\n            \n            {showScreenOptions && (\n              <div className=\"absolute right-0 top-full mt-2 w-64 bg-white border border-gray-300 rounded-md shadow-lg z-50\">\n                <div className=\"p-4\">\n                  <h3 className=\"font-medium text-sm mb-3\">Show on screen</h3>\n                  <div className=\"space-y-2\">\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        id=\"screen-option-description\"\n                        name=\"screen-option-description\"\n                        checked={visibleColumns.description}\n                        onChange={() => handleColumnToggle('description')}\n                        className=\"mr-2\" \n                      />\n                      Description\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        id=\"screen-option-slug\"\n                        name=\"screen-option-slug\"\n                        checked={visibleColumns.slug}\n                        onChange={() => handleColumnToggle('slug')}\n                        className=\"mr-2\" \n                      />\n                      Slug\n                    </label>\n                    <label className=\"flex items-center text-sm\">\n                      <input \n                        type=\"checkbox\" \n                        id=\"screen-option-count\"\n                        name=\"screen-option-count\"\n                        checked={visibleColumns.count}\n                        onChange={() => handleColumnToggle('count')}\n                        className=\"mr-2\" \n                      />\n                      Count\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"px-8 py-6\">\n        {/* Page Title and Description */}\n        <div className=\"mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">카테고리</h1>\n          <p className=\"text-gray-600 mt-1\">컨텐츠를 체계적으로 분류하고 관리합니다</p>\n        </div>\n\n        {/* Action Bar */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <h2 className=\"text-lg font-medium\">Categories</h2>\n            <button\n              onClick={handleAddNew}\n              className=\"px-3 py-1 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors\"\n            >\n              Add New\n            </button>\n          </div>\n        </div>\n\n        {/* Bulk Actions Bar */}\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowBulkActions(!showBulkActions)}\n                className=\"flex items-center gap-1 px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                {selectedBulkAction === 'delete' ? 'Delete' : 'Bulk Actions'}\n                <ChevronDown className=\"w-3 h-3\" />\n              </button>\n              \n              {showBulkActions && (\n                <div className=\"absolute left-0 top-full mt-1 w-40 bg-white border border-gray-300 rounded shadow-lg z-20\">\n                  <button\n                    onClick={() => {\n                      setSelectedBulkAction('delete');\n                      setShowBulkActions(false);\n                    }}\n                    className=\"block w-full text-left px-3 py-2 text-sm hover:bg-gray-50\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              )}\n            </div>\n            <button \n              onClick={handleApplyBulkAction}\n              className={`px-3 py-1.5 text-sm border border-gray-300 rounded transition-colors ${\n                selectedBulkAction && selectedCategories.size > 0 \n                  ? 'bg-white text-gray-700 hover:bg-gray-50 cursor-pointer'\n                  : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n              }`}\n              disabled={!selectedBulkAction || selectedCategories.size === 0}\n            >\n              Apply\n            </button>\n          </div>\n          \n          <div className=\"text-sm text-gray-600\">\n            {categories.length} items\n          </div>\n        </div>\n\n        {/* Table */}\n        <div className=\"bg-white border border-gray-300 rounded-lg overflow-hidden\">\n          <table className=\"w-full\">\n            <thead className=\"bg-white border-b border-gray-200\">\n              <tr>\n                <th className=\"w-10 px-3 py-3 text-left\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={handleSelectAll}\n                    checked={selectedCategories.size === categories.length && categories.length > 0}\n                  />\n                </th>\n                <th className=\"px-3 py-3 text-left\">\n                  <button className=\"flex items-center gap-1 font-medium text-sm text-gray-700 hover:text-black\">\n                    Name\n                    <ChevronDown className=\"w-3 h-3\" />\n                  </button>\n                </th>\n                {visibleColumns.description && (\n                  <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-700\">Description</th>\n                )}\n                {visibleColumns.slug && (\n                  <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-700\">Slug</th>\n                )}\n                {visibleColumns.count && (\n                  <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-700\">Count</th>\n                )}\n                <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-700\">Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.map((category) => (\n                <tr\n                  key={category.id}\n                  className={`border-b border-gray-100 ${hoveredRow === category.id ? 'bg-gray-50' : ''}`}\n                  onMouseEnter={() => setHoveredRow(category.id)}\n                  onMouseLeave={() => setHoveredRow(null)}\n                >\n                  <td className=\"px-3 py-3\">\n                    <input\n                      type=\"checkbox\"\n                      id={`select-category-${category.id}`}\n                      name={`select-category-${category.id}`}\n                      checked={selectedCategories.has(category.id)}\n                      onChange={() => handleSelectCategory(category.id)}\n                    />\n                  </td>\n                  <td className=\"px-3 py-3\">\n                    {editingCategory === category.id ? (\n                      <div className=\"space-y-2\">\n                        <input\n                          type=\"text\"\n                          id={`edit-category-name-${category.id}`}\n                          name=\"category-name\"\n                          value={formData.name}\n                          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm\"\n                          autoFocus\n                        />\n                        <div className=\"flex gap-2\">\n                          <button\n                            onClick={() => {\n                              const updated = categories.map(c =>\n                                c.id === category.id\n                                  ? { ...c, name: formData.name, slug: formData.slug, description: formData.description }\n                                  : c\n                              );\n                              setCategories(updated);\n                              setEditingCategory(null);\n                            }}\n                            className=\"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n                          >\n                            Update\n                          </button>\n                          <button\n                            onClick={() => setEditingCategory(null)}\n                            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded hover:bg-gray-200\"\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div>\n                        <div className=\"font-medium text-sm text-blue-600 hover:text-blue-800\">\n                          {category.name}\n                        </div>\n                        {hoveredRow === category.id && (\n                          <div className=\"flex items-center gap-1 mt-1\">\n                            <button\n                              onClick={() => handleEdit(category.id)}\n                              className=\"text-xs text-blue-600 hover:text-blue-800 px-1\"\n                            >\n                              Edit\n                            </button>\n                            <span className=\"text-gray-300\">|</span>\n                            <button\n                              onClick={() => handleQuickEdit(category.id)}\n                              className=\"text-xs text-blue-600 hover:text-blue-800 px-1\"\n                            >\n                              Quick Edit\n                            </button>\n                            <span className=\"text-gray-300\">|</span>\n                            <button\n                              onClick={() => handleView(category.id)}\n                              className=\"text-xs text-blue-600 hover:text-blue-800 px-1\"\n                            >\n                              View\n                            </button>\n                            <span className=\"text-gray-300\">|</span>\n                            <button\n                              onClick={() => handleDuplicate(category.id)}\n                              className=\"text-xs text-blue-600 hover:text-blue-800 px-1\"\n                            >\n                              Duplicate\n                            </button>\n                            <span className=\"text-gray-300\">|</span>\n                            <button\n                              onClick={() => handleDelete(category.id)}\n                              className=\"text-xs text-red-600 hover:text-red-800 px-1\"\n                            >\n                              Delete\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </td>\n                  {visibleColumns.description && (\n                    <td className=\"px-3 py-3 text-sm text-gray-600\">\n                      {editingCategory === category.id ? (\n                        <input\n                          type=\"text\"\n                          id={`edit-category-description-${category.id}`}\n                          name=\"category-description\"\n                          value={formData.description}\n                          onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm\"\n                        />\n                      ) : (\n                        category.description\n                      )}\n                    </td>\n                  )}\n                  {visibleColumns.slug && (\n                    <td className=\"px-3 py-3 text-sm text-gray-600\">\n                      {editingCategory === category.id ? (\n                        <input\n                          type=\"text\"\n                          id={`edit-category-slug-${category.id}`}\n                          name=\"category-slug\"\n                          value={formData.slug}\n                          onChange={(e) => setFormData({ ...formData, slug: e.target.value })}\n                          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm\"\n                        />\n                      ) : (\n                        category.slug\n                      )}\n                    </td>\n                  )}\n                  {visibleColumns.count && (\n                    <td className=\"px-3 py-3 text-sm text-gray-600\">{category.count}</td>\n                  )}\n                  <td className=\"px-3 py-3 text-sm text-gray-600\">{category.date}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Bottom Bulk Actions */}\n        <div className=\"flex items-center justify-between mt-4\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowBulkActions(!showBulkActions)}\n                className=\"flex items-center gap-1 px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                {selectedBulkAction === 'delete' ? 'Delete' : 'Bulk Actions'}\n                <ChevronDown className=\"w-3 h-3\" />\n              </button>\n              \n              {showBulkActions && (\n                <div className=\"absolute left-0 bottom-full mb-1 w-40 bg-white border border-gray-300 rounded shadow-lg z-20\">\n                  <button\n                    onClick={() => {\n                      setSelectedBulkAction('delete');\n                      setShowBulkActions(false);\n                    }}\n                    className=\"block w-full text-left px-3 py-2 text-sm hover:bg-gray-50\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              )}\n            </div>\n            <button \n              onClick={handleApplyBulkAction}\n              className={`px-3 py-1.5 text-sm border border-gray-300 rounded transition-colors ${\n                selectedBulkAction && selectedCategories.size > 0 \n                  ? 'bg-white text-gray-700 hover:bg-gray-50 cursor-pointer'\n                  : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n              }`}\n              disabled={!selectedBulkAction || selectedCategories.size === 0}\n            >\n              Apply\n            </button>\n          </div>\n          \n          <div className=\"text-sm text-gray-600\">\n            {categories.length} items\n          </div>\n        </div>\n      </div>\n\n      {/* Add Category Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md\">\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <h3 className=\"text-lg font-medium\">카테고리 추가</h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"new-category-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">이름</label>\n                  <input\n                    type=\"text\"\n                    id=\"new-category-name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"카테고리 이름\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"new-category-slug\" className=\"block text-sm font-medium text-gray-700 mb-1\">슬러그</label>\n                  <input\n                    type=\"text\"\n                    id=\"new-category-slug\"\n                    name=\"slug\"\n                    value={formData.slug}\n                    onChange={(e) => setFormData({ ...formData, slug: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"category-slug\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"new-category-parent\" className=\"block text-sm font-medium text-gray-700 mb-1\">상위 카테고리</label>\n                  <select\n                    id=\"new-category-parent\"\n                    name=\"parent\"\n                    value={formData.parent}\n                    onChange={(e) => setFormData({ ...formData, parent: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">없음</option>\n                    {categories.map(c => (\n                      <option key={c.id} value={c.id}>{c.name}</option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"new-category-description\" className=\"block text-sm font-medium text-gray-700 mb-1\">설명</label>\n                  <textarea\n                    id=\"new-category-description\"\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                    placeholder=\"카테고리 설명\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"px-6 py-4 border-t border-gray-200 flex justify-end gap-3\">\n              <button\n                onClick={() => {\n                  setShowAddModal(false);\n                  setFormData({ name: '', slug: '', description: '', parent: '' });\n                }}\n                className=\"px-4 py-2 text-sm text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50\"\n              >\n                취소\n              </button>\n              <button\n                onClick={handleSaveCategory}\n                className=\"px-4 py-2 text-sm text-white bg-blue-600 rounded hover:bg-blue-700\"\n              >\n                카테고리 추가\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Categories;\n"],"names":["Categories","categories","setCategories","useState","selectedCategories","setSelectedCategories","hoveredRow","setHoveredRow","showBulkActions","setShowBulkActions","showScreenOptions","setShowScreenOptions","editingCategory","setEditingCategory","selectedBulkAction","setSelectedBulkAction","showAddModal","setShowAddModal","formData","setFormData","visibleColumns","setVisibleColumns","saved","useEffect","handleColumnToggle","column","prev","handleSelectAll","e","c","handleSelectCategory","id","newSelection","handleAddNew","handleSaveCategory","newCategory","handleEdit","category","handleQuickEdit","handleView","handleDuplicate","duplicated","handleDelete","handleApplyBulkAction","jsxs","jsx","AdminBreadcrumb","Settings","ChevronDown","updated"],"mappings":"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"}