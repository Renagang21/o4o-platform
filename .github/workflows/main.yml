name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22.18.0'

jobs:
  # 1. Code Quality Checks
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: '**/pnpm-lock.yaml'
    
    - name: Complete CI Setup and Build
      run: bash scripts/ci-complete-setup.sh
    
    - name: Run TypeScript check (Frontend only)
      run: pnpm run type-check:frontend
    
    - name: Run ESLint
      run: pnpm run lint
    
    - name: Check for console.log statements
      run: |
        # Find all console.log statements, excluding comments, test files, and CLI scripts
        CONSOLE_LOGS=$(grep -r "console\.log" apps/ --include="*.ts" --include="*.tsx" \
          --exclude-dir=node_modules --exclude-dir=dist \
          --exclude-dir=test --exclude-dir=e2e \
          --exclude-dir=scripts \
          --exclude="*test*" --exclude="*spec*" \
          | grep -v "//.*console\.log" \
          | grep -v "^\s*//" \
          | grep -v "\*.*console\.log" || true)

        if [ -n "$CONSOLE_LOGS" ]; then
          echo "‚ùå Found console.log statements in production code:"
          echo "$CONSOLE_LOGS"
          exit 1
        else
          echo "‚úÖ No console.log statements found in production code"
        fi
    
    - name: Run tests
      run: pnpm test

  # 2. Build all applications
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: quality-check
    
    strategy:
      matrix:
        app: [main-site, admin-dashboard, ecommerce, forum, digital-signage, crowdfunding]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: '**/pnpm-lock.yaml'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build packages
      run: |
        echo "üì¶ Building shared packages..."
        pnpm run build:packages
        echo ""
        echo "‚úÖ Packages built. Verifying dist directories..."
        ls -la packages/auth-client/dist/ || echo "‚ùå auth-client/dist not found!"
        ls -la packages/ui/dist/ || echo "‚ùå ui/dist not found!"
        ls -la packages/types/dist/ || echo "‚ùå types/dist not found!"

    - name: Build ${{ matrix.app }}
      run: bash scripts/ci-build-app.sh ${{ matrix.app }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-dist
        path: |
          apps/${{ matrix.app }}/dist
          apps/${{ matrix.app }}/build
        retention-days: 7

