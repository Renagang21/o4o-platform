name: Deploy Main Site

concurrency:
  group: deploy-main-site-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/main-site/**'
      - 'packages/**'
      - '.github/workflows/deploy-main-site.yml'
      - 'nginx-configs/neture.co.kr.conf'
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      uses: ./.github/actions/setup-build-env
      with:
        node-version: '22.18.0'

    - name: Build main site
      run: |
        cd apps/main-site
        NODE_OPTIONS='--max-old-space-size=4096' \
        GENERATE_SOURCEMAP=false \
        VITE_API_URL=https://api.neture.co.kr/api/v1 \
        pnpm run build

    - name: Prepare Nginx config for deployment
      run: |
        mkdir -p apps/main-site/dist/nginx-config
        cp nginx-configs/neture.co.kr.conf apps/main-site/dist/nginx-config/

    - name: Deploy to web server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        script: |
          # Backup current deployment
          sudo cp -r /var/www/neture.co.kr /var/www/neture.co.kr.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # Clear current files
          sudo rm -rf /var/www/neture.co.kr/*
          
          # Create temp directory
          mkdir -p /tmp/main-site-build

    - name: Copy build files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        source: "apps/main-site/dist/*"
        target: "/tmp/main-site-build/"
        strip_components: 3

    - name: Move files to web directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        script: |
          # Move files from temp to web directory
          echo "📦 Deploying build files..."
          sudo cp -r /tmp/main-site-build/* /var/www/neture.co.kr/

          # Update Nginx configuration
          echo "🔧 Updating Nginx configuration..."
          echo "📋 Checking deployment artifacts..."
          ls -la /var/www/neture.co.kr/ || true
          if [ -f /var/www/neture.co.kr/nginx-config/neture.co.kr.conf ]; then
            echo "✅ Found Nginx config in deployment artifacts"

            # Backup current nginx config
            sudo cp /etc/nginx/sites-available/neture.co.kr /etc/nginx/sites-available/neture.co.kr.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true

            # Copy new config (remove .conf extension for consistency)
            sudo cp /var/www/neture.co.kr/nginx-config/neture.co.kr.conf /etc/nginx/sites-available/neture.co.kr

            # Test nginx configuration
            if sudo nginx -t; then
              echo "✅ Nginx configuration is valid"
            else
              echo "❌ Nginx configuration test failed, restoring backup"
              latest_backup=$(ls -t /etc/nginx/sites-available/neture.co.kr.backup.* 2>/dev/null | head -1)
              if [ -n "$latest_backup" ]; then
                sudo cp "$latest_backup" /etc/nginx/sites-available/neture.co.kr
              fi
              exit 1
            fi

            # Clean up nginx config from web directory
            sudo rm -rf /var/www/neture.co.kr/nginx-config
          else
            echo "⚠️ Nginx config not found in deployment artifacts at /var/www/neture.co.kr/nginx-config/"
            echo "📋 Listing /var/www/neture.co.kr/ contents:"
            ls -la /var/www/neture.co.kr/ || true
          fi

          # Set permissions
          sudo chown -R www-data:www-data /var/www/neture.co.kr/
          sudo chmod -R 755 /var/www/neture.co.kr/

          # Clean up temp build files
          rm -rf /tmp/main-site-build

          # Reload nginx to apply changes
          echo "🔄 Reloading Nginx..."
          sudo systemctl reload nginx

          echo "✅ Main site deployed successfully!"