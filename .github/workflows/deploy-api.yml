name: Deploy API Server

# Auto-deploy API server on push to main branch

concurrency:
  group: deploy-api-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api-server/**'
      - 'packages/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '22.18.0'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Deploy to API server
      uses: appleboy/ssh-action@v1.0.3
      timeout-minutes: 15
      with:
        host: ${{ secrets.API_HOST }}
        username: ${{ secrets.API_USER }}
        key: ${{ secrets.API_SSH_KEY }}
        command_timeout: 10m
        script: |
          cd /home/ubuntu/o4o-platform
          
          # Pull latest code
          git fetch origin
          git pull origin main
          
          # Install pnpm if not exists
          if ! command -v pnpm &> /dev/null; then
            echo "📦 Installing pnpm..."
            npm install -g pnpm
            # Add npm global bin to PATH for current session
            export PATH="$PATH:$(npm config get prefix)/bin"
          fi
          
          # Install dependencies
          pnpm install --frozen-lockfile

          # ESM import validation (회귀 방지 5/7)
          echo "🔍 Validating ESM imports..."
          if git ls-files 'packages/{auth-client,types,utils,shortcodes}/src/**/*.{ts,tsx}' | xargs grep -nE "from ['\"]\\./[^'\"]+['\"]" | grep -v "\\.js['\"]"; then
            echo "❌ Found relative imports without .js extension"
            exit 1
          fi
          echo "✅ All ESM imports valid"

          # Build packages
          pnpm run build:packages

          # Build smoke test (회귀 방지 6/7)
          echo "🧪 Running build smoke tests..."
          node -e "import('./packages/auth-client/dist/index.js').then(() => console.log('✅ auth-client OK'))"
          node -e "import('./packages/types/dist/index.js').then(() => console.log('✅ types OK'))"
          node -e "import('./packages/utils/dist/index.js').then(() => console.log('✅ utils OK'))"
          node -e "import('./packages/shortcodes/dist/index.js').then(() => console.log('✅ shortcodes OK'))"
          
          # Build API server
          cd apps/api-server
          pnpm run build
          
          # Check build success
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "❌ Build failed: dist folder is empty"
            exit 1
          fi
          
          echo "✅ API server build complete!"
          
          # Database migration check
          echo "🗄️ Running database migrations..."
          pnpm run migration:run:prod || echo "⚠️ Migration failed (may already be applied)"
          
          # Ensure AI Settings table exists
          echo "🤖 Ensuring AI Settings table exists..."
          if [ -f "/home/ubuntu/o4o-platform/scripts/ensure-ai-settings.sh" ]; then
            bash /home/ubuntu/o4o-platform/scripts/ensure-ai-settings.sh
          else
            echo "⚠️ AI settings script not found, creating table directly..."
            npx typeorm-ts-node-commonjs -d src/database/data-source.ts query "CREATE TABLE IF NOT EXISTS ai_settings (id SERIAL PRIMARY KEY, provider VARCHAR(255) NOT NULL UNIQUE, apiKey TEXT, defaultModel VARCHAR(255), settings JSON, isActive BOOLEAN DEFAULT true, createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP)" 2>/dev/null || echo "Table may already exist"
          fi
          
          # Restart PM2 API server
          echo "♻️ Restarting PM2 API server..."
          cd ../..

          # Check if PM2 process exists
          pm2 list | grep -q "o4o-api-server" || echo "⚠️ PM2 process o4o-api-server not found"

          # Restart API server
          if pm2 restart o4o-api-server 2>/dev/null; then
            echo "✅ PM2 restart successful"
          else
            echo "🔧 Starting with PM2 config file..."
            pm2 start ecosystem.config.apiserver.cjs
          fi

          # Health check
          echo "🏥 Health check..."
          sleep 5

          if curl -f http://localhost:4000/api/health 2>/dev/null; then
            echo "✅ API server is running normally"
          else
            echo "⚠️ Health check failed - check logs"
            echo "📋 PM2 logs: pm2 logs o4o-api-production"
          fi

          echo "🎉 API server deployment complete!"
          echo "🌐 Local: http://localhost:4000"
          echo "🌐 External: https://api.neture.co.kr"
          echo "📅 Deploy time: $(date)"
          echo "📝 Commit: $(git rev-parse HEAD)"