name: Deploy Admin Dashboard

concurrency:
  group: deploy-admin-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if deployment needed
      id: check_changes
      run: |
        echo "🔍 Analyzing changed files..."
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Author: ${{ github.actor }}"
        echo ""

        # Get list of changed files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} 2>/dev/null || echo "")

        if [ -z "$CHANGED_FILES" ]; then
          echo "⚠️  Cannot determine changed files (possibly first commit)"
          echo "deploy=true" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "📋 Changed files:"
        echo "$CHANGED_FILES"
        echo ""

        # Check if any admin-dashboard related files changed
        NEEDS_DEPLOY=false

        while IFS= read -r file; do
          if [[ "$file" == apps/admin-dashboard/* ]] || \
             [[ "$file" == packages/* ]] || \
             [[ "$file" == .github/workflows/deploy-admin.yml ]] || \
             [[ "$file" == nginx-configs/admin.neture.co.kr.conf ]]; then
            NEEDS_DEPLOY=true
            echo "✅ Found relevant file: $file"
          fi
        done <<< "$CHANGED_FILES"

        echo ""
        if [ "$NEEDS_DEPLOY" = true ]; then
          echo "🚀 Deployment REQUIRED - Admin Dashboard files changed"
          echo "deploy=true" >> $GITHUB_OUTPUT
        else
          echo "⏭️  Deployment SKIPPED - Only documentation/other files changed"
          echo "deploy=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js
      if: steps.check_changes.outputs.deploy == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '22.18.0'

    - name: Install pnpm
      if: steps.check_changes.outputs.deploy == 'true'
      run: npm install -g pnpm

    - name: Install dependencies
      if: steps.check_changes.outputs.deploy == 'true'
      run: |
        echo "📦 Installing dependencies..."
        pnpm install --frozen-lockfile

    - name: Build packages (required before building apps)
      if: steps.check_changes.outputs.deploy == 'true'
      run: |
        echo "🔨 Building shared packages..."
        pnpm run build:types
        pnpm run build:utils
        pnpm run build:ui
        pnpm run build:auth-client
        pnpm run build:auth-context
        pnpm run build:shortcodes
        echo "✅ All packages built successfully"

    - name: Build admin dashboard
      if: steps.check_changes.outputs.deploy == 'true'
      run: |
        echo "🔨 Building admin dashboard..."
        cd apps/admin-dashboard
        NODE_OPTIONS='--max-old-space-size=4096' \
        GENERATE_SOURCEMAP=false \
        VITE_API_URL=https://api.neture.co.kr/api/v1 \
        VITE_PUBLIC_APP_ORIGIN=https://neture.co.kr \
        pnpm run build

        echo "📋 Build output:"
        ls -lh dist/

        echo "📄 Version info:"
        cat dist/version.json

    - name: Prepare Nginx config for deployment
      if: steps.check_changes.outputs.deploy == 'true'
      run: |
        mkdir -p apps/admin-dashboard/dist/nginx-config
        cp nginx-configs/admin.neture.co.kr.conf apps/admin-dashboard/dist/nginx-config/

    - name: Deploy to web server
      if: steps.check_changes.outputs.deploy == 'true'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        script: |
          echo "🔧 Preparing deployment..."

          # Backup current deployment
          if [ -d /var/www/admin.neture.co.kr ] && [ "$(ls -A /var/www/admin.neture.co.kr 2>/dev/null)" ]; then
            BACKUP_DIR="/var/www/admin.neture.co.kr.backup.$(date +%Y%m%d_%H%M%S)"
            echo "💾 Backing up to $BACKUP_DIR"
            sudo cp -r /var/www/admin.neture.co.kr "$BACKUP_DIR"
          fi

          # Clear temp directory
          rm -rf /tmp/admin-build
          mkdir -p /tmp/admin-build

          echo "✅ Preparation complete"

    - name: Copy build files
      if: steps.check_changes.outputs.deploy == 'true'
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        source: "apps/admin-dashboard/dist/*"
        target: "/tmp/admin-build/"
        strip_components: 3

    - name: Move files to web directory
      if: steps.check_changes.outputs.deploy == 'true'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.WEB_USER }}
        key: ${{ secrets.WEB_SSH_KEY }}
        script: |
          echo "📦 Deploying build files..."

          # Verify files were copied
          if [ ! -f "/tmp/admin-build/version.json" ]; then
            echo "❌ Error: Files not found in /tmp/admin-build/"
            echo "Contents of /tmp/admin-build/:"
            ls -la /tmp/admin-build/ || true
            exit 1
          fi

          echo "✅ Build files verified in temp directory"
          echo "📄 Version being deployed:"
          cat /tmp/admin-build/version.json

          # Clear current deployment
          echo "🗑️  Clearing current deployment..."
          sudo rm -rf /var/www/admin.neture.co.kr/*

          # Move files from temp to web directory
          echo "📦 Moving files to web directory..."
          sudo cp -r /tmp/admin-build/* /var/www/admin.neture.co.kr/

          # Update Nginx configuration
          if [ -f /var/www/admin.neture.co.kr/nginx-config/admin.neture.co.kr.conf ]; then
            echo "🔧 Updating Nginx configuration..."

            # Backup current nginx config
            if [ -f /etc/nginx/sites-available/admin.neture.co.kr ]; then
              sudo cp /etc/nginx/sites-available/admin.neture.co.kr \
                /etc/nginx/sites-available/admin.neture.co.kr.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Copy new config
            sudo cp /var/www/admin.neture.co.kr/nginx-config/admin.neture.co.kr.conf \
              /etc/nginx/sites-available/admin.neture.co.kr

            # Test nginx configuration
            if sudo nginx -t; then
              echo "✅ Nginx configuration is valid"
            else
              echo "❌ Nginx configuration test failed, restoring backup"
              latest_backup=$(ls -t /etc/nginx/sites-available/admin.neture.co.kr.backup.* 2>/dev/null | head -1)
              if [ -n "$latest_backup" ]; then
                sudo cp "$latest_backup" /etc/nginx/sites-available/admin.neture.co.kr
              fi
              exit 1
            fi

            # Clean up nginx config from web directory
            sudo rm -rf /var/www/admin.neture.co.kr/nginx-config
          else
            echo "⚠️  Nginx config not found, skipping update"
          fi

          # Set permissions
          echo "🔐 Setting permissions..."
          sudo chown -R www-data:www-data /var/www/admin.neture.co.kr/
          sudo chmod -R 755 /var/www/admin.neture.co.kr/

          # Verify deployment
          echo "✅ Verifying deployment..."
          if [ -f /var/www/admin.neture.co.kr/version.json ]; then
            echo "📄 Deployed version:"
            cat /var/www/admin.neture.co.kr/version.json
          else
            echo "❌ Error: version.json not found!"
            exit 1
          fi

          # Clean up temp build files
          rm -rf /tmp/admin-build

          # Reload nginx
          echo "🔄 Reloading Nginx..."
          sudo systemctl reload nginx

          echo ""
          echo "=========================================="
          echo "✅ Admin Dashboard Deployed Successfully!"
          echo "=========================================="
          echo "🌐 URL: https://admin.neture.co.kr"
          echo "📅 Time: $(date)"
          echo ""
