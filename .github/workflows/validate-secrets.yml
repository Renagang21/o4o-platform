name: Validate GitHub Secrets

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

jobs:
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check API Server Secrets
      run: |
        echo "üîç Validating API Server Secrets..."
        
        # Check if secrets exist (not empty)
        MISSING_SECRETS=()
        
        if [ -z "${{ secrets.API_SSH_KEY }}" ]; then
          MISSING_SECRETS+=("API_SSH_KEY")
        fi
        
        if [ -z "${{ secrets.API_HOST }}" ]; then
          MISSING_SECRETS+=("API_HOST")
        fi
        
        if [ -z "${{ secrets.API_USER }}" ]; then
          MISSING_SECRETS+=("API_USER")
        fi
        
        if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
          echo "‚ùå Missing API Server secrets:"
          printf '%s\n' "${MISSING_SECRETS[@]}"
          exit 1
        else
          echo "‚úÖ All API Server secrets are configured"
        fi
        
    - name: Check Web Server Secrets
      run: |
        echo "üîç Validating Web Server Secrets..."
        
        MISSING_SECRETS=()
        
        if [ -z "${{ secrets.WEB_SSH_KEY }}" ]; then
          MISSING_SECRETS+=("WEB_SSH_KEY")
        fi
        
        if [ -z "${{ secrets.WEB_HOST }}" ]; then
          MISSING_SECRETS+=("WEB_HOST")
        fi
        
        if [ -z "${{ secrets.WEB_USER }}" ]; then
          MISSING_SECRETS+=("WEB_USER")
        fi
        
        if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
          echo "‚ùå Missing Web Server secrets:"
          printf '%s\n' "${MISSING_SECRETS[@]}"
          exit 1
        else
          echo "‚úÖ All Web Server secrets are configured"
        fi
        
    - name: Check Database Secrets
      run: |
        echo "üîç Validating Database Secrets..."
        
        MISSING_SECRETS=()
        
        if [ -z "${{ secrets.DB_HOST }}" ]; then
          MISSING_SECRETS+=("DB_HOST")
        fi
        
        if [ -z "${{ secrets.DB_PORT }}" ]; then
          MISSING_SECRETS+=("DB_PORT")
        fi
        
        if [ -z "${{ secrets.DB_USERNAME }}" ]; then
          MISSING_SECRETS+=("DB_USERNAME")
        fi
        
        if [ -z "${{ secrets.DB_PASSWORD }}" ]; then
          MISSING_SECRETS+=("DB_PASSWORD")
        fi
        
        if [ -z "${{ secrets.DB_NAME }}" ]; then
          MISSING_SECRETS+=("DB_NAME")
        fi
        
        if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
          echo "‚ùå Missing Database secrets:"
          printf '%s\n' "${MISSING_SECRETS[@]}"
          exit 1
        else
          echo "‚úÖ All Database secrets are configured"
        fi
        
    - name: Check Application Secrets
      run: |
        echo "üîç Validating Application Secrets..."
        
        MISSING_SECRETS=()
        
        if [ -z "${{ secrets.JWT_SECRET }}" ]; then
          MISSING_SECRETS+=("JWT_SECRET")
        fi
        
        if [ -z "${{ secrets.JWT_EXPIRES_IN }}" ]; then
          MISSING_SECRETS+=("JWT_EXPIRES_IN")
        fi
        
        if [ -z "${{ secrets.CORS_ORIGIN }}" ]; then
          MISSING_SECRETS+=("CORS_ORIGIN")
        fi
        
        if [ -z "${{ secrets.LOG_LEVEL }}" ]; then
          MISSING_SECRETS+=("LOG_LEVEL")
        fi
        
        if [ -z "${{ secrets.HEALTH_CHECK_KEY }}" ]; then
          MISSING_SECRETS+=("HEALTH_CHECK_KEY")
        fi
        
        if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
          echo "‚ùå Missing Application secrets:"
          printf '%s\n' "${MISSING_SECRETS[@]}"
          # Not failing here as some might be optional
          echo "‚ö†Ô∏è  Some application secrets are missing. Check if they are required."
        else
          echo "‚úÖ All Application secrets are configured"
        fi
        
    - name: Validate SSH Key Formats
      run: |
        echo "üîç Validating SSH Key Formats..."
        
        # Validate API SSH Key
        echo "Checking API_SSH_KEY format..."
        bash scripts/debug-ssh-key.sh "${{ secrets.API_SSH_KEY }}"
        
        echo ""
        echo "Checking WEB_SSH_KEY format..."
        bash scripts/debug-ssh-key.sh "${{ secrets.WEB_SSH_KEY }}"
        
    - name: Summary
      run: |
        echo "üìã Secret Validation Summary"
        echo "==========================="
        echo "‚úÖ Required secrets validated"
        echo ""
        echo "üìå Ensure the following in GitHub Settings ‚Üí Secrets:"
        echo "1. SSH keys are in PEM format without passphrase"
        echo "2. All values are properly escaped (no trailing spaces)"
        echo "3. Multi-line values (like SSH keys) are correctly formatted"
        echo "4. Environment-specific values match your deployment targets"