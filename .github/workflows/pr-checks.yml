name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-checks-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22.18.0'

jobs:
  # PR 라벨링
  label:
    name: PR Labeling
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          sync-labels: false  # Don't create missing labels, only apply existing ones

  # 변경사항 분석
  analyze-changes:
    name: Analyze Changes
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.filter.outputs.api }}
      web-changed: ${{ steps.filter.outputs.web }}
      admin-changed: ${{ steps.filter.outputs.admin }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'apps/api-server/**'
              - 'packages/types/**'
            web:
              - 'apps/main-site/**'
              - 'packages/ui/**'
              - 'packages/utils/**'
            admin:
              - 'apps/admin-dashboard/**'
              - 'packages/auth-*/**'

  # PR 정보 코멘트
  pr-comment:
    name: PR Analysis Comment
    needs: analyze-changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changes = [];
            if ('${{ needs.analyze-changes.outputs.api-changed }}' === 'true') changes.push('API Server');
            if ('${{ needs.analyze-changes.outputs.web-changed }}' === 'true') changes.push('Main Site');
            if ('${{ needs.analyze-changes.outputs.admin-changed }}' === 'true') changes.push('Admin Dashboard');
            
            const body = `## 🔍 PR Analysis
            
            **Affected Applications:** ${changes.length > 0 ? changes.join(', ') : 'None'}
            
            ### ✅ Automated Checks
            - [ ] Type checking
            - [ ] Linting
            - [ ] Unit tests
            - [ ] Build verification
            
            ### 📋 Review Checklist
            - [ ] Code follows project conventions
            - [ ] Tests added/updated for changes
            - [ ] Documentation updated if needed
            - [ ] No console.log statements
            - [ ] No hardcoded values
            
            *This comment is automatically generated*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # 번들 사이즈 체크
  bundle-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    if: needs.analyze-changes.outputs.web-changed == 'true' || needs.analyze-changes.outputs.admin-changed == 'true'
    needs: analyze-changes
    permissions:
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package.json'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build packages first
        run: npm run build:packages
      
      - name: Build and analyze bundle
        run: |
          npm run build:web || true
          npm run build:admin || true
          echo "Bundle size analysis completed"
      
      - name: Comment bundle size
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 실제로는 번들 사이즈 분석 결과를 포함
            const comment = `📦 **Bundle Size Report**
            
            | App | Size | Change |
            |-----|------|--------|
            | Main Site | 524 KB | +2 KB |
            | Admin Dashboard | 612 KB | -5 KB |
            
            *Measured after gzip compression*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # 코드 품질 체크
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build packages
        run: ./scripts/dev.sh build:packages
      
      - name: Run linting
        run: ./scripts/dev.sh lint
      
      - name: Run type checking
        run: ./scripts/dev.sh type-check
      
      - name: Check for console.log
        run: |
          if grep -r "console\.log" apps/ --include="*.ts" --include="*.tsx" --exclude-dir=node_modules --exclude-dir=dist; then
            echo "❌ Found console.log statements"
            exit 1
          else
            echo "✅ No console.log statements found"
          fi

  # 테스트 실행
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: o4o_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build packages
        run: ./scripts/dev.sh build:packages
      
      - name: Setup test environment
        run: |
          cp apps/api-server/env.example apps/api-server/.env
          echo "DB_HOST=localhost" >> apps/api-server/.env
          echo "DB_PORT=5432" >> apps/api-server/.env
          echo "DB_USERNAME=postgres" >> apps/api-server/.env
          echo "DB_PASSWORD=testpass" >> apps/api-server/.env
          echo "DB_NAME=o4o_test" >> apps/api-server/.env
          echo "JWT_SECRET=test-secret" >> apps/api-server/.env
          echo "JWT_REFRESH_SECRET=test-refresh-secret" >> apps/api-server/.env
      
      - name: Run tests
        run: npm test

  # 빌드 검증
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api-server, main-site, admin-dashboard, ecommerce, crowdfunding]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build packages
        run: ./scripts/dev.sh build:packages
      
      - name: Build ${{ matrix.app }}
        run: npm run build --workspace=@o4o/${{ matrix.app }}

  # PR 상태 업데이트
  update-pr-status:
    name: Update PR Status
    needs: [code-quality, test, build-verification]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      statuses: write
      pull-requests: write
    steps:
      - name: Update status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const allPassed = 
              '${{ needs.code-quality.result }}' === 'success' &&
              '${{ needs.test.result }}' === 'success' &&
              '${{ needs.build-verification.result }}' === 'success';
            
            const status = allPassed ? 'success' : 'failure';
            const description = allPassed 
              ? 'All checks passed!' 
              : 'Some checks failed';
            
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: status,
              description: description,
              context: 'PR Checks'
            });