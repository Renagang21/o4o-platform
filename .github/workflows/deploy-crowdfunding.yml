name: Deploy Crowdfunding

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'apps/crowdfunding/**'
      - 'packages/**'
      - '.github/workflows/deploy-crowdfunding.yml'

env:
  NODE_VERSION: '22.18.0'
  DEPLOY_PATH: /home/ubuntu/o4o-platform

jobs:
  # 단계 1: 빌드
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '**/package.json'
        
    - name: Install dependencies
      run: |
        npm install
        
    - name: Build shared packages
      run: |
        npm run build:packages
        
    - name: Build Crowdfunding app
      working-directory: apps/crowdfunding
      run: |
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: crowdfunding-build
        path: apps/crowdfunding/dist
        retention-days: 1

  # 단계 2: 배포
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: crowdfunding-build
        path: apps/crowdfunding/dist
        
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.WEB_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub || echo "SSH key validation failed"
        echo "SSH key setup completed"
        
    - name: Add SSH known hosts
      run: |
        ssh-keyscan -H ${{ secrets.WEB_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
        ssh-keyscan -H funding.neture.co.kr >> ~/.ssh/known_hosts 2>/dev/null || true
        if [ -n "${{ secrets.WEB_HOST_IP }}" ]; then
          ssh-keyscan -H ${{ secrets.WEB_HOST_IP }} >> ~/.ssh/known_hosts 2>/dev/null || true
        fi
        chmod 644 ~/.ssh/known_hosts
        
    - name: Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }} "echo 'SSH connection successful'"
        
    - name: Create deployment directories
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }} "
          sudo mkdir -p /var/www/funding.neture.co.kr
          sudo chown -R ${{ secrets.WEB_USER }}:${{ secrets.WEB_USER }} /var/www/funding.neture.co.kr
          echo 'Directory created/verified for funding.neture.co.kr'
        "
        
    - name: Deploy static files
      run: |
        rsync -avz --delete --no-owner --no-group --no-perms \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
          apps/crowdfunding/dist/ \
          ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }}:/var/www/funding.neture.co.kr/
          
    - name: Copy Nginx configuration
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
          nginx-configs/funding.neture.co.kr.conf \
          ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }}:/tmp/
          
    - name: Apply Nginx configuration
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }} "
          # Move nginx config to proper location
          sudo mv /tmp/funding.neture.co.kr.conf /etc/nginx/sites-available/funding.neture.co.kr
          
          # Enable site if not already enabled
          if [ ! -L /etc/nginx/sites-enabled/funding.neture.co.kr ]; then
            sudo ln -s /etc/nginx/sites-available/funding.neture.co.kr /etc/nginx/sites-enabled/
          fi

          # Test and reload Nginx
          sudo nginx -t && sudo systemctl reload nginx
          echo 'Nginx configuration for funding.neture.co.kr completed'
        "

    - name: Setup SSL certificate
      continue-on-error: true
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.WEB_USER }}@${{ secrets.WEB_HOST }} "
          # Check if certificate already exists
          if [ ! -d /etc/letsencrypt/live/funding.neture.co.kr ]; then
            echo 'Setting up SSL certificate for funding.neture.co.kr...'
            sudo certbot --nginx -d funding.neture.co.kr --non-interactive --agree-tos --email admin@neture.co.kr || echo 'SSL setup will be completed manually'
          else
            echo 'SSL certificate already exists for funding.neture.co.kr'
          fi
        "

    - name: Health check
      continue-on-error: true
      run: |
        echo "Waiting for deployment to stabilize..."
        sleep 10
        
        # Check HTTPS
        echo "Checking HTTPS..."
        curl -I https://funding.neture.co.kr || true

  # 단계 3: 배포 후 검증
  post-deploy-verification:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Verify deployment
      run: |
        echo "Crowdfunding deployment to funding.neture.co.kr completed"
        echo "Please verify:"
        echo "- https://funding.neture.co.kr"
        echo "- Public access without authentication"
