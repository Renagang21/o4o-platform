name: Staging Deployment

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

env:
  NODE_VERSION: '22.18.0'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '**/package.json'
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Run tests
      run: |
        pnpm run test
        pnpm run type-check
    
    - name: Build packages
      run: pnpm run build:packages
    
    - name: Build applications
      run: pnpm run build:apps

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: npm audit --audit-level=high
    
    - name: Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'O4O Platform'
        path: '.'
        format: 'HTML'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/staging'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to staging
      run: |
        ssh ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} << 'EOF'
          cd /home/ubuntu/o4o-platform
          git pull origin staging
          pnpm install --production
          pnpm run build
          pm2 reload ecosystem.config.js --env staging
          pm2 save
        EOF
    
    - name: Run health check
      run: |
        sleep 30
        curl -f https://staging.neture.co.kr/api/health || exit 1
    
    - name: Notify deployment
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Staging deployment ${{ job.status }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  performance-test:
    runs-on: ubuntu-latest
    needs: deploy-staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: |
          https://staging.neture.co.kr
          https://staging.neture.co.kr/vendor
        uploadArtifacts: true
