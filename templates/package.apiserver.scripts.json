{
  "scripts": {
    "// ============ API SERVER OPTIMIZED SCRIPTS ============": "",
    "// API서버 전용 최적화 스크립트 (2개 워크스페이스만 빌드)": "",
    
    "// === 빌드 스크립트 ===": "",
    "build:apiserver": "export SERVER_TYPE=apiserver && source /etc/profile.d/o4o-apiserver.sh 2>/dev/null || true && npm run build:apiserver:packages && npm run build:apiserver:app",
    "build:apiserver:packages": "npm run build:supplier-connector",
    "build:apiserver:app": "npm run build --workspace=apps/api-server",
    "build:supplier-connector": "npm run build --workspace=packages/supplier-connector",
    
    "// === 타입체크 스크립트 ===": "",
    "type-check:apiserver": "export SERVER_TYPE=apiserver && npm run type-check:supplier-connector && npm run type-check:api-server",
    "type-check:supplier-connector": "npm run type-check --workspace=packages/supplier-connector",
    "type-check:api-server": "npm run type-check --workspace=apps/api-server",
    
    "// === 린트 스크립트 ===": "",
    "lint:apiserver": "export SERVER_TYPE=apiserver && npm run lint:supplier-connector && npm run lint:api-server",
    "lint:supplier-connector": "npm run lint --workspace=packages/supplier-connector",
    "lint:api-server": "npm run lint --workspace=apps/api-server",
    
    "// === 개발 모드 스크립트 ===": "",
    "dev:apiserver": "export SERVER_TYPE=apiserver && source /etc/profile.d/o4o-apiserver.sh 2>/dev/null || true && npm run dev --workspace=apps/api-server",
    
    "// === 시작 스크립트 ===": "",
    "start:apiserver": "export SERVER_TYPE=apiserver && source /etc/profile.d/o4o-apiserver.sh 2>/dev/null || true && node apps/api-server/dist/main.js",
    "start:apiserver:prod": "NODE_ENV=production npm run start:apiserver",
    
    "// === PM2 관리 스크립트 ===": "",
    "pm2:start:apiserver": "export SERVER_TYPE=apiserver && pm2 start ecosystem.config.apiserver.cjs --env production",
    "pm2:stop:apiserver": "pm2 stop ecosystem.config.apiserver.cjs",
    "pm2:restart:apiserver": "pm2 restart ecosystem.config.apiserver.cjs",
    "pm2:reload:apiserver": "pm2 reload ecosystem.config.apiserver.cjs",
    "pm2:delete:apiserver": "pm2 delete ecosystem.config.apiserver.cjs",
    "pm2:status:apiserver": "pm2 list | grep o4o-api-apiserver",
    "pm2:logs:apiserver": "pm2 logs o4o-api-apiserver",
    
    "// === 배포 스크립트 ===": "",
    "deploy:apiserver": "npm run deploy:apiserver:pre && npm run deploy:apiserver:build && npm run deploy:apiserver:post",
    "deploy:apiserver:pre": "export SERVER_TYPE=apiserver && npm run clean:apiserver && npm install --production=false",
    "deploy:apiserver:build": "export SERVER_TYPE=apiserver && npm run build:apiserver",
    "deploy:apiserver:post": "npm run pm2:reload:apiserver && npm run health-check:apiserver",
    
    "// === 테스트 스크립트 ===": "",
    "test:apiserver": "export SERVER_TYPE=apiserver && npm run test:supplier-connector && npm run test:api-server",
    "test:supplier-connector": "npm run test --workspace=packages/supplier-connector",
    "test:api-server": "npm run test --workspace=apps/api-server",
    
    "// === 마이그레이션 스크립트 ===": "",
    "migration:generate:apiserver": "export SERVER_TYPE=apiserver && npm run migration:generate --workspace=apps/api-server",
    "migration:run:apiserver": "export SERVER_TYPE=apiserver && npm run migration:run --workspace=apps/api-server",
    "migration:revert:apiserver": "export SERVER_TYPE=apiserver && npm run migration:revert --workspace=apps/api-server",
    
    "// === 정리 스크립트 ===": "",
    "clean:apiserver": "npm run clean:apiserver:dist && npm run clean:apiserver:cache",
    "clean:apiserver:dist": "rm -rf apps/api-server/dist packages/supplier-connector/dist",
    "clean:apiserver:cache": "rm -rf apps/api-server/.turbo packages/supplier-connector/.turbo",
    
    "// === 헬스체크 스크립트 ===": "",
    "health-check:apiserver": "curl -f http://localhost:3001/health || exit 1",
    
    "// === 성능 벤치마크 스크립트 ===": "",
    "benchmark:apiserver": "node scripts/performance-benchmark.js apiserver",
    "benchmark:compare": "node scripts/performance-benchmark.js compare",
    
    "// === 검증 스크립트 ===": "",
    "validate:apiserver": "node scripts/apiserver-validation.js",
    "validate:apiserver:env": "node scripts/apiserver-validation.js env",
    "validate:apiserver:build": "node scripts/apiserver-validation.js build",
    "validate:apiserver:pm2": "node scripts/apiserver-validation.js pm2",
    
    "// === 통합 명령어 ===": "",
    "apiserver:setup": "npm run deploy:apiserver:pre && npm run validate:apiserver:env",
    "apiserver:full-deploy": "npm run deploy:apiserver && npm run validate:apiserver",
    "apiserver:quick-restart": "npm run build:apiserver && npm run pm2:restart:apiserver",
    "apiserver:full-check": "npm run lint:apiserver && npm run type-check:apiserver && npm run test:apiserver"
  },
  "// NOTES": [
    "이 템플릿은 API서버 전용 최적화 스크립트입니다",
    "2개 워크스페이스만 빌드하여 85% 성능 개선을 달성합니다",
    "환경변수는 자동으로 로드됩니다 (/etc/profile.d/o4o-apiserver.sh)",
    "PM2 설정은 ecosystem.config.apiserver.cjs와 연동됩니다",
    "",
    "적용 방법:",
    "1. 이 템플릿의 scripts를 기존 package.json에 병합",
    "2. 충돌하는 스크립트는 :apiserver 접미사 추가",
    "3. npm run validate:apiserver로 검증",
    "",
    "워크스페이스 구조:",
    "- apps/api-server: API 서버 애플리케이션",
    "- packages/supplier-connector: API서버 전용 패키지"
  ]
}