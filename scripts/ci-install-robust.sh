#!/bin/bash

# CI/CDÎ•º ÏúÑÌïú Í∞ïÎ†•Ìïú npm install Ïä§ÌÅ¨Î¶ΩÌä∏
set -e

echo "üöÄ Starting robust npm install for CI/CD..."

# ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï
export NODE_OPTIONS="--max-old-space-size=4096"
export NPM_CONFIG_FUND=false
export NPM_CONFIG_AUDIT=false

# 1Îã®Í≥Ñ: ÌôòÍ≤Ω Ï†ïÎ¶¨
echo "üßπ Step 1: Cleaning environment..."
rm -rf node_modules package-lock.json
rm -rf apps/*/node_modules packages/*/node_modules
rm -rf apps/*/dist packages/*/dist
find . -name "package.json" -path "*/dist/*" -delete 2>/dev/null || true

# 2Îã®Í≥Ñ: ÏûòÎ™ªÎêú ÏùòÏ°¥ÏÑ± ÏàòÏ†ï
echo "üîß Step 2: Fixing invalid dependencies..."
for pkg in $(find . -name "package.json" -not -path "*/node_modules/*" -not -path "*/dist/*"); do
    # Î∞±ÏóÖ ÏÉùÏÑ±
    cp "$pkg" "${pkg}.backup" 2>/dev/null || true
    
    # "2": "..." Í∞ôÏùÄ ÏûòÎ™ªÎêú Ìå®ÌÑ¥ Ï†úÍ±∞
    sed -i '/"[0-9]\+":\s*"[^"]*"/d' "$pkg" 2>/dev/null || true
    
    # Îπà dependencies/devDependencies Í∞ùÏ≤¥ ÌôïÏù∏ Î∞è ÏàòÏ†ï
    node -e "
        const fs = require('fs');
        const path = '$pkg';
        try {
            const content = fs.readFileSync(path, 'utf8');
            const json = JSON.parse(content);
            
            // Îπà Í∞ùÏ≤¥ ÌôïÏù∏
            if (json.dependencies && Object.keys(json.dependencies).length === 0) {
                delete json.dependencies;
            }
            if (json.devDependencies && Object.keys(json.devDependencies).length === 0) {
                delete json.devDependencies;
            }
            
            fs.writeFileSync(path, JSON.stringify(json, null, 2) + '\n');
        } catch (e) {
            console.error('Error processing ' + path + ':', e.message);
        }
    "
done

# 3Îã®Í≥Ñ: npm install Î∞òÎ≥µ ÏãúÎèÑ
echo "üì¶ Step 3: Installing dependencies..."
MAX_RETRIES=5
RETRY_COUNT=0
INSTALL_SUCCESS=false

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    RETRY_COUNT=$((RETRY_COUNT + 1))
    echo "Attempt $RETRY_COUNT of $MAX_RETRIES..."
    
    # npm install ÏãúÎèÑ
    if npm install --no-audit --no-fund 2>&1 | tee npm-install-attempt-${RETRY_COUNT}.log; then
        # Ïã§Ï†ú ÏÑ±Í≥µ Ïó¨Î∂Ä ÌôïÏù∏
        if npm ls --depth=0 >/dev/null 2>&1; then
            INSTALL_SUCCESS=true
            echo "‚úÖ npm install succeeded on attempt $RETRY_COUNT"
            break
        fi
    fi
    
    # Ïã§Ìå® Ïãú ÏóêÎü¨ Î∂ÑÏÑù Î∞è ÏàòÏ†ï
    echo "‚ùå Attempt $RETRY_COUNT failed, analyzing..."
    
    # ÏóêÎü¨ Î°úÍ∑∏ Î∂ÑÏÑù
    ERROR_LOG="npm-install-attempt-${RETRY_COUNT}.log"
    
    if grep -q "Cannot read properties of null" "$ERROR_LOG"; then
        echo "Fixing 'Cannot read properties of null' error..."
        find . -name "package.json" -path "*/dist/*" -delete 2>/dev/null || true
    fi
    
    if grep -q "ENOENT" "$ERROR_LOG"; then
        echo "Fixing missing file errors..."
        npm cache clean --force >/dev/null 2>&1 || true
    fi
    
    if grep -q "peer dep" "$ERROR_LOG"; then
        echo "Retrying with legacy peer deps..."
        export NPM_CONFIG_LEGACY_PEER_DEPS=true
    fi
    
    # ÏßßÏùÄ ÎåÄÍ∏∞
    sleep 2
done

# 4Îã®Í≥Ñ: Í≤∞Í≥º ÌôïÏù∏
if [ "$INSTALL_SUCCESS" = false ]; then
    echo "‚ùå npm install failed after $MAX_RETRIES attempts"
    echo "Check npm-install-attempt-*.log files for details"
    exit 1
fi

# 5Îã®Í≥Ñ: Ìå®ÌÇ§ÏßÄ ÎπåÎìú
echo "üî® Step 4: Building packages..."
if ! npm run build:packages; then
    echo "‚ùå Package build failed"
    exit 1
fi

# 6Îã®Í≥Ñ: PostCSS ÏÑ§Ï†ï ÏàòÏ†ï
echo "üé® Step 5: Fixing PostCSS configuration..."
for config in apps/*/postcss.config.js; do
    if [ -f "$config" ]; then
        echo "export default { plugins: { '@tailwindcss/postcss': {}, autoprefixer: {} } }" > "$config"
    fi
done

# 7Îã®Í≥Ñ: ÏµúÏ¢Ö Í≤ÄÏ¶ù
echo "‚úîÔ∏è  Step 6: Final verification..."
if npm ls --depth=0 >/dev/null 2>&1; then
    echo "‚úÖ All dependencies installed successfully!"
    echo "‚úÖ Environment is ready for CI/CD!"
    
    # ÏÑ§ÏπòÎêú Ìå®ÌÇ§ÏßÄ ÏöîÏïΩ
    echo ""
    echo "üìä Installation summary:"
    echo "- Root dependencies: $(npm ls --depth=0 --json | jq '.dependencies | length' 2>/dev/null || echo 'N/A')"
    echo "- Total packages: $(find node_modules -name "package.json" | wc -l)"
    echo "- Workspaces: $(ls -d apps/*/ packages/*/ 2>/dev/null | wc -l)"
    
    exit 0
else
    echo "‚ùå Final verification failed"
    exit 1
fi