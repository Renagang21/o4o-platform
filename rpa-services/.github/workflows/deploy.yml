name: RPA Services CI/CD

# 워크플로우 트리거 설정
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [common-core-updated]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      # Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      # common-core 업데이트 (repository_dispatch 이벤트 시)
      - name: Update common-core
        if: github.event_name == 'repository_dispatch'
        run: |
          npm install @renagang21/common-core@${{ github.event.client_payload.version }}
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add package.json package-lock.json
          git commit -m "chore: update common-core to ${{ github.event.client_payload.version }}"
          git push

      # 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 테스트 실행
      - name: Run tests
        run: npm test

      # Docker 빌드 및 푸시
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 환경별 배포
      - name: Deploy to staging
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploying to staging environment..."
          # 여기에 실제 스테이징 배포 스크립트 추가
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_STAGING }}

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production environment..."
          # 여기에 실제 프로덕션 배포 스크립트 추가
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_PROD }}

      # Slack 알림
      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 