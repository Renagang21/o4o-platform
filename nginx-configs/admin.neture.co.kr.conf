server {
    listen 80;
    listen [::]:80;
    server_name admin.neture.co.kr;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.neture.co.kr;

    # SSL Configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/neture.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neture.co.kr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Root directory
    root /var/www/admin.neture.co.kr;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # ============================================
    # CACHE CONTROL SETTINGS - CRITICAL
    # ============================================

    # HTML files: NO CACHE (always fetch fresh)
    location ~ \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # Also add security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        try_files $uri $uri/ /index.html;
    }

    # version.json: NO CACHE (version check file)
    location = /version.json {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        try_files $uri =404;
    }

    # Static assets with hash: LONG-TERM CACHE (immutable)
    # JS, CSS files with hash in filename (e.g., index-abc123.js, Customize-xyz789.js)
    location ~* ^/assets/.*\.(js|css|woff|woff2|ttf|otf|eot)$ {
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        access_log off;
        try_files $uri =404;
    }

    # Images, fonts, media: MEDIUM-TERM CACHE
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|mp4|webm|ogg|mp3|wav)$ {
        add_header Cache-Control "public, max-age=604800" always; # 7 days
        access_log off;
        try_files $uri =404;
    }

    # JSON data files (excluding version.json): SHORT-TERM CACHE
    location ~* \.json$ {
        add_header Cache-Control "public, max-age=300" always; # 5 minutes
        try_files $uri =404;
    }

    # Service Worker: NO CACHE (must always be fresh)
    location = /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        try_files $uri =404;
    }

    # Manifest files: SHORT-TERM CACHE
    location ~* \.(manifest|webmanifest)$ {
        add_header Cache-Control "public, max-age=3600" always; # 1 hour
        try_files $uri =404;
    }

    # ============================================
    # SPA ROUTING - FALLBACK TO INDEX.HTML
    # ============================================

    # Main location block for SPA routing
    location / {
        # Try file, then directory, then fallback to index.html
        try_files $uri $uri/ /index.html;

        # NO CACHE for index.html (already set above)
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Access and error logs
    access_log /var/log/nginx/admin.neture.co.kr.access.log;
    error_log /var/log/nginx/admin.neture.co.kr.error.log;
}
